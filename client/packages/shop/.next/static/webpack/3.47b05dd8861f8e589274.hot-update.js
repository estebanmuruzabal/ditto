webpackHotUpdate(3,{

/***/ "./src/utils/apollo.js":
/*!*****************************!*\
  !*** ./src/utils/apollo.js ***!
  \*****************************/
/*! exports provided: initializeApollo, useApollo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initializeApollo\", function() { return initializeApollo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useApollo\", function() { return useApollo; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var apollo_boost__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! apollo-boost */ \"../../node_modules/apollo-boost/lib/bundle.esm.js\");\nvar _s = $RefreshSig$();\n\n/* import { useMemo } from 'react'; */\n//import { ApolloClient } from 'apollo-client';\n//import { InMemoryCache } from 'apollo-cache-inmemory';\n//import { HttpLink, createHttpLink } from 'apollo-link-http';\n//import { setContext } from 'apollo-link-context';\n\n/* \nimport {\n  ApolloClient,\n  HttpLink,\n  ApolloLink,\n  InMemoryCache,\n  concat,\n} from '@apollo/client';\n\nlet apolloClient;\n\nconst httpLink = new HttpLink({\n  uri: process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT,\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log('graphQLErrors', graphQLErrors);\n    console.log('networkError', networkError);\n  },\n});\n\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  // add the authorization to the headers\n  let token = null;\n  if (typeof window !== 'undefined') {\n    token = localStorage.getItem('access_token');\n  }\n  operation.setContext({\n    headers: {\n      'x-access-token': token ? token : '',\n    },\n  });\n\n  return forward(operation);\n});\n\nconst client = new ApolloClient({\n  link: authMiddleware.concat(httpLink),\n  cache: new InMemoryCache(),\n}); */\n\n/*\nconsole.log(process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT);\nfunction createApolloClient() {\n  let token = null;\n  if (typeof window !== 'undefined') {\n    token = localStorage.getItem('access_token');\n  }\n  return new ApolloClient({\n    ssrMode: typeof window === 'undefined',\n    link: new HttpLink({\n      uri: process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT, // Server URL (must be absolute)\n      credentials: 'same-origin', // Additional fetch() options like `credentials`\n      headers: {\n        'x-access-token': token ? token : '',\n      }, // Additional fetch() options like `headers`\n      onError: ({ networkError, graphQLErrors }) => {\n        console.log('graphQLErrors', graphQLErrors);\n        console.log('networkError', networkError);\n      },\n    }),\n    cache: new InMemoryCache(),\n  });\n}*/\n\n/* export function initializeApollo(initialState = null) {\n  const _apolloClient = apolloClient ?? client;\n\n  // If your page has Next.js data fetching methods that use Apollo Client, the initial state\n  // gets hydrated here\n  if (initialState) {\n    _apolloClient.cache.restore(initialState);\n  }\n  // For SSG and SSR always create a new Apollo Client\n  if (typeof window === 'undefined') return _apolloClient;\n  // Create the Apollo Client once in the client\n  if (!apolloClient) apolloClient = _apolloClient;\n\n  return _apolloClient;\n}\n\nexport function useApollo(initialState) {\n  const store = useMemo(() => initializeApollo(initialState), [initialState]);\n  return store;\n} */\n\n\nvar httpLink = new apollo_boost__WEBPACK_IMPORTED_MODULE_1__[\"HttpLink\"]({\n  uri: 'http://54.232.137.175/api',\n  // Server URL (must be absolute)\n  credentials: 'same-origin',\n  // Additional fetch() options like `credentials`\n  onError: function onError(_ref) {\n    var networkError = _ref.networkError,\n        graphQLErrors = _ref.graphQLErrors;\n    console.log('graphQLErrors', graphQLErrors);\n    console.log('networkError', networkError);\n  }\n});\nvar authLink = new apollo_boost__WEBPACK_IMPORTED_MODULE_1__[\"ApolloLink\"](function (operation, forward) {\n  // Retrieve the authorization token from local storage.\n  var token = null;\n\n  if (true) {\n    token = localStorage.getItem('access_token');\n  } // Use the setContext method to set the HTTP headers.\n\n\n  operation.setContext({\n    headers: {\n      'x-access-token': token ? token : ''\n    }\n  }); // Call the next link in the middleware chain.\n\n  return forward(operation);\n});\nvar apolloClient;\n\nfunction createApolloClient() {\n  return new apollo_boost__WEBPACK_IMPORTED_MODULE_1__[\"ApolloClient\"]({\n    ssrMode: false,\n    link: authLink.concat(httpLink),\n    cache: new apollo_boost__WEBPACK_IMPORTED_MODULE_1__[\"InMemoryCache\"]()\n  });\n}\n\nfunction initializeApollo() {\n  var _apolloClient2;\n\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _apolloClient = (_apolloClient2 = apolloClient) !== null && _apolloClient2 !== void 0 ? _apolloClient2 : createApolloClient(); // If your page has Next.js data fetching methods that use Apollo Client, the initial state\n  // gets hydrated here\n\n\n  if (initialState) {\n    _apolloClient.cache.restore(initialState);\n  } // For SSG and SSR always create a new Apollo Client\n\n\n  if (false) {} // Create the Apollo Client once in the client\n\n  if (!apolloClient) apolloClient = _apolloClient;\n  return _apolloClient;\n}\nfunction useApollo(initialState) {\n  _s();\n\n  var store = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useMemo\"])(function () {\n    return initializeApollo(initialState);\n  }, [initialState]);\n  return store;\n}\n\n_s(useApollo, \"K8ucUnUnAgJZGJWAL9Ze8IHCmoQ=\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/next/node_modules/webpack/buildin/harmony-module.js */ \"../../node_modules/next/node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/apollo.js\n");

/***/ })

})