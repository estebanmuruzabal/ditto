{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/delivery-selection/delivery-selection.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { GiftBox } from 'assets/icons/GiftBox';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport { CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Offer, OfferSection, Options, Wrapper } from './delivery-selection.style';\n\nvar DeliverySelection = function DeliverySelection(_ref) {\n  _s();\n\n  var _deliverData$delivery;\n\n  var props = _extends({}, _ref);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      deliveryMethodTypeSelected = _React$useState2[0],\n      setDeliveryMethodType = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      deliveryMethodSaved = _React$useState4[0],\n      setDeliveryMethodSaved = _React$useState4[1];\n\n  useEffect(function () {\n    if (getCookie('deliveryMethodSaved') && !deliveryMethodSaved) {\n      var _deliveryMethodSaved = JSON.parse(getCookie('deliveryMethodSaved'));\n\n      setDeliveryMethodSaved(_deliveryMethodSaved);\n    }\n  }, []);\n\n  var _React$useState5 = React.useState(undefined),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      deliveryMethodSelected = _React$useState6[0],\n      setDeliveryMethod = _React$useState6[1];\n\n  var _useQuery = useQuery(DELIVERY_METHOD),\n      deliverData = _useQuery.data;\n\n  var deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items; // const [address, setDeliveryAddress] = useState(\"\");\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      zipCode = _React$useState8[0],\n      setZipCode = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      searchResult = _React$useState10[0],\n      setSearchResult = _React$useState10[1];\n\n  useEffect(function () {\n    if (getCookie('deliveryMethodSaved') && !deliveryMethodSaved) {\n      var _deliveryMethodSaved2 = JSON.parse(getCookie('deliveryMethodSaved'));\n\n      setDeliveryMethodSaved(_deliveryMethodSaved2);\n    }\n  }, []);\n\n  var setDeliveryMethodAndSaveCookie = function setDeliveryMethodAndSaveCookie(deli) {\n    setDeliveryMethod(deli);\n    setDeliveryMethodSaved(deli); // if (getCookie('first_visit')) {\n\n    setCookie('deliveryMethodSaved', deli); // }\n  };\n\n  var searchDeliveryZipCode = function searchDeliveryZipCode(e, deli) {\n    handleOnFocus(e);\n    setZipCode(deli);\n    var deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n      return !deliveryMethod.isPickUp;\n    });\n    var methodFound = deliveryOptionsMethods.filter(function (method) {\n      return method.name.includes(zipCode);\n    });\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : null);\n  };\n\n  var searchPickupZipCode = function searchPickupZipCode(e, deli) {\n    handleOnFocus(e);\n    setZipCode(deli);\n    var pickUpOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n      return deliveryMethod.isPickUp === true;\n    });\n    var methodFound = pickUpOptionsMethods.filter(function (method) {\n      return method.details.includes(zipCode);\n    });\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : null);\n  };\n\n  var setDelivery = function setDelivery(e, deli) {\n    e.stopPropagation();\n    setDeliveryMethodType(deli);\n    setSearchResult(null);\n    setZipCode('');\n  };\n\n  var handleOnFocus = function handleOnFocus(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }; // deliveryMethodSelected\n\n\n  var isPickUpSelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  var isDeliverySelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  return __jsx(DeliveryMethods, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(Options, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(CardWrapper, {\n    color: isPickUpSelected ? '#0d1136' : '#e4f4fc',\n    onClick: function onClick(e) {\n      return setDelivery(e, DeliveryMethodsConstants.PICKUP);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Pickup\"), __jsx(CardWrapper, {\n    color: isDeliverySelected ? '#0d1136' : '#e4f4fc',\n    onClick: function onClick(e) {\n      return setDelivery(e, DeliveryMethodsConstants.DELIVERY);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Delivery\")), __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, __jsx(Heading, {\n    onClick: function onClick(e) {\n      return handleOnFocus(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, isPickUpSelected ? __jsx(FormattedMessage, {\n    id: \"pickupModalheading\",\n    defaultMessage: \"Select Your Location\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }) : __jsx(FormattedMessage, {\n    id: \"deliveryModalheading\",\n    defaultMessage: \"Select Your Location\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    onClick: function onClick(e) {\n      return handleOnFocus(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    onFocus: function onFocus(e) {\n      return handleOnFocus(e);\n    },\n    placeholder: \"ZIP Code\",\n    value: zipCode // we have to change the onChange because the is no one for the controller name actualy\n    ,\n    onChange: function onChange(e) {\n      return isPickUpSelected ? searchPickupZipCode(e, e.target.value) : searchDeliveryZipCode(e, e.target.value);\n    },\n    width: \"197px\",\n    height: \"34.5px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })), (searchResult === null || searchResult === void 0 ? void 0 : searchResult.length) === 0 && zipCode.length > 4 && __jsx(DeliveryText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP ? 'No Dittos Pickup Locations found, yet, sorry' : 'Sorry, we dont deliver there, yet..'), (searchResult === null || searchResult === void 0 ? void 0 : searchResult.length) ? searchResult.map(function (result, i) {\n    return __jsx(Checkbox, {\n      keyName: \"\".concat(i, \"-results\"),\n      isChecked: (deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === result.id,\n      labelText: \"\".concat(result.name, \" - \").concat(result.details),\n      id: \"result-\".concat(i),\n      onChange: function onChange(e) {\n        setDeliveryMethodAndSaveCookie((deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === result.id ? null : result);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    });\n  }) : ''), __jsx(OfferSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, __jsx(GiftBox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }), __jsx(Offer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"locationModalFooter\",\n    defaultMessage: \"Free Delivery For 1st Order\",\n    values: {\n      number: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  })))));\n};\n\n_s(DeliverySelection, \"D1eMaYlZzsVyaFxnnp5anGtsalw=\", false, function () {\n  return [useQuery];\n});\n\n_c = DeliverySelection;\nexport default DeliverySelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliverySelection\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/delivery-selection/delivery-selection.tsx"],"names":["React","useEffect","FormattedMessage","DeliveryMethodsConstants","useQuery","DELIVERY_METHOD","GiftBox","Checkbox","getCookie","setCookie","CardWrapper","Container","DeliveryMethods","DeliveryText","Heading","Input","Offer","OfferSection","Options","Wrapper","DeliverySelection","props","useState","deliveryMethodTypeSelected","setDeliveryMethodType","deliveryMethodSaved","setDeliveryMethodSaved","JSON","parse","undefined","deliveryMethodSelected","setDeliveryMethod","deliverData","data","deliveryMethods","items","zipCode","setZipCode","searchResult","setSearchResult","setDeliveryMethodAndSaveCookie","deli","searchDeliveryZipCode","e","handleOnFocus","deliveryOptionsMethods","filter","deliveryMethod","isPickUp","methodFound","method","name","includes","stopPropagation","searchPickupZipCode","pickUpOptionsMethods","details","setDelivery","event","preventDefault","isPickUpSelected","PICKUP","isDeliverySelected","DELIVERY","target","value","length","map","result","i","id","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { GiftBox } from 'assets/icons/GiftBox';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport { CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Offer, OfferSection, Options, Wrapper } from './delivery-selection.style';\n\ninterface Props {\n}\n\nconst DeliverySelection: React.FC<Props> = ({ ...props  }) => {\n  const [deliveryMethodTypeSelected, setDeliveryMethodType] = React.useState();\n  const [deliveryMethodSaved, setDeliveryMethodSaved] = React.useState();\n  useEffect(() => {\n    if (getCookie('deliveryMethodSaved') && !deliveryMethodSaved) {\n      const deliveryMethodSaved = JSON.parse(getCookie('deliveryMethodSaved'));\n      setDeliveryMethodSaved(deliveryMethodSaved)\n    }\n  }, []);\n  \n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(undefined);\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  // const [address, setDeliveryAddress] = useState(\"\");\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  \n  useEffect(() => {\n    if (getCookie('deliveryMethodSaved') && !deliveryMethodSaved) {\n      const deliveryMethodSaved = JSON.parse(getCookie('deliveryMethodSaved'));\n      setDeliveryMethodSaved(deliveryMethodSaved)\n    }\n  }, []);\n  \n  const setDeliveryMethodAndSaveCookie =  (deli) => {\n    setDeliveryMethod(deli)\n    setDeliveryMethodSaved(deli)\n    // if (getCookie('first_visit')) {\n      setCookie('deliveryMethodSaved', deli);\n    // }\n  };\n  \n  const searchDeliveryZipCode =  (e, deli) => {\n    handleOnFocus(e)\n    setZipCode(deli)\n    const deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      return !deliveryMethod.isPickUp;\n    });\n\n    const methodFound = deliveryOptionsMethods.filter(method => method.name.includes(zipCode));\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : null)\n  };\n  \n  const searchPickupZipCode =  (e, deli) => {\n    handleOnFocus(e)\n    setZipCode(deli)\n    const pickUpOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n\n    const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode));\n\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : null)\n  };\n\n  const setDelivery =  (e, deli: DeliveryMethodsConstants) => {\n    e.stopPropagation();\n    setDeliveryMethodType(deli)\n    setSearchResult(null)\n    setZipCode('')\n  };\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  // deliveryMethodSelected\n  const isPickUpSelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n\n  return (\n        <DeliveryMethods>\n            <Options>\n                <CardWrapper color={isPickUpSelected ? '#0d1136' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.PICKUP)}>Pickup</CardWrapper> \n                <CardWrapper color={isDeliverySelected ? '#0d1136' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.DELIVERY)}>Delivery</CardWrapper> \n            </Options>\n            <Wrapper>\n            <Container>\n                <Heading  onClick={(e) => handleOnFocus(e)}>\n                    { isPickUpSelected ? (\n                    <FormattedMessage\n                        id=\"pickupModalheading\"\n                        defaultMessage=\"Select Your Location\"\n                    />\n                    ) : (\n                    <FormattedMessage\n                        id=\"deliveryModalheading\"\n                        defaultMessage=\"Select Your Location\"\n                    />\n                    )}\n                </Heading>\n                <div onClick={(e) => handleOnFocus(e)}>\n                    <Input\n                        type='text'\n                        name='name'\n                        onFocus={(e) => handleOnFocus(e)}\n                        placeholder='ZIP Code'\n                        value={zipCode}\n                        // we have to change the onChange because the is no one for the controller name actualy\n                        onChange={(e) => isPickUpSelected ? searchPickupZipCode(e, e.target.value) : searchDeliveryZipCode(e, e.target.value)}\n                        width='197px'\n                        height='34.5px'\n                    />\n                </div>\n                { searchResult?.length === 0 && zipCode.length > 4 && (\n                    <DeliveryText>{deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP ? 'No Dittos Pickup Locations found, yet, sorry' : 'Sorry, we dont deliver there, yet..'}</DeliveryText>\n                )}\n                {searchResult?.length ? searchResult.map((result, i) => {\n                    return (\n                        <Checkbox\n                        keyName={`${i}-results`}\n                        isChecked={deliveryMethodSelected?.id === result.id}\n                        labelText={`${result.name} - ${result.details}`}\n                        id={`result-${i}`}\n                        onChange={e => {\n                            setDeliveryMethodAndSaveCookie(deliveryMethodSelected?.id === result.id ? null : result)\n                        }}\n                        />\n                    )}\n                    ) : ('')\n                }\n                </Container>\n                {/* <Button\n                    fullwidth\n                    radius={100}\n                    onClick={null}\n                >\n                    <FormattedMessage id='con' defaultMessage='Save' />\n                </Button> */}\n                <OfferSection>\n                <GiftBox />\n                <Offer>\n                    <FormattedMessage\n                    id=\"locationModalFooter\"\n                    defaultMessage=\"Free Delivery For 1st Order\"\n                    values={{ number: 1 }}\n                    />\n                </Offer>\n                </OfferSection>\n            </Wrapper>\n        </DeliveryMethods>\n  );\n\n};\n\nexport default DeliverySelection;\n\n"]},"metadata":{},"sourceType":"module"}