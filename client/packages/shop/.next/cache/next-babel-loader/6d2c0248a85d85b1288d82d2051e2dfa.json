{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/contact-card/contact-card.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { ErrorMessage, Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { Button } from 'components/button/button';\nimport { ADD_PHONENUMBER, UPDATE_PHONENUMBER } from 'graphql/mutation/phone';\nimport { FieldWrapper, Heading } from './contact-card.style';\nimport { FormattedMessage } from 'react-intl';\nvar ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required('Number is required')\n});\n\nvar CreateOrUpdateContact = function CreateOrUpdateContact(_ref) {\n  _s();\n\n  var item = _ref.item;\n  var ContactItem = item.item;\n  var ID = item.id;\n  var newContactid = null;\n  var initialValues = {\n    id: ContactItem.id || null,\n    type: ContactItem.type || 'secondary',\n    number: ContactItem.number || ''\n  };\n\n  var _useMutation = useMutation(ADD_PHONENUMBER),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addPhoneMutation = _useMutation2[0];\n\n  var _useMutation3 = useMutation(UPDATE_PHONENUMBER),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      updatePhoneMutation = _useMutation4[0];\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$addPhoneMutati, data, updatePhone;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Object.keys(ContactItem).length === 0)) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 3;\n              return addPhoneMutation({\n                variables: {\n                  id: ID,\n                  number: values.number\n                }\n              });\n\n            case 3:\n              _yield$addPhoneMutati = _context.sent;\n              data = _yield$addPhoneMutati.data;\n              newContactid = data.addPhoneNumber.id;\n              values.id = newContactid;\n              dispatch({\n                type: 'ADD_CONTACT',\n                payload: {\n                  values: values\n                }\n              });\n              closeModal();\n              /*if (typeof window !== 'undefined') {\n                window.location.reload(false);\n              }*/\n\n              _context.next = 16;\n              break;\n\n            case 11:\n              _context.next = 13;\n              return updatePhoneMutation({\n                variables: {\n                  id: ID,\n                  phoneId: ContactItem.id ? ContactItem.id : newContactid,\n                  number: values.number\n                }\n              });\n\n            case 13:\n              updatePhone = _context.sent;\n              dispatch({\n                type: 'UPDATE_CONTACT',\n                payload: {\n                  values: values,\n                  id: ContactItem.id ? ContactItem.id : newContactid\n                }\n              });\n              closeModal();\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: ContactValidationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, __jsx(Heading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, ContactItem ? __jsx(FormattedMessage, {\n      id: \"editContactId\",\n      defaultMessage: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 28\n      }\n    }) : __jsx(FormattedMessage, {\n      id: \"addNewContactId\",\n      defaultMessage: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 88\n      }\n    })), __jsx(FieldWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"number\",\n      component: StyledError,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }), __jsx(Button, {\n      type: \"submit\",\n      style: {\n        width: '100%',\n        height: '44px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"savedContactId\",\n      defaultMessage: \"Save Contact\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    })));\n  });\n};\n\n_s(CreateOrUpdateContact, \"P54mxHYzpLKuXMVKyT2kKDJuMuE=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = CreateOrUpdateContact;\nexport default CreateOrUpdateContact;\nvar StyledInput = styled.input.withConfig({\n  displayName: \"contact-card__StyledInput\",\n  componentId: \"sc-7lusqt-0\"\n})([\"width:100%;height:54px;border-radius:\", \";font-family:\", \";border:1px solid \", \";color:\", \";font-size:16px;line-height:19px;font-weight:\", \";padding:0 18px;box-sizing:border-box;transition:border-color 0.25s ease;&:hover,&:focus{outline:0;}&:focus{border-color:\", \";}&::placeholder{color:\", \";}\"], themeGet('radii.base', '6px'), themeGet('fonts.body', 'Lato, sans-serif'), themeGet('colors.gray.700', '#e6e6e6'), themeGet('colors.text.bold', '#0D1136'), themeGet('fontWeights.regular', '400'), themeGet('colors.primary.regular', '#009e7f'), themeGet('colors.text.regular', '#77798C'));\nvar StyledError = styled.div.withConfig({\n  displayName: \"contact-card__StyledError\",\n  componentId: \"sc-7lusqt-1\"\n})([\"color:red;padding-bottom:10px;margin-top:-5px;\"]);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateOrUpdateContact\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/contact-card/contact-card.tsx"],"names":["React","useContext","styled","themeGet","Yup","closeModal","ErrorMessage","Formik","Form","useMutation","ProfileContext","Button","ADD_PHONENUMBER","UPDATE_PHONENUMBER","FieldWrapper","Heading","FormattedMessage","ContactValidationSchema","object","shape","number","string","required","CreateOrUpdateContact","item","ContactItem","ID","id","newContactid","initialValues","type","addPhoneMutation","updatePhoneMutation","state","dispatch","handleSubmit","values","Object","keys","length","variables","data","addPhoneNumber","payload","phoneId","updatePhone","handleChange","handleBlur","StyledError","width","height","StyledInput","input","div"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { FormikProps, ErrorMessage, Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport MaskedInput from 'react-text-mask';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { Button } from 'components/button/button';\nimport { ADD_PHONENUMBER, UPDATE_PHONENUMBER } from 'graphql/mutation/phone';\nimport { FieldWrapper, Heading } from './contact-card.style';\nimport { FormattedMessage } from 'react-intl';\nimport us from 'react-phone-input-2/lang/es.json'\nimport PhoneInput from 'react-phone-input-2';\n\ntype Props = {\n  item?: any | null;\n  id?: any | null;\n};\n// Shape of form values\ntype FormValues = {\n  id?: any | null;\n  type?: string;\n  number?: string;\n};\n\nconst ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required('Number is required'),\n});\n\nconst CreateOrUpdateContact: React.FC<Props> = ({ item }) => {\n\n  const ContactItem = item.item;\n  const ID = item.id;\n  let newContactid = null;\n  const initialValues = {\n    id: ContactItem.id || null,\n    type: ContactItem.type || 'secondary',\n    number: ContactItem.number || '',\n  };\n  const [addPhoneMutation] = useMutation(ADD_PHONENUMBER);\n  const [updatePhoneMutation] = useMutation(UPDATE_PHONENUMBER);\n  const { state, dispatch } = useContext(ProfileContext);\n  const handleSubmit = async (values: FormValues) => {\n    if(Object.keys(ContactItem).length === 0){\n      const {data} = await addPhoneMutation({\n        variables: { \n          id: ID,\n          number: values.number\n        }\n      });\n      newContactid = data.addPhoneNumber.id\n      values.id = newContactid;\n      dispatch({ type: 'ADD_CONTACT', payload: {values: values }});\n      closeModal();\n      /*if (typeof window !== 'undefined') {\n        window.location.reload(false);\n      }*/\n    }else{\n      const updatePhone =  await updatePhoneMutation({\n        variables: { \n          id: ID,\n          phoneId: ContactItem.id ? ContactItem.id : newContactid,\n          number: values.number\n        },\n      });\n      dispatch({ type: 'UPDATE_CONTACT', payload: {values: values, id: ContactItem.id ? ContactItem.id : newContactid }});\n      closeModal();\n    }\n   \n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={ContactValidationSchema}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur\n      }: FormikProps<FormValues>) => (\n        <Form>\n          <Heading>\n            {ContactItem ? <FormattedMessage id=\"editContactId\" defaultMessage=\"\" /> : <FormattedMessage id=\"addNewContactId\" defaultMessage=\"\" />}\n          </Heading>\n          <FieldWrapper>\n            {/* <PhoneInput\n                inputProps={{\n                  name: 'phone',\n                  required: true,\n                  autoFocus: false\n                }}\n                containerStyle={{textAlign: \"left\"}}\n                inputStyle={{backgroundColor: \"#F7F7F7\", height: \"48px\", marginBottom: \"10px\", width: \"100%\"}}\n                onlyCountries={['us']}\n                localization={us}\n                // id='my-input-id'\n                country={'us'}\n                masks={{ar: '(...) ...-....'}}\n                value={values.number}\n              onChange={handleChange}\n            /> */}\n{/* \n            <MaskedInput\n              mask={[\n                /[0-9]/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n              ]}\n              className='form-control'\n              placeholder='Enter a phone number'\n              guide={false}\n              id='my-input-id'\n              value={values.number}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name='number'\n              render={(ref: any, props: {}) => (\n                <StyledInput ref={ref} {...props} />\n              )}\n            /> */}\n          </FieldWrapper>\n          <ErrorMessage name='number' component={StyledError} />\n\n          <Button\n            type='submit'\n            style={{ width: '100%', height: '44px' }}\n          >\n            <FormattedMessage\n              id='savedContactId'\n              defaultMessage='Save Contact'\n            />\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateOrUpdateContact;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: ${themeGet('radii.base', '6px')};\n  font-family: ${themeGet('fonts.body', 'Lato, sans-serif')};\n  border: 1px solid ${themeGet('colors.gray.700', '#e6e6e6')};\n  color: ${themeGet('colors.text.bold', '#0D1136')};\n  font-size: 16px;\n  line-height: 19px;\n  font-weight: ${themeGet('fontWeights.regular', '400')};\n  padding: 0 18px;\n  box-sizing: border-box;\n  transition: border-color 0.25s ease;\n\n  &:hover,\n  &:focus {\n    outline: 0;\n  }\n\n  &:focus {\n    border-color: ${themeGet('colors.primary.regular', '#009e7f')};\n  }\n\n  &::placeholder {\n    color: ${themeGet('colors.text.regular', '#77798C')};\n  }\n`;\n\nconst StyledError = styled.div`\n  color: red;\n  padding-bottom: 10px;\n  margin-top: -5px;\n`;\n"]},"metadata":{},"sourceType":"module"}