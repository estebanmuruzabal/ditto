{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { PlantPageWrapper } from './ditto-market.style';\nimport { useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { AuthContext } from 'contexts/auth/auth.context'; // import ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\n// import { GeolocateControl } from \"mapbox-gl\";\n// import Map, {GeolocateControl} from 'react-map-gl';\n\nconst DittoMarket = ({\n  deviceType,\n  userRefetch\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const {\n    authDispatch\n  } = useContext(AuthContext);\n  const intl = useIntl();\n  const {\n    loading,\n    error,\n    data = {}\n  } = useQuery(GET_LOGGED_IN_USER, {\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: \"network-only\" // pollInterval: 5000,\n\n  }); // const geoControlRef = useRef<mapboxgl.GeolocateControl>();\n  // useEffect(() => {\n  //   // Activate as soon as the control is loaded\n  //   geoControlRef.current?.trigger();\n  // }, [geoControlRef.current]);\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: intl.formatMessage({\n        id: 'loading',\n        defaultMessage: 'Cargando...'\n      })\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message\n    });\n  }\n\n  ;\n  return __jsx(PlantPageWrapper, null);\n};\n\nexport default DittoMarket;","map":null,"metadata":{},"sourceType":"module"}