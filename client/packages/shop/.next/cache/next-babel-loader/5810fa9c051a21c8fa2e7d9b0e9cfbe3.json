{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/LightSensor.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage } from 'react-intl';\nimport Select from 'react-select';\nimport { SensorsTypes, HumiditySensorMode, WeekDays, fourRelaysOptions, manualModeOptions, lightModeOptions, LightSensorModes } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, WeekContainer, DayContainer, ScheduleTime, TextSpaced, CardButtons, ActionButton, Text, ButtonText, Type } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';\nimport { getSettingTypeText } from 'utils/sensorUtils';\nimport { CheckMark } from 'assets/icons/CheckMark';\n\nvar LightSensor = function LightSensor(_ref) {\n  _s();\n\n  var _setting$relayOneIdRe, _setting$relayOneIdRe2, _setting$scheduledOnT, _setting$logs;\n\n  var plant = _ref.plant,\n      settingType = _ref.settingType,\n      handleSettingsChange = _ref.handleSettingsChange,\n      onDeleteSchedule = _ref.onDeleteSchedule,\n      data = _ref.data,\n      openTab = _ref.openTab,\n      setOpenTab = _ref.setOpenTab,\n      handleDeleteSensor = _ref.handleDeleteSensor;\n  var setting = plant.sensors.find(function (sensor) {\n    return sensor.settingType === settingType;\n  });\n\n  var _useState = useState(''),\n      daySelected = _useState[0],\n      setDay = _useState[1];\n\n  var _useState2 = useState(false),\n      editIsOn = _useState2[0],\n      setEditIsOn = _useState2[1];\n\n  var selectedMode = lightModeOptions.find(function (option) {\n    return option.value === setting.mode;\n  });\n  var selectedManualState = manualModeOptions.find(function (option) {\n    return option.value === setting.relayOneWorking;\n  });\n  var relayOneSelected = fourRelaysOptions.find(function (option) {\n    return option.value === setting.relayOneIdRelated;\n  });\n  var relayTwoSelected = fourRelaysOptions.find(function (option) {\n    return option.value === setting.relayTwoIdRelated;\n  });\n  var selectStyle = {\n    control: function control(styles) {\n      return _objectSpread(_objectSpread({}, styles), {}, {\n        width: '160px',\n        textAlign: 'left'\n      });\n    }\n  };\n  var tabIsOpen = openTab === settingType;\n\n  var handleModal = function handleModal(modalComponent) {\n    var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'add-time-schedule-modal';\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  return __jsx(PlantsSensorContainer, {\n    style: {\n      height: tabIsOpen ? '100%' : '66px'\n    },\n    onClick: function onClick() {\n      return setOpenTab(tabIsOpen ? '' : settingType);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, __jsx(Type, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, getSettingTypeText(setting === null || setting === void 0 ? void 0 : setting.settingType))), __jsx(ListDes, {\n    style: {\n      marginLeft: '-10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, __jsx(CardButtons, {\n    className: \"button-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, editIsOn ? __jsx(ActionButton, {\n    onClick: function onClick() {\n      return setEditIsOn(!editIsOn);\n    },\n    className: \"edit-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, __jsx(CheckMark, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  })) : __jsx(ActionButton, {\n    onClick: function onClick() {\n      return setEditIsOn(!editIsOn);\n    },\n    className: \"edit-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, __jsx(PencilIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  })), __jsx(ActionButton, {\n    onClick: function onClick() {\n      return handleDeleteSensor(plant, settingType);\n    },\n    className: \"delete-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, __jsx(CloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }))))), (setting === null || setting === void 0 ? void 0 : setting.mode) === HumiditySensorMode.NONE && !!openTab && __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, __jsx(Status, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"modoRequiredWarningText\",\n    defaultMessage: \"modoRequiredWarningText\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"lightId\",\n    defaultMessage: \"lightId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, plant === null || plant === void 0 ? void 0 : plant.light, \" % \", (plant === null || plant === void 0 ? void 0 : plant.light) < 40 ? '🌙' : '☀️'))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"manualModeStateId\",\n    defaultMessage: \"manualModeStateId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: setting.relayOneWorking ? 'manualModeStateOnId' : 'manualModeStateOffId',\n    defaultMessage: \"noDefaultOnOffMsg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  })))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"lightModeId\",\n    defaultMessage: \"lightModeId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(e, plant, 'mode', e.value, SensorsTypes.LIGHT_SETTING);\n    },\n    value: selectedMode,\n    options: lightModeOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }))), ((setting === null || setting === void 0 ? void 0 : setting.mode) === LightSensorModes.MANUAL || (setting === null || setting === void 0 ? void 0 : setting.mode) === LightSensorModes.SCHEDULE || (setting === null || setting === void 0 ? void 0 : setting.mode) === LightSensorModes.SMART_SCHEDULE) && __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: ((_setting$relayOneIdRe = setting.relayOneIdRelated) === null || _setting$relayOneIdRe === void 0 ? void 0 : _setting$relayOneIdRe.length) ? 'asociatedRelayId' : 'asociateRelayId',\n    defaultMessage: ((_setting$relayOneIdRe2 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe2 === void 0 ? void 0 : _setting$relayOneIdRe2.length) ? 'asociatedRelayId' : 'asociateRelayId',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(e, plant, 'relayOneIdRelated', e.value, SensorsTypes.LIGHT_SETTING);\n    },\n    value: relayOneSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }))), setting.mode === LightSensorModes.MANUAL && __jsx(React.Fragment, null, __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"manualModeStateId\",\n    defaultMessage: \"manualModeStateId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(e, plant, 'relayOneWorking', e.value, SensorsTypes.LIGHT_SETTING);\n    },\n    value: selectedManualState,\n    options: manualModeOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  })))), (setting.mode === LightSensorModes.SCHEDULE || setting.mode === LightSensorModes.SMART_SCHEDULE) && __jsx(React.Fragment, null, __jsx(WeekContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, Object.keys(WeekDays).map(function (day, i) {\n    return __jsx(DayContainer, {\n      key: i + '-day-container',\n      style: {\n        backgroundColor: daySelected === day ? '#c2b0b0' : 'transparent'\n      },\n      onClick: function onClick() {\n        return setDay(day);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, day.substring(0, 3));\n  })), setting === null || setting === void 0 ? void 0 : (_setting$scheduledOnT = setting.scheduledOnTimes) === null || _setting$scheduledOnT === void 0 ? void 0 : _setting$scheduledOnT.map(function (schedule, i) {\n    return __jsx(WeekContainer, {\n      key: i + '-days-to-repeat-2',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, schedule.daysToRepeat.includes(daySelected) ? __jsx(ScheduleTime, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 23\n      }\n    }, __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"startTimeId\",\n      defaultMessage: \"startTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 37\n      }\n    })), \" \", __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 117\n      }\n    }, schedule.startTime), __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"endTimeId\",\n      defaultMessage: \"endTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 37\n      }\n    })), \" \", __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 113\n      }\n    }, schedule.endTime), __jsx(CardButtons, {\n      className: \"button-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }, __jsx(ActionButton, {\n      onClick: function onClick() {\n        var _data$getUser;\n\n        return handleModal(AddTimeSchedule, {\n          settingType: SensorsTypes.LIGHT_SETTING,\n          plant: plant,\n          id: data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : _data$getUser.id\n        });\n      },\n      className: \"edit-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 27\n      }\n    }, __jsx(PencilIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    })), __jsx(ActionButton, {\n      onClick: function onClick() {\n        return onDeleteSchedule(plant, SensorsTypes.LIGHT_SETTING, i);\n      },\n      className: \"delete-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 27\n      }\n    }, __jsx(CloseIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    })))) : __jsx(ScheduleTime, {\n      style: {\n        border: '0px',\n        height: '42px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }));\n  }), __jsx(Button, {\n    size: \"small\",\n    variant: \"outlined\",\n    type: \"button\",\n    className: \"add-button\",\n    onClick: function onClick() {\n      var _data$getUser2;\n\n      return handleModal(AddTimeSchedule, {\n        settingType: SensorsTypes.LIGHT_SETTING,\n        plant: plant,\n        id: data === null || data === void 0 ? void 0 : (_data$getUser2 = data.getUser) === null || _data$getUser2 === void 0 ? void 0 : _data$getUser2.id\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"addTimeScheduleId\",\n    defaultMessage: \"addTimeScheduleId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  })), __jsx(Switch, {\n    disabled: false,\n    checked: setting.whatsappWarningsOn,\n    labelPosition: 'right' // className,\n    ,\n    onUpdate: function onUpdate() {\n      return handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, SensorsTypes.LIGHT_SETTING);\n    } // style\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }), (setting === null || setting === void 0 ? void 0 : (_setting$logs = setting.logs) === null || _setting$logs === void 0 ? void 0 : _setting$logs.length) > 0 && __jsx(HumidityLogsGraph, {\n    data: setting.logs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  })), __jsx(Button, {\n    className: \"delete-setting-btn\",\n    variant: \"secondary\",\n    borderRadius: 100,\n    onClick: function onClick() {\n      return handleDeleteSensor(plant, settingType);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, __jsx(ButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"deleteSettingId\",\n    defaultMessage: \"deleteSettingId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }))));\n};\n\n_s(LightSensor, \"hWYXUjh+Y0MjgIBoZXmkmXcN6Io=\");\n\n_c = LightSensor;\nexport default LightSensor;\n\nvar _c;\n\n$RefreshReg$(_c, \"LightSensor\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/LightSensor.tsx"],"names":["React","useState","CloseIcon","PencilIcon","Button","Switch","FormattedMessage","Select","SensorsTypes","HumiditySensorMode","WeekDays","fourRelaysOptions","manualModeOptions","lightModeOptions","LightSensorModes","HumidityLogsGraph","PlantsSensorContainer","ListItem","ListTitle","ListDes","WeekContainer","DayContainer","ScheduleTime","TextSpaced","CardButtons","ActionButton","Text","ButtonText","Type","openModal","AddTimeSchedule","getSettingTypeText","CheckMark","LightSensor","plant","settingType","handleSettingsChange","onDeleteSchedule","data","openTab","setOpenTab","handleDeleteSensor","setting","sensors","find","sensor","daySelected","setDay","editIsOn","setEditIsOn","selectedMode","option","value","mode","selectedManualState","relayOneWorking","relayOneSelected","relayOneIdRelated","relayTwoSelected","relayTwoIdRelated","selectStyle","control","styles","width","textAlign","tabIsOpen","handleModal","modalComponent","modalProps","className","show","config","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","justifyContent","marginLeft","NONE","light","e","LIGHT_SETTING","MANUAL","SCHEDULE","SMART_SCHEDULE","length","Object","keys","map","day","i","backgroundColor","substring","scheduledOnTimes","schedule","daysToRepeat","includes","startTime","endTime","id","getUser","border","whatsappWarningsOn","logs"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { SearchBox } from 'components/search-box/search-box';\nimport Router,{ useRouter } from 'next/router';\nimport LineChart from 'components/line-chart/line-chart';\nimport GraphChart from 'components/graph-chart/graph-chart';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { SensorsTypes, HumiditySensorMode, WeekDays, fourRelaysOptions, humidityModeOptions, manualModeOptions, lightModeOptions, LightSensorModes } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, InputUpper, WeekContainer, DayContainer, ScheduleTime, TextSpaced, CardButtons, ActionButton, Text, ButtonText, Type } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';  \nimport { ISetting } from 'utils/types';\nimport { getSettingTypeText } from 'utils/sensorUtils';\nimport { CheckMark } from 'assets/icons/CheckMark';\n\ninterface Props {\n  data?: any;\n  plant: any;\n  settingType: SensorsTypes;\n  openTab: string;\n  setOpenTab: (settingType: string) => void;\n  handleSettingsChange: (e: any, plant: any, field: string, value: string | boolean, settingType: SensorsTypes) => void;\n  onDeleteSchedule: (plant: any, settingType: SensorsTypes, position: number) => void;\n  handleDeleteSensor: (plant: any, settingType: string) => void;\n}\n\nconst LightSensor: React.FC<Props> = ({ plant, settingType, handleSettingsChange, onDeleteSchedule, data, openTab, setOpenTab, handleDeleteSensor }) => {\n    const setting = plant.sensors.find((sensor: ISetting) => sensor.settingType === settingType);\n    const [daySelected, setDay] = useState('');\n    const [editIsOn, setEditIsOn] = useState(false);\n\n    const selectedMode = lightModeOptions.find((option) => option.value === setting.mode);\n    const selectedManualState = manualModeOptions.find((option) => option.value === setting.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === setting.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find((option) => option.value === setting.relayTwoIdRelated);\n    const selectStyle = { control: styles => ({ ...styles, width: '160px', textAlign: 'left' }) };\n    const tabIsOpen = openTab === settingType;\n\n    const handleModal = (\n        modalComponent: any,\n        modalProps = {},\n        className: string = 'add-time-schedule-modal'\n        ) => {\n        openModal({\n            show: true,\n            config: {\n            width: 360,\n            height: 'auto',\n            enableResizing: false,\n            disableDragging: true,\n            className: className,\n            },\n            closeOnClickOutside: true,\n            component: modalComponent,\n            componentProps: { item: modalProps },\n        });\n    };\n\n    return (\n        <PlantsSensorContainer style={{ height: tabIsOpen ? '100%' : '66px' }} onClick={() => setOpenTab(tabIsOpen ? '' : settingType)}>\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Type bold>{getSettingTypeText(setting?.settingType)}</Type>\n                </ListTitle>\n                <ListDes style={{ marginLeft: '-10px' }}>\n                    <CardButtons className='button-wrapper'>\n                        { editIsOn ? (\n                            <ActionButton onClick={() => setEditIsOn(!editIsOn)} className='edit-btn'>\n                                <CheckMark />\n                            </ActionButton>\n                        ) : (\n                            <ActionButton onClick={() => setEditIsOn(!editIsOn)} className='edit-btn'>\n                                <PencilIcon />\n                            </ActionButton>\n                        )}\n                        <ActionButton onClick={() => handleDeleteSensor(plant, settingType)} className='delete-btn'>\n                            <CloseIcon />\n                        </ActionButton>\n                    </CardButtons>\n                </ListDes>\n            \n            </ListItem>\n\n\n            { (setting?.mode === HumiditySensorMode.NONE && !!openTab) && (\n                <ListItem>\n                    <Status>\n                        <FormattedMessage id=\"modoRequiredWarningText\" defaultMessage=\"modoRequiredWarningText\" />\n                    </Status>\n                </ListItem>\n            )}\n\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text>\n                <FormattedMessage\n                  id=\"lightId\"\n                  defaultMessage=\"lightId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes>\n              <Text bold>{plant?.light} % {plant?.light < 40 ? '🌙' : '☀️'}</Text>\n            </ListDes>\n          </ListItem>\n  \n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"manualModeStateId\"\n                  defaultMessage=\"manualModeStateId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes>\n              <Text> \n                <FormattedMessage\n                  id={setting.relayOneWorking ? 'manualModeStateOnId' : 'manualModeStateOffId'}\n                  defaultMessage='noDefaultOnOffMsg'\n                />\n              </Text>\n            </ListDes>\n          </ListItem>\n  \n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"lightModeId\"\n                  defaultMessage=\"lightModeId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes>\n              <Select \n                onChange={(e: any) => handleSettingsChange(e, plant, 'mode', e.value, SensorsTypes.LIGHT_SETTING)}\n                value={selectedMode}\n                options={lightModeOptions}\n                styles={selectStyle}\n                menuPosition={'fixed'}\n              />\n            </ListDes>\n          </ListItem>\n  \n          { (setting?.mode === LightSensorModes.MANUAL || setting?.mode === LightSensorModes.SCHEDULE || setting?.mode === LightSensorModes.SMART_SCHEDULE) && (\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n                    defaultMessage={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleSettingsChange(e, plant, 'relayOneIdRelated', e.value, SensorsTypes.LIGHT_SETTING)}\n                  value={relayOneSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n          )}\n          \n          { setting.mode === LightSensorModes.MANUAL && (\n            <>\n              <ListItem>\n                <ListTitle>\n                  <Text bold>\n                    <FormattedMessage\n                      id='manualModeStateId'\n                      defaultMessage='manualModeStateId'\n                    />\n                  </Text>\n                </ListTitle>\n                <ListDes>\n                  <Select \n                    onChange={(e: any) => handleSettingsChange(e, plant, 'relayOneWorking', e.value, SensorsTypes.LIGHT_SETTING)}\n                    value={selectedManualState}\n                    options={manualModeOptions}\n                    styles={selectStyle}\n                    menuPosition={'fixed'}\n                  />\n                </ListDes>\n              </ListItem>\n            </>\n          )}\n  \n          { (setting.mode === LightSensorModes.SCHEDULE || setting.mode === LightSensorModes.SMART_SCHEDULE) && (\n            <>\n              <WeekContainer>\n              {Object.keys(WeekDays).map((day, i: number) => {\n                 return (\n                    <DayContainer\n                      key={i + '-day-container'}\n                      style={{ backgroundColor: daySelected === day ? '#c2b0b0' : 'transparent' }}\n                      onClick={() => setDay(day)}\n                    >\n                      {day.substring(0,3)}\n                    </DayContainer>\n                  )\n                })\n              }\n              </WeekContainer>\n  \n              { setting?.scheduledOnTimes?.map((schedule: any, i: number) => {\n                return (\n                  <WeekContainer key={i + '-days-to-repeat-2'}>\n                    { schedule.daysToRepeat.includes(daySelected) ? (\n                      <ScheduleTime>\n                        <TextSpaced><FormattedMessage id='startTimeId' defaultMessage='startTimeId' /></TextSpaced> <TextSpaced>{schedule.startTime}</TextSpaced>\n                        <TextSpaced><FormattedMessage id='endTimeId' defaultMessage='endTimeId' /></TextSpaced> <TextSpaced>{schedule.endTime}</TextSpaced>\n                        <CardButtons className='button-wrapper'>\n                          <ActionButton onClick={() => handleModal( AddTimeSchedule, { settingType: SensorsTypes.LIGHT_SETTING, plant, id: data?.getUser?.id } )} className='edit-btn'>\n                            <PencilIcon />\n                          </ActionButton>\n  \n                          <ActionButton onClick={() => onDeleteSchedule(plant, SensorsTypes.LIGHT_SETTING, i)} className='delete-btn'>\n                            <CloseIcon />\n                          </ActionButton>\n                        </CardButtons>\n                      </ScheduleTime>\n                    ) : <ScheduleTime style={{ border: '0px', height: '42px' }}></ScheduleTime>}\n                  </WeekContainer>\n                )\n              }\n              )}\n              <Button\n                size='small'\n                variant='outlined'\n                type='button'\n                className='add-button'\n                onClick={() => handleModal(\n                    AddTimeSchedule, \n                    {\n                        settingType: SensorsTypes.LIGHT_SETTING,\n                        plant,\n                        id: data?.getUser?.id\n                    }\n                  )\n                }\n              >\n                <FormattedMessage\n                  id='addTimeScheduleId'\n                  defaultMessage='addTimeScheduleId' \n                />\n              </Button>\n              <Switch \n                    disabled={false}\n                    checked={setting.whatsappWarningsOn}\n                    labelPosition={'right'}\n                    // className,\n                    onUpdate={() => handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, SensorsTypes.LIGHT_SETTING)}\n                    // style\n                />\n              { setting?.logs?.length > 0 && (\n                    <HumidityLogsGraph\n                        data={setting.logs}\n                    />\n                )}\n            </>\n          )}\n\n            <Button className=\"delete-setting-btn\" variant=\"secondary\" borderRadius={100} onClick={() => handleDeleteSensor(plant, settingType)}>\n                <ButtonText>\n                    <FormattedMessage id=\"deleteSettingId\" defaultMessage=\"deleteSettingId\" />\n                </ButtonText>\n            </Button>\n        </PlantsSensorContainer>\n      )\n};\n\nexport default LightSensor;\n"]},"metadata":{},"sourceType":"module"}