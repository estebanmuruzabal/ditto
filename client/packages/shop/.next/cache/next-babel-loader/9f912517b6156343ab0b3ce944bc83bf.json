{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/carts/cart-popup.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .cartPopup{\\n    top: auto !important;\\n    left: auto !important;\\n    bottom: 50px !important;\\n    right: 50px !important;\\n    box-shadow: \", \";\\n    transform-origin: bottom right;\\n\\n    @media (max-width: 580px) {\\n      max-width: none!important;\\n      width: 100% !important;\\n      bottom: 0 !important;\\n      left: 0!important;\\n      background: \", \";\\n      overflow: initial !important;\\n      transform-origin: bottom center;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport Cart from './cart';\nimport { useIntl } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { useMedia } from 'utils/use-media';\nvar CartPopupStyle = createGlobalStyle(_templateObject(), themeGet('shadows.big', '0 21px 36px rgba(0, 0, 0, 0.16)'), themeGet('colors.white', '#ffffff'));\n\nvar CartPopUp = function CartPopUp(_ref) {\n  _s();\n\n  var _ref$deviceType = _ref.deviceType,\n      tablet = _ref$deviceType.tablet,\n      desktop = _ref$deviceType.desktop;\n\n  var _useCart = useCart(),\n      isOpen = _useCart.isOpen,\n      cartItemsCount = _useCart.cartItemsCount,\n      toggleCart = _useCart.toggleCart,\n      calculatePrice = _useCart.calculatePrice;\n\n  var mobile = useMedia('(max-width: 580px)');\n  var intl = useIntl();\n\n  var handleModal = function handleModal() {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40\n        }\n      },\n      closeOnClickOutside: true,\n      component: Cart,\n      closeComponent: function closeComponent() {\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }\n        });\n      },\n      componentProps: {\n        onCloseBtnClick: closeModal,\n        scrollbarHeight: 330\n      }\n    });\n  };\n\n  var cartSliderClass = isOpen === true ? 'cartPopupFixed' : '';\n  return __jsx(React.Fragment, null);\n};\n\n_s(CartPopUp, \"qFpOjivfTtDN69wQzs1oeUeHAQA=\", false, function () {\n  return [useCart, useMedia, useIntl];\n});\n\n_c = CartPopUp;\nexport default CartPopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartPopUp\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/carts/cart-popup.tsx"],"names":["React","createGlobalStyle","themeGet","openModal","closeModal","Cart","useIntl","useCart","useMedia","CartPopupStyle","CartPopUp","deviceType","tablet","desktop","isOpen","cartItemsCount","toggleCart","calculatePrice","mobile","intl","handleModal","show","config","className","width","height","enableResizing","disableDragging","transition","tension","friction","closeOnClickOutside","component","closeComponent","componentProps","onCloseBtnClick","scrollbarHeight","cartSliderClass"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,mBAAtC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAMA,SAA2BC,OAA3B,QAA0C,YAA1C;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,IAAMC,cAAc,GAAGR,iBAAH,oBAMFC,QAAQ,CAAC,aAAD,EAAgB,iCAAhB,CANN,EAcAA,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAdR,CAApB;;AA6BA,IAAMQ,SAA8B,GAAG,SAAjCA,SAAiC,OAEjC;AAAA;;AAAA,6BADJC,UACI;AAAA,MADWC,MACX,mBADWA,MACX;AAAA,MADmBC,OACnB,mBADmBA,OACnB;;AAAA,iBAC2DN,OAAO,EADlE;AAAA,MACIO,MADJ,YACIA,MADJ;AAAA,MACYC,cADZ,YACYA,cADZ;AAAA,MAC4BC,UAD5B,YAC4BA,UAD5B;AAAA,MACwCC,cADxC,YACwCA,cADxC;;AAEJ,MAAMC,MAAM,GAAGV,QAAQ,CAAC,oBAAD,CAAvB;AACA,MAAMW,IAAI,GAAGb,OAAO,EAApB;;AACA,MAAMc,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBjB,IAAAA,SAAS,CAAC;AACRkB,MAAAA,IAAI,EAAE,IADE;AAERC,MAAAA,MAAM,EAAE;AACNC,QAAAA,SAAS,EAAE,WADL;AAENC,QAAAA,KAAK,EAAE,MAFD;AAGNC,QAAAA,MAAM,EAAE,MAHF;AAINC,QAAAA,cAAc,EAAE,KAJV;AAKNC,QAAAA,eAAe,EAAE,IALX;AAMNC,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE,GADC;AAEVC,UAAAA,QAAQ,EAAE;AAFA;AANN,OAFA;AAaRC,MAAAA,mBAAmB,EAAE,IAbb;AAcRC,MAAAA,SAAS,EAAE3B,IAdH;AAeR4B,MAAAA,cAAc,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAAA,OAfR;AAgBRC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,eAAe,EAAE/B,UAAnB;AAA+BgC,QAAAA,eAAe,EAAE;AAAhD;AAhBR,KAAD,CAAT;AAkBD,GAnBD;;AAqBA,MAAIC,eAAe,GAAGvB,MAAM,KAAK,IAAX,GAAkB,gBAAlB,GAAqC,EAA3D;AAEA,SACE,2BADF;AAKD,CAlCD;;GAAMJ,S;UAG2DH,O,EAChDC,Q,EACFF,O;;;KALTI,S;AAoCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport Cart from './cart';\nimport CartPopupButton, {\n  BoxedCartButton,\n} from 'components/cart-popup/cart-popup-button';\nimport { CURRENCY } from 'utils/constant';\nimport { CartSlidePopup } from './cart.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { useMedia } from 'utils/use-media';\n\nconst CartPopupStyle = createGlobalStyle`\n  .cartPopup{\n    top: auto !important;\n    left: auto !important;\n    bottom: 50px !important;\n    right: 50px !important;\n    box-shadow: ${themeGet('shadows.big', '0 21px 36px rgba(0, 0, 0, 0.16)')};\n    transform-origin: bottom right;\n\n    @media (max-width: 580px) {\n      max-width: none!important;\n      width: 100% !important;\n      bottom: 0 !important;\n      left: 0!important;\n      background: ${themeGet('colors.white', '#ffffff')};\n      overflow: initial !important;\n      transform-origin: bottom center;\n    }\n  }\n`;\n\ntype CartProps = {\n  deviceType: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst CartPopUp: React.FC<CartProps> = ({\n  deviceType: {  tablet, desktop },\n}) => {\n  const { isOpen, cartItemsCount, toggleCart, calculatePrice } = useCart();\n  const mobile = useMedia('(max-width: 580px)');\n  const intl = useIntl();\n  const handleModal = () => {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40,\n        },\n      },\n      closeOnClickOutside: true,\n      component: Cart,\n      closeComponent: () => <div />,\n      componentProps: { onCloseBtnClick: closeModal, scrollbarHeight: 330 },\n    });\n  };\n\n  let cartSliderClass = isOpen === true ? 'cartPopupFixed' : '';\n\n  return (\n    <>\n      \n    </>\n  );\n};\n\nexport default CartPopUp;\n"]},"metadata":{},"sourceType":"module"}