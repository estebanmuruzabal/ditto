{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two/checkout-two.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport { Button } from 'components/button/button';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioGroupTwo from 'components/radio-group/radio-group-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport PaymentGroup from 'components/payment-group/payment-group';\nimport UpdateContact from 'components/contact-card/contact-card';\nimport { DELETE_ADDRESS, SETPRIMARY_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_PHONENUMBER, SETPRIMARY_PHONENUMBER } from 'graphql/mutation/phone';\nimport { CREAT_ORDER } from 'graphql/mutation/order';\nimport { GET_COUPON } from 'graphql/query/coupon';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport { CURRENCY } from 'utils/constant';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport CheckoutWrapper, { CheckoutContainer, CheckoutInformation, InformationBox, DeliverySchedule, Heading, ButtonGroup, CheckoutSubmit, ErrorMsg, TermConditionText, TermConditionLink, CartWrapper, CalculationWrapper, OrderInfo, Title, ItemsWrapper, Items, Quantity, ItemInfo, Price, TextWrapper, Text, Bold, NoProductMsg, NoProductImg, IconWrapper, DeliveryTypesOptions } from './checkout-two.style';\nimport { Plus } from 'assets/icons/PlusMinus';\nimport { NoCartBag } from 'assets/icons/NoCartBag';\nimport Sticky from 'react-stickynode';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { useLocale } from 'contexts/language/language.provider';\nimport { useWindowSize } from 'utils/useWindowSize';\nimport UpdateAddressTwo from 'components/address-card/address-card-two';\nimport moment from 'moment';\nimport { calculateDeliveryCharge, capitalizeFirstLetter } from 'utils/shop-helper';\nimport DeliverySelection from 'features/delivery-selection/delivery-selection';\n\nconst OrderItem = ({\n  product\n}) => {\n  const {\n    name,\n    images,\n    price,\n    salePrice,\n    unit,\n    quantity = 0,\n    recicledQuantity = 0,\n    packagePrice,\n    id\n  } = product;\n  const recicledPrice = price - packagePrice;\n  const totalQuantity = quantity + recicledQuantity;\n  const displayPrice = salePrice || price;\n  const nonRecicledTotalPrice = displayPrice * quantity;\n  const recicledTotalPrice = recicledPrice * recicledQuantity;\n  const totalPrice = nonRecicledTotalPrice + recicledTotalPrice;\n  const intl = useIntl();\n  return __jsx(Items, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, __jsx(ItemInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, recicledQuantity > 0 && __jsx(React.Fragment, null, __jsx(Quantity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, name), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), recicledQuantity, \" X \", CURRENCY, recicledPrice, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  })), quantity > 0 && __jsx(React.Fragment, null, __jsx(Quantity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, name), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), quantity, \" X \", CURRENCY, price)), __jsx(Price, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, CURRENCY, totalPrice.toFixed(2)));\n};\n\nconst CheckoutWithSidebar = ({\n  token,\n  deviceType\n}) => {\n  var _deliveryMethods$find, _calculateCCCharge;\n\n  const {\n    0: hasCoupon,\n    1: setHasCoupon\n  } = useState(false);\n  const {\n    0: couponCode,\n    1: setCouponCode\n  } = useState('');\n  const {\n    0: couponError,\n    1: setError\n  } = useState('');\n  const {\n    0: orderError,\n    1: setOrderError\n  } = useState('');\n  const {\n    0: checkoutError,\n    1: setCheckoutError\n  } = useState('');\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const {\n    isRtl\n  } = useLocale();\n  const {\n    items,\n    removeCoupon,\n    coupon,\n    applyCoupon,\n    clearCart,\n    cartItemsCount,\n    calculatePrice,\n    calculateDiscount,\n    calculateSubTotalPrice,\n    isRestaurant,\n    toggleRestaurant\n  } = useCart();\n  const intl = useIntl();\n  let cartProduct = null;\n\n  if (items.length > 0) {\n    cartProduct = items.map((item, index) => ({\n      product_id: item.id,\n      unit: item.unit,\n      quantity: Number(item.quantity) || 0,\n      recicledQuantity: Number(item.recicledQuantity) || 0,\n      sale_price: item.sale_price,\n      // price: (Number(item.quantity || 0) * item.price) + (Number(item.recicledQuantity || 0) * (item.price - (item.packagePrice || 0))),\n      price: item.price,\n      image: item.images[0],\n      name: item.name\n    }));\n  }\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: isValid,\n    1: setIsValid\n  } = useState(false);\n  const {\n    0: submitResult,\n    1: setSubmitResult\n  } = useState({\n    contact_number: '',\n    payment_option_id: '',\n    payment_option_type: '',\n    delivery_method_id: '',\n    coupon_code: '',\n    delivery_address: null,\n    products: null\n  });\n  const {\n    delivery_address,\n    contact,\n    paymentMethods,\n    phones,\n    name,\n    email,\n    id,\n    deliveryMethods\n  } = state; //set mututions\n\n  const [setprimaryAddressMutation] = useMutation(SETPRIMARY_ADDRESS);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const [setprimaryPhoneNumberMutation] = useMutation(SETPRIMARY_PHONENUMBER);\n  const [deletePhoneNumberMutation] = useMutation(DELETE_PHONENUMBER);\n  const [setOrderMutation] = useMutation(CREAT_ORDER);\n  const [deleteContactMutation] = useMutation(DELETE_CONTACT);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n  const size = useWindowSize();\n  const [deliveryMethodsSelected, setDeliveryMethodsSelected] = React.useState(null);\n  const [deliveryMethodSaved, setDeliveryMethodSaved] = React.useState(); // useEffect(() => {\n  //   if (getCookie(deliveryMethodCookieKeyName) && !deliveryMethodSaved) {\n  //     const deliveryMethodSaved: any = JSON.parse(getCookie(deliveryMethodCookieKeyName));\n  //     setDeliveryMethodSaved(deliveryMethodSaved)\n  //     console.log('seyed: deliveryMethodSaved', deliveryMethodSaved)\n  //     setSubmitResult({\n  //       ...submitResult,\n  //       delivery_method_id: deliveryMethodSaved?.id || '', \n  //     })\n  //   }\n  // }, [deliveryMethodSaved]);\n  // const resetDeliveryMethodAndDeleteSavedCookie =  () => {\n  //   setDeliveryMethodSaved(null)\n  //   setCookie(deliveryMethodCookieKeyName, null);\n  // };\n\n  const setDeliveryMethod = methodSelected => {\n    setDeliveryMethodSaved(methodSelected); // setCookie(deliveryMethodCookieKeyName, methodSelected);\n\n    setSubmitResult(_objectSpread(_objectSpread({}, submitResult), {}, {\n      delivery_method_id: methodSelected.id // delivery_address: methodSelected.deliveryAddress?.split(\",\")[0]\n\n    }));\n  };\n\n  const [appliedCoupon] = useMutation(GET_COUPON);\n  let deliveryCharge = 0;\n  const selectedAddress = delivery_address && delivery_address.find(item => item.is_primary === true);\n  const selectedContact = phones.find(item => item.is_primary === true);\n  const pickUpAddress = (_deliveryMethods$find = deliveryMethods.find(deliveryMethod => {\n    return submitResult.delivery_method_id === deliveryMethod.id;\n  })) === null || _deliveryMethods$find === void 0 ? void 0 : _deliveryMethods$find.pickUpAddress;\n\n  const calculateCCCharge = () => {\n    var _paymentOptionSelecte, _paymentOptionSelecte2;\n\n    const paymentOptionSelected = paymentMethods.find(paymentMethod => {\n      return (submitResult === null || submitResult === void 0 ? void 0 : submitResult.payment_option_id) === (paymentMethod === null || paymentMethod === void 0 ? void 0 : paymentMethod.id);\n    });\n    const total = Number(calculateSubTotalPrice());\n\n    if ((paymentOptionSelected === null || paymentOptionSelected === void 0 ? void 0 : (_paymentOptionSelecte = paymentOptionSelected.name) === null || _paymentOptionSelecte === void 0 ? void 0 : _paymentOptionSelecte.toLowerCase().includes('tarjeta')) || (paymentOptionSelected === null || paymentOptionSelected === void 0 ? void 0 : (_paymentOptionSelecte2 = paymentOptionSelected.name) === null || _paymentOptionSelecte2 === void 0 ? void 0 : _paymentOptionSelecte2.toLowerCase().includes('card'))) {\n      var _paymentOptionSelecte3;\n\n      const ccCharge = paymentOptionSelected === null || paymentOptionSelected === void 0 ? void 0 : (_paymentOptionSelecte3 = paymentOptionSelected.name) === null || _paymentOptionSelecte3 === void 0 ? void 0 : _paymentOptionSelecte3.replace(/\\D/g, '');\n      const result = total * (ccCharge / 100);\n      return result;\n    }\n\n    return 0;\n  };\n\n  const selectedAddressText = (selectedAddress === null || selectedAddress === void 0 ? void 0 : selectedAddress.address) ? `${selectedAddress && capitalizeFirstLetter(selectedAddress.title)} - ${selectedAddress && capitalizeFirstLetter(selectedAddress.address)}, ${selectedAddress && selectedAddress.instructions}` : null;\n  useEffect(() => {\n    removeCoupon();\n    setHasCoupon(false);\n    deliveryCharge = calculateDeliveryCharge(deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.name); // // const deliveryAddress = pickUpOptionSelected ? pickUpAddress : selectedAddressText;\n    // console.log('here',deliveryMethodSaved?.deliveryAddress)\n\n    setSubmitResult(_objectSpread(_objectSpread({}, submitResult), {}, {\n      // delivery_address: deliveryMethodSaved?.deliveryAddress,\n      // delivery_method_id: deliveryMethodSaved?.id,\n      products: cartProduct,\n      contact_number: selectedContact.number\n    }));\n\n    if (calculatePrice() > 0 && cartItemsCount > 0 && ((submitResult === null || submitResult === void 0 ? void 0 : submitResult.delivery_method_id) || pickUpAddress) && phones.length && deliveryMethods.length) {\n      setIsValid(true);\n    }\n  }, [state, deliveryMethodSaved]); // Add or edit modal\n\n  const handleModal = (modalComponent, modalProps = {}, className = 'add-address-modal') => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  const handleEditDelete = async (item, index, type, name) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddressTwo : UpdateContact;\n      handleModal(modalComponent, {\n        item,\n        id\n      });\n    } else {\n      switch (name) {\n        /* case 'payment':\n           dispatch({ type: 'DELETE_CARD', payload: item.id });\n           return await deletePaymentCardMutation({\n             variables: { cardId: JSON.stringify(item.id) },\n           });\n         */\n        case 'contact':\n          if (phones.length > 1) {\n            dispatch({\n              type: 'DELETE_CONTACT',\n              payload: item.id\n            });\n            return await deletePhoneNumberMutation({\n              variables: {\n                id,\n                phoneId: item.id\n              }\n            });\n          } else {\n            return null;\n          }\n\n        case 'address':\n          if (delivery_address.length > 1) {\n            dispatch({\n              type: 'DELETE_ADDRESS',\n              payload: item.id\n            });\n            return await deleteAddressMutation({\n              variables: {\n                id,\n                addressId: item.id\n              }\n            });\n          } else {\n            return null;\n          }\n\n        default:\n          return false;\n      }\n    }\n  };\n\n  const handlePrimary = async (item, name) => {\n    switch (name) {\n      case 'contact':\n        dispatch({\n          type: 'SET_PRIMARY_CONTACT',\n          payload: item.id\n        });\n        return await setprimaryPhoneNumberMutation({\n          variables: {\n            id,\n            phoneId: item.id\n          }\n        });\n\n      case 'address':\n        dispatch({\n          type: 'SET_PRIMARY_ADDRESS',\n          payload: item.id\n        });\n        return await setprimaryAddressMutation({\n          variables: {\n            id,\n            addressId: item.id\n          }\n        });\n\n      default:\n        return false;\n    }\n  };\n\n  const handleApplyCoupon = async () => {\n    if (!couponCode) {\n      setError('Invalid Coupon');\n      return null;\n    }\n\n    const {\n      data,\n      errors\n    } = await appliedCoupon({\n      variables: {\n        code: couponCode\n      }\n    });\n\n    if (!data.getCoupon.coupon && data.getCoupon.message && !data.getCoupon.message.status) {\n      setError('Invalid Coupon');\n      return null;\n    }\n\n    if (errors) {\n      setError('Invalid Coupon');\n      return null;\n    }\n\n    if (data.getCoupon.coupon && data.getCoupon.coupon.percentage) {\n      applyCoupon(data.getCoupon.coupon);\n      setSubmitResult(_objectSpread(_objectSpread({}, submitResult), {}, {\n        coupon_code: couponCode,\n        products: cartProduct\n      }));\n      setCouponCode('');\n    } else {\n      setError('Invalid Coupon');\n    }\n  };\n\n  const handleOnUpdate = e => {\n    setCouponCode(e.currentTarget.value);\n  };\n\n  const setErrorFor5Sec = messageId => {\n    const error = intl.formatMessage({\n      id: messageId,\n      defaultMessage: 'Please check the form'\n    });\n    setCheckoutError(error);\n    setTimeout(() => setCheckoutError(null), 3500);\n    return null;\n  };\n\n  const getDeliveryDate = () => {\n    // moment.locale('es');\n    let orderDay = moment(new Date(), 'MM/D/YYYY').day();\n    const orderHour = moment(new Date(), 'MM/D/YYYY').hour();\n    let deliveryDate = moment(new Date());\n    const lunes = 1;\n    const martes = 2;\n    const miercoles = 3;\n    const jueves = 4;\n    const viernes = 5;\n    const sabado = 6;\n    const domingo = 7;\n    const lastOrderTime = 12;\n\n    switch (orderDay) {\n      case viernes:\n      case sabado:\n      case domingo:\n      case lunes:\n        deliveryDate.add(1, 'days');\n        break;\n\n      case martes:\n        if (orderHour >= lastOrderTime) {\n          deliveryDate.add(2, 'days');\n        }\n\n        break;\n\n      case miercoles:\n        // deliveryDate.add(1, 'days');\n        break;\n\n      case jueves:\n        if (orderHour >= lastOrderTime) {\n          deliveryDate.add(5, 'days');\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    return moment(deliveryDate).format('dddd DD MMM');\n  };\n\n  const handleSubmit = async () => {\n    var _deliveryMethodSaved$, _deliveryMethodSaved$2, _deliveryMethodSaved$3;\n\n    const deliveryCharge = calculateDeliveryCharge(deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.name);\n    const ccCharge = calculateCCCharge();\n    const otherSubmitResult = {\n      customer_id: id,\n      sub_total: Number(calculateSubTotalPrice()),\n      total: Number(calculatePrice(deliveryCharge + ccCharge)),\n      discount_amount: Number(calculateDiscount())\n    };\n    const {\n      contact_number,\n      payment_option_id,\n      payment_option_type,\n      delivery_method_id,\n      delivery_address,\n      coupon_code,\n      products\n    } = submitResult;\n    const {\n      customer_id,\n      sub_total,\n      total,\n      discount_amount\n    } = otherSubmitResult;\n    console.log('deliveryMethodSaved', deliveryMethodSaved);\n\n    if (!deliveryMethodSaved || !delivery_method_id) {\n      setErrorFor5Sec('checkoutDeliveryMethodInvalid');\n      return;\n    }\n\n    if (!contact_number) {\n      setErrorFor5Sec('checkoutContactNumberInvalid');\n      return;\n    }\n\n    if (!payment_option_id) {\n      setErrorFor5Sec(pickUpAddress ? 'checkoutPaymentMethodInvalidOption3' : 'checkoutPaymentMethodInvalidOption4');\n      return;\n    }\n\n    if (!customer_id || !products) {\n      setCheckoutError('Please place a valid order!');\n      return null;\n    }\n\n    setLoading(true);\n    const delivery_date = (deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.isPickUp) ? deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$ = deliveryMethodSaved.details.split(\"|\")[1]) === null || _deliveryMethodSaved$ === void 0 ? void 0 : _deliveryMethodSaved$.trim() : `${deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$2 = deliveryMethodSaved.details.split(\"|\")[0]) === null || _deliveryMethodSaved$2 === void 0 ? void 0 : _deliveryMethodSaved$2.trim()} ${deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$3 = deliveryMethodSaved.details.split(\"|\")[1]) === null || _deliveryMethodSaved$3 === void 0 ? void 0 : _deliveryMethodSaved$3.trim()}`; // const deliveryDateAndTime = `${getDeliverySchedule(deliveryMethodSaved?.details)} - ${moment(deliveryDate).format('DD MMM')}`;\n    // if (confirm('Are you sure? You want to place this order?')) {\n\n    try {\n      const {\n        errors: orderCreateError\n      } = await setOrderMutation({\n        variables: {\n          input: {\n            customer_id,\n            contact_number,\n            payment_option_id,\n            delivery_method_id,\n            delivery_date,\n            delivery_address,\n            sub_total,\n            total,\n            coupon_code,\n            discount_amount,\n            products,\n            payment_option_type,\n            isWhatsappPurchase: false,\n            lenguageLocale: intl.locale\n          }\n        }\n      });\n\n      if (!orderCreateError) {\n        if (isValid) {\n          clearCart();\n          removeCoupon();\n          setHasCoupon(false);\n          Router.push({\n            pathname: '/order-received',\n            query: {\n              itemId: id\n            }\n          });\n        }\n\n        setLoading(false);\n        setIsValid(false);\n      }\n\n      if (orderCreateError) {\n        var _orderCreateError$;\n\n        setOrderError(((_orderCreateError$ = orderCreateError[0]) === null || _orderCreateError$ === void 0 ? void 0 : _orderCreateError$.message) || 'Somehting went wrong');\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log(error);\n\n      if (confirm('Algo salió mal! Te pedimos disculpas y que por favor, comiences de vuelta tu compra.')) {\n        console.log(error);\n        setLoading(false);\n        startAllOver();\n      }\n    }\n\n    setLoading(false); // }\n  };\n\n  const startAllOver = () => {\n    clearCart();\n    removeCoupon();\n    setHasCoupon(false);\n    Router.push({\n      pathname: '/'\n    });\n  };\n\n  const pickedUpOptionIds = deliveryMethods.map(deliveryMethod => {\n    return deliveryMethod.isPickUp ? deliveryMethod.id : null;\n  });\n  const deliveryOptionIds = deliveryMethods.map(deliveryMethod => {\n    return !deliveryMethod.isPickUp ? deliveryMethod.id : null;\n  });\n  const pickUpOptionSelected = pickedUpOptionIds.includes(submitResult.delivery_method_id);\n  console.log('delivery_address', delivery_address);\n  return __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 5\n    }\n  }, __jsx(CheckoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 7\n    }\n  }, __jsx(CheckoutContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 9\n    }\n  }, __jsx(CheckoutInformation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 11\n    }\n  }, __jsx(InformationBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 13\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: deliveryMethodSaved ? 'selectDeliveryMethodSelected' : 'selectDeliveryMethod',\n    defaultMessage: \"Select Your Delivery Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 17\n    }\n  }), __jsx(DeliveryTypesOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 17\n    }\n  })), __jsx(DeliverySchedule, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 15\n    }\n  }, deliveryMethodSaved ? __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 20\n    }\n  }, __jsx(RadioGroupThree, {\n    items: [deliveryMethodSaved],\n    component: (item, index) => {\n      var _deliveryMethodSaved$4;\n\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: (deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.isPickUp) ? `PICKUP ${item.name}` : `DELIVERY ${item.name} ${deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$4 = deliveryMethodSaved.deliveryAddress) === null || _deliveryMethodSaved$4 === void 0 ? void 0 : _deliveryMethodSaved$4.split(\",\")[0]}` // title={item.name}\n        ,\n        details: item.details,\n        link: item.isPickUp && item.pickUpAddress ? item.pickUpAddress : null,\n        name: \"schedule\",\n        checked: true,\n        withActionButtons: false,\n        onClick: () => setSubmitResult(_objectSpread(_objectSpread({}, submitResult), {}, {\n          delivery_method_id: item.id,\n          products: cartProduct\n        })),\n        onChange: () => {\n          return dispatch({\n            type: 'SET_PRIMARY_SCHEDULE',\n            payload: item.id.toString()\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 25\n        }\n      });\n    },\n    secondaryComponent: deliveryMethodSaved ? __jsx(Button, {\n      className: \"changeButton\",\n      variant: \"text\",\n      type: \"button\",\n      onClick: resetDeliveryMethodAndDeleteSavedCookie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 23\n      }\n    }, __jsx(IconWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 25\n      }\n    }, __jsx(Plus, {\n      width: \"10px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 29\n      }\n    })), __jsx(FormattedMessage, {\n      id: \"changeDeliveryMethod\",\n      defaultMessage: \"changeDeliveryMethod\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 25\n      }\n    })) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 20\n    }\n  })) : __jsx(DeliverySelection, {\n    deliveryMethodSaved: deliveryMethodSaved,\n    setDeliveryMethodSaved: setDeliveryMethod,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 19\n    }\n  }))), !pickUpOptionSelected && __jsx(InformationBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 15\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"checkoutDeliveryAddress\",\n    defaultMessage: \"Delivery Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 19\n    }\n  }), __jsx(DeliveryTypesOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 19\n    }\n  })), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 17\n    }\n  }, __jsx(RadioGroupTwo, {\n    items: delivery_address,\n    component: (item, index) => __jsx(RadioCardTWO, {\n      id: index,\n      key: index,\n      address: item.address,\n      location: item.location,\n      instructions: item.instructions,\n      title: item.title,\n      name: \"address\",\n      isChecked: item.is_primary === true,\n      onClick: () => setSubmitResult(_objectSpread(_objectSpread({}, submitResult), {}, {\n        delivery_address: `${item.title} -\n                          ${item.address}, ${item.location}, ${item.instructions}\n                          `,\n        products: cartProduct\n      })),\n      onChange: () => handlePrimary(item, 'address'),\n      onEdit: () => handleEditDelete(item, index, 'edit', 'address'),\n      onDelete: () => handleEditDelete(item, index, 'delete', 'address'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 25\n      }\n    }),\n    secondaryComponent: __jsx(Button, {\n      className: \"addButton\",\n      variant: \"text\",\n      type: \"button\",\n      onClick: () => handleModal(UpdateAddressTwo, {\n        item: {},\n        id\n      }, 'add-address-modal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 23\n      }\n    }, __jsx(IconWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 25\n      }\n    }, __jsx(Plus, {\n      width: \"10px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 27\n      }\n    })), __jsx(FormattedMessage, {\n      id: \"addNew\",\n      defaultMessage: \"Add New\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 25\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 19\n    }\n  }))), __jsx(InformationBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 13\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"contactNumberText\",\n    defaultMessage: \"Select Your Contact Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 17\n    }\n  }), __jsx(DeliveryTypesOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 17\n    }\n  })), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 15\n    }\n  }, __jsx(RadioGroupThree, {\n    items: phones,\n    component: (item, index) => __jsx(RadioCard, {\n      id: index,\n      key: index,\n      title: item.is_primary ? intl.formatMessage({\n        id: 'primaryId',\n        defaultMessage: 'Primary'\n      }) : intl.formatMessage({\n        id: 'secundaryId',\n        defaultMessage: 'Secondary'\n      }),\n      details: item.number,\n      checked: item.is_primary === true,\n      onChange: () => handlePrimary(item, 'contact'),\n      onClick: () => setSubmitResult(_objectSpread(_objectSpread({}, submitResult), {}, {\n        contact_number: item.number,\n        products: cartProduct\n      })),\n      name: \"contact\",\n      onEdit: () => handleEditDelete(item, index, 'edit', 'contact'),\n      onDelete: () => handleEditDelete(item, index, 'delete', 'contact'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 21\n      }\n    }),\n    secondaryComponent: __jsx(Button, {\n      className: \"addButton\",\n      variant: \"text\",\n      type: \"button\",\n      onClick: () => handleModal(UpdateContact, {\n        item: {},\n        id\n      }, 'add-contact-modal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 21\n      }\n    }, __jsx(IconWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 23\n      }\n    }, __jsx(Plus, {\n      width: \"10px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 25\n      }\n    })), __jsx(FormattedMessage, {\n      id: \"addContactBtn\",\n      defaultMessage: \"Add Contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 23\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 17\n    }\n  }))), __jsx(InformationBox, {\n    className: \"paymentBox\",\n    style: {\n      paddingBottom: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 13\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"selectPaymentText\",\n    defaultMessage: \"Select Payment Option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 17\n    }\n  }), __jsx(DeliveryTypesOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 17\n    }\n  })), __jsx(PaymentGroup, {\n    name: \"payment\",\n    deviceType: deviceType,\n    items: paymentMethods,\n    onEditDeleteField: (item, type) => null,\n    onClick: item => {\n      setSubmitResult(_objectSpread(_objectSpread({}, submitResult), {}, {\n        payment_option_id: item.id,\n        payment_option_type: item.type,\n        products: cartProduct\n      }));\n      return null;\n    },\n    onChange: item => {\n      return dispatch({\n        type: 'SET_PRIMARY_CARD',\n        payload: item.id.toString()\n      });\n    },\n    handleAddNewCard: () => null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 15\n    }\n  }), __jsx(TermConditionText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"termAndConditionHelper\",\n    defaultMessage: \"By making this purchase you agree to our\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 17\n    }\n  }), __jsx(Link, {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 17\n    }\n  }, __jsx(TermConditionLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 19\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"termAndCondition\",\n    defaultMessage: \"terms and conditions.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 21\n    }\n  })))), checkoutError && __jsx(ErrorMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"checkoutError\",\n    defaultMessage: checkoutError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 29\n    }\n  })), __jsx(CheckoutSubmit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    type: \"button\",\n    onClick: handleSubmit,\n    disabled: loading,\n    size: \"big\",\n    loading: loading,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 924,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: loading ? 'processesingCheckout' : 'processCheckout',\n    defaultMessage: \"Proceed to Checkout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 19\n    }\n  }), \". (\", CURRENCY, calculatePrice(calculateDeliveryCharge(deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.name) + calculateCCCharge()), \")\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 17\n    }\n  }, orderError && __jsx(ErrorMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 29\n    }\n  }, orderError))))), __jsx(CartWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950,\n      columnNumber: 11\n    }\n  }, __jsx(Sticky, {\n    enabled: size.width >= 768 ? true : false,\n    top: 120,\n    innerZ: 999,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 13\n    }\n  }, __jsx(OrderInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 15\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"cartTitle\",\n    defaultMessage: \"Your Orderdfd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 959,\n      columnNumber: 19\n    }\n  })), __jsx(Scrollbars, {\n    universal: true,\n    autoHide: true,\n    autoHeight: true,\n    autoHeightMax: \"390px\",\n    renderView: props => __jsx(\"div\", _extends({}, props, {\n      style: _objectSpread(_objectSpread({}, props.style), {}, {\n        marginLeft: isRtl ? props.style.marginRight : 0,\n        marginRight: isRtl ? 0 : props.style.marginRight,\n        paddingLeft: isRtl ? 15 : 0,\n        paddingRight: isRtl ? 0 : 15\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 17\n    }\n  }, __jsx(ItemsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 19\n    }\n  }, cartItemsCount > 0 ? items.map(item => __jsx(OrderItem, {\n    key: `cartItem-${item.id}`,\n    product: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 986,\n      columnNumber: 25\n    }\n  })) : __jsx(React.Fragment, null, __jsx(NoProductImg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 25\n    }\n  }, __jsx(NoCartBag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 27\n    }\n  })), __jsx(NoProductMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"noProductFound\",\n    defaultMessage: \"No products found\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 27\n    }\n  }))))), __jsx(CalculationWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 17\n    }\n  }, __jsx(TextWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1006,\n      columnNumber: 19\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"subTotal\",\n    defaultMessage: \"Subtotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 23\n    }\n  })), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1010,\n      columnNumber: 21\n    }\n  }, CURRENCY, \" \", calculateSubTotalPrice())), __jsx(TextWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 19\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"discountText\",\n    defaultMessage: \"Discount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 23\n    }\n  })), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1019,\n      columnNumber: 21\n    }\n  }, CURRENCY, \" \", calculateDiscount())), calculateCCCharge() > 0 && __jsx(TextWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1025,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1026,\n      columnNumber: 23\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"ccrChargeText\",\n    defaultMessage: \"Card charge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1027,\n      columnNumber: 25\n    }\n  })), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 23\n    }\n  }, CURRENCY, \" \", (_calculateCCCharge = calculateCCCharge()) === null || _calculateCCCharge === void 0 ? void 0 : _calculateCCCharge.toFixed(2))), __jsx(TextWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 19\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"deliveryChargeText\",\n    defaultMessage: \"Delivery charge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 23\n    }\n  })), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1039,\n      columnNumber: 21\n    }\n  }, CURRENCY, \" \", calculateDeliveryCharge(deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.name))), __jsx(TextWrapper, {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1044,\n      columnNumber: 19\n    }\n  }, __jsx(Bold, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1045,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"totalText\",\n    defaultMessage: \"Total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1046,\n      columnNumber: 23\n    }\n  }), ' '), __jsx(Bold, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 21\n    }\n  }, CURRENCY, \" \", calculatePrice(calculateDeliveryCharge(deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.name) + calculateCCCharge()))))))))));\n};\n\nexport default CheckoutWithSidebar;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two/checkout-two.tsx"],"names":["React","useContext","useState","useEffect","Router","Link","Button","RadioCard","RadioGroupTwo","RadioGroupThree","RadioCardTWO","PaymentGroup","UpdateContact","DELETE_ADDRESS","SETPRIMARY_ADDRESS","DELETE_PHONENUMBER","SETPRIMARY_PHONENUMBER","CREAT_ORDER","GET_COUPON","DELETE_CARD","DELETE_CONTACT","CURRENCY","openModal","useMutation","Scrollbars","CheckoutWrapper","CheckoutContainer","CheckoutInformation","InformationBox","DeliverySchedule","Heading","ButtonGroup","CheckoutSubmit","ErrorMsg","TermConditionText","TermConditionLink","CartWrapper","CalculationWrapper","OrderInfo","Title","ItemsWrapper","Items","Quantity","ItemInfo","Price","TextWrapper","Text","Bold","NoProductMsg","NoProductImg","IconWrapper","DeliveryTypesOptions","Plus","NoCartBag","Sticky","ProfileContext","FormattedMessage","useIntl","useCart","useLocale","useWindowSize","UpdateAddressTwo","moment","calculateDeliveryCharge","capitalizeFirstLetter","DeliverySelection","OrderItem","product","name","images","price","salePrice","unit","quantity","recicledQuantity","packagePrice","id","recicledPrice","totalQuantity","displayPrice","nonRecicledTotalPrice","recicledTotalPrice","totalPrice","intl","toFixed","CheckoutWithSidebar","token","deviceType","hasCoupon","setHasCoupon","couponCode","setCouponCode","couponError","setError","orderError","setOrderError","checkoutError","setCheckoutError","state","dispatch","isRtl","items","removeCoupon","coupon","applyCoupon","clearCart","cartItemsCount","calculatePrice","calculateDiscount","calculateSubTotalPrice","isRestaurant","toggleRestaurant","cartProduct","length","map","item","index","product_id","Number","sale_price","image","loading","setLoading","isValid","setIsValid","submitResult","setSubmitResult","contact_number","payment_option_id","payment_option_type","delivery_method_id","coupon_code","delivery_address","products","contact","paymentMethods","phones","email","deliveryMethods","setprimaryAddressMutation","deleteAddressMutation","setprimaryPhoneNumberMutation","deletePhoneNumberMutation","setOrderMutation","deleteContactMutation","deletePaymentCardMutation","size","deliveryMethodsSelected","setDeliveryMethodsSelected","deliveryMethodSaved","setDeliveryMethodSaved","setDeliveryMethod","methodSelected","appliedCoupon","deliveryCharge","selectedAddress","find","is_primary","selectedContact","pickUpAddress","deliveryMethod","calculateCCCharge","paymentOptionSelected","paymentMethod","total","toLowerCase","includes","ccCharge","replace","result","selectedAddressText","address","title","instructions","number","handleModal","modalComponent","modalProps","className","show","config","width","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","handleEditDelete","type","payload","variables","phoneId","addressId","handlePrimary","handleApplyCoupon","data","errors","code","getCoupon","message","status","percentage","handleOnUpdate","e","currentTarget","value","setErrorFor5Sec","messageId","error","formatMessage","defaultMessage","setTimeout","getDeliveryDate","orderDay","Date","day","orderHour","hour","deliveryDate","lunes","martes","miercoles","jueves","viernes","sabado","domingo","lastOrderTime","add","format","handleSubmit","otherSubmitResult","customer_id","sub_total","discount_amount","console","log","delivery_date","isPickUp","details","split","trim","orderCreateError","input","isWhatsappPurchase","lenguageLocale","locale","push","pathname","query","itemId","confirm","startAllOver","pickedUpOptionIds","deliveryOptionIds","pickUpOptionSelected","deliveryAddress","toString","resetDeliveryMethodAndDeleteSavedCookie","location","paddingBottom","props","style","marginLeft","marginRight","paddingLeft","paddingRight","marginTop"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport { Button } from 'components/button/button';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioGroup from 'components/radio-group/radio-group';\nimport RadioGroupTwo from 'components/radio-group/radio-group-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport PaymentGroup from 'components/payment-group/payment-group';\nimport UpdateContact from 'components/contact-card/contact-card';\nimport { DELETE_ADDRESS, SETPRIMARY_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_PHONENUMBER, SETPRIMARY_PHONENUMBER } from 'graphql/mutation/phone';\nimport { CREAT_ORDER } from 'graphql/mutation/order';\nimport { GET_COUPON } from 'graphql/query/coupon';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport { CC_PAYMENT_OPTION, CURRENCY, deliveryCarrySelectOptions, deliveryMethodCookieKeyName } from 'utils/constant';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport CheckoutWrapper, {\n  CheckoutContainer,\n  CheckoutInformation,\n  InformationBox,\n  DeliverySchedule,\n  Heading,\n  ButtonGroup,\n  CheckoutSubmit,\n  HaveCoupon,\n  CouponBoxWrapper,\n  CouponInputBox,\n  HeadingWider,\n  CouponCode,\n  RemoveCoupon,\n  ErrorMsg,\n  TermConditionText,\n  TermConditionLink,\n  CartWrapper,\n  CalculationWrapper,\n  OrderInfo,\n  Title,\n  ItemsWrapper,\n  Items,\n  Quantity,\n  Multiplier,\n  ItemInfo,\n  Price,\n  TextWrapper,\n  Text,\n  Bold,\n  Small,\n  NoProductMsg,\n  NoProductImg,\n  IconWrapper,\n  DeliveryTypesOptions,\n} from './checkout-two.style';\nimport CouponBox from 'components/coupon-box/coupon-box';\n\nimport { Plus } from 'assets/icons/PlusMinus';\nimport { NoCartBag } from 'assets/icons/NoCartBag';\n\nimport Sticky from 'react-stickynode';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { APPLY_COUPON } from 'graphql/mutation/coupon';\nimport { useLocale } from 'contexts/language/language.provider';\nimport { useWindowSize } from 'utils/useWindowSize';\n\n\nimport UpdateAddressTwo from 'components/address-card/address-card-two';\nimport moment from 'moment';\nimport { calculateDeliveryCharge, capitalizeFirstLetter } from 'utils/shop-helper';\nimport DeliverySelection from 'features/delivery-selection/delivery-selection';\nimport { getCookie, setCookie } from 'utils/session';\nimport { DeliveryIcon } from 'assets/icons/DeliveryIcon';\n\n\n// The type of props Checkout Form receives\ninterface MyFormProps {\n  token: string;\n  deviceType: any;\n}\n\ntype CartItemProps = {\n  product: any;\n};\n\nconst OrderItem: React.FC<CartItemProps> = ({ product }) => {\n  const { name, images, price, salePrice, unit, quantity = 0, recicledQuantity = 0, packagePrice, id } = product;\n  const recicledPrice = price - packagePrice;\n  const totalQuantity = quantity + recicledQuantity;\n  const displayPrice = salePrice || price;\n  const nonRecicledTotalPrice = displayPrice * quantity;\n  const recicledTotalPrice = recicledPrice * recicledQuantity;\n  const totalPrice = nonRecicledTotalPrice + recicledTotalPrice\n  \n  const intl = useIntl();\n  return (\n    <Items key={id}>\n      {/* <Multiplier>x</Multiplier> */}\n      <ItemInfo>\n        { recicledQuantity > 0 && (\n          <>\n            <Quantity>{name}</Quantity>\n            <br />\n            {recicledQuantity} X {CURRENCY}{recicledPrice}\n            <br />\n          </>\n        )}\n        { quantity > 0 && (\n          <>\n            <Quantity>{name}</Quantity>\n            <br />\n            {quantity} X {CURRENCY}{price}\n          </>\n        )}\n      </ItemInfo>\n      <Price>\n        {CURRENCY}\n        {(totalPrice).toFixed(2)}\n      </Price>\n    </Items>\n  );\n};\n\nconst CheckoutWithSidebar: React.FC<MyFormProps> = ({ token, deviceType }) => {\n\n  const [hasCoupon, setHasCoupon] = useState(false);\n  const [couponCode, setCouponCode] = useState('');\n  const [couponError, setError] = useState('');\n  const [orderError, setOrderError] = useState('');\n  const [checkoutError, setCheckoutError] = useState('');\n  const { state, dispatch } = useContext(ProfileContext);\n  const { isRtl } = useLocale();\n  const {\n    items,\n    removeCoupon,\n    coupon,\n    applyCoupon,\n    clearCart,\n    cartItemsCount,\n    calculatePrice,\n    calculateDiscount,\n    calculateSubTotalPrice,\n    isRestaurant,\n    toggleRestaurant,\n  } = useCart();\n  const intl = useIntl();\n\n  let cartProduct= null;\n\n  if (items.length > 0) {\n    cartProduct = items.map((item: any, index:any) => (\n      {\n      product_id: item.id,\n      unit: item.unit,\n      quantity: Number(item.quantity) || 0,\n      recicledQuantity: Number(item.recicledQuantity) || 0,\n      sale_price: item.sale_price,\n      // price: (Number(item.quantity || 0) * item.price) + (Number(item.recicledQuantity || 0) * (item.price - (item.packagePrice || 0))),\n      price: item.price,\n      image: item.images[0],\n      name: item.name,\n    }))\n  }\n  const [loading, setLoading] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n  \n  const [submitResult, setSubmitResult] = useState({\n    contact_number: '',\n    payment_option_id: '',\n    payment_option_type: '',\n    delivery_method_id: '',\n    coupon_code: '',\n    delivery_address: null,\n    products: null\n });\n\n  const {    \n    delivery_address, \n    contact, \n    paymentMethods, \n    phones,\n    name,\n    email,\n    id,\n    deliveryMethods\n  } = state;\n\n\n  //set mututions\n  const [setprimaryAddressMutation] = useMutation(SETPRIMARY_ADDRESS);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const [setprimaryPhoneNumberMutation] = useMutation(SETPRIMARY_PHONENUMBER);\n  const [deletePhoneNumberMutation] = useMutation(DELETE_PHONENUMBER);\n  const [setOrderMutation] = useMutation(CREAT_ORDER);\n\n  const [deleteContactMutation] = useMutation(DELETE_CONTACT);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n  const size = useWindowSize();\n  const [deliveryMethodsSelected, setDeliveryMethodsSelected] = React.useState(null);\n  const [deliveryMethodSaved, setDeliveryMethodSaved] = React.useState();\n\n  // useEffect(() => {\n  //   if (getCookie(deliveryMethodCookieKeyName) && !deliveryMethodSaved) {\n  //     const deliveryMethodSaved: any = JSON.parse(getCookie(deliveryMethodCookieKeyName));\n  //     setDeliveryMethodSaved(deliveryMethodSaved)\n  //     console.log('seyed: deliveryMethodSaved', deliveryMethodSaved)\n  //     setSubmitResult({\n  //       ...submitResult,\n  //       delivery_method_id: deliveryMethodSaved?.id || '', \n  //     })\n  //   }\n  // }, [deliveryMethodSaved]);\n\n  // const resetDeliveryMethodAndDeleteSavedCookie =  () => {\n  //   setDeliveryMethodSaved(null)\n  //   setCookie(deliveryMethodCookieKeyName, null);\n  // };\n\n  const setDeliveryMethod =  (methodSelected) => {\n    setDeliveryMethodSaved(methodSelected)\n    // setCookie(deliveryMethodCookieKeyName, methodSelected);\n    setSubmitResult({\n      ...submitResult,\n      delivery_method_id: methodSelected.id, \n      // delivery_address: methodSelected.deliveryAddress?.split(\",\")[0]\n    })\n  };\n\n  const [appliedCoupon] = useMutation(GET_COUPON);\n  let deliveryCharge = 0;\n  const selectedAddress = delivery_address && delivery_address.find(\n    (item) => item.is_primary === true\n  );\n  const selectedContact= phones.find(\n    (item) => item.is_primary === true\n  );\n\n  const pickUpAddress = deliveryMethods.find(deliveryMethod => {\n    return submitResult.delivery_method_id === deliveryMethod.id;\n  })?.pickUpAddress;\n\n  const calculateCCCharge = () => {\n    const paymentOptionSelected = paymentMethods.find(paymentMethod => {\n      return submitResult?.payment_option_id === paymentMethod?.id;\n    });\n\n    const total = Number(calculateSubTotalPrice());\n\n    if (paymentOptionSelected?.name?.toLowerCase().includes('tarjeta') || paymentOptionSelected?.name?.toLowerCase().includes('card')) {\n      const ccCharge = paymentOptionSelected?.name?.replace(/\\D/g, '');\n      const result = total * (ccCharge / 100);\n      return result;\n    }\n    return 0;\n  }\n\n  const selectedAddressText = selectedAddress?.address ? `${selectedAddress && capitalizeFirstLetter(selectedAddress.title)} - ${selectedAddress && capitalizeFirstLetter(selectedAddress.address)}, ${selectedAddress && selectedAddress.instructions}` : null;\n\n  useEffect(() => {\n    removeCoupon();\n    setHasCoupon(false);\n    \n    deliveryCharge = calculateDeliveryCharge(deliveryMethodSaved?.name);\n    // // const deliveryAddress = pickUpOptionSelected ? pickUpAddress : selectedAddressText;\n    // console.log('here',deliveryMethodSaved?.deliveryAddress)\n    setSubmitResult({\n      ...submitResult,\n      // delivery_address: deliveryMethodSaved?.deliveryAddress,\n      // delivery_method_id: deliveryMethodSaved?.id,\n      products: cartProduct,\n      contact_number: selectedContact.number\n    })\n    if (\n      calculatePrice() > 0 &&\n      cartItemsCount > 0 &&\n      (submitResult?.delivery_method_id || pickUpAddress) &&\n      phones.length &&\n      deliveryMethods.length\n    ) {\n      setIsValid(true);\n    }\n  }, [state, deliveryMethodSaved]);\n\n  // Add or edit modal\n  const handleModal = (\n    modalComponent: any,\n    modalProps = {},\n    className: string = 'add-address-modal'\n  ) => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className,\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: { item: modalProps },\n    });\n  };\n\n  const handleEditDelete = async (item: any, index: any, type: string, name: string) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddressTwo : UpdateContact;\n      handleModal(modalComponent,{\n        item,\n        id\n      });\n    } else {\n      switch (name) {\n       /* case 'payment':\n          dispatch({ type: 'DELETE_CARD', payload: item.id });\n          return await deletePaymentCardMutation({\n            variables: { cardId: JSON.stringify(item.id) },\n          });\n        */\n        case 'contact':\n          if(phones.length > 1){\n            dispatch({ type: 'DELETE_CONTACT', payload: item.id });\n            return await deletePhoneNumberMutation({\n              variables: { \n                id,\n                phoneId: item.id\n              },\n            });\n          }else{\n            return null\n          }\n        case 'address':\n          if(delivery_address.length > 1){\n          dispatch({ type: 'DELETE_ADDRESS', payload: item.id });\n            return await deleteAddressMutation({\n              variables: { \n                id,\n                addressId: item.id\n              },\n            });\n          }else{\n            return null\n          }\n        default:\n          return false;\n      }\n    }\n  };\n\n  const handlePrimary = async (item: any, name: string) => {\n    switch (name) {\n      case 'contact':\n        dispatch({ type: 'SET_PRIMARY_CONTACT', payload: item.id });\n        return await setprimaryPhoneNumberMutation({\n          variables: { \n            id,\n            phoneId: item.id\n          },\n        });\n      case 'address':\n        dispatch({ type: 'SET_PRIMARY_ADDRESS', payload: item.id });\n          return await setprimaryAddressMutation({\n            variables: { \n              id,\n              addressId: item.id\n            },\n          });\n      default:\n        return false;\n    }\n  };\n\n  const handleApplyCoupon = async () => {\n\n    if(!couponCode){\n      setError('Invalid Coupon');\n      return null;\n    }\n\n    const { data, errors }: any = await appliedCoupon({\n      variables: { code: couponCode },\n    });\n\n    if(!data.getCoupon.coupon && data.getCoupon.message && !data.getCoupon.message.status){\n      setError('Invalid Coupon');\n      return null;\n    }\n\n    if(errors){\n      setError('Invalid Coupon');\n      return null;\n    }\n\n    if (data.getCoupon.coupon && data.getCoupon.coupon.percentage) {\n      applyCoupon(data.getCoupon.coupon);\n      setSubmitResult({\n        ...submitResult,\n        coupon_code: couponCode,\n        products: cartProduct\n      });\n\n      setCouponCode('');\n    } else {\n      setError('Invalid Coupon');\n    }\n  };\n  const handleOnUpdate: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCouponCode(e.currentTarget.value);\n  };\n\n  const setErrorFor5Sec = (messageId) => {\n    const error = intl.formatMessage({ id: messageId, defaultMessage: 'Please check the form' })\n      setCheckoutError(error);\n      setTimeout(() => setCheckoutError(null), 3500)\n      return null;\n  };\n\n\n  const getDeliveryDate = () => {\n    // moment.locale('es');\n    let orderDay = moment(new Date(), 'MM/D/YYYY').day();\n    const orderHour = moment(new Date(), 'MM/D/YYYY').hour();\n    let deliveryDate = moment(new Date());\n    const lunes = 1;const martes = 2;const miercoles = 3;const jueves = 4;const viernes = 5;const sabado = 6;const domingo = 7;\n\n    const lastOrderTime = 12;\n    switch (orderDay) {\n      case viernes:\n      case sabado:\n      case domingo:\n      case lunes:\n        deliveryDate.add(1, 'days');\n        break;\n      case martes:\n        if (orderHour >= lastOrderTime) {\n            deliveryDate.add(2, 'days');\n        }\n        break;\n      case miercoles:\n          // deliveryDate.add(1, 'days');\n        break;\n      case jueves:\n        if (orderHour >= lastOrderTime) {\n            deliveryDate.add(5, 'days');\n        }\n        break;\n      default:\n        break;\n    }\n    return moment(deliveryDate).format('dddd DD MMM');\n  }\n\n  const handleSubmit = async () => {\n    const deliveryCharge: number = calculateDeliveryCharge(deliveryMethodSaved?.name);\n    const ccCharge: number = calculateCCCharge();\n    const otherSubmitResult = {\n      customer_id: id,\n      sub_total: Number(calculateSubTotalPrice()),\n      total: Number(calculatePrice(deliveryCharge+ccCharge)),\n      discount_amount: Number(calculateDiscount()),\n    }\n\n    const {\n      contact_number,\n      payment_option_id,\n      payment_option_type,\n      delivery_method_id,\n      delivery_address,\n      coupon_code,\n      products\n    } = submitResult;\n\n    const {\n      customer_id,\n      sub_total,\n      total,\n      discount_amount\n    } = otherSubmitResult;\n    console.log('deliveryMethodSaved',deliveryMethodSaved)\n    if (!deliveryMethodSaved || !delivery_method_id) { setErrorFor5Sec('checkoutDeliveryMethodInvalid');return; }\n    if (!contact_number) { setErrorFor5Sec('checkoutContactNumberInvalid');return; }\n    if (!payment_option_id) { setErrorFor5Sec(pickUpAddress ? 'checkoutPaymentMethodInvalidOption3' : 'checkoutPaymentMethodInvalidOption4');return; }\n\n    if (!customer_id || !products) {\n      setCheckoutError('Please place a valid order!');\n      return null;\n    }\n    setLoading(true);\n    const delivery_date = deliveryMethodSaved?.isPickUp ? deliveryMethodSaved?.details.split(\"|\")[1]?.trim() : `${deliveryMethodSaved?.details.split(\"|\")[0]?.trim()} ${deliveryMethodSaved?.details.split(\"|\")[1]?.trim()}`;\n    // const deliveryDateAndTime = `${getDeliverySchedule(deliveryMethodSaved?.details)} - ${moment(deliveryDate).format('DD MMM')}`;\n    // if (confirm('Are you sure? You want to place this order?')) {\n      try {\n        const {errors: orderCreateError} = await setOrderMutation({\n          variables: {\n              input: {\n                  customer_id,\n                  contact_number,\n                  payment_option_id,\n                  delivery_method_id,\n                  delivery_date,\n                  delivery_address,\n                  sub_total,\n                  total,\n                  coupon_code,\n                  discount_amount,\n                  products,\n                  payment_option_type,\n                  isWhatsappPurchase: false,\n                  lenguageLocale: intl.locale\n              }\n            }\n        });\n\n        if (!orderCreateError) {\n            if (isValid) {\n                clearCart();\n                removeCoupon();\n                setHasCoupon(false);\n                  Router.push({\n                    pathname: '/order-received',\n                    query: { itemId: id }\n                  })\n            }\n            setLoading(false);\n            setIsValid(false);\n        }\n\n        if (orderCreateError) {\n          setOrderError(orderCreateError[0]?.message || 'Somehting went wrong')\n          setLoading(false);\n        }\n      } catch (error) {\n        console.log(error)\n        if (confirm('Algo salió mal! Te pedimos disculpas y que por favor, comiences de vuelta tu compra.')) {\n          console.log(error)\n          setLoading(false);\n          startAllOver();\n        }\n      }\n        setLoading(false);\n    // }\n  };\n\n  const startAllOver = () => {\n    clearCart();\n    removeCoupon();\n    setHasCoupon(false);\n    Router.push({ pathname: '/' })\n  }\n\n  const pickedUpOptionIds = deliveryMethods.map(deliveryMethod => {\n    return deliveryMethod.isPickUp ? deliveryMethod.id : null;\n  });\n  const deliveryOptionIds = deliveryMethods.map(deliveryMethod => {\n    return !deliveryMethod.isPickUp ? deliveryMethod.id : null;\n  });\n  const pickUpOptionSelected = pickedUpOptionIds.includes(submitResult.delivery_method_id)\n  console.log('delivery_address',delivery_address)\n  return (\n    <form>\n      <CheckoutWrapper>\n        <CheckoutContainer>\n          <CheckoutInformation>\n\n            {/* DeliverySchedule */}\n            <InformationBox>\n            <Heading>\n                <FormattedMessage\n                   id={(deliveryMethodSaved) ? 'selectDeliveryMethodSelected' : 'selectDeliveryMethod'}\n                   defaultMessage='Select Your Delivery Type'\n                />\n                <DeliveryTypesOptions />\n              </Heading>\n              <DeliverySchedule>\n                { deliveryMethodSaved ? (\n                   <ButtonGroup>\n                   <RadioGroupThree\n                      items={[deliveryMethodSaved]}\n                      component={(item: any, index: any) => (\n                        <RadioCard\n                          id={item.id}\n                          key={item.id}\n                          title={deliveryMethodSaved?.isPickUp ? `PICKUP ${item.name}` : `DELIVERY ${item.name} ${deliveryMethodSaved?.deliveryAddress?.split(\",\")[0]}`}\n                          // title={item.name}\n                          details={item.details}\n                          link={item.isPickUp && item.pickUpAddress ? item.pickUpAddress : null}\n                          name='schedule'\n                          checked={true}\n                          withActionButtons={false}\n                          onClick={() => setSubmitResult({\n                            ...submitResult,\n                            delivery_method_id: item.id, \n                            products: cartProduct\n                          })}\n                          onChange={() =>{\n                            return(dispatch({\n                              type: 'SET_PRIMARY_SCHEDULE',\n                              payload: item.id.toString(),\n                            }))\n                            }\n                          }\n                        />\n                      )}\n                     secondaryComponent={ deliveryMethodSaved ? (\n                      <Button\n                        className='changeButton'\n                        variant='text'\n                        type='button'\n                        onClick={resetDeliveryMethodAndDeleteSavedCookie}\n                      >\n                        <IconWrapper>\n                            <Plus width='10px' />\n                          </IconWrapper>\n                        <FormattedMessage id='changeDeliveryMethod' defaultMessage='changeDeliveryMethod' />\n                      </Button>\n                     ) : (null)\n                     }\n                   />\n                 </ButtonGroup>\n                ) : (\n                  <DeliverySelection deliveryMethodSaved={deliveryMethodSaved} setDeliveryMethodSaved={setDeliveryMethod} />\n                )}\n              </DeliverySchedule>\n            </InformationBox>\n\n            {/* DeliveryAddress */}\n            { !pickUpOptionSelected && (\n              <InformationBox>\n                <Heading>\n                  <FormattedMessage\n                    id='checkoutDeliveryAddress'\n                    defaultMessage='Delivery Address'\n                  />\n                  <DeliveryTypesOptions />\n                </Heading>\n                <ButtonGroup>\n                  <RadioGroupTwo\n                    items={delivery_address}\n                      component={(item: any, index: any) => (\n                        <RadioCardTWO \n                        id={index}\n                        key={index}\n                        address={item.address}\n                        location={item.location}\n                        instructions={item.instructions}\n                        title={item.title}\n                        name='address'\n                        isChecked={item.is_primary === true}\n                        onClick={() => setSubmitResult({\n                          ...submitResult,\n                          delivery_address:  `${item.title} -\n                          ${item.address}, ${item.location}, ${item.instructions}\n                          `,\n                          products: cartProduct\n                        })}\n                        onChange={() =>handlePrimary(item, 'address')}\n                        onEdit={() => handleEditDelete(item, index, 'edit', 'address')}\n                        onDelete={() =>\n                          handleEditDelete(item, index, 'delete', 'address')\n                        }\n                      />\n                    )}\n                    secondaryComponent={\n                      <Button\n                        className='addButton'\n                        variant='text'\n                        type='button'\n                        onClick={() =>\n                          handleModal(UpdateAddressTwo,\n                            {\n                              item:{},\n                              id\n                            },\n                            'add-address-modal')\n                        }\n                      >\n                        <IconWrapper>\n                          <Plus width='10px' />\n                        </IconWrapper>\n                        <FormattedMessage id='addNew' defaultMessage='Add New' />\n                      </Button>\n                    }\n                  />\n                </ButtonGroup>\n              </InformationBox>\n            )}\n            \n            {/* Contact number */}\n            <InformationBox>\n              <Heading>\n                <FormattedMessage\n                  id='contactNumberText'\n                  defaultMessage='Select Your Contact Number'\n                />\n                <DeliveryTypesOptions />\n              </Heading>\n              <ButtonGroup>\n                <RadioGroupThree\n                  items={phones}\n                  component={(item: any, index: any ) => (\n                    <RadioCard\n                      id={index}\n                      key={index}\n                      title={item.is_primary ? intl.formatMessage({ id: 'primaryId', defaultMessage: 'Primary' }) : intl.formatMessage({ id: 'secundaryId', defaultMessage: 'Secondary' })}\n                      details={item.number}\n                      checked={item.is_primary === true}\n                      onChange={() =>handlePrimary(item, 'contact')}\n                      onClick={() => setSubmitResult({\n                        ...submitResult,\n                        contact_number: item.number,\n                        products: cartProduct\n                      })}\n                      name='contact'\n                      onEdit={() => handleEditDelete(item, index, 'edit', 'contact')}\n                      onDelete={() =>\n                        handleEditDelete(item, index, 'delete', 'contact')\n                      }\n                    />\n                  )}\n                  secondaryComponent={\n                    <Button\n                      className='addButton'\n                      variant='text'\n                      type='button'\n                      onClick={() =>\n                        handleModal(\n                          UpdateContact, \n                          {\n                           item:{},\n                           id\n                         }, \n                         'add-contact-modal'\n                         )\n                      }\n                    >\n                      <IconWrapper>\n                        <Plus width='10px' />\n                      </IconWrapper>\n                      <FormattedMessage\n                        id='addContactBtn'\n                        defaultMessage='Add Contact'\n                      />\n                    </Button>\n                  }\n                />\n              </ButtonGroup>\n            </InformationBox>\n            {/* PaymentOption */}\n\n            {/* Own bag */}\n            {/* <InformationBox>\n              <Heading>\n                <FormattedMessage\n                  id='ownBagText'\n                  defaultMessage=''\n                />\n                <DeliveryTypesOptions />\n              </Heading>\n              <ButtonGroup>\n                   <RadioGroupThree\n                      items={deliveryCarrySelectOptions}\n                      component={(item: any, index: any) => (\n                        <RadioCard\n                          id={item.id}\n                          key={item.id}\n                          title={item.label}\n                          details={item.details}\n                          link={item.isPickUp && item.pickUpAddress ? item.pickUpAddress : null}\n                          name='schedule'\n                          checked={true}\n                          withActionButtons={false}\n                          onClick={() => setSubmitResult({\n                            ...submitResult,\n                            delivery_method_id: item.id, \n                            products: cartProduct\n                          })}\n                          onChange={() =>{\n                            return(dispatch({\n                              type: 'SET_PRIMARY_SCHEDULE',\n                              payload: item.id.toString(),\n                            }))\n                            }\n                          }\n                        />\n                      )}\n                     secondaryComponent={ deliveryMethodSaved ? (\n                      <Button\n                        className='changeButton'\n                        variant='text'\n                        type='button'\n                        onClick={resetDeliveryMethodAndDeleteSavedCookie}\n                      >\n                        <IconWrapper>\n                            <Plus width='10px' />\n                          </IconWrapper>\n                        <FormattedMessage id='changeDeliveryMethod' defaultMessage='changeDeliveryMethod' />\n                      </Button>\n                     ) : (null)\n                     }\n                   />\n                 </ButtonGroup>\n            </InformationBox>\n            Own bag */}\n\n            <InformationBox\n              className='paymentBox'\n              style={{ paddingBottom: 30 }}\n            >\n              <Heading>\n                <FormattedMessage\n                  id='selectPaymentText'\n                  defaultMessage='Select Payment Option'\n                />\n                <DeliveryTypesOptions />\n              </Heading>\n\n              <PaymentGroup\n                name='payment'\n                deviceType={deviceType}\n                items={paymentMethods}\n                onEditDeleteField={(item: any, type: string) =>  null }\n                onClick={(item: any) => {\n                   setSubmitResult({\n                    ...submitResult,\n                     payment_option_id: item.id,\n                    payment_option_type: item.type,\n                    products: cartProduct\n                  })\n                  return null\n                  }\n                }\n                onChange={(item: any) =>{\n                  return(dispatch({\n                    type: 'SET_PRIMARY_CARD',\n                    payload: item.id.toString(),\n                  }))\n                  }\n                }\n                handleAddNewCard={() => null }\n              />\n\n              {/* Coupon start\n              {coupon ? (\n                <CouponBoxWrapper>\n                  <CouponCode>\n                    <FormattedMessage id='couponApplied' />\n                    <span>{coupon.code}</span>\n\n                    <RemoveCoupon\n                      onClick={(e) => {\n                        e.preventDefault();\n                        removeCoupon();\n                        setHasCoupon(false);\n                      }}\n                    >\n                      <FormattedMessage id='removeCoupon' />\n                    </RemoveCoupon>\n                  </CouponCode>\n                </CouponBoxWrapper>\n              ) : (\n                <CouponBoxWrapper>\n                  {!hasCoupon ? (\n                    <HaveCoupon onClick={() => setHasCoupon((prev) => !prev)}>\n                      <FormattedMessage\n                        id='specialCode'\n                        defaultMessage='Have a special code?'\n                      />\n                    </HaveCoupon>\n                  ) : (\n                    <>\n                      <CouponInputBox>\n                        <CouponBox\n                          onClick={handleApplyCoupon}\n                          value={couponCode}\n                          onChange={handleOnUpdate}\n                          className='normalCoupon'\n                        />\n                      </CouponInputBox>\n\n                      {couponError && (\n                        <ErrorMsg>\n                          <FormattedMessage\n                            id='couponError'\n                            defaultMessage={couponError}\n                          />\n                        </ErrorMsg>\n                      )}\n                    </>\n                  )}\n                </CouponBoxWrapper>\n              )} */}\n\n              <TermConditionText>\n                <FormattedMessage\n                  id='termAndConditionHelper'\n                  defaultMessage='By making this purchase you agree to our'\n                />\n                <Link href='#'>\n                  <TermConditionLink>\n                    <FormattedMessage\n                      id='termAndCondition'\n                      defaultMessage='terms and conditions.'\n                    />\n                  </TermConditionLink>\n                </Link>\n              </TermConditionText>\n\n              {/* CheckoutSubmit */}\n              {checkoutError && (\n                        <ErrorMsg>\n                            <FormattedMessage\n                                id='checkoutError'\n                                defaultMessage={checkoutError}\n                            />\n                        </ErrorMsg>\n                    )}\n\n              <CheckoutSubmit>\n                <Button\n                    type='button'\n                    onClick={handleSubmit}\n                    disabled={loading}\n                    size='big'\n                    loading={loading}\n                    style={{ width: '100%' }}\n                >\n                  <FormattedMessage\n                    id={loading ? 'processesingCheckout' : 'processCheckout'}\n                    defaultMessage='Proceed to Checkout'\n                  />\n                   . ({CURRENCY}{calculatePrice(calculateDeliveryCharge(deliveryMethodSaved?.name)+calculateCCCharge())})\n                </Button>\n              </CheckoutSubmit>\n                <div>\n                    \n                    {orderError && (\n                        <ErrorMsg>\n                            <p>{orderError}</p>\n                        </ErrorMsg>\n                    )}\n                </div>\n            </InformationBox>\n          </CheckoutInformation>\n\n          <CartWrapper>\n            {/* <Sticky enabled={true} top={totalHeight} innerZ={999}> */}\n            <Sticky\n              enabled={size.width >= 768 ? true : false}\n              top={120}\n              innerZ={999}\n            >\n              <OrderInfo>\n                <Title>\n                  <FormattedMessage\n                    id='cartTitle'\n                    defaultMessage='Your Orderdfd'\n                  />\n                </Title>\n\n                <Scrollbars\n                  universal\n                  autoHide\n                  autoHeight\n                  autoHeightMax='390px'\n                  renderView={(props) => (\n                    <div\n                      {...props}\n                      style={{\n                        ...props.style,\n                        marginLeft: isRtl ? props.style.marginRight : 0,\n                        marginRight: isRtl ? 0 : props.style.marginRight,\n                        paddingLeft: isRtl ? 15 : 0,\n                        paddingRight: isRtl ? 0 : 15,\n                      }}\n                    />\n                  )}\n                >\n                  <ItemsWrapper>\n                    {cartItemsCount > 0 ? (\n                      items.map((item) => (\n                        <OrderItem key={`cartItem-${item.id}`} product={item} />\n                      ))\n                    ) : (\n                      <>\n                        <NoProductImg>\n                          <NoCartBag />\n                        </NoProductImg>\n\n                        <NoProductMsg>\n                          <FormattedMessage\n                            id='noProductFound'\n                            defaultMessage='No products found'\n                          />\n                        </NoProductMsg>\n                      </>\n                    )}\n                  </ItemsWrapper>\n                </Scrollbars>\n\n                <CalculationWrapper>\n                  <TextWrapper>\n                    <Text>\n                      <FormattedMessage id='subTotal' defaultMessage='Subtotal' />\n                    </Text>\n                    <Text>\n                      {CURRENCY} {calculateSubTotalPrice()}\n                    </Text>\n                  </TextWrapper>\n\n                  <TextWrapper>\n                    <Text>\n                      <FormattedMessage id='discountText' defaultMessage='Discount' />\n                    </Text>\n                    <Text>\n                      {CURRENCY} {calculateDiscount()}\n                    </Text>\n                  </TextWrapper>\n\n                  {calculateCCCharge() > 0 && (\n                    <TextWrapper>\n                      <Text>\n                        <FormattedMessage id='ccrChargeText' defaultMessage='Card charge' />\n                      </Text>\n                      <Text>\n                        {CURRENCY} {calculateCCCharge()?.toFixed(2)}\n                      </Text>\n                    </TextWrapper>\n                  )}\n\n                  <TextWrapper>\n                    <Text>\n                      <FormattedMessage id='deliveryChargeText' defaultMessage='Delivery charge' />\n                    </Text>\n                    <Text>\n                      {CURRENCY} {calculateDeliveryCharge(deliveryMethodSaved?.name)}\n                    </Text>\n                  </TextWrapper>\n\n                  <TextWrapper style={{ marginTop: 20 }}>\n                    <Bold>\n                      <FormattedMessage id='totalText' defaultMessage='Total' />{' '}\n                    </Bold>\n                    <Bold>\n                      {CURRENCY} {calculatePrice(calculateDeliveryCharge(deliveryMethodSaved?.name)+calculateCCCharge())}\n                    </Bold>\n                  </TextWrapper>\n                </CalculationWrapper>\n              </OrderInfo>\n            </Sticky>\n          </CartWrapper>\n        </CheckoutContainer>\n      </CheckoutWrapper>\n    </form>\n  );\n};\n\nexport default CheckoutWithSidebar;\n"]},"metadata":{},"sourceType":"module"}