{"ast":null,"code":"var _jsxFileName = \"/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/components/horizontal-menu/horizontal-menu.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { usePrevious, useMeasure } from 'utils/hooks';\nimport { useSpring, animated } from 'react-spring';\nimport { Frame, Title, Content, Header } from './horizontal-menu.style';\nimport * as Icons from 'assets/icons/category-icons';\nimport { useMedia } from 'utils/use-media';\nconst Tree = React.memo(({\n  children,\n  name,\n  icon,\n  isOpen,\n  onClick,\n  depth,\n  defaultOpen = false\n}) => {\n  const previous = usePrevious(isOpen);\n  const [bind, {\n    height: viewHeight\n  }] = useMeasure();\n  const isMobile = useMedia('(max-width: 580px)');\n  const {\n    height,\n    opacity,\n    transform\n  } = useSpring({\n    from: {\n      height: 0,\n      opacity: 0,\n      transform: 'translate3d(20px,0,0)'\n    },\n    to: {\n      height: isOpen ? viewHeight : 0,\n      opacity: isOpen ? 1 : 0,\n      transform: `translate3d(${isOpen ? 0 : 20}px,0,0)`\n    }\n  });\n  const Icon = icon ? Icons[icon] : depth === 'child' ? Icons['Minus'] : null;\n  return __jsx(Frame, {\n    depth: depth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    open: isOpen,\n    depth: depth,\n    className: depth,\n    isMobile: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, __jsx(Title, {\n    isMobile: true,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, name)), __jsx(Content, {\n    style: {\n      opacity,\n      height: isOpen && previous === isOpen ? 'auto' : height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, __jsx(animated.div, _extends({\n    style: {\n      transform,\n      display: depth === 'child' ? 'block' : 'flex',\n      flexDirection: depth === 'child' ? 'column' : 'row'\n    }\n  }, bind, {\n    children: children,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }))));\n});\nexport const HorizontalMenu = ({\n  data,\n  className,\n  onClick,\n  active\n}) => {\n  const handler = children => {\n    return children === null || children === void 0 ? void 0 : children.map(subOption => {\n      if (subOption.parent_id) return;\n\n      if (!subOption.children) {\n        return __jsx(Tree, {\n          key: subOption.name,\n          name: subOption.name,\n          icon: subOption.icon,\n          depth: \"child\",\n          onClick: () => onClick(subOption.slug),\n          isOpen: active === subOption.slug,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }\n        });\n      }\n\n      return __jsx(Tree, {\n        key: subOption.name,\n        name: subOption.name,\n        icon: subOption.icon,\n        depth: \"parent\",\n        onClick: () => onClick(subOption.slug) // onClick={() => subOption.children ? null : onClick(subOption.slug)}\n        ,\n        isOpen: active === subOption.slug || subOption.children.some(item => item.slug === active),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, handler(subOption.children));\n    });\n  };\n\n  return __jsx(React.Fragment, null, handler(data));\n};","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/components/horizontal-menu/horizontal-menu.tsx"],"names":["React","usePrevious","useMeasure","useSpring","animated","Frame","Title","Content","Header","Icons","useMedia","Tree","memo","children","name","icon","isOpen","onClick","depth","defaultOpen","previous","bind","height","viewHeight","isMobile","opacity","transform","from","to","Icon","display","flexDirection","HorizontalMenu","data","className","active","handler","map","subOption","parent_id","slug","some","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { usePrevious, useMeasure } from 'utils/hooks';\nimport { useSpring, animated } from 'react-spring';\nimport { Frame, Title, Content, Header, IconWrapper } from './horizontal-menu.style';\n\nimport * as Icons from 'assets/icons/category-icons';\nimport { useMedia } from 'utils/use-media';\n\nconst Tree = React.memo(\n  ({\n    children,\n    name,\n    icon,\n    isOpen,\n    onClick,\n    depth,\n    defaultOpen = false,\n  }: any) => {\n    const previous = usePrevious(isOpen);\n    const [bind, { height: viewHeight }] = useMeasure();\n    const isMobile = useMedia('(max-width: 580px)');\n    const { height, opacity, transform } = useSpring<any>({\n      from: { height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' },\n      to: {\n        height: isOpen ? viewHeight : 0,\n        opacity: isOpen ? 1 : 0,\n        transform: `translate3d(${isOpen ? 0 : 20}px,0,0)`,\n      },\n    });\n    const Icon = icon ? Icons[icon] : depth === 'child' ? Icons['Minus'] : null;\n    return (\n    <Frame depth={depth}>\n          <Header open={isOpen} depth={depth} className={depth} isMobile>\n            {/* {Icon !== null && (\n              <IconWrapper depth={depth}>\n                <Icon />\n              </IconWrapper>\n            )} */}\n            <Title isMobile onClick={onClick}>{name}</Title>\n          </Header>\n          <Content\n            style={{\n              opacity,\n              height: isOpen && previous === isOpen ? 'auto' : height,\n            }}\n          >\n            <animated.div style={{ \n              transform,\n              display: depth === 'child' ? 'block' : 'flex',\n              flexDirection: depth === 'child' ? 'column' : 'row',\n            }} {...bind} children={children} />\n          </Content>\n        </Frame>\n    );\n  }\n);\n\ntype Props = {\n  className?: any;\n  data: any;\n  onClick: (slug: string) => void;\n  active: string | string[];\n};\nexport const HorizontalMenu: React.FC<Props> = ({\n  data,\n  className,\n  onClick,\n  active,\n}) => {\n  const handler = (children) => {\n      return children?.map((subOption) => {\n        if (subOption.parent_id) return;\n        if (!subOption.children) {\n          return (\n            <Tree\n              key={subOption.name}\n              name={subOption.name}\n              icon={subOption.icon}\n              depth=\"child\"\n              onClick={() => onClick(subOption.slug)}\n              isOpen={active === subOption.slug}\n            />\n          );\n        }\n        return (\n          <Tree\n            key={subOption.name}\n            name={subOption.name}\n            icon={subOption.icon}\n            depth=\"parent\"\n            onClick={() => onClick(subOption.slug)}\n            // onClick={() => subOption.children ? null : onClick(subOption.slug)}\n            isOpen={\n              active === subOption.slug ||\n              subOption.children.some((item) => item.slug === active)\n            }\n          >\n            {handler(subOption.children)}\n          </Tree>\n        );\n      });\n  };\n  return <>{handler(data)}</>;\n};\n"]},"metadata":{},"sourceType":"module"}