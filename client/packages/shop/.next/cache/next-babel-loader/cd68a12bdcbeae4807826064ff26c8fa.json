{"ast":null,"code":"import gql from 'graphql-tag';\nexport const UPDATE_USER = gql`\n  mutation UpdateUser(\n    $id: ID!, \n    $name: String!,\n    $email: String,\n    $lenguage: String,\n  ) { updateUserNameEmailAndLenguage(\n      id: $id, \n      name: $name,\n      email: $email,\n      lenguage: $lenguage,\n    ) {\n    status\n      message\n    }\n  }\n`;\nexport const UPDATE_USER_WORK_INFO = gql`\n  mutation UpdateUserWorkInfo(\n    $id: ID!, \n    $isWorking: Boolean,\n    $startedWorkTime: String,\n    $stoppedWorkTime: String,\n    $ratePerHour: Int,\n    $logDescription: String,\n    $totalWorkingMinutesPerWeek: Int,\n    $totalSalaryToPayWeekly: Int,\n    $advancedSalaryPaid: Int,\n    $taskRelated: String,\n    $role: String\n  ) { updateUserWorkInfo(\n      id: $id, \n      isWorking: $isWorking,\n      startedWorkTime: $startedWorkTime,\n      stoppedWorkTime: $stoppedWorkTime,\n      ratePerHour: $ratePerHour,\n      logDescription: $logDescription,\n      totalWorkingMinutesPerWeek: $totalWorkingMinutesPerWeek,\n      totalSalaryToPayWeekly: $totalSalaryToPayWeekly,\n      advancedSalaryPaid: $advancedSalaryPaid,\n      taskRelated: $taskRelated,\n      role: $role\n    ) {\n    status\n      message\n    }\n  }\n`;\nexport const UPDATE_USER_LOGS = gql`\n  mutation UpdateUserLogs(\n    $id: ID!, \n    $logs: any,\n  ) { updateUserLogs(\n      id: $id, \n      logs: $logs,\n    ) {\n    status\n      message\n    }\n  }\n`;\nexport const UPDATE_USER_TODO_TASKS = gql`\n  mutation UpdateUserTasks(\n    $id: ID!, \n    $taskId: String,\n    $description: String,\n    $startDate: String,\n    $finishDate: String,\n    $plannedDate: String,\n    $isRepetitived: Boolean,\n    $completationTimes: String,\n    $workedHours: String,\n    $isDone: Boolean\n  ) { updateUserTasks(\n      id: $id, \n      taskId: $taskId,\n      description: $description,\n      startDate: $startDate,\n      finishDate: $finishDate,\n      plannedDate: $plannedDate,\n      isRepetitived: $isRepetitived,\n      completationTimes: $completationTimes,\n      workedHours: $workedHours,\n      isDone: $isDone\n    ) {\n    status\n      message\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/graphql/mutation/user.ts"],"names":["gql","UPDATE_USER","UPDATE_USER_WORK_INFO","UPDATE_USER_LOGS","UPDATE_USER_TODO_TASKS"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,WAAW,GAAGD,GAAI;;;;;;;;;;;;;;;;CAAxB;AAkBP,OAAO,MAAME,qBAAqB,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlC;AAgCP,OAAO,MAAMG,gBAAgB,GAAGH,GAAI;;;;;;;;;;;;CAA7B;AAcP,OAAO,MAAMI,sBAAsB,GAAGJ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAnC","sourcesContent":["import gql from 'graphql-tag';\n\nexport const UPDATE_USER = gql`\n  mutation UpdateUser(\n    $id: ID!, \n    $name: String!,\n    $email: String,\n    $lenguage: String,\n  ) { updateUserNameEmailAndLenguage(\n      id: $id, \n      name: $name,\n      email: $email,\n      lenguage: $lenguage,\n    ) {\n    status\n      message\n    }\n  }\n`;\n\nexport const UPDATE_USER_WORK_INFO = gql`\n  mutation UpdateUserWorkInfo(\n    $id: ID!, \n    $isWorking: Boolean,\n    $startedWorkTime: String,\n    $stoppedWorkTime: String,\n    $ratePerHour: Int,\n    $logDescription: String,\n    $totalWorkingMinutesPerWeek: Int,\n    $totalSalaryToPayWeekly: Int,\n    $advancedSalaryPaid: Int,\n    $taskRelated: String,\n    $role: String\n  ) { updateUserWorkInfo(\n      id: $id, \n      isWorking: $isWorking,\n      startedWorkTime: $startedWorkTime,\n      stoppedWorkTime: $stoppedWorkTime,\n      ratePerHour: $ratePerHour,\n      logDescription: $logDescription,\n      totalWorkingMinutesPerWeek: $totalWorkingMinutesPerWeek,\n      totalSalaryToPayWeekly: $totalSalaryToPayWeekly,\n      advancedSalaryPaid: $advancedSalaryPaid,\n      taskRelated: $taskRelated,\n      role: $role\n    ) {\n    status\n      message\n    }\n  }\n`;\n\nexport const UPDATE_USER_LOGS = gql`\n  mutation UpdateUserLogs(\n    $id: ID!, \n    $logs: any,\n  ) { updateUserLogs(\n      id: $id, \n      logs: $logs,\n    ) {\n    status\n      message\n    }\n  }\n`;\n\nexport const UPDATE_USER_TODO_TASKS = gql`\n  mutation UpdateUserTasks(\n    $id: ID!, \n    $taskId: String,\n    $description: String,\n    $startDate: String,\n    $finishDate: String,\n    $plannedDate: String,\n    $isRepetitived: Boolean,\n    $completationTimes: String,\n    $workedHours: String,\n    $isDone: Boolean\n  ) { updateUserTasks(\n      id: $id, \n      taskId: $taskId,\n      description: $description,\n      startDate: $startDate,\n      finishDate: $finishDate,\n      plannedDate: $plannedDate,\n      isRepetitived: $isRepetitived,\n      completationTimes: $completationTimes,\n      workedHours: $workedHours,\n      isDone: $isDone\n    ) {\n    status\n      message\n    }\n  }\n`;\n\n"]},"metadata":{},"sourceType":"module"}