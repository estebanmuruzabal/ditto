{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ORDERS } from 'graphql/query/order.query';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { DesktopView, MobileView, OrderBox, OrderListWrapper, OrderList, OrderDetailsWrapper, Title, ImageWrapper, ItemWrapper, ItemDetails, ItemName, ItemSize, ItemSalePrice, ItemPrice, NoOrderFound } from './order.style';\nimport OrderDetails from './order-details/order-details';\nimport OrderCard from './order-card/order-card';\nimport OrderCardMobile from './order-card/order-card-mobile';\nimport useComponentSize from 'utils/useComponentSize';\nimport { FormattedMessage } from 'react-intl';\nimport { SHOP_IMAGE_HOST } from \"../../../utils/images-path\";\nvar progressData = ['Order Received', 'Order On The Way', 'Order Delivered'];\nvar orderTableColumns = [{\n  title: __jsx(FormattedMessage, {\n    id: \"cartItems\",\n    defaultMessage: \"Items\"\n  }),\n  dataIndex: '',\n  key: 'items',\n  width: 250,\n  ellipsis: true,\n  render: function render(text, record) {\n    return __jsx(ItemWrapper, null, __jsx(ImageWrapper, null, __jsx(\"img\", {\n      src: SHOP_IMAGE_HOST + record.image,\n      alt: record.name\n    })), __jsx(ItemDetails, null, __jsx(ItemName, null, record.name), __jsx(ItemSize, null, record.unit), __jsx(ItemPrice, null, \"$\", record.price), record.sale_price ? __jsx(ItemSalePrice, null, \"$\", record.sale_price) : \"\"));\n  }\n}, {\n  title: __jsx(FormattedMessage, {\n    id: \"intlTableColTitle2\",\n    defaultMessage: \"Quantity\"\n  }),\n  dataIndex: 'quantity',\n  key: 'quantity',\n  align: 'center',\n  width: 100\n}, {\n  title: __jsx(FormattedMessage, {\n    id: \"intlTableColTitle3\",\n    defaultMessage: \"Price\"\n  }),\n  dataIndex: '',\n  key: 'price',\n  align: 'right',\n  width: 100,\n  render: function render(text, record) {\n    return __jsx(\"p\", null, \"$\", record.price * record.quantity);\n  }\n}];\n\nvar OrdersContent = function OrdersContent() {\n  var _useState = useState(null),\n      order = _useState[0],\n      setOrder = _useState[1];\n\n  var _useState2 = useState(''),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  var _useComponentSize = useComponentSize(),\n      _useComponentSize2 = _slicedToArray(_useComponentSize, 2),\n      targetRef = _useComponentSize2[0],\n      size = _useComponentSize2[1];\n\n  var orderListHeight = size.height - 79;\n\n  var _useQuery = useQuery(GET_ORDERS),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  useEffect(function () {\n    if (data && data.getUserOrders.length !== 0) {\n      setOrder(data.getUserOrders[0]);\n      setActive(data.getUserOrders[0].id);\n    }\n  }, [data]);\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Loading...'\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message\n    });\n  }\n\n  ;\n  console.dir(order);\n  var myOrder = data.getUserOrders;\n\n  var handleClick = function handleClick(order) {\n    setOrder(order);\n    setActive(order.id);\n  };\n\n  return __jsx(OrderBox, null, __jsx(DesktopView, null, __jsx(OrderListWrapper, {\n    style: {\n      height: size.height\n    }\n  }, __jsx(Title, {\n    style: {\n      padding: '0 20px'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"intlOrderPageTitle\",\n    defaultMessage: \"My Order\"\n  })), __jsx(Scrollbars, {\n    universal: true,\n    autoHide: true,\n    autoHeight: true,\n    autoHeightMin: 420,\n    autoHeightMax: isNaN(orderListHeight) ? 500 : orderListHeight\n  }, __jsx(OrderList, null, myOrder.length !== 0 ? myOrder.map(function (current, index) {\n    return __jsx(OrderCard, {\n      key: index,\n      orderId: current.order_code,\n      className: current.id === active ? 'active' : '',\n      status: current.status,\n      date: current.datetime.split('2020').shift(),\n      amount: current.total,\n      onClick: function onClick() {\n        handleClick(current);\n      }\n    });\n  }) : __jsx(NoOrderFound, null, __jsx(FormattedMessage, {\n    id: \"intlNoOrderFound\",\n    defaultMessage: \"No order found\"\n  }))))), __jsx(OrderDetailsWrapper, {\n    ref: targetRef\n  }, __jsx(Title, {\n    style: {\n      padding: '0 20px'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"orderDetailsText\",\n    defaultMessage: \"Order Details\"\n  })), order && __jsx(OrderDetails, {\n    id: order.id,\n    progressStatus: order.status,\n    progressData: order.order_tracking,\n    number: order.contact_number,\n    address: order.delivery_address,\n    subtotal: order.sub_total,\n    discount: order.discount_amount,\n    grandTotal: order.total,\n    tableData: order.order_products,\n    columns: orderTableColumns,\n    deliveryMethod: order.delivery_method\n  }))), __jsx(MobileView, null, __jsx(OrderList, null, __jsx(OrderCardMobile, {\n    orders: myOrder,\n    className: order && order.id === active ? 'active' : '',\n    progressData: progressData,\n    columns: orderTableColumns,\n    onClick: function onClick() {\n      handleClick(order);\n    }\n  }))));\n};\n\nexport default OrdersContent;","map":null,"metadata":{},"sourceType":"module"}