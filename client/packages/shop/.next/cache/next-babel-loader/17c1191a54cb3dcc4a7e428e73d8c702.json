{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Table from 'rc-table';\nimport Router from 'next/router';\nimport { DeliveryInfo, DeliveryAddress, Address, CostCalculation, PriceRow, Price, Contact, ProgressWrapper, OrderTableWrapper, OrderTable, StyledLink } from './order-details.style';\nimport Progress from 'components/progress-box/progress-box';\nimport { CURRENCY } from 'utils/constant';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Title } from \"../order.style\";\nimport moment from 'moment';\nvar components = {\n  table: OrderTable\n};\n\nvar OrderDetails = function OrderDetails(_ref) {\n  var tableData = _ref.tableData,\n      columns = _ref.columns,\n      address = _ref.address,\n      number = _ref.number,\n      id = _ref.id,\n      progressStatus = _ref.progressStatus,\n      deliveryDate = _ref.deliveryDate,\n      progressData = _ref.progressData,\n      subtotal = _ref.subtotal,\n      discount = _ref.discount,\n      grandTotal = _ref.grandTotal,\n      deliveryMethod = _ref.deliveryMethod,\n      ref = _ref.ref;\n  var intl = useIntl();\n\n  var handleInvocie = function handleInvocie() {\n    Router.push({\n      pathname: '/order-received',\n      query: {\n        itemId: id\n      }\n    });\n    return false;\n  };\n\n  var calculateDeliveryCharge = function calculateDeliveryCharge() {\n    var _deliveryMethod$name, _charge;\n\n    if (!(deliveryMethod === null || deliveryMethod === void 0 ? void 0 : deliveryMethod.name)) return 0;\n    var charge = deliveryMethod === null || deliveryMethod === void 0 ? void 0 : (_deliveryMethod$name = deliveryMethod.name) === null || _deliveryMethod$name === void 0 ? void 0 : _deliveryMethod$name.split(\"$\");\n    var chargeFormatted = (_charge = charge[(charge === null || charge === void 0 ? void 0 : charge.length) - 1]) === null || _charge === void 0 ? void 0 : _charge.replace(/\\D/g, '');\n    return Number(chargeFormatted);\n  };\n\n  var getDeliverySchedule = function getDeliverySchedule(details) {\n    var word = 'Horario';\n    var index = details.indexOf(word); // 8\n\n    var length = word.length; // 7\n\n    return details.slice(index + length);\n  };\n\n  var deliveryDateAndTime = \"\".concat(getDeliverySchedule(deliveryMethod === null || deliveryMethod === void 0 ? void 0 : deliveryMethod.details), \" - \").concat(moment(deliveryDate).format('DD MMM'));\n  return __jsx(React.Fragment, null, __jsx(DeliveryInfo, null, __jsx(DeliveryAddress, null, __jsx(\"h3\", null, __jsx(FormattedMessage, {\n    id: \"deliveryMethodTitle\",\n    defaultMessage: \"Delivery Method\"\n  })), __jsx(Contact, null, deliveryMethod === null || deliveryMethod === void 0 ? void 0 : deliveryMethod.name), __jsx(\"h3\", null, __jsx(FormattedMessage, {\n    id: \"contactNumberTitle\",\n    defaultMessage: \"Contact Number\"\n  })), __jsx(Contact, null, number), (deliveryMethod === null || deliveryMethod === void 0 ? void 0 : deliveryMethod.isPickUp) ? __jsx(React.Fragment, null, __jsx(\"h3\", null, __jsx(FormattedMessage, {\n    id: \"pickUpDateTitle\",\n    defaultMessage: \"Pickup Date\"\n  })), __jsx(Contact, null, deliveryDateAndTime || '-'), __jsx(\"h3\", null, __jsx(FormattedMessage, {\n    id: \"deliveryAddressTitle\",\n    defaultMessage: \"Delivery Address\"\n  })), __jsx(Address, null, address)) : __jsx(React.Fragment, null, __jsx(\"h3\", null, __jsx(FormattedMessage, {\n    id: \"deliveryDateTitle\",\n    defaultMessage: \"Delivery Date\"\n  })), __jsx(Contact, null, deliveryDateAndTime || '-'), __jsx(\"h3\", null, __jsx(FormattedMessage, {\n    id: \"deliveryAddressTitle\",\n    defaultMessage: \"Delivery Address\"\n  })), __jsx(Address, null, address))), __jsx(CostCalculation, null, __jsx(PriceRow, null, __jsx(FormattedMessage, {\n    id: \"subTotal\",\n    defaultMessage: \"Sub total\"\n  }), __jsx(Price, null, CURRENCY, subtotal)), __jsx(PriceRow, null, __jsx(FormattedMessage, {\n    id: \"intlOrderDetailsDiscount\",\n    defaultMessage: \"Discount\"\n  }), __jsx(Price, null, CURRENCY, discount !== null ? discount : 0)), __jsx(PriceRow, null, __jsx(FormattedMessage, {\n    id: \"deliveryChargeText\",\n    defaultMessage: \"Delivery charge\"\n  }), __jsx(Price, null, CURRENCY, calculateDeliveryCharge())), __jsx(PriceRow, {\n    className: \"grandTotal\"\n  }, __jsx(FormattedMessage, {\n    id: \"totalText\",\n    defaultMessage: \"Total\"\n  }), __jsx(Price, null, CURRENCY, grandTotal)))), __jsx(Title, {\n    style: {\n      padding: '0 20px'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"orderTrackingText\",\n    defaultMessage: \"Order Tracking\"\n  })), __jsx(ProgressWrapper, null, __jsx(Progress, {\n    data: progressData,\n    status: progressStatus\n  })), __jsx(OrderTableWrapper, null, __jsx(Table, {\n    columns: columns,\n    data: tableData,\n    rowKey: function rowKey(record) {\n      return record.id;\n    },\n    components: components,\n    className: \"orderDetailsTable\" // scroll={{ y: 350 }}\n\n  })), __jsx(StyledLink, {\n    onClick: handleInvocie\n  }, intl.formatMessage({\n    id: 'getInvoiceId',\n    defaultMessage: 'Get invoice'\n  })));\n};\n\nexport default OrderDetails;","map":null,"metadata":{},"sourceType":"module"}