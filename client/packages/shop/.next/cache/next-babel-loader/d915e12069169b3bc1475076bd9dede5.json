{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { Col } from 'react-styled-flexboxgrid';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { Label } from 'components/forms/label';\nimport OrderReceivedWrapper, { OrderReceivedContainer, OrderDetails, BlockTitle, Text, ListItem, ListTitle, ListDes, ButtonText, Row, InputUpper } from './your-plants.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { OrderListWrapper } from 'features/user-profile/order/order.style';\nimport { Button } from 'components/button/button';\nimport { ADD_PLANT } from 'graphql/query/plants.query';\n\nconst YourPlants = props => {\n  var _data$getUser2;\n\n  const router = useRouter();\n  const intl = useIntl();\n  const {\n    0: name,\n    1: setPlantName\n  } = useState('');\n  const {\n    0: controllerId,\n    1: setControllerID\n  } = useState('');\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_LOGGED_IN_USER);\n  const [addPlant] = useMutation(ADD_PLANT);\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Cargando...'\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message\n    });\n  }\n\n  ;\n\n  const handleAddClick = () => {\n    var _data$getUser;\n\n    addPlant({\n      variables: {\n        id: data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : _data$getUser.id,\n        name,\n        controllerId: Number(controllerId)\n      }\n    });\n  };\n\n  const userPlants = data === null || data === void 0 ? void 0 : (_data$getUser2 = data.getUser) === null || _data$getUser2 === void 0 ? void 0 : _data$getUser2.plants;\n  return __jsx(OrderReceivedWrapper, null, __jsx(OrderReceivedContainer, null, __jsx(Link, {\n    href: \"/profile\"\n  }, __jsx(\"a\", {\n    className: \"home-btn\"\n  }, __jsx(FormattedMessage, {\n    id: \"backProfileBtn\",\n    defaultMessage: \"Back to Profile\"\n  }))), __jsx(OrderDetails, null, __jsx(BlockTitle, null, __jsx(FormattedMessage, {\n    id: \"yourPlants\",\n    defaultMessage: \"Your Plants\"\n  })), userPlants === null || userPlants === void 0 ? void 0 : userPlants.map(plant => {\n    return __jsx(OrderListWrapper, null, __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, {\n      bold: true\n    }, __jsx(FormattedMessage, {\n      id: \"plantName\",\n      defaultMessage: \"plantName\"\n    }))), __jsx(ListDes, null, __jsx(Text, null, plant === null || plant === void 0 ? void 0 : plant.name, \" \"))), __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, {\n      bold: true\n    }, __jsx(FormattedMessage, {\n      id: \"tempId\",\n      defaultMessage: \"tempId\"\n    }))), __jsx(ListDes, null, __jsx(Text, null, plant === null || plant === void 0 ? void 0 : plant.temperatura, \" \"))), __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, {\n      bold: true\n    }, __jsx(FormattedMessage, {\n      id: \"humedadId\",\n      defaultMessage: \"humedadId\"\n    }))), __jsx(ListDes, null, __jsx(Text, null, plant === null || plant === void 0 ? void 0 : plant.humedad, \" \"))));\n  }), __jsx(BlockTitle, null, __jsx(FormattedMessage, {\n    id: \"addController\",\n    defaultMessage: \"Your Plants\"\n  })), __jsx(Row, {\n    style: {\n      alignItems: 'flex-end',\n      marginBottom: '50px'\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    lg: 5\n  }, __jsx(Label, null, __jsx(FormattedMessage, {\n    id: \"plantNameField\",\n    defaultMessage: \"Name of the plant\"\n  })), __jsx(InputUpper, {\n    type: \"text\",\n    label: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => setPlantName(e.target.value),\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    marginBottom: \"10px\" // intlInputLabelId=\"profileNameField\"\n\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    lg: 5\n  }, __jsx(Label, null, __jsx(FormattedMessage, {\n    id: \"controllerIdField\",\n    defaultMessage: \"ID of the controller\"\n  })), __jsx(InputUpper, {\n    type: \"number\",\n    label: \"Controller ID\",\n    name: \"controllerId\",\n    value: controllerId,\n    onChange: e => setControllerID(e.target.value),\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    marginBottom: \"10px\" // intlInputLabelId=\"profileNameField\"\n\n  }))), __jsx(Button, {\n    className: \"cart-button\",\n    variant: \"secondary\",\n    borderRadius: 100,\n    onClick: handleAddClick\n  }, __jsx(ButtonText, null, __jsx(FormattedMessage, {\n    id: \"addPlantButton\",\n    defaultMessage: \"Add plant\"\n  }))))));\n};\n\nexport default YourPlants;","map":null,"metadata":{},"sourceType":"module"}