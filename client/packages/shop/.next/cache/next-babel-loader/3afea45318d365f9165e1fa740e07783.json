{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/components/contact-card/contact-card.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { ErrorMessage, Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport MaskedInput from 'react-text-mask';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { Button } from 'components/button/button';\nimport { ADD_PHONENUMBER, UPDATE_PHONENUMBER } from 'graphql/mutation/phone';\nimport { FieldWrapper, Heading } from './contact-card.style';\nimport { FormattedMessage } from 'react-intl';\nconst ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required('Number is required')\n});\n\nconst CreateOrUpdateContact = ({\n  item\n}) => {\n  const ContactItem = item.item;\n  const ID = item.id;\n  let newContactid = null;\n  const initialValues = {\n    id: ContactItem.id || null,\n    type: ContactItem.type || 'secondary',\n    number: ContactItem.number || ''\n  };\n  const [addPhoneMutation] = useMutation(ADD_PHONENUMBER);\n  const [updatePhoneMutation] = useMutation(UPDATE_PHONENUMBER);\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n\n  const handleSubmit = async values => {\n    if (Object.keys(ContactItem).length === 0) {\n      const {\n        data\n      } = await addPhoneMutation({\n        variables: {\n          id: ID,\n          number: values.number\n        }\n      });\n      newContactid = data.addPhoneNumber.id;\n      values.id = newContactid;\n      dispatch({\n        type: 'ADD_CONTACT',\n        payload: {\n          values: values\n        }\n      });\n      closeModal();\n      /*if (typeof window !== 'undefined') {\n        window.location.reload(false);\n      }*/\n    } else {\n      const updatePhone = await updatePhoneMutation({\n        variables: {\n          id: ID,\n          phoneId: ContactItem.id ? ContactItem.id : newContactid,\n          number: values.number\n        }\n      });\n      dispatch({\n        type: 'UPDATE_CONTACT',\n        payload: {\n          values: values,\n          id: ContactItem.id ? ContactItem.id : newContactid\n        }\n      });\n      closeModal();\n    }\n  };\n\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: ContactValidationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    handleChange,\n    handleBlur\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, ContactItem ? __jsx(FormattedMessage, {\n    id: \"editContactId\",\n    defaultMessage: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 28\n    }\n  }) : __jsx(FormattedMessage, {\n    id: \"addNewContactId\",\n    defaultMessage: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 88\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(MaskedInput, {\n    mask: [/[0-9]/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/],\n    className: \"form-control\",\n    placeholder: \"Enter a phone number\",\n    guide: false,\n    id: \"my-input-id\",\n    value: values.number,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    name: \"number\",\n    render: (ref, props) => __jsx(StyledInput, _extends({\n      ref: ref\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })), __jsx(ErrorMessage, {\n    name: \"number\",\n    component: StyledError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    style: {\n      width: '100%',\n      height: '44px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"savedContactId\",\n    defaultMessage: \"Save Contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default CreateOrUpdateContact;\nconst StyledInput = styled.input.withConfig({\n  displayName: \"contact-card__StyledInput\",\n  componentId: \"sc-7lusqt-0\"\n})([\"width:100%;height:54px;border-radius:\", \";font-family:\", \";border:1px solid \", \";color:\", \";font-size:16px;line-height:19px;font-weight:\", \";padding:0 18px;box-sizing:border-box;transition:border-color 0.25s ease;&:hover,&:focus{outline:0;}&:focus{border-color:\", \";}&::placeholder{color:\", \";}\"], themeGet('radii.base', '6px'), themeGet('fonts.body', 'Lato, sans-serif'), themeGet('colors.gray.700', '#e6e6e6'), themeGet('colors.text.bold', '#0D1136'), themeGet('fontWeights.regular', '400'), themeGet('colors.primary.regular', '#009e7f'), themeGet('colors.text.regular', '#77798C'));\nconst StyledError = styled.div.withConfig({\n  displayName: \"contact-card__StyledError\",\n  componentId: \"sc-7lusqt-1\"\n})([\"color:red;padding-bottom:10px;margin-top:-5px;\"]);","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/components/contact-card/contact-card.tsx"],"names":["React","useContext","styled","themeGet","Yup","closeModal","ErrorMessage","Formik","Form","useMutation","MaskedInput","ProfileContext","Button","ADD_PHONENUMBER","UPDATE_PHONENUMBER","FieldWrapper","Heading","FormattedMessage","ContactValidationSchema","object","shape","number","string","required","CreateOrUpdateContact","item","ContactItem","ID","id","newContactid","initialValues","type","addPhoneMutation","updatePhoneMutation","state","dispatch","handleSubmit","values","Object","keys","length","data","variables","addPhoneNumber","payload","updatePhone","phoneId","handleChange","handleBlur","ref","props","StyledError","width","height","StyledInput","input","div"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { FormikProps, ErrorMessage, Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport MaskedInput from 'react-text-mask';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { Button } from 'components/button/button';\nimport { ADD_PHONENUMBER, UPDATE_PHONENUMBER } from 'graphql/mutation/phone';\nimport { FieldWrapper, Heading } from './contact-card.style';\nimport { FormattedMessage } from 'react-intl';\n\ntype Props = {\n  item?: any | null;\n  id?: any | null;\n};\n// Shape of form values\ntype FormValues = {\n  id?: any | null;\n  type?: string;\n  number?: string;\n};\n\nconst ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required('Number is required'),\n});\n\nconst CreateOrUpdateContact: React.FC<Props> = ({ item }) => {\n\n  const ContactItem = item.item;\n  const ID = item.id;\n  let newContactid = null;\n  const initialValues = {\n    id: ContactItem.id || null,\n    type: ContactItem.type || 'secondary',\n    number: ContactItem.number || '',\n  };\n  const [addPhoneMutation] = useMutation(ADD_PHONENUMBER);\n  const [updatePhoneMutation] = useMutation(UPDATE_PHONENUMBER);\n  const { state, dispatch } = useContext(ProfileContext);\n  const handleSubmit = async (values: FormValues) => {\n    if(Object.keys(ContactItem).length === 0){\n      const {data} = await addPhoneMutation({\n        variables: { \n          id: ID,\n          number: values.number\n        }\n      });\n      newContactid = data.addPhoneNumber.id\n      values.id = newContactid;\n      dispatch({ type: 'ADD_CONTACT', payload: {values: values }});\n      closeModal();\n      /*if (typeof window !== 'undefined') {\n        window.location.reload(false);\n      }*/\n    }else{\n      const updatePhone =  await updatePhoneMutation({\n        variables: { \n          id: ID,\n          phoneId: ContactItem.id ? ContactItem.id : newContactid,\n          number: values.number\n        },\n      });\n      dispatch({ type: 'UPDATE_CONTACT', payload: {values: values, id: ContactItem.id ? ContactItem.id : newContactid }});\n      closeModal();\n    }\n   \n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={ContactValidationSchema}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur\n      }: FormikProps<FormValues>) => (\n        <Form>\n          <Heading>\n            {ContactItem ? <FormattedMessage id=\"editContactId\" defaultMessage=\"\" /> : <FormattedMessage id=\"addNewContactId\" defaultMessage=\"\" />}\n          </Heading>\n          <FieldWrapper>\n            <MaskedInput\n              mask={[\n                /[0-9]/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n              ]}\n              className='form-control'\n              placeholder='Enter a phone number'\n              guide={false}\n              id='my-input-id'\n              value={values.number}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name='number'\n              render={(ref: any, props: {}) => (\n                <StyledInput ref={ref} {...props} />\n              )}\n            />\n          </FieldWrapper>\n          <ErrorMessage name='number' component={StyledError} />\n\n          <Button\n            type='submit'\n            style={{ width: '100%', height: '44px' }}\n          >\n            <FormattedMessage\n              id='savedContactId'\n              defaultMessage='Save Contact'\n            />\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateOrUpdateContact;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: ${themeGet('radii.base', '6px')};\n  font-family: ${themeGet('fonts.body', 'Lato, sans-serif')};\n  border: 1px solid ${themeGet('colors.gray.700', '#e6e6e6')};\n  color: ${themeGet('colors.text.bold', '#0D1136')};\n  font-size: 16px;\n  line-height: 19px;\n  font-weight: ${themeGet('fontWeights.regular', '400')};\n  padding: 0 18px;\n  box-sizing: border-box;\n  transition: border-color 0.25s ease;\n\n  &:hover,\n  &:focus {\n    outline: 0;\n  }\n\n  &:focus {\n    border-color: ${themeGet('colors.primary.regular', '#009e7f')};\n  }\n\n  &::placeholder {\n    color: ${themeGet('colors.text.regular', '#77798C')};\n  }\n`;\n\nconst StyledError = styled.div`\n  color: red;\n  padding-bottom: 10px;\n  margin-top: -5px;\n`;\n"]},"metadata":{},"sourceType":"module"}