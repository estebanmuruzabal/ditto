{"ast":null,"code":"var _jsxFileName = \"/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/components/forms/text-field.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { Input } from 'components/forms/input';\nconst FieldWrapper = styled.div.withConfig({\n  displayName: \"text-field__FieldWrapper\",\n  componentId: \"sc-1x5xpgo-0\"\n})([\"textarea{height:auto;min-height:171px;padding-top:15px;resize:none;}\"]);\nconst InputFeedback = styled.span.withConfig({\n  displayName: \"text-field__InputFeedback\",\n  componentId: \"sc-1x5xpgo-1\"\n})([\"font-family:\", \";font-size:\", \"px;font-weight:\", \";color:\", \";padding-top:10px;display:flex;justify-content:flex-end;\"], themeGet('fonts.body', 'sans-serif'), themeGet('fontSizes.sm', '13'), themeGet('fontWeights.regular', '400'), themeGet('colors.secondary.hover', '#FF282F')); // const Input = styled.input`\n//   width: 100%;\n//   height: 54px;\n//   border-radius: 6px;\n//   font-family: ${themeGet('fontFamily.0', 'Lato, sans-serif')};\n//   border: 1px solid ${themeGet('colors.gray.700', '#e6e6e6')};\n//   color: ${themeGet('colors.text.bold', '#0D1136')};\n//   font-size: ${themeGet('fontSizes.base', '15')}px;\n//   font-weight: ${themeGet('fontWeights.regular', '400')};\n//   line-height: 19px;\n//   padding: 0 18px;\n//   box-sizing: border-box;\n//   transition: border-color 0.25s ease;\n//   &:hover,\n//   &:focus {\n//     outline: 0;\n//   }\n//   &:focus {\n//     border-color: ${themeGet('colors.primary', '#009e7f')};\n//   }\n//   &::placeholder {\n//     color: ${themeGet('colors.text.regular', '#77798C')};\n//   }\n// `;\n\nconst TextField = (_ref) => {\n  let {\n    type,\n    id,\n    label,\n    error,\n    value,\n    onChange,\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"type\", \"id\", \"label\", \"error\", \"value\", \"onChange\", \"className\"]);\n\n  return __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, label && __jsx(\"label\", {\n    className: \"label\",\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, label), __jsx(Input, _extends({\n    id: id,\n    type: type,\n    value: value,\n    onChange: onChange\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  })), error && __jsx(InputFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, error));\n};\n\nexport default TextField;","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/components/forms/text-field.tsx"],"names":["React","styled","themeGet","Input","FieldWrapper","div","InputFeedback","span","TextField","type","id","label","error","value","onChange","className","props"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,MAAMC,YAAY,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,4EAAlB;AASA,MAAMC,aAAa,GAAGL,MAAM,CAACM,IAAV;AAAA;AAAA;AAAA,8HACFL,QAAQ,CAAC,YAAD,EAAe,YAAf,CADN,EAEJA,QAAQ,CAAC,cAAD,EAAiB,IAAjB,CAFJ,EAGFA,QAAQ,CAAC,qBAAD,EAAwB,KAAxB,CAHN,EAIRA,QAAQ,CAAC,wBAAD,EAA2B,SAA3B,CAJA,CAAnB,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAYA,MAAMM,SAA0B,GAAG,UAS7B;AAAA,MAT8B;AAClCC,IAAAA,IADkC;AAElCC,IAAAA,EAFkC;AAGlCC,IAAAA,KAHkC;AAIlCC,IAAAA,KAJkC;AAKlCC,IAAAA,KALkC;AAMlCC,IAAAA,QANkC;AAOlCC,IAAAA;AAPkC,GAS9B;AAAA,MADDC,KACC;;AACJ,SACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,IACJ;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAED,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KADH,CAFJ,EAOE,MAAC,KAAD;AAAO,IAAA,EAAE,EAAED,EAAX;AAAe,IAAA,IAAI,EAAED,IAArB;AAA2B,IAAA,KAAK,EAAEI,KAAlC;AAAyC,IAAA,QAAQ,EAAEC;AAAnD,KAAiEE,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPF,EAQGJ,KAAK,IAAI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBA,KAAhB,CARZ,CADF;AAYD,CAtBD;;AAwBA,eAAeJ,SAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { Input } from 'components/forms/input';\nconst FieldWrapper = styled.div`\n  textarea {\n    height: auto;\n    min-height: 171px;\n    padding-top: 15px;\n    resize: none;\n  }\n`;\n\nconst InputFeedback = styled.span`\n  font-family: ${themeGet('fonts.body', 'sans-serif')};\n  font-size: ${themeGet('fontSizes.sm', '13')}px;\n  font-weight: ${themeGet('fontWeights.regular', '400')};\n  color: ${themeGet('colors.secondary.hover', '#FF282F')};\n  padding-top: 10px;\n  display: flex;\n  justify-content: flex-end;\n`;\n// const Input = styled.input`\n//   width: 100%;\n//   height: 54px;\n//   border-radius: 6px;\n//   font-family: ${themeGet('fontFamily.0', 'Lato, sans-serif')};\n//   border: 1px solid ${themeGet('colors.gray.700', '#e6e6e6')};\n//   color: ${themeGet('colors.text.bold', '#0D1136')};\n//   font-size: ${themeGet('fontSizes.base', '15')}px;\n//   font-weight: ${themeGet('fontWeights.regular', '400')};\n//   line-height: 19px;\n//   padding: 0 18px;\n//   box-sizing: border-box;\n//   transition: border-color 0.25s ease;\n\n//   &:hover,\n//   &:focus {\n//     outline: 0;\n//   }\n\n//   &:focus {\n//     border-color: ${themeGet('colors.primary', '#009e7f')};\n//   }\n\n//   &::placeholder {\n//     color: ${themeGet('colors.text.regular', '#77798C')};\n//   }\n// `;\n\ntype Props = {\n  type?: string;\n  id: string;\n  label?: string;\n  error?: string;\n  value: string;\n  onChange: (key: any) => void;\n  className?: string;\n  [key: string]: unknown;\n};\nconst TextField: React.FC<Props> = ({\n  type,\n  id,\n  label,\n  error,\n  value,\n  onChange,\n  className,\n  ...props\n}) => {\n  return (\n    <FieldWrapper>\n      {label && (\n        <label className='label' htmlFor={id}>\n          {label}\n        </label>\n      )}\n\n      <Input id={id} type={type} value={value} onChange={onChange} {...props} />\n      {error && <InputFeedback>{error}</InputFeedback>}\n    </FieldWrapper>\n  );\n};\n\nexport default TextField;\n"]},"metadata":{},"sourceType":"module"}