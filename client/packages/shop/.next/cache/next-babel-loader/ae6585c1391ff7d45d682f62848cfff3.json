{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Col } from 'react-styled-flexboxgrid';\nimport { openModal } from '@redq/reuse-modal';\nimport { WorkContext } from 'contexts/work/work.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { DELETE_ADDRESS, SETPRIMARY_ADDRESS } from 'graphql/mutation/address';\nimport { UPDATE_USER, UPDATE_USER_WORK_INFO } from 'graphql/mutation/user';\nimport { CHANGE_PASSWORD } from 'graphql/mutation/changePassword';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_PHONENUMBER, SETPRIMARY_PHONENUMBER } from 'graphql/mutation/phone';\nimport { SettingsForm, SettingsFormContent, HeadingSection, Title, Row } from './work.style';\nimport { UPDATE_ME } from 'graphql/mutation/me';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Label } from 'components/forms/label';\nimport Switch from 'components/switch/switch';\nimport moment from 'moment';\n\nvar WorkContent = function WorkContent(_ref) {\n  var _state$workInfo, _state$workInfo2, _state$workInfo3, _state$workInfo4, _state$workInfo5, _state$workInfo7, _state$workInfo7$rate, _state$workInfo8, _state$workInfo9, _state$workInfo9$tota, _state$workInfo10, _state$workInfo10$tas;\n\n  var deviceType = _ref.deviceType;\n\n  var _useContext = useContext(WorkContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(''),\n      userinfoMsg = _useState[0],\n      setUserinfoMsg = _useState[1];\n\n  var _useState2 = useState(false),\n      isChambeanding = _useState2[0],\n      setChamba = _useState2[1];\n\n  var _useState3 = useState(''),\n      passwordChangeMsg = _useState3[0],\n      setPasswordChangeMsg = _useState3[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      isAuthenticated = _React$useContext.authState.isAuthenticated,\n      authDispatch = _React$useContext.authDispatch;\n\n  var _useMutation = useMutation(UPDATE_ME),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateMeMutation = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_CARD),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deletePaymentCardMutation = _useMutation4[0];\n\n  var _useMutation5 = useMutation(UPDATE_USER),\n      _useMutation6 = _slicedToArray(_useMutation5, 1),\n      updateUserMutation = _useMutation6[0];\n\n  var _useMutation7 = useMutation(UPDATE_USER_WORK_INFO),\n      _useMutation8 = _slicedToArray(_useMutation7, 1),\n      updateUserInfoMutation = _useMutation8[0];\n\n  var _useMutation9 = useMutation(CHANGE_PASSWORD),\n      _useMutation10 = _slicedToArray(_useMutation9, 1),\n      changePasswordMutation = _useMutation10[0];\n\n  var _useMutation11 = useMutation(DELETE_PHONENUMBER),\n      _useMutation12 = _slicedToArray(_useMutation11, 1),\n      deletePhoneNumberMutation = _useMutation12[0];\n\n  var _useMutation13 = useMutation(SETPRIMARY_PHONENUMBER),\n      _useMutation14 = _slicedToArray(_useMutation13, 1),\n      setprimaryPhoneNumberMutation = _useMutation14[0];\n\n  var _useMutation15 = useMutation(SETPRIMARY_ADDRESS),\n      _useMutation16 = _slicedToArray(_useMutation15, 1),\n      setprimaryAddressMutation = _useMutation16[0];\n\n  var _useMutation17 = useMutation(DELETE_ADDRESS),\n      _useMutation18 = _slicedToArray(_useMutation17, 1),\n      deleteAddressMutation = _useMutation18[0];\n\n  var intl = useIntl();\n  var delivery_address = state.delivery_address,\n      card = state.card,\n      name = state.name,\n      email = state.email,\n      id = state.id,\n      phones = state.phones;\n  console.log(state); // const handleChange = (isWorking) => {\n  //   const { value, name } = e.target;\n  //   dispatch({\n  //     type: isWorking ? 'HANDLE_WORK_START_CHANGE' : 'HANDLE_WORK_STOP_CHANGE',\n  //     payload: { value, field: name },\n  //   });\n  // };\n\n  var updateUserWorkInfoMutation = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(logDescription) {\n      var workInfo, id, isWorking, startedWorkTime, stoppedWorkTime, ratePerHour, totalWorkingMinutesPerWeek, totalSalaryToPayWeekly, advancedSalaryPaid, taskRelated;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              workInfo = state.workInfo, id = state.id;\n              isWorking = workInfo.isWorking, startedWorkTime = workInfo.startedWorkTime, stoppedWorkTime = workInfo.stoppedWorkTime, ratePerHour = workInfo.ratePerHour, totalWorkingMinutesPerWeek = workInfo.totalWorkingMinutesPerWeek, totalSalaryToPayWeekly = workInfo.totalSalaryToPayWeekly, advancedSalaryPaid = workInfo.advancedSalaryPaid, taskRelated = workInfo.taskRelated;\n              _context.next = 4;\n              return updateUserInfoMutation({\n                variables: {\n                  id: id,\n                  isWorking: isWorking,\n                  startedWorkTime: startedWorkTime,\n                  stoppedWorkTime: stoppedWorkTime,\n                  ratePerHour: ratePerHour,\n                  logDescription: logDescription,\n                  totalWorkingMinutesPerWeek: totalWorkingMinutesPerWeek,\n                  totalSalaryToPayWeekly: totalSalaryToPayWeekly,\n                  advancedSalaryPaid: advancedSalaryPaid,\n                  taskRelated: taskRelated,\n                  role: state.role\n                }\n              });\n\n            case 4:\n              setUserinfoMsg('Update user work info successfully');\n              setTimeout(function () {\n                setUserinfoMsg('');\n              }, 8000);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateUserWorkInfoMutation(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var stopWorking = function stopWorking() {\n    var user = state;\n    if (!user.workInfo) user.workInfo = {};\n    user.workInfo.isWorking = false;\n    user.workInfo.stoppedWorkTime = new Date().toLocaleString('en-US', {\n      timeZone: 'America/Argentina/Buenos_Aires'\n    });\n    var startedWorkTime = moment(new Date(user.workInfo.startedWorkTime));\n    var stoppedWorkTime = moment(new Date(user.workInfo.stoppedWorkTime));\n    var workedInMinutes = stoppedWorkTime.diff(startedWorkTime, 'minutes');\n    var ratePerMinute = user.workInfo.ratePerHour / 60;\n    user.workInfo.totalWorkingMinutesPerWeek += workedInMinutes;\n    user.workInfo.totalSalaryToPayWeekly = Number(user.workInfo.totalWorkingMinutesPerWeek) * Number(ratePerMinute) - Number(user.workInfo.advancedSalaryPaid); // user.logs.push({\n    //   logDescription: ,\n    //   timestamp: new Date().toLocaleString('en-US', { timeZone: 'America/Argentina/Buenos_Aires' })\n    // });\n\n    dispatch({\n      type: 'HANDLE_WORK_CHANGE',\n      payload: {\n        workInfo: user.workInfo,\n        logs: user.logs\n      }\n    });\n    updateUserWorkInfoMutation(\"finished working.\");\n  };\n\n  var startWorking = function startWorking() {\n    var user = state;\n    if (!user.workInfo) user.workInfo = {};\n    user.workInfo.isWorking = true;\n    user.workInfo.startedWorkTime = new Date().toLocaleString('en-US', {\n      timeZone: 'America/Argentina/Buenos_Aires'\n    });\n    user.workInfo.stoppedWorkTime = null;\n    user.workInfo.ratePerHour = 300; // user.logs.push({\n    //   logDescription: ,\n    //   timestamp: new Date().toLocaleString('en-US', { timeZone: 'America/Argentina/Buenos_Aires' })\n    // })\n\n    dispatch({\n      type: 'HANDLE_WORK_CHANGE',\n      payload: {\n        workInfo: user.workInfo,\n        logs: user.logs\n      }\n    });\n    updateUserWorkInfoMutation(\"started working.\");\n  }; // const handleChange = (e) => {\n  //   const { value, name } = e.target;\n  //   dispatch({\n  //     type: 'HANDLE_ON_INPUT_CHANGE',\n  //     payload: { value, field: name },\n  //   });\n  // };\n  // Add or edit modal\n\n\n  var handleModal = function handleModal(modalComponent) {\n    var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'add-address-modal';\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  console.log(\"working info changed:\", state.workInfo);\n  var h = ((_state$workInfo = state.workInfo) === null || _state$workInfo === void 0 ? void 0 : _state$workInfo.totalWorkingMinutesPerWeek) / 60 | 0;\n  var m = ((_state$workInfo2 = state.workInfo) === null || _state$workInfo2 === void 0 ? void 0 : _state$workInfo2.totalWorkingMinutesPerWeek) % 60 | 0;\n  var subtotalSalario = Number((_state$workInfo3 = state.workInfo) === null || _state$workInfo3 === void 0 ? void 0 : _state$workInfo3.totalWorkingMinutesPerWeek) / 60 * Number((_state$workInfo4 = state.workInfo) === null || _state$workInfo4 === void 0 ? void 0 : _state$workInfo4.ratePerHour);\n  return __jsx(SettingsForm, null, __jsx(SettingsFormContent, null, __jsx(HeadingSection, null, __jsx(Title, null, __jsx(FormattedMessage, {\n    id: \"workPageTitle\",\n    defaultMessage: \"Ditto Farm\"\n  }))), __jsx(Col, {\n    style: {\n      alignItems: 'flex-end',\n      marginBottom: '50px'\n    }\n  }, __jsx(Row, {\n    style: {\n      marginBottom: '15px'\n    }\n  }, __jsx(Switch, {\n    label: \"Usted se encuentra: \".concat(((_state$workInfo5 = state.workInfo) === null || _state$workInfo5 === void 0 ? void 0 : _state$workInfo5.isWorking) ? 'Chambeando' : 'Vagando'),\n    disabled: false,\n    labelPosition: 'right' // className,\n    ,\n    onUpdate: function onUpdate() {\n      var _state$workInfo6;\n\n      return ((_state$workInfo6 = state.workInfo) === null || _state$workInfo6 === void 0 ? void 0 : _state$workInfo6.isWorking) ? stopWorking() : startWorking();\n    } // style\n\n  })), __jsx(Row, null, __jsx(Label, {\n    style: {\n      marginRight: '15px',\n      minWidth: '200px'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileNameField\",\n    defaultMessage: \"Your Name\"\n  })), __jsx(Label, null, state.name)), __jsx(Row, null, __jsx(Label, {\n    style: {\n      marginRight: '15px',\n      minWidth: '200px'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"workedHours\",\n    defaultMessage: \"workedHours\"\n  })), __jsx(Label, null, \"\".concat(h, \":\").concat(Number(m) >= 9 ? m : '0' + m, \" hs\"))), __jsx(Row, null, __jsx(Label, {\n    style: {\n      marginRight: '15px',\n      minWidth: '200px'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"salaryPerHour\",\n    defaultMessage: \"salaryPerHour\"\n  })), __jsx(Label, null, \"$\".concat(((_state$workInfo7 = state.workInfo) === null || _state$workInfo7 === void 0 ? void 0 : (_state$workInfo7$rate = _state$workInfo7.ratePerHour) === null || _state$workInfo7$rate === void 0 ? void 0 : _state$workInfo7$rate.toFixed(2)) || '-'))), __jsx(Row, null, __jsx(Label, {\n    style: {\n      marginRight: '15px',\n      minWidth: '200px'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"subtotalSalary\",\n    defaultMessage: \"Salary Subtotal\"\n  })), __jsx(Label, null, \"$\".concat(subtotalSalario))), __jsx(Row, null, __jsx(Label, {\n    style: {\n      marginRight: '15px',\n      minWidth: '200px'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"advancedSalaryPaid\",\n    defaultMessage: \"advancedSalaryPaid\"\n  })), __jsx(Label, null, \"$\".concat((_state$workInfo8 = state.workInfo) === null || _state$workInfo8 === void 0 ? void 0 : _state$workInfo8.advancedSalaryPaid))), __jsx(Row, null, __jsx(Label, {\n    style: {\n      marginRight: '15px',\n      minWidth: '200px'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"totalSalaryToPayWeekly\",\n    defaultMessage: \"totalSalaryToPayWeekly\"\n  })), __jsx(Label, null, \"$\".concat(((_state$workInfo9 = state.workInfo) === null || _state$workInfo9 === void 0 ? void 0 : (_state$workInfo9$tota = _state$workInfo9.totalSalaryToPayWeekly) === null || _state$workInfo9$tota === void 0 ? void 0 : _state$workInfo9$tota.toFixed(2)) || '-'))), __jsx(Row, null, __jsx(Label, null, __jsx(FormattedMessage, {\n    id: \"todoTasks\",\n    defaultMessage: \"todoTasks\"\n  })), (_state$workInfo10 = state.workInfo) === null || _state$workInfo10 === void 0 ? void 0 : (_state$workInfo10$tas = _state$workInfo10.tasks) === null || _state$workInfo10$tas === void 0 ? void 0 : _state$workInfo10$tas.map(function (task) {\n    return __jsx(Label, null, task);\n  })))));\n};\n\nexport default WorkContent;","map":null,"metadata":{},"sourceType":"module"}