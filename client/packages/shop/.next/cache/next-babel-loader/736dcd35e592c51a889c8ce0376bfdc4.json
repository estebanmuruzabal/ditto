{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nconst Link = styled.a.withConfig({\n  displayName: \"radio-card__Link\",\n  componentId: \"sc-1vglpr2-0\"\n})([\"font-family:\", \";font-size:\", \"px;font-weight:\", \";color:\", \";\"], themeGet('fonts.body', 'Lato'), themeGet('fontSizes.base', '15'), themeGet('fontWeights.bold', '700'), themeGet('colors.blue.dark', '#161F6A'));\nconst CardWrapper = styled.label.withConfig({\n  displayName: \"radio-card__CardWrapper\",\n  componentId: \"sc-1vglpr2-1\"\n})([\"display:inline-flex;align-items:center;border-radius:\", \";background-color:\", \";border:1px solid \", \";text-align:center;padding:15px 20px;margin-bottom:15px;margin-right:15px;position:relative;font-family:\", \";font-size:\", \"px;font-weight:\", \";color:\", \";line-height:24px;max-width:240px;cursor:pointer;width:100%;transition:all 0.25s ease;&.active{border:1px solid \", \";background-color:\", \";}&.disabled{cursor:not-allowed;opacity:0.6;}&.item-has-title{flex-direction:column;text-align:left;align-items:flex-start;padding:15px;}&:last-child{margin-right:0;}input[type='radio']{opacity:0;visibility:hidden;position:absolute;top:0;left:0;}&:hover{.button-wrapper{opacity:1;visibility:visible;}}\"], themeGet('radii.base', '6px'), themeGet('colors.gray.200', '#F7F7F7'), themeGet('colors.gray.200', '#F7F7F7'), themeGet('fonts.body', 'Lato'), themeGet('fontSizes.base', '15'), themeGet('fontWeights.regular', '400'), themeGet('colors.text.bold', '#0D1136'), themeGet('colors.primary.regular', '#009E7F'), themeGet('colors.white', '#ffffff'));\nconst CardTitle = styled.span.withConfig({\n  displayName: \"radio-card__CardTitle\",\n  componentId: \"sc-1vglpr2-2\"\n})([\"font-family:\", \";font-size:\", \"px;font-weight:\", \";color:\", \";line-height:1.2;margin-bottom:5px;text-transform:capitalize;\"], themeGet('fonts.body', 'Lato'), themeGet('fontSizes.sm', '13'), themeGet('fontWeights.bold', '700'), themeGet('colors.text.bold', '#0D1136'));\nconst CardContent = styled.span.withConfig({\n  displayName: \"radio-card__CardContent\",\n  componentId: \"sc-1vglpr2-3\"\n})([\"font-family:\", \";font-size:\", \"px;font-weight:\", \";color:\", \";\"], themeGet('fonts.body', 'Lato'), themeGet('fontSizes.base', '15'), themeGet('fontWeights.regular', '400'), themeGet('colors.text.medium', '#424561'));\nconst CardButtons = styled.span.withConfig({\n  displayName: \"radio-card__CardButtons\",\n  componentId: \"sc-1vglpr2-4\"\n})([\"display:block;position:absolute;top:10px;right:10px;display:flex;align-items:center;opacity:0;visibility:hidden;transition:0.2s ease-in-out;\"]);\nconst ActionButton = styled.span.withConfig({\n  displayName: \"radio-card__ActionButton\",\n  componentId: \"sc-1vglpr2-5\"\n})([\"display:flex;align-items:center;justify-content:center;border:0;width:20px;height:20px;border-radius:50%;overflow:hidden;margin-left:5px;cursor:pointer;outline:0;padding:0;color:\", \";&.edit-btn{background-color:\", \";}&.delete-btn{background-color:\", \";}svg{display:block;width:8px;height:auto;}\"], themeGet('colors.white', '#ffffff'), themeGet('colors.primary.regular', '#009E7F'), themeGet('colors.secondary.regular', '#ff5b60'));\n\nconst RadioCard = ({\n  id,\n  name,\n  title,\n  content,\n  editIcon,\n  deleteIcon,\n  withActionButtons,\n  onEdit,\n  onDelete,\n  onClick,\n  hasEdit,\n  hasDelete,\n  disabled,\n  checked,\n  onChange\n}) => {\n  var _content;\n\n  const getLinkOnly = text => {\n    if (!text) return;\n    const word = 'https';\n    const index = text.indexOf(word); // 8\n\n    const length = word.length; // 7\n\n    return text.slice(index + length - 5);\n  };\n\n  const contentDivided = (_content = content) === null || _content === void 0 ? void 0 : _content.split(' | ');\n  const linkContent = contentDivided === null || contentDivided === void 0 ? void 0 : contentDivided.find(part => part.includes('http'));\n  const linkOnly = getLinkOnly(linkContent);\n  const preLinkText = linkContent === null || linkContent === void 0 ? void 0 : linkContent.substring(0, linkContent.indexOf('http'));\n  content = linkOnly ? `${contentDivided[1] && contentDivided[1]} ${contentDivided[2] && contentDivided[2]}` : content;\n  return __jsx(CardWrapper, {\n    htmlFor: `${name}-${id}`,\n    className: `label ${title ? 'item-has-title' : 'no_title'}\n      ${checked ? 'active' : 'not_active'}`\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: `${name}-${id}`,\n    name: name,\n    value: content,\n    disabled: disabled,\n    checked: checked,\n    onChange: onChange,\n    onClick: onClick\n  }), title && __jsx(CardTitle, null, title), content && __jsx(CardContent, null, content), preLinkText && __jsx(CardContent, null, preLinkText), linkOnly && __jsx(Link, {\n    href: linkOnly,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"Click aqu\\xED\"), withActionButtons && __jsx(CardButtons, {\n    className: \"button-wrapper\"\n  }, hasEdit && __jsx(ActionButton, {\n    onClick: onEdit,\n    className: \"edit-btn\"\n  }, editIcon), hasDelete && __jsx(ActionButton, {\n    onClick: onDelete,\n    className: \"delete-btn\"\n  }, deleteIcon)));\n};\n\nRadioCard.defaultProps = {\n  title: '',\n  content: '',\n  editIcon: __jsx(PencilIcon, null),\n  deleteIcon: __jsx(CloseIcon, null),\n  withActionButtons: true,\n  hasEdit: true,\n  hasDelete: true\n};\nexport default RadioCard;","map":null,"metadata":{},"sourceType":"module"}