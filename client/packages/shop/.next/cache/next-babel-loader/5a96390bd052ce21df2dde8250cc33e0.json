{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/add-time-schedule/add-schedule-card.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ButtonsContainer, DayContainer, Heading, ListDes, ListItem, ListTitle, PlantsSensorContainer, Text, WeekContainer } from './add-schedule-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Loader from 'components/loader/loader';\nimport TimePicker from 'react-time-picker';\nimport { WeekDays } from 'utils/constant';\nimport { UPDATE_SETTING } from 'graphql/query/plants.query';\nimport { getDayShortName } from 'utils/sensorUtils';\nimport Switch from 'components/switch/switch'; // Shape of form values\n\n// Wrap our form with the using withFormik HoC\nvar FormEnhancer = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      id: props.item.id || null,\n      name: props.item.name || '',\n      info: props.item.info || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Required!'),\n    info: Yup.string().required('Required')\n  }),\n  handleSubmit: function handleSubmit(values) {// do submitting things\n  }\n});\n\nvar AddTimeSchedule = function AddTimeSchedule(props) {\n  _s();\n\n  var _currentSchedule$star, _currentSchedule$endT, _currentSchedule$days;\n\n  var item = props.item,\n      values = props.values;\n  var addressValue = {\n    id: values.id,\n    type: 'secondary',\n    name: values.name,\n    info: values.info\n  };\n  var settingIndex = item.plant.sensors.findIndex(function (module) {\n    return module.settingType === item.settingType;\n  });\n  var currentSchedule = item.plant.sensors[settingIndex].scheduledOnTimes[item === null || item === void 0 ? void 0 : item.schedulePosition];\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      isSmartLightingOn = _useState2[0],\n      setSmartLighting = _useState2[1];\n\n  var _useState3 = useState((currentSchedule === null || currentSchedule === void 0 ? void 0 : (_currentSchedule$star = currentSchedule.startTime) === null || _currentSchedule$star === void 0 ? void 0 : _currentSchedule$star.length) > 0 ? currentSchedule.startTime : '00:00'),\n      startTime = _useState3[0],\n      startTimeChange = _useState3[1];\n\n  var _useState4 = useState((currentSchedule === null || currentSchedule === void 0 ? void 0 : (_currentSchedule$endT = currentSchedule.endTime) === null || _currentSchedule$endT === void 0 ? void 0 : _currentSchedule$endT.length) > 0 ? currentSchedule.endTime : '23:59'),\n      endTime = _useState4[0],\n      endTimeChange = _useState4[1];\n\n  var _useState5 = useState((currentSchedule === null || currentSchedule === void 0 ? void 0 : (_currentSchedule$days = currentSchedule.daysToRepeat) === null || _currentSchedule$days === void 0 ? void 0 : _currentSchedule$days.length) >= 0 ? currentSchedule.daysToRepeat : []),\n      daysSelected = _useState5[0],\n      setDaysSelected = _useState5[1];\n\n  var _useMutation = useMutation(UPDATE_SETTING),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateSetting = _useMutation2[0];\n\n  var intl = useIntl();\n\n  var dispatchSettingSave = function dispatchSettingSave(plant, sensorSetting, settingType) {\n    updateSetting({\n      variables: {\n        id: item.id,\n        plantId: plant.plantId,\n        input: _objectSpread(_objectSpread({}, sensorSetting), {}, {\n          settingType: settingType\n        })\n      }\n    });\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newSchedule, settingIndex, setting;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              newSchedule = {\n                daysToRepeat: daysSelected,\n                startTime: startTime,\n                endTime: endTime,\n                enabled: true,\n                smartLight: isSmartLightingOn\n              };\n              setLoading(true); // here we just check and make it an array in case its not\n\n              settingIndex = item.plant.sensors.findIndex(function (module) {\n                return module.settingType === item.settingType;\n              });\n              setting = item.plant.sensors[settingIndex]; // setting.scheduledOnTimes = setting?.scheduledOnTimes?.length >= 0 ? setting?.scheduledOnTimes : [];\n\n              if (currentSchedule && (item === null || item === void 0 ? void 0 : item.schedulePosition) >= 0) {\n                setting.scheduledOnTimes[item === null || item === void 0 ? void 0 : item.schedulePosition] = newSchedule;\n              } else {\n                setting.scheduledOnTimes.push(newSchedule);\n              }\n\n              dispatch({\n                type: 'UPDATE_MODULE',\n                payload: {\n                  setting: setting,\n                  plantId: item.plant.plantId,\n                  settingIndex: settingIndex\n                }\n              });\n              dispatchSettingSave(item.plant, setting, item.settingType);\n              closeModal();\n              setLoading(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleDaysAddition = function handleDaysAddition(day) {\n    var dayIndex = daysSelected.indexOf(day);\n    var newDaysSelectedArray = daysSelected;\n    dayIndex >= 0 ? newDaysSelectedArray.splice(dayIndex, 1) : newDaysSelectedArray.push(day);\n    setDaysSelected(newDaysSelectedArray);\n  };\n\n  return __jsx(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, __jsx(PlantsSensorContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, intl.formatMessage({\n    id: currentSchedule ? 'editTimeScheduleId' : 'addTimeScheduleId',\n    defaultMessage: 'addTimeScheduleId'\n  }))), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"startTimeId\",\n    defaultMessage: \"startTimeId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, __jsx(TimePicker, {\n    onChange: function onChange(e) {\n      return startTimeChange(e);\n    },\n    value: startTime,\n    disableClock: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }))), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"endTimeId\",\n    defaultMessage: \"endTimeId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, __jsx(TimePicker, {\n    onChange: function onChange(e) {\n      return endTimeChange(e);\n    },\n    value: endTime,\n    disableClock: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"notifyChangesId\",\n    defaultMessage: \"notifyChangesId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, __jsx(Switch, {\n    disabled: false,\n    checked: isSmartLightingOn,\n    labelPosition: 'right',\n    onUpdate: function onUpdate() {\n      return setSmartLighting(!isSmartLightingOn);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }))), __jsx(WeekContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, WeekDays.map(function (day) {\n    return __jsx(DayContainer, {\n      key: day + '-day-container',\n      style: {\n        backgroundColor: daysSelected.indexOf(day) >= 0 ? '#b99c9c' : 'transparent'\n      },\n      onClick: function onClick() {\n        return handleDaysAddition(day);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, getDayShortName(day));\n  })), __jsx(ButtonsContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"submit\" // style={{ width: '100%', height: '44px', marginTop: '200px' }}\n    ,\n    loader: __jsx(Loader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }\n    }),\n    isDisabled: loading,\n    isLoading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: currentSchedule ? \"editTimeFrameId\" : \"addTimeFrameId\",\n    defaultMessage: \"addTimeFrameId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  })), __jsx(Button, {\n    onClick: function onClick() {\n      return closeModal();\n    },\n    style: {\n      marginLeft: '20px'\n    },\n    loader: __jsx(Loader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }),\n    isDisabled: loading,\n    isLoading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"cancelTimeFrameId\",\n    defaultMessage: \"cancelTimeFrameId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  })))));\n};\n\n_s(AddTimeSchedule, \"6oWXRT76bkooqWPUCtjRWTx741M=\", false, function () {\n  return [useMutation, useIntl];\n});\n\n_c = AddTimeSchedule;\nexport default _c2 = FormEnhancer(AddTimeSchedule);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddTimeSchedule\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/add-time-schedule/add-schedule-card.tsx"],"names":["React","useContext","useState","Yup","withFormik","Form","closeModal","Button","useMutation","ButtonsContainer","DayContainer","Heading","ListDes","ListItem","ListTitle","PlantsSensorContainer","Text","WeekContainer","ProfileContext","FormattedMessage","useIntl","Loader","TimePicker","WeekDays","UPDATE_SETTING","getDayShortName","Switch","FormEnhancer","mapPropsToValues","props","id","item","name","info","validationSchema","object","shape","string","required","handleSubmit","values","AddTimeSchedule","addressValue","type","settingIndex","plant","sensors","findIndex","module","settingType","currentSchedule","scheduledOnTimes","schedulePosition","state","dispatch","loading","setLoading","isSmartLightingOn","setSmartLighting","startTime","length","startTimeChange","endTime","endTimeChange","daysToRepeat","daysSelected","setDaysSelected","updateSetting","intl","dispatchSettingSave","sensorSetting","variables","plantId","input","newSchedule","enabled","smartLight","setting","push","payload","handleDaysAddition","day","dayIndex","indexOf","newDaysSelectedArray","splice","formatMessage","defaultMessage","e","justifyContent","map","backgroundColor","marginLeft"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, FormikProps, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/react-hooks';\nimport { UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { ButtonsContainer, DayContainer, FieldWrapper, Heading, ListDes, ListItem, ListTitle, PlantsSensorContainer, Text, WeekContainer } from './add-schedule-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Loader from 'components/loader/loader';\n\nimport TimePicker from 'react-time-picker'\nimport { SensorsTypes, WeekDays } from 'utils/constant';\nimport Checkbox from '../../components/checkbox/checkbox';\nimport { UPDATE_SETTING } from 'graphql/query/plants.query';\nimport { ISetting } from 'utils/types';\nimport { getDayShortName } from 'utils/sensorUtils';\nimport Switch from 'components/switch/switch';\n\n\n// Shape of form values\ninterface FormValues {\n  id?: number | null;\n  name?: string;\n  info?: string;\n}\n\n// The type of props MyForm receives\ninterface MyFormProps {\n  item?: any | null;\n}\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik<MyFormProps, FormValues>({\n  \n  // Transform outer props into form values\n  mapPropsToValues: (props) => {\n    return {\n      id: props.item.id || null,\n      name: props.item.name || '',\n      info: props.item.info || '',\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Required!'),\n    info: Yup.string().required('Required'),\n  }),\n  handleSubmit: (values) => {\n    // do submitting things\n  },\n});\n\nconst AddTimeSchedule = (props: FormikProps<FormValues> & MyFormProps) => {\n  const {\n    item,\n    values,\n  } = props;\n  const addressValue = {\n    id: values.id,\n    type: 'secondary',\n    name: values.name,\n    info: values.info,\n  };\n  \n  const settingIndex = item.plant.sensors.findIndex((module: ISetting) => module.settingType === item.settingType);\n  const currentSchedule = item.plant.sensors[settingIndex].scheduledOnTimes[item?.schedulePosition];\n\n    \n  const { state, dispatch } = useContext(ProfileContext);\n  const [loading, setLoading] = useState(false);\n  const [isSmartLightingOn, setSmartLighting] = useState(false);\n  const [startTime, startTimeChange] = useState(currentSchedule?.startTime?.length > 0 ? currentSchedule.startTime : '00:00');\n  const [endTime, endTimeChange] = useState(currentSchedule?.endTime?.length > 0 ? currentSchedule.endTime : '23:59');\n  const [daysSelected,setDaysSelected] = useState(currentSchedule?.daysToRepeat?.length >= 0 ? currentSchedule.daysToRepeat : [])\n  const [updateSetting] = useMutation(UPDATE_SETTING);\n  \n  const intl = useIntl();\n\n  const dispatchSettingSave = (plant: any, sensorSetting: any, settingType: SensorsTypes) => {\n    updateSetting({\n      variables: {\n        id: item.id,\n        plantId: plant.plantId,\n        input: { ...sensorSetting, settingType: settingType }\n      },\n    });\n  };\n\n  const handleSubmit = async () => {\n    const newSchedule = {\n      daysToRepeat: daysSelected,\n      startTime,\n      endTime,\n      enabled: true,\n      smartLight: isSmartLightingOn\n    };\n\n    setLoading(true);\n    // here we just check and make it an array in case its not\n    const settingIndex = item.plant.sensors.findIndex((module: ISetting) => module.settingType === item.settingType);\n    const setting = item.plant.sensors[settingIndex];\n    // setting.scheduledOnTimes = setting?.scheduledOnTimes?.length >= 0 ? setting?.scheduledOnTimes : [];\n\n    if (currentSchedule && item?.schedulePosition >= 0) {\n      setting.scheduledOnTimes[item?.schedulePosition] = newSchedule;\n    } else {\n      setting.scheduledOnTimes.push(newSchedule)\n    }\n    \n    dispatch({ type: 'UPDATE_MODULE', payload: { setting, plantId: item.plant.plantId, settingIndex } });\n    dispatchSettingSave(item.plant, setting, item.settingType);\n\n    closeModal();\n    setLoading(false);\n  };\n\n\n  const handleDaysAddition = (day: number) => {\n    const dayIndex = daysSelected.indexOf(day);\n    let newDaysSelectedArray: any = daysSelected;\n\n    dayIndex >= 0 ? newDaysSelectedArray.splice(dayIndex, 1) : newDaysSelectedArray.push(day);\n\n    setDaysSelected(newDaysSelectedArray);\n  };\n\n  return (\n    <Form>\n      <PlantsSensorContainer>\n        <Heading>{<Heading>{intl.formatMessage({ id: currentSchedule ? 'editTimeScheduleId' : 'addTimeScheduleId', defaultMessage: 'addTimeScheduleId' })}</Heading>}</Heading>\n      \n        <ListItem>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"startTimeId\"\n                defaultMessage=\"startTimeId\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <TimePicker\n              onChange={(e) => startTimeChange(e)}\n              value={startTime}\n              disableClock={true}\n            />\n          </ListDes>\n        </ListItem>\n\n        <ListItem>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"endTimeId\"\n                defaultMessage=\"endTimeId\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <TimePicker\n              onChange={(e) => endTimeChange(e)}\n              value={endTime}\n              disableClock={true}\n            />\n          </ListDes>\n        </ListItem>\n\n        <ListItem style={{ justifyContent: 'flex-start' }}>\n          <ListTitle>\n            <Text bold>\n                <FormattedMessage\n                id=\"notifyChangesId\"\n                defaultMessage=\"notifyChangesId\"\n                />\n            </Text>\n          </ListTitle>\n          <ListDes>\n              <Switch \n                  disabled={false}\n                  checked={isSmartLightingOn}\n                  labelPosition={'right'}\n                  onUpdate={() => setSmartLighting(!isSmartLightingOn) }\n              />\n          </ListDes>\n      </ListItem>\n\n      <WeekContainer>\n        {WeekDays.map((day: any) => {\n            return (\n              <DayContainer\n                key={day + '-day-container'}\n                style={{ backgroundColor: daysSelected.indexOf(day) >= 0 ? '#b99c9c' : 'transparent' }}\n                onClick={() => handleDaysAddition(day)}\n              >\n                {getDayShortName(day)}\n              </DayContainer>\n            )\n          })\n        }\n      </WeekContainer>\n\n      {/* <Checkbox\n        checked={isSmartLightingOn}\n        id='smart-lighting-id'\n        labelText='Luces'\n        onChange={() => setSmartLighting(!isSmartLightingOn) }\n        // inputRef={register({ required: true })}\n        name='isSmartLightingOn'\n        overrides={{\n          Label: {\n              style: ({ $theme }) => ({\n              color: $theme.colors.textNormal,\n              }),\n          },\n        }}\n      >\n        <FormattedMessage id=\"smartLightingId\" defaultMessage=\"smartLightingId\" />\n      </Checkbox> */}\n      <ButtonsContainer>\n        <Button\n          onClick={handleSubmit}\n          type=\"submit\"\n          // style={{ width: '100%', height: '44px', marginTop: '200px' }}\n          loader={<Loader />}\n          isDisabled={loading}\n          isLoading={loading}\n        >\n          <FormattedMessage id={ currentSchedule ? \"editTimeFrameId\" : \"addTimeFrameId\"} defaultMessage=\"addTimeFrameId\" />\n        </Button>\n        <Button\n          onClick={() => closeModal()}\n          style={{ marginLeft: '20px' }}\n          loader={<Loader />}\n          isDisabled={loading}\n          isLoading={loading}\n        >\n          <FormattedMessage id=\"cancelTimeFrameId\" defaultMessage=\"cancelTimeFrameId\" />\n        </Button>\n      </ButtonsContainer>\n\n      </PlantsSensorContainer>\n    </Form>\n  );\n};\n\nexport default FormEnhancer(AddTimeSchedule);\n"]},"metadata":{},"sourceType":"module"}