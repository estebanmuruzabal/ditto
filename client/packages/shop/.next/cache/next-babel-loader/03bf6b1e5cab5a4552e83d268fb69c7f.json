{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { BannerIcon, BannerText, DeliveryMethods, DeliveryText, LocationContent, MethodOption, SubHeaderWrapper } from './sub-header.style';\nimport { openModal } from '@redq/reuse-modal';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from 'features/authentication-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\n\nvar LocationMenu = function LocationMenu(_ref) {\n  var cityAndStateText = _ref.cityAndStateText,\n      deliveryMethodSelected = _ref.deliveryMethodSelected,\n      isOpen = _ref.isOpen;\n  return __jsx(LocationContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, isOpen ? __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleDown,\n    className: \"fas fa-chevron-down\",\n    style: {\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleUp,\n    className: \"fas fa-chevron-up\",\n    style: {\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }\n  }), __jsx(DeliveryText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, deliveryMethodSelected), \"|\", __jsx(BannerIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: DeliveryIcon,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  })), __jsx(BannerText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, cityAndStateText && cityAndStateText));\n};\n\n_c = LocationMenu;\n\nvar DeliveryMethodsView = function DeliveryMethodsView(_ref2) {\n  var cityAndStateText = _ref2.cityAndStateText,\n      setDeliveryMethod = _ref2.setDeliveryMethod,\n      openLocationModal = _ref2.openLocationModal;\n  return __jsx(DeliveryMethods, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(DeliveryMethods, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(MethodOption, {\n    onClick: function onClick(e) {\n      return setDeliveryMethod(e, DeliveryMethodsConstants.PICKUP);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Pickup\"), __jsx(MethodOption, {\n    onClick: function onClick(e) {\n      return setDeliveryMethod(e, DeliveryMethodsConstants.DELIVERY);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Delivery\")), __jsx(\"div\", {\n    onClick: function onClick() {\n      return openLocationModal();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Find the closest DittoFarm\"));\n};\n\n_c2 = DeliveryMethodsView;\n\nvar SubHeader = function SubHeader(_ref3) {\n  _s();\n\n  var props = _extends({}, _ref3);\n\n  var _useLocale = useLocale(),\n      location = _useLocale.location;\n\n  var mobile = useMedia('(max-width: 580px)');\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      deliveryMethodSelected = _React$useState2[0],\n      setDeliveryMethod = _React$useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      authDispatch = _useContext.authDispatch;\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      subHeaderModal = _React$useState4[0],\n      setSubHeaderModal = _React$useState4[1];\n\n  var setDelivery = function setDelivery(e, deli) {\n    e.stopPropagation();\n    setDeliveryMethod(deli);\n  };\n\n  var cityAndStateText = location ? mobile ? \"\".concat(location.split(', ')[1], \", \").concat(location.split(', ')[2]) : \"\".concat(location.split(', ')[0], \", \").concat(location.split(', ')[1]) : '';\n\n  var openLocationModal = function openLocationModal() {\n    authDispatch({\n      type: 'LOCATION_MODAL'\n    });\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto'\n      }\n    });\n  };\n\n  return __jsx(SubHeaderWrapper, {\n    className: props.className,\n    id: \"layout-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverBigger, {\n    direction: \"left\",\n    className: \"user-pages-dropdown\",\n    openHandler: __jsx(LocationMenu, {\n      isOpen: false,\n      deliveryMethodSelected: deliveryMethodSelected,\n      cityAndStateText: cityAndStateText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 22\n      }\n    }),\n    closeHandler: __jsx(LocationMenu, {\n      isOpen: true,\n      deliveryMethodSelected: deliveryMethodSelected,\n      cityAndStateText: cityAndStateText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }\n    }),\n    content: __jsx(DeliveryMethodsView, {\n      setDeliveryMethod: setDelivery,\n      cityAndStateText: cityAndStateText,\n      openLocationModal: openLocationModal,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 18\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(SubHeader, \"Zu44JAvDmb2k2mvwhFjX9DCA+bg=\", false, function () {\n  return [useLocale, useMedia];\n});\n\n_c3 = SubHeader;\nexport default SubHeader;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LocationMenu\");\n$RefreshReg$(_c2, \"DeliveryMethodsView\");\n$RefreshReg$(_c3, \"SubHeader\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx"],"names":["React","useContext","BannerIcon","BannerText","DeliveryMethods","DeliveryText","LocationContent","MethodOption","SubHeaderWrapper","openModal","useLocale","DeliveryIcon","useMedia","PopoverBigger","AuthContext","AuthenticationForm","FontAwesomeIcon","faChevronCircleDown","faChevronCircleUp","DeliveryMethodsConstants","LocationMenu","cityAndStateText","deliveryMethodSelected","isOpen","color","DeliveryMethodsView","setDeliveryMethod","openLocationModal","e","PICKUP","DELIVERY","SubHeader","props","location","mobile","useState","authDispatch","subHeaderModal","setSubHeaderModal","setDelivery","deli","stopPropagation","split","type","show","overlayClassName","closeOnClickOutside","component","closeComponent","config","enableResizing","disableDragging","className","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { BannerIcon, BannerText, DeliveryMethods, DeliveryText, LocationContent, MethodOption, SubHeaderWrapper } from './sub-header.style';\nimport { openModal } from '@redq/reuse-modal';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport Popover from 'components/popover/popover';\nimport { useMedia } from 'utils/use-media';\nimport { MenuItem } from 'layouts/header/menu/language-switcher/language-switcher.style';\nimport { FormattedMessage } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport LocationModal from 'features/location-modal/location-modal';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from 'features/authentication-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faChevronCircleDown, faChevronCircleUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\n\ninterface Props {\n  className: string\n}\n\n\nconst LocationMenu = ({ cityAndStateText, deliveryMethodSelected, isOpen }) => {\n  \n  return (\n    <LocationContent>\n        { isOpen \n          ? (<FontAwesomeIcon icon={faChevronCircleDown} className=\"fas fa-chevron-down\" style={{ color: \"black\" }} />) \n          : (<FontAwesomeIcon icon={faChevronCircleUp} className=\"fas fa-chevron-up\" style={{ color: \"black\" }} />)\n        }\n        <DeliveryText>{deliveryMethodSelected}</DeliveryText>\n        |\n        <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>\n        <BannerText>{cityAndStateText && cityAndStateText}</BannerText>\n      </LocationContent>\n  );\n};\n\nconst DeliveryMethodsView = ({ cityAndStateText, setDeliveryMethod, openLocationModal }) => {\n  return (\n    <DeliveryMethods>\n      \n      <DeliveryMethods>\n        <MethodOption onClick={(e) => setDeliveryMethod(e, DeliveryMethodsConstants.PICKUP)}>Pickup</MethodOption> \n        <MethodOption onClick={(e) => setDeliveryMethod(e, DeliveryMethodsConstants.DELIVERY)}>Delivery</MethodOption> \n      </DeliveryMethods>\n      \n      <div onClick={() => openLocationModal()}>Find the closest DittoFarm</div>\n    </DeliveryMethods>\n  );\n};\n\nconst SubHeader: React.FC<Props> = ({ ...props  }) => {\n  const { location } = useLocale();\n  const mobile = useMedia('(max-width: 580px)');\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState('');\n  const { authDispatch } = useContext<any>(AuthContext);\n  const [subHeaderModal, setSubHeaderModal] = React.useState(false);\n\n  const setDelivery =  (e, deli) => {\n    e.stopPropagation();\n    setDeliveryMethod(deli)\n  };\n\n\n  const cityAndStateText = location ? mobile ?\n    `${location.split(', ')[1]}, ${location.split(', ')[2]}`\n    : `${location.split(', ')[0]}, ${location.split(', ')[1]}`\n    : '';\n\n  const openLocationModal = () => {\n    authDispatch({\n      type: 'LOCATION_MODAL',\n    });\n\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto',\n      },\n    });\n\n  };\n\n  return (\n    <SubHeaderWrapper className={props.className} id=\"layout-header\">\n      <PopoverBigger\n        direction=\"left\"\n        className=\"user-pages-dropdown\"\n        openHandler={<LocationMenu isOpen={false} deliveryMethodSelected={deliveryMethodSelected} cityAndStateText={cityAndStateText} />}\n        closeHandler={<LocationMenu isOpen={true} deliveryMethodSelected={deliveryMethodSelected} cityAndStateText={cityAndStateText} />}\n        content={<DeliveryMethodsView setDeliveryMethod={setDelivery} cityAndStateText={cityAndStateText} openLocationModal={openLocationModal} />}\n      />\n  </SubHeaderWrapper>\n  );\n\n};\n\nexport default SubHeader;\n"]},"metadata":{},"sourceType":"module"}