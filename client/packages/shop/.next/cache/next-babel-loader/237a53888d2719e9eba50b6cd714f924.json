{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/popover-bigger/popover-bigger.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport useOnClickOutside from './useOnClickOutside';\nimport PopoverBiggerWrapper from './popover-bigger.style';\n\nconst PopoverBigger = ({\n  className,\n  openHandler,\n  closeHandler,\n  content,\n  direction\n}) => {\n  // PopoverBigger State\n  const {\n    0: state,\n    1: setState\n  } = useState(false); // Ref\n\n  const ref = useRef(); // Add all classs to an array\n\n  const addAllClasses = ['popover-wrapper']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  } // Add direction class on popover content\n\n\n  if (direction) {\n    addAllClasses.push(direction);\n  } // Toggle PopoverBigger content\n\n\n  const handleToggle = e => {\n    e.stopPropagation();\n    setState(state => !state);\n  }; // Handle document click\n\n\n  const handleDocumentClick = e => {\n    e.stopPropagation();\n\n    if (state) {\n      handleToggle(e);\n    }\n  }; // // Handle window event listener\n  // useEffect(() => {\n  //   window.addEventListener('click', handleDocumentClick);\n  //   return () => {\n  //     window.removeEventListener('click', handleDocumentClick);\n  //   };\n  // });\n  // Close popover on click outside\n\n\n  useOnClickOutside(ref, () => setState(state => false));\n  return __jsx(PopoverBiggerWrapper, {\n    className: addAllClasses.join(' '),\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"popover-handler\",\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, state ? openHandler : closeHandler), state && __jsx(\"div\", {\n    className: \"popover-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, content && __jsx(\"div\", {\n    className: \"inner-wrap\",\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, content)));\n};\n\nexport default PopoverBigger;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/popover-bigger/popover-bigger.tsx"],"names":["React","useState","useRef","useOnClickOutside","PopoverBiggerWrapper","PopoverBigger","className","openHandler","closeHandler","content","direction","state","setState","ref","addAllClasses","push","handleToggle","e","stopPropagation","handleDocumentClick","join"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAWA,MAAMC,aAA2C,GAAG,CAAC;AACnDC,EAAAA,SADmD;AAEnDC,EAAAA,WAFmD;AAGnDC,EAAAA,YAHmD;AAInDC,EAAAA,OAJmD;AAKnDC,EAAAA;AALmD,CAAD,KAM9C;AACJ;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,KAAD,CAAlC,CAFI,CAIJ;;AACA,QAAMY,GAAG,GAAGX,MAAM,EAAlB,CALI,CAOJ;;AACA,QAAMY,aAAuB,GAAG,CAAC,iBAAD,CAAhC,CARI,CAUJ;;AACA,MAAIR,SAAJ,EAAe;AACbQ,IAAAA,aAAa,CAACC,IAAd,CAAmBT,SAAnB;AACD,GAbG,CAeJ;;;AACA,MAAII,SAAJ,EAAe;AACbI,IAAAA,aAAa,CAACC,IAAd,CAAmBL,SAAnB;AACD,GAlBG,CAoBJ;;;AACA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,eAAF;AACAN,IAAAA,QAAQ,CAAED,KAAD,IAAW,CAACA,KAAb,CAAR;AACD,GAHD,CArBI,CA0BJ;;;AACA,QAAMQ,mBAAmB,GAAIF,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACC,eAAF;;AACA,QAAIP,KAAJ,EAAW;AACTK,MAAAA,YAAY,CAACC,CAAD,CAAZ;AACD;AACF,GALD,CA3BI,CAkCJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACAd,EAAAA,iBAAiB,CAACU,GAAD,EAAM,MAAMD,QAAQ,CAAED,KAAD,IAAW,KAAZ,CAApB,CAAjB;AAEA,SACE,MAAC,oBAAD;AAAsB,IAAA,SAAS,EAAEG,aAAa,CAACM,IAAd,CAAmB,GAAnB,CAAjC;AAA0D,IAAA,GAAG,EAAEP,GAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,OAAO,EAAEG,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIL,KAAK,GAAGJ,WAAH,GAAiBC,YAD1B,CADF,EAIGG,KAAK,IACJ;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,IACN;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAEO,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,OADH,CAFJ,CALJ,CADF;AAgBD,CAnED;;AAqEA,eAAeJ,aAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport useOnClickOutside from './useOnClickOutside';\nimport PopoverBiggerWrapper from './popover-bigger.style';\n\ntype PopoverBiggerProps = {\n  className?: string;\n  openHandler: React.ReactNode;\n  closeHandler: React.ReactNode;\n  content: React.ReactNode;\n  direction?: 'left' | 'right';\n  handleToggle?: () => void;\n};\n\nconst PopoverBigger: React.FC<PopoverBiggerProps> = ({\n  className,\n  openHandler,\n  closeHandler,\n  content,\n  direction,\n}) => {\n  // PopoverBigger State\n  const [state, setState] = useState(false);\n\n  // Ref\n  const ref = useRef();\n\n  // Add all classs to an array\n  const addAllClasses: string[] = ['popover-wrapper'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  // Add direction class on popover content\n  if (direction) {\n    addAllClasses.push(direction);\n  }\n\n  // Toggle PopoverBigger content\n  const handleToggle = (e) => {\n    e.stopPropagation();\n    setState((state) => !state);\n  };\n\n  // Handle document click\n  const handleDocumentClick = (e) => {\n    e.stopPropagation();\n    if (state) {\n      handleToggle(e);\n    }\n  };\n\n  // // Handle window event listener\n  // useEffect(() => {\n  //   window.addEventListener('click', handleDocumentClick);\n  //   return () => {\n  //     window.removeEventListener('click', handleDocumentClick);\n  //   };\n  // });\n\n  // Close popover on click outside\n  useOnClickOutside(ref, () => setState((state) => false));\n\n  return (\n    <PopoverBiggerWrapper className={addAllClasses.join(' ')} ref={ref}>\n      <div className=\"popover-handler\" onClick={handleToggle}>\n        { state ? openHandler : closeHandler}\n      </div>\n      {state && (\n        <div className=\"popover-content\">\n          {content && (\n            <div className=\"inner-wrap\" onClick={handleToggle}>\n              {content}\n            </div>\n          )}\n        </div>\n      )}\n    </PopoverBiggerWrapper>\n  );\n};\n\nexport default PopoverBigger;\n"]},"metadata":{},"sourceType":"module"}