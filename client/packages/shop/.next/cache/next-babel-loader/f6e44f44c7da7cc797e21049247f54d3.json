{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/delivery-selection/delivery-selection.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Options, PickUpOptions, Wrapper } from './delivery-selection.style';\nimport { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\nconst DeliverySelection = (_ref) => {\n  var _deliverData$delivery;\n\n  let props = Object.assign({}, _ref);\n  const [deliveryMethodTypeSelected, setDeliveryMethodType] = React.useState();\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(undefined);\n  const {\n    data: deliverData\n  } = useQuery(DELIVERY_METHOD);\n  const deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items;\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const {\n    0: deliveryAddress,\n    1: setDeliveryAddress\n  } = useState(\"\");\n  const {\n    0: notInsideDeliveryAreas,\n    1: setNotInsideDeliveryAreas\n  } = useState(false);\n\n  const setDeliveryMethodAndSaveCookie = deliveryOrPickupMethodSelected => {\n    const deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : _objectSpread(_objectSpread({}, deliveryOrPickupMethodSelected), {}, {\n      deliveryAddress\n    });\n    setDeliveryMethod(deliveryMethod);\n    props.setDeliveryMethodSaved(deliveryMethod); // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n    // }\n  };\n\n  function inside(point, vs) {\n    var x = point[0],\n        y = point[1];\n    var inside = false;\n\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0],\n          yi = vs[i][1];\n      var xj = vs[j][0],\n          yj = vs[j][1];\n      var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  ;\n\n  const searchPickupZipCode = e => {\n    const zipCode = e.target.value;\n    handleOnFocus(e);\n    setZipCode(zipCode);\n    const pickUpOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    }); // const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode)\n\n    const methodFound = zipCode === resistenciaZipCode ? pickUpOptionsMethods : []; // e.stopPropagation();\n\n    setSearchResult(methodFound.length > 0 ? methodFound : null); // setSearchResult(pickUpOptionsMethods)\n  };\n\n  const setDelivery = (e, deli) => {\n    if (deli === DeliveryMethodsConstants.DELIVERY) e.stopPropagation();\n    setDeliveryMethodType(deli);\n    setSearchResult(null);\n    setZipCode('');\n  };\n\n  const deleteDeliveryAddress = () => {\n    setSearchResult(null);\n    setDeliveryAddress('');\n    setNotInsideDeliveryAreas(false);\n  };\n\n  const handleOnFocus = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }; // deliveryMethodSelected\n\n\n  const isPickUpSelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  const intl = useIntl();\n\n  const handleSelect = async address => {\n    setDeliveryAddress(address);\n    const results = await geocodeByAddress(address);\n    const latLng = await getLatLng(results[0]);\n    setNotInsideDeliveryAreas(false);\n    let deliveryOptionsMethods = [];\n\n    if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n      deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n      deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n      deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n      deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else {\n      setNotInsideDeliveryAreas(true);\n      console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n    }\n\n    setSearchResult(deliveryOptionsMethods);\n  }; // const searchDeliveryZipCode =  (e) => {\n  //   handleOnFocus(e)\n  //   setZipCode(e.target.value)\n  //   const methodFound = deliveryOptionsMethods.filter(method => method.name.includes(zipCode));\n  //   e.stopPropagation();\n  //   // setSearchResult(deli ? methodFound : null)\n  //   setSearchResult(deliveryOptionsMethods)\n  // };\n\n\n  return __jsx(DeliveryMethods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, __jsx(Options, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, __jsx(CardWrapper, {\n    color: isPickUpSelected ? '#009E7F' : '#e4f4fc',\n    onClick: e => setDelivery(e, DeliveryMethodsConstants.PICKUP),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"pickUpId\",\n    defaultMessage: \"notFoundId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 144\n    }\n  })), __jsx(CardWrapper, {\n    color: isDeliverySelected ? '#009E7F' : '#e4f4fc',\n    onClick: e => setDelivery(e, DeliveryMethodsConstants.DELIVERY),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"deliveryId\",\n    defaultMessage: \"notFoundId2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 148\n    }\n  }))), __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, !!deliveryMethodTypeSelected && __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, __jsx(Heading, {\n    onClick: e => handleOnFocus(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, isPickUpSelected ? __jsx(FormattedMessage, {\n    id: \"pickupModalheading\",\n    defaultMessage: \"pickupModalheading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }) : // <FormattedMessage\n  //     id=\"deliveryModalheading\"\n  //     defaultMessage=\"deliveryModalheading\"\n  // />\n  null), isPickUpSelected ? __jsx(\"div\", {\n    onClick: e => handleOnFocus(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    onFocus: e => handleOnFocus(e) // placeholder='Código postal'\n    ,\n    value: zipCode,\n    autoComplete: \"off\" // we have to change the onChange because the is no one for the controller name actualy\n    ,\n    onChange: e => searchPickupZipCode(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 27\n    }\n  })) : // <PlacesAutocomplete\n  //   value={deliveryAddress}\n  //   onChange={(e) => setDeliveryAddress(e)}\n  //   onSelect={handleSelect}\n  //   searchOptions={{\n  //     types: [],\n  //     componentRestrictions: { country: \"ar\" },\n  //   }}\n  // >\n  //   {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n  //     <div onClick={(e) => handleOnFocus(e)} >\n  //       <div style={{ width: '100%',\n  //         display: 'flex',\n  //         justifyContent: 'center',\n  //         flexDirection: 'row',\n  //         alignItems: 'center',\n  //         padding: '0px 0px',}}>\n  //         <input\n  //           {...getInputProps({\n  //             placeholder: \"Calle, altura, localidad\",\n  //             className: \"location-search-input\",\n  //             style: {\n  //               width: '220px',\n  //               padding:'0px 8px',\n  //               appearance: 'none',\n  //               fontFamily: `'Lato', sans-serif`,\n  //               fontSize: '15',\n  //               lineHeight: 'inherit',\n  //               border: '1px solid',\n  //               borderColor: '#f7f7f7',\n  //               borderRadius: '6px',\n  //               backgroundColor: '#f7f7f7',\n  //               color: '#0D1136',\n  //               height: '48px',\n  //               transition: 'all 0.25s ease',\n  //               // mb: 3,\n  //               '&:hover,&:focus': {\n  //                 outline: 0,\n  //                 borderColor: '#009e7f',\n  //               },\n  //             },\n  //           })}\n  //         />{ deliveryAddress?.length ? (\n  //           <ActionsButtons className='button-wrapper'>\n  //               <ActionButton onClick={() => deleteDeliveryAddress()} className='delete-btn'>\n  //                   <CloseIcon />\n  //               </ActionButton>\n  //           </ActionsButtons>\n  //         ): ''}\n  //       </div>\n  //       <div className=\"autocomplete-dropdown-container\">\n  //         {loading && <div>Loading...</div>}\n  //         {suggestions.map((suggestion) => {\n  //           const style = suggestion.active\n  //             ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n  //             : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n  //           return (\n  //             <div {...getSuggestionItemProps(suggestion, { style })}>\n  //               {suggestion.description}\n  //             </div>\n  //           );\n  //         })}\n  //       </div>\n  //     </div>\n  //   )}\n  // </PlacesAutocomplete>\n  null, (searchResult === null || searchResult === void 0 ? void 0 : searchResult.length) ? searchResult.map((deliveryMethod, i) => {\n    return __jsx(PickUpOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }\n    }, __jsx(Checkbox, {\n      keyName: `${i}-deliveryMethods`,\n      isChecked: (deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === deliveryMethod.id,\n      labelText: `${deliveryMethod.name} - ${deliveryMethod.details} `,\n      id: `deliveryMethod-${i}`,\n      onChange: e => {\n        setDeliveryMethodAndSaveCookie((deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === deliveryMethod.id ? null : deliveryMethod);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 31\n      }\n    }));\n  }) : '', !searchResult && zipCode.length >= 4 && deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP && __jsx(DeliveryText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }, intl.formatMessage({\n    id: 'noDittoPickUpLocations',\n    defaultMessage: 'noDittoPickUpLocations'\n  })), notInsideDeliveryAreas && __jsx(DeliveryText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 25\n    }\n  }, intl.formatMessage({\n    id: 'noDeliveryThereYet',\n    defaultMessage: 'noDeliveryThereYet'\n  })))));\n};\n\nexport default DeliverySelection;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/delivery-selection/delivery-selection.tsx"],"names":["React","useState","FormattedMessage","useIntl","DeliveryMethodsConstants","plazaBelgranoPolygon","plazaEspañaPolygon","plazaNueveDeJulioPolygon","plazadoceDeOctubrePolygon","resistenciaZipCode","useQuery","DELIVERY_METHOD","Checkbox","CardWrapper","Container","DeliveryMethods","DeliveryText","Heading","Input","Options","PickUpOptions","Wrapper","geocodeByAddress","getLatLng","DeliverySelection","props","deliveryMethodTypeSelected","setDeliveryMethodType","deliveryMethodSelected","setDeliveryMethod","undefined","data","deliverData","deliveryMethods","items","zipCode","setZipCode","searchResult","setSearchResult","deliveryAddress","setDeliveryAddress","notInsideDeliveryAreas","setNotInsideDeliveryAreas","setDeliveryMethodAndSaveCookie","deliveryOrPickupMethodSelected","deliveryMethod","isPickUpSelected","setDeliveryMethodSaved","inside","point","vs","x","y","i","j","length","xi","yi","xj","yj","intersect","searchPickupZipCode","e","target","value","handleOnFocus","pickUpOptionsMethods","filter","isPickUp","methodFound","setDelivery","deli","DELIVERY","stopPropagation","deleteDeliveryAddress","event","preventDefault","PICKUP","isDeliverySelected","intl","handleSelect","address","results","latLng","deliveryOptionsMethods","lat","lng","details","includes","name","console","log","map","id","formatMessage","defaultMessage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, deliveryMethodCookieKeyName, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport { ActionButton, ActionsButtons, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Offer, OfferSection, Options, PickUpOptions, Wrapper } from './delivery-selection.style';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { flexDirection } from 'styled-system';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { ADD_ADDRESS } from 'graphql/mutation/address';\n\ninterface Props {\n  deliveryMethodSaved: any\n  setDeliveryMethodSaved: any\n}\n\nconst DeliverySelection: React.FC<Props> = ({ ...props  }) => {\n  const [deliveryMethodTypeSelected, setDeliveryMethodType] = React.useState();\n\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(undefined);\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n  const [notInsideDeliveryAreas, setNotInsideDeliveryAreas] = useState(false);\n\n  const setDeliveryMethodAndSaveCookie =  (deliveryOrPickupMethodSelected) => {\n    const deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : {...deliveryOrPickupMethodSelected, deliveryAddress};\n    setDeliveryMethod(deliveryMethod)\n    props.setDeliveryMethodSaved(deliveryMethod)\n\n    // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n    // }\n  };\n\n  function inside(point, vs) {\n    var x = point[0], y = point[1];\n    \n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0], yi = vs[i][1];\n        var xj = vs[j][0], yj = vs[j][1];\n        \n        var intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    \n    return inside;\n};\n\n  const searchPickupZipCode =  (e) => {\n    const zipCode = e.target.value;\n    handleOnFocus(e)\n    setZipCode(zipCode)\n    const pickUpOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n\n    // const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode)\n    const methodFound = zipCode === resistenciaZipCode ? pickUpOptionsMethods : [];\n\n    // e.stopPropagation();\n    setSearchResult(methodFound.length > 0 ? methodFound : null)\n    \n    // setSearchResult(pickUpOptionsMethods)\n  };\n\n  const setDelivery =  (e, deli: DeliveryMethodsConstants) => {\n    if (deli === DeliveryMethodsConstants.DELIVERY)\n    e.stopPropagation();\n    setDeliveryMethodType(deli)\n    setSearchResult(null)\n    setZipCode('')\n  };\n\n  const deleteDeliveryAddress =  () => {\n    setSearchResult(null)\n    setDeliveryAddress('')\n    setNotInsideDeliveryAreas(false)\n  };\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  // deliveryMethodSelected\n  const isPickUpSelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  const intl = useIntl();\n\n  const handleSelect = async (address) => {\n    setDeliveryAddress(address);\n    const results = await geocodeByAddress(address);\n    const latLng = await getLatLng(results[0]);\n    setNotInsideDeliveryAreas(false);\n    let deliveryOptionsMethods = [];\n\n    if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n      deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n      deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n        deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n          if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) { deliveryMethod.name = 'GRATIS'; return true;}\n          return !deliveryMethod.isPickUp;\n        });\n    } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n      deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else {\n      setNotInsideDeliveryAreas(true);\n      console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n    }\n    setSearchResult(deliveryOptionsMethods)\n  };\n    \n  // const searchDeliveryZipCode =  (e) => {\n  //   handleOnFocus(e)\n  //   setZipCode(e.target.value)\n    \n\n  //   const methodFound = deliveryOptionsMethods.filter(method => method.name.includes(zipCode));\n  //   e.stopPropagation();\n  //   // setSearchResult(deli ? methodFound : null)\n  //   setSearchResult(deliveryOptionsMethods)\n  // };\n\n  \n  return (\n        <DeliveryMethods>\n            <Options>\n                <CardWrapper color={isPickUpSelected ? '#009E7F' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.PICKUP)}><FormattedMessage id=\"pickUpId\" defaultMessage=\"notFoundId\" /></CardWrapper> \n                <CardWrapper color={isDeliverySelected ? '#009E7F' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.DELIVERY)}><FormattedMessage id=\"deliveryId\" defaultMessage=\"notFoundId2\" /></CardWrapper> \n            </Options>\n            <Wrapper>\n            \n                { !!deliveryMethodTypeSelected && (\n                  <Container>\n                    <Heading  onClick={(e) => handleOnFocus(e)}>\n                        { isPickUpSelected ? (\n                        <FormattedMessage\n                            id=\"pickupModalheading\"\n                            defaultMessage=\"pickupModalheading\"\n                        />\n                        ) : (\n                        // <FormattedMessage\n                        //     id=\"deliveryModalheading\"\n                        //     defaultMessage=\"deliveryModalheading\"\n                        // />\n                        null\n                        )}\n                      </Heading>\n                      { isPickUpSelected ? (\n                        <div onClick={(e) => handleOnFocus(e)}>\n                          <Input\n                              type='text'\n                              name='name'\n                              onFocus={(e) => handleOnFocus(e)}\n                              // placeholder='Código postal'\n                              value={zipCode}\n                              autoComplete=\"off\"\n                              // we have to change the onChange because the is no one for the controller name actualy\n                              onChange={(e) => searchPickupZipCode(e)}\n                          />\n                        </div>\n                        ) : (\n                        // <PlacesAutocomplete\n                        //   value={deliveryAddress}\n                        //   onChange={(e) => setDeliveryAddress(e)}\n                        //   onSelect={handleSelect}\n                        //   searchOptions={{\n                        //     types: [],\n                        //     componentRestrictions: { country: \"ar\" },\n                        //   }}\n                        // >\n                        //   {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        //     <div onClick={(e) => handleOnFocus(e)} >\n                        //       <div style={{ width: '100%',\n                        //         display: 'flex',\n                        //         justifyContent: 'center',\n                        //         flexDirection: 'row',\n                        //         alignItems: 'center',\n                        //         padding: '0px 0px',}}>\n                        //         <input\n                        //           {...getInputProps({\n                        //             placeholder: \"Calle, altura, localidad\",\n                        //             className: \"location-search-input\",\n                        //             style: {\n                        //               width: '220px',\n                        //               padding:'0px 8px',\n                        //               appearance: 'none',\n                        //               fontFamily: `'Lato', sans-serif`,\n                        //               fontSize: '15',\n                        //               lineHeight: 'inherit',\n                        //               border: '1px solid',\n                        //               borderColor: '#f7f7f7',\n                        //               borderRadius: '6px',\n                        //               backgroundColor: '#f7f7f7',\n                        //               color: '#0D1136',\n                        //               height: '48px',\n                        //               transition: 'all 0.25s ease',\n                        //               // mb: 3,\n                        //               '&:hover,&:focus': {\n                        //                 outline: 0,\n                        //                 borderColor: '#009e7f',\n                        //               },\n                        //             },\n                        //           })}\n                        //         />{ deliveryAddress?.length ? (\n                        //           <ActionsButtons className='button-wrapper'>\n                        //               <ActionButton onClick={() => deleteDeliveryAddress()} className='delete-btn'>\n                        //                   <CloseIcon />\n                        //               </ActionButton>\n                        //           </ActionsButtons>\n                        //         ): ''}\n                        //       </div>\n                        //       <div className=\"autocomplete-dropdown-container\">\n                        //         {loading && <div>Loading...</div>}\n                        //         {suggestions.map((suggestion) => {\n                        //           const style = suggestion.active\n                        //             ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                        //             : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                        //           return (\n                        //             <div {...getSuggestionItemProps(suggestion, { style })}>\n                        //               {suggestion.description}\n                        //             </div>\n                        //           );\n                        //         })}\n                        //       </div>\n                        //     </div>\n                        //   )}\n                        // </PlacesAutocomplete>\n                        null\n                        )}\n                      {searchResult?.length ? searchResult.map((deliveryMethod, i) => {\n                          return (\n                            <PickUpOptions>\n                              <Checkbox\n                                  keyName={`${i}-deliveryMethods`}\n                                  isChecked={deliveryMethodSelected?.id === deliveryMethod.id}\n                                  labelText={`${deliveryMethod.name} - ${deliveryMethod.details} `}\n                                  id={`deliveryMethod-${i}`}\n                                  onChange={e => {\n                                      setDeliveryMethodAndSaveCookie(deliveryMethodSelected?.id === deliveryMethod.id ? null : deliveryMethod)\n                                  }}\n                              />\n                            </PickUpOptions>\n                          )}\n                          ) : ('')\n                      }\n                      { !searchResult && zipCode.length >= 4 && deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP && (\n                        <DeliveryText>{intl.formatMessage({ id: 'noDittoPickUpLocations', defaultMessage: 'noDittoPickUpLocations' })}</DeliveryText>\n                      )}\n                      {notInsideDeliveryAreas && (\n                        <DeliveryText>{intl.formatMessage({ id: 'noDeliveryThereYet', defaultMessage: 'noDeliveryThereYet' })}</DeliveryText>\n                      )}\n                  </Container>\n                )}\n                {/* <OfferSection>\n                <GiftBox />\n                <Offer>\n                    <FormattedMessage\n                    id=\"locationModalFooter\"\n                    defaultMessage=\"Free Delivery For 1st Order\"\n                    values={{ number: 1 }}\n                    />\n                </Offer>\n                </OfferSection> */}\n            </Wrapper>\n        </DeliveryMethods>\n  );\n\n};\n\nexport default DeliverySelection;\n\n"]},"metadata":{},"sourceType":"module"}