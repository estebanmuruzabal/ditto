{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/delivery-selection/delivery-selection.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { Heading } from './delivery-selection.style';\nimport { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\nvar DeliverySelection = function DeliverySelection(_ref) {\n  _s();\n\n  var _deliverData$delivery;\n\n  var props = _extends({}, _ref);\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      deliveryMethodSelected = _React$useState2[0],\n      setDeliveryMethod = _React$useState2[1];\n\n  var _useQuery = useQuery(DELIVERY_METHOD),\n      deliverData = _useQuery.data;\n\n  var deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items;\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      zipCode = _React$useState4[0],\n      setZipCode = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      searchResult = _React$useState6[0],\n      setSearchResult = _React$useState6[1];\n\n  var _useState = useState(\"\"),\n      deliveryAddress = _useState[0],\n      setDeliveryAddress = _useState[1];\n\n  var _useState2 = useState(false),\n      notInsideDeliveryAreas = _useState2[0],\n      setNotInsideDeliveryAreas = _useState2[1];\n\n  var setDeliveryMethodAndSaveCookie = function setDeliveryMethodAndSaveCookie(deliveryOrPickupMethodSelected) {\n    var deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : _objectSpread(_objectSpread({}, deliveryOrPickupMethodSelected), {}, {\n      deliveryAddress: deliveryAddress\n    });\n    setDeliveryMethod(deliveryMethod);\n    props.setDeliveryMethodSaved(deliveryMethod, false); // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n    // }\n  };\n\n  function inside(point, vs) {\n    var x = point[0],\n        y = point[1];\n    var inside = false;\n\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0],\n          yi = vs[i][1];\n      var xj = vs[j][0],\n          yj = vs[j][1];\n      var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  ;\n\n  var searchPickupZipCode = function searchPickupZipCode(e) {\n    var zipCode = e.target.value;\n    handleOnFocus(e);\n    setZipCode(zipCode);\n    var pickUpOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n      return deliveryMethod.isPickUp === true;\n    }); // const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode)\n\n    var methodFound = zipCode === resistenciaZipCode ? pickUpOptionsMethods : []; // e.stopPropagation();\n\n    setSearchResult(methodFound.length > 0 ? methodFound : null); // setSearchResult(pickUpOptionsMethods)\n  };\n\n  var setDelivery = function setDelivery(e, deli) {\n    // if (deli === DeliveryMethodsConstants.DELIVERY) {\n    //   setDeliveryMethodType(deli)\n    //   props.setDeliveryMethodSaved(DeliveryMethodsConstants.DELIVERY)\n    //   return;  \n    // }\n    e.stopPropagation();\n    props.setDeliveryMethodType(deli);\n    setSearchResult(null);\n    setZipCode('');\n  };\n\n  var deleteDeliveryAddress = function deleteDeliveryAddress() {\n    setSearchResult(null);\n    setDeliveryAddress('');\n    setNotInsideDeliveryAreas(false);\n  };\n\n  var handleOnFocus = function handleOnFocus(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }; // deliveryMethodSelected\n\n\n  var isPickUpSelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  var isDeliverySelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  var intl = useIntl();\n\n  var handleSelect = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n      var results, latLng, deliveryOptionsMethods;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDeliveryAddress(address);\n              _context.next = 3;\n              return geocodeByAddress(address);\n\n            case 3:\n              results = _context.sent;\n              _context.next = 6;\n              return getLatLng(results[0]);\n\n            case 6:\n              latLng = _context.sent;\n              setNotInsideDeliveryAreas(false);\n              deliveryOptionsMethods = [];\n\n              if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n                deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) {\n                    deliveryMethod.name = 'GRATIS';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n                deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) {\n                    deliveryMethod.name = 'GRATIS';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n                deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) {\n                    deliveryMethod.name = 'GRATIS';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n                deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) {\n                    deliveryMethod.name = 'GRATIS';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else {\n                setNotInsideDeliveryAreas(true);\n                console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n              }\n\n              setSearchResult(deliveryOptionsMethods);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSelect(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // const searchDeliveryZipCode =  (e) => {\n  //   handleOnFocus(e)\n  //   setZipCode(e.target.value)\n  //   const methodFound = deliveryOptionsMethods.filter(method => method.name.includes(zipCode));\n  //   e.stopPropagation();\n  //   // setSearchResult(deli ? methodFound : null)\n  //   setSearchResult(deliveryOptionsMethods)\n  // };\n\n\n  return __jsx(InformationBox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, __jsx(DeliveryTypesOptions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }), __jsx(FormattedMessage, {\n    id: deliveryMethodSaved ? 'selectDeliveryMethodSelected' : 'selectDeliveryMethod',\n    defaultMessage: \"Select Your Delivery Type\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  })), __jsx(DeliveryAddressSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, deliveryMethodSaved ? __jsx(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 20\n    }\n  }, __jsx(RadioGroupThree, {\n    items: [deliveryMethodSaved],\n    component: function component(item, index) {\n      var _deliveryMethodSaved;\n\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: ((_deliveryMethodSaved = deliveryMethodSaved) === null || _deliveryMethodSaved === void 0 ? void 0 : _deliveryMethodSaved.isPickUp) ? \"PICKUP \".concat(item.name) : \"DELIVERY\" //  ${item.name} ${deliveryMethodSaved?.deliveryAddress?.split(\",\")[0]}\n        // title={item.name}\n        ,\n        details: item.details,\n        link: item.isPickUp && item.pickUpAddress ? item.pickUpAddress : null,\n        name: \"schedule\",\n        checked: true,\n        withActionButtons: false,\n        onClick: function onClick() {\n          return setSubmitResult(_objectSpread(_objectSpread({}, submitResult), {}, {\n            delivery_method_id: item.id,\n            products: cartProduct\n          }));\n        },\n        onChange: function onChange() {\n          return dispatch({\n            type: 'SET_PRIMARY_SCHEDULE',\n            payload: item.id.toString()\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      });\n    },\n    secondaryComponent: deliveryMethodSaved ? __jsx(Button, {\n      className: \"changeButton\",\n      variant: \"text\",\n      type: \"button\",\n      onClick: resetDeliveryMethodAndDeleteSavedCookie,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }, __jsx(IconWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, __jsx(Plus, {\n      width: \"10px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    })), __jsx(FormattedMessage, {\n      id: \"changeDeliveryMethod\",\n      defaultMessage: \"changeDeliveryMethod\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    })) : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 20\n    }\n  })) : __jsx(DeliverySelection, {\n    deliveryMethodSaved: deliveryMethodSaved,\n    setDeliveryMethodSaved: setDeliveryMethod,\n    deliveryMethodTypeSelected: deliveryMethodTypeSelected,\n    setDeliveryMethodType: setDeliveryMethodType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }), selectedAddress && deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY && __jsx(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, \"o selecciona una direccion\", __jsx(RadioGroupTwo, {\n    items: delivery_address,\n    component: function component(item, index) {\n      var _deliveryMethodSaved2;\n\n      return __jsx(RadioCardTWO, {\n        id: index,\n        key: index,\n        address: item.address,\n        location: item.location,\n        instructions: item.instructions,\n        title: item.title,\n        name: \"address\",\n        isChecked: item.id === ((_deliveryMethodSaved2 = deliveryMethodSaved) === null || _deliveryMethodSaved2 === void 0 ? void 0 : _deliveryMethodSaved2.id),\n        onClick: function onClick() {\n          var _item$address, _item$address2;\n\n          setSubmitResult(_objectSpread(_objectSpread({}, submitResult), {}, {\n            delivery_address: \"\".concat(item.title, \" -\\n                              \").concat((_item$address = item.address) === null || _item$address === void 0 ? void 0 : _item$address.split(\",\")[0], \" \").concat((_item$address2 = item.address) === null || _item$address2 === void 0 ? void 0 : _item$address2.split(\",\")[1], \", \").concat(item.location, \", \").concat(item.instructions, \"\\n                              \"),\n            products: cartProduct\n          }));\n          setDeliveryMethod(item, false);\n        } // onEdit={() => handleEditDelete(item, index, 'edit', 'address')}\n        // onDelete={() =>\n        //   handleEditDelete(item, index, 'delete', 'address')\n        // }\n        ,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 27\n        }\n      });\n    },\n    secondaryComponent: selectedAddress ? null : __jsx(Button, {\n      className: \"addButton\",\n      variant: \"text\",\n      type: \"button\",\n      onClick: function onClick() {\n        return resetDeliveryMethodAndDeleteSavedCookie();\n      } // onClick={() =>\n      //   handleModal(UpdateAddressTwo,\n      //     {\n      //       item:{ address: deliveryMethodSaved?.deliveryAddress },\n      //       id\n      //     },\n      //     'add-address-modal')\n      // }\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 26\n      }\n    }, __jsx(IconWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, __jsx(Plus, {\n      width: \"10px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 27\n      }\n    })), __jsx(FormattedMessage, {\n      id: \"completeAddress\",\n      defaultMessage: \"Add New\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 25\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }))));\n};\n\n_s(DeliverySelection, \"yyfoe7w+hCCmlOIHy6SYjRkPfyk=\", false, function () {\n  return [useQuery, useIntl];\n});\n\n_c = DeliverySelection;\nexport default DeliverySelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliverySelection\");","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/delivery-selection/delivery-selection.tsx"],"names":["React","useState","FormattedMessage","useIntl","DeliveryMethodsConstants","plazaBelgranoPolygon","plazaEspañaPolygon","plazaNueveDeJulioPolygon","plazadoceDeOctubrePolygon","resistenciaZipCode","useQuery","DELIVERY_METHOD","Heading","geocodeByAddress","getLatLng","DeliverySelection","props","undefined","deliveryMethodSelected","setDeliveryMethod","deliverData","data","deliveryMethods","items","zipCode","setZipCode","searchResult","setSearchResult","deliveryAddress","setDeliveryAddress","notInsideDeliveryAreas","setNotInsideDeliveryAreas","setDeliveryMethodAndSaveCookie","deliveryOrPickupMethodSelected","deliveryMethod","isPickUpSelected","setDeliveryMethodSaved","inside","point","vs","x","y","i","j","length","xi","yi","xj","yj","intersect","searchPickupZipCode","e","target","value","handleOnFocus","pickUpOptionsMethods","filter","isPickUp","methodFound","setDelivery","deli","stopPropagation","setDeliveryMethodType","deleteDeliveryAddress","event","preventDefault","deliveryMethodTypeSelected","PICKUP","isDeliverySelected","DELIVERY","intl","handleSelect","address","results","latLng","deliveryOptionsMethods","lat","lng","details","includes","name","console","log","deliveryMethodSaved","item","index","id","pickUpAddress","setSubmitResult","submitResult","delivery_method_id","products","cartProduct","dispatch","type","payload","toString","resetDeliveryMethodAndDeleteSavedCookie","selectedAddress","delivery_address","location","instructions","title","split"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, deliveryMethodCookieKeyName, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport { ActionButton, ActionsButtons, BannerIcon, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Offer, OfferSection, Options, PickUpOptions, Wrapper } from './delivery-selection.style';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { alignContent, borderRadius, display, flexDirection, justifyContent, textAlign, width } from 'styled-system';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { ADD_ADDRESS } from 'graphql/mutation/address';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\n\ninterface Props {\n  deliveryMethodSaved: any\n  setDeliveryMethodSaved: any\n  deliveryMethodTypeSelected: any\n  setDeliveryMethodType: any\n}\n\nconst DeliverySelection: React.FC<Props> = ({ ...props  }) => {\n\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(undefined);\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n  const [notInsideDeliveryAreas, setNotInsideDeliveryAreas] = useState(false);\n\n  const setDeliveryMethodAndSaveCookie =  (deliveryOrPickupMethodSelected) => {\n    const deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : {...deliveryOrPickupMethodSelected, deliveryAddress};\n    setDeliveryMethod(deliveryMethod)\n    props.setDeliveryMethodSaved(deliveryMethod, false)\n\n    // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n    // }\n  };\n\n  function inside(point, vs) {\n    var x = point[0], y = point[1];\n    \n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0], yi = vs[i][1];\n        var xj = vs[j][0], yj = vs[j][1];\n        \n        var intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    \n    return inside;\n};\n\n  const searchPickupZipCode =  (e) => {\n    const zipCode = e.target.value;\n    handleOnFocus(e)\n    setZipCode(zipCode)\n    const pickUpOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n\n    // const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode)\n    const methodFound = zipCode === resistenciaZipCode ? pickUpOptionsMethods : [];\n\n    // e.stopPropagation();\n    setSearchResult(methodFound.length > 0 ? methodFound : null)\n    \n    // setSearchResult(pickUpOptionsMethods)\n  };\n\n  const setDelivery =  (e, deli: DeliveryMethodsConstants) => {\n    // if (deli === DeliveryMethodsConstants.DELIVERY) {\n    //   setDeliveryMethodType(deli)\n    //   props.setDeliveryMethodSaved(DeliveryMethodsConstants.DELIVERY)\n    //   return;  \n    // }\n    e.stopPropagation();\n    props.setDeliveryMethodType(deli)\n    setSearchResult(null)\n    setZipCode('')\n  };\n\n  const deleteDeliveryAddress =  () => {\n    setSearchResult(null)\n    setDeliveryAddress('')\n    setNotInsideDeliveryAreas(false)\n  };\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  // deliveryMethodSelected\n  const isPickUpSelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  const intl = useIntl();\n\n  const handleSelect = async (address) => {\n    setDeliveryAddress(address);\n    const results = await geocodeByAddress(address);\n    const latLng = await getLatLng(results[0]);\n    setNotInsideDeliveryAreas(false);\n    let deliveryOptionsMethods = [];\n\n    if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n      deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n      deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n        deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n          if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) { deliveryMethod.name = 'GRATIS'; return true;}\n          return !deliveryMethod.isPickUp;\n        });\n    } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n      deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else {\n      setNotInsideDeliveryAreas(true);\n      console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n    }\n    setSearchResult(deliveryOptionsMethods)\n  };\n    \n  // const searchDeliveryZipCode =  (e) => {\n  //   handleOnFocus(e)\n  //   setZipCode(e.target.value)\n    \n\n  //   const methodFound = deliveryOptionsMethods.filter(method => method.name.includes(zipCode));\n  //   e.stopPropagation();\n  //   // setSearchResult(deli ? methodFound : null)\n  //   setSearchResult(deliveryOptionsMethods)\n  // };\n\n  \n  return (\n          <InformationBox>\n            <Heading>\n                <DeliveryTypesOptions />\n                <FormattedMessage\n                   id={(deliveryMethodSaved) ? 'selectDeliveryMethodSelected' : 'selectDeliveryMethod'}\n                   defaultMessage='Select Your Delivery Type'\n                />\n              </Heading>\n              <DeliveryAddressSection>\n                { deliveryMethodSaved ? (\n                   <ButtonGroup>\n                   <RadioGroupThree\n                      items={[deliveryMethodSaved]}\n                      component={(item: any, index: any) => (\n                        <RadioCard\n                          id={item.id}\n                          key={item.id}\n                          title={deliveryMethodSaved?.isPickUp ? `PICKUP ${item.name}` : `DELIVERY`} //  ${item.name} ${deliveryMethodSaved?.deliveryAddress?.split(\",\")[0]}\n                          // title={item.name}\n                          details={item.details}\n                          link={item.isPickUp && item.pickUpAddress ? item.pickUpAddress : null}\n                          name='schedule'\n                          checked={true}\n                          withActionButtons={false}\n                          onClick={() => setSubmitResult({\n                            ...submitResult,\n                            delivery_method_id: item.id, \n                            products: cartProduct\n                          })}\n                          onChange={() =>{\n                            return(dispatch({\n                              type: 'SET_PRIMARY_SCHEDULE',\n                              payload: item.id.toString(),\n                            }))\n                            }\n                          }\n                        />\n                      )}\n                     secondaryComponent={ deliveryMethodSaved ? (\n                      <Button\n                        className='changeButton'\n                        variant='text'\n                        type='button'\n                        onClick={resetDeliveryMethodAndDeleteSavedCookie}\n                      >\n                        <IconWrapper>\n                            <Plus width='10px' />\n                          </IconWrapper>\n                        <FormattedMessage id='changeDeliveryMethod' defaultMessage='changeDeliveryMethod' />\n                      </Button>\n                     ) : (null)\n                     }\n                   />\n                 </ButtonGroup>\n                ) : (\n                  <DeliverySelection\n                    deliveryMethodSaved={deliveryMethodSaved}\n                    setDeliveryMethodSaved={setDeliveryMethod}\n                    deliveryMethodTypeSelected={deliveryMethodTypeSelected}\n                    setDeliveryMethodType={setDeliveryMethodType}  \n                  />\n                )}\n                {/* <InformationBox>\n                    <Heading>\n                      <FormattedMessage\n                        id='checkoutDeliveryAddress'\n                        defaultMessage='Delivery Address'\n                      />\n                      <DeliveryTypesOptions />\n                    </Heading>\n                    <ButtonGroup></ButtonGroup> */}\n                { selectedAddress && deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY && (\n                  <ButtonGroup>\n                    {\"o selecciona una direccion\"}\n                    <RadioGroupTwo\n                      items={delivery_address}\n                        component={(item: any, index: any) => (\n                          <RadioCardTWO \n                            id={index}\n                            key={index}\n                            address={item.address}\n                            location={item.location}\n                            instructions={item.instructions}\n                            title={item.title}\n                            name='address'\n                            isChecked={item.id === deliveryMethodSaved?.id}\n                            onClick={() => {setSubmitResult({\n                              ...submitResult,\n                              delivery_address:  `${item.title} -\n                              ${item.address?.split(\",\")[0]} ${item.address?.split(\",\")[1]}, ${item.location}, ${item.instructions}\n                              `,\n                              products: cartProduct\n                            }); setDeliveryMethod(item, false);}}\n                            // onEdit={() => handleEditDelete(item, index, 'edit', 'address')}\n                            // onDelete={() =>\n                            //   handleEditDelete(item, index, 'delete', 'address')\n                            // }\n                          />\n                        )}\n                      secondaryComponent={ selectedAddress ? null :\n                        (<Button\n                        className='addButton'\n                        variant='text'\n                        type='button'\n                        onClick={() => resetDeliveryMethodAndDeleteSavedCookie()}\n                        // onClick={() =>\n                        //   handleModal(UpdateAddressTwo,\n                        //     {\n                        //       item:{ address: deliveryMethodSaved?.deliveryAddress },\n                        //       id\n                        //     },\n                        //     'add-address-modal')\n                        // }\n                      >\n                        <IconWrapper>\n                          <Plus width='10px' />\n                        </IconWrapper>\n                        <FormattedMessage id='completeAddress' defaultMessage='Add New' />\n                      </Button>)\n                      }\n                    />\n                  </ButtonGroup>\n                )}\n                \n              </DeliveryAddressSection>\n            </InformationBox>\n  );\n\n};\n\nexport default DeliverySelection;\n\n"]},"metadata":{},"sourceType":"module"}