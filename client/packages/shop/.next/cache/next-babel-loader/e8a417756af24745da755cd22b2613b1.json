{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/address-card/address-card-two.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_ADDRESS, UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl'; // Shape of form values\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: props => {\n    const ID = props.item.id;\n    const addressItem = props.item.item;\n    return {\n      id: ID || null,\n      addressId: addressItem.id || null,\n      title: addressItem.title || '',\n      address: addressItem.address || '',\n      instructions: addressItem.instructions || '',\n      location: addressItem.location || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required('Required!'),\n    address: Yup.string().required('Required'),\n    location: Yup.string().required('Required')\n  }),\n  handleSubmit: values => {// do submitting things\n  }\n});\n\nconst UpdateAddressTwo = props => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n    handleReset,\n    isSubmitting\n  } = props;\n  const ID = item.id;\n  let newAddressid = null;\n  const addressItem = item.item;\n  const addressValue = {\n    id: ID,\n    addressId: addressItem.id,\n    title: values.title,\n    address: values.address,\n    location: values.location,\n    instructions: values.instructions,\n    is_primary: true\n  };\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const intl = useIntl();\n  const [updateAddressMutation] = useMutation(UPDATE_ADDRESS);\n  const [addAddressMutation] = useMutation(ADD_ADDRESS);\n\n  const handleSubmit = async () => {\n    if (isValid) {\n      const {\n        id,\n        addressId,\n        title,\n        address,\n        location,\n        instructions\n      } = addressValue;\n\n      if (Object.keys(addressItem).length === 0) {\n        const {\n          data\n        } = await addAddressMutation({\n          variables: {\n            id,\n            title,\n            address,\n            location,\n            instructions\n          }\n        });\n        newAddressid = data.addDeliveryAddress.id;\n        addressValue.id = data.addDeliveryAddress.id;\n        dispatch({\n          type: 'ADD_ADDRESS',\n          payload: addressValue\n        });\n        closeModal();\n      } else {\n        const updateAddressData = await updateAddressMutation({\n          variables: {\n            id,\n            addressId,\n            title,\n            address,\n            location,\n            instructions\n          }\n        });\n        dispatch({\n          type: 'UPDATE_ADDRESS',\n          payload: {\n            value: addressValue,\n            id: addressItem.id\n          }\n        });\n        closeModal();\n      }\n    }\n  };\n\n  function inside(point, vs) {\n    var x = point[0],\n        y = point[1];\n    var inside = false;\n\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0],\n          yi = vs[i][1];\n      var xj = vs[j][0],\n          yj = vs[j][1];\n      var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  ;\n  const plazadoceDeOctubrePolygon = [[-27.438348, -58.972117], [-27.451195, -58.986501], [-27.441537, -58.997427], [27.428763, -58.983112]];\n  const plazaBelgranoPolygon = [[-27.4481, -58.96074], [-27.43829, -58.9722], [-27.45114, -58.98647], [-27.46134, -58.97495]];\n  const plazaEspañaPolygon = [[-27.45114, -58.98647], [-27.46134, -58.97495], [-27.47423, -58.98923], [-27.46392, -59.00075]];\n  const plazaNueveDeJulioPolygon = [[-27.46392, -59.00075], [-27.451147, -58.986537], [-27.44148, -58.99731], [-27.45442, -59.01161]];\n\n  const handleSelect = async address => {\n    setDeliveryAddress(address);\n    const results = await geocodeByAddress(address);\n    const latLng = await getLatLng(results[0]);\n    setNotInsideDeliveryAreas(false);\n    let deliveryOptionsMethods = [];\n\n    if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n      var _deliveryMethods;\n\n      deliveryOptionsMethods = (_deliveryMethods = deliveryMethods) === null || _deliveryMethods === void 0 ? void 0 : _deliveryMethods.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) {\n          deliveryMethod.name = 'Delivery Gratis';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n      var _deliveryMethods2;\n\n      deliveryOptionsMethods = (_deliveryMethods2 = deliveryMethods) === null || _deliveryMethods2 === void 0 ? void 0 : _deliveryMethods2.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) {\n          deliveryMethod.name = 'Delivery Gratis';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n      var _deliveryMethods3;\n\n      deliveryOptionsMethods = (_deliveryMethods3 = deliveryMethods) === null || _deliveryMethods3 === void 0 ? void 0 : _deliveryMethods3.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) {\n          deliveryMethod.name = 'Delivery Gratis';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n      var _deliveryMethods4;\n\n      deliveryOptionsMethods = (_deliveryMethods4 = deliveryMethods) === null || _deliveryMethods4 === void 0 ? void 0 : _deliveryMethods4.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) {\n          deliveryMethod.name = 'Delivery Gratis';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else {\n      setNotInsideDeliveryAreas(true);\n      console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n    }\n\n    setSearchResult(deliveryOptionsMethods);\n  };\n\n  return __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, intl.formatMessage({\n    id: (addressItem === null || addressItem === void 0 ? void 0 : addressItem.id) ? 'editAddressId' : 'addNewAddressId',\n    defaultMessage: 'Address name'\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"title\",\n    type: \"text\",\n    width: \"100%\",\n    placeholder: intl.formatMessage({\n      id: 'addressRefId',\n      defaultMessage: 'Address name'\n    }),\n    error: touched.title && errors.title,\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"address\",\n    type: \"text\",\n    width: \"100%\",\n    placeholder: intl.formatMessage({\n      id: 'addressId',\n      defaultMessage: 'Address'\n    }),\n    error: touched.address && errors.address,\n    value: values.address,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"location\",\n    type: \"text\",\n    placeholder: intl.formatMessage({\n      id: 'locationId',\n      defaultMessage: 'Localidad'\n    }),\n    width: \"100%\",\n    error: touched.location && errors.location,\n    value: values.location,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"instructions\",\n    as: \"textarea\",\n    width: \"100%\",\n    placeholder: intl.formatMessage({\n      id: 'instructionsId',\n      defaultMessage: 'Delivery instructions'\n    }),\n    error: touched.instructions && errors.instructions,\n    value: values.instructions,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  })), __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"submit\",\n    style: {\n      width: '100%',\n      height: '44px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"savedAddressId\",\n    defaultMessage: \"Save Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default FormEnhancer(UpdateAddressTwo);","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/address-card/address-card-two.tsx"],"names":["React","useContext","Yup","withFormik","Form","closeModal","TextField","Button","useMutation","ADD_ADDRESS","UPDATE_ADDRESS","FieldWrapper","Heading","ProfileContext","FormattedMessage","useIntl","FormEnhancer","mapPropsToValues","props","ID","item","id","addressItem","addressId","title","address","instructions","location","validationSchema","object","shape","string","required","handleSubmit","values","UpdateAddressTwo","isValid","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","newAddressid","addressValue","is_primary","state","dispatch","intl","updateAddressMutation","addAddressMutation","Object","keys","length","data","variables","addDeliveryAddress","type","payload","updateAddressData","value","inside","point","vs","x","y","i","j","xi","yi","xj","yj","intersect","plazadoceDeOctubrePolygon","plazaBelgranoPolygon","plazaEspañaPolygon","plazaNueveDeJulioPolygon","handleSelect","setDeliveryAddress","results","geocodeByAddress","latLng","getLatLng","setNotInsideDeliveryAreas","deliveryOptionsMethods","lat","lng","deliveryMethods","filter","deliveryMethod","isPickUp","details","includes","name","console","log","setSearchResult","formatMessage","defaultMessage","width","height"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, FormikProps, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_ADDRESS, UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\n// Shape of form values\ninterface FormValues {\n  id: any | null;\n  addressId: any | null,\n  title: string;\n  address: string;\n  location?: string;\n  instructions?: string;\n}\n\n// The type of props MyForm receives\ninterface MyFormProps {\n  item?: any | null;\n  id?: any | null;\n}\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik<MyFormProps, FormValues>({\n  // Transform outer props into form values\n  mapPropsToValues: (props) => {\n    const ID = props.item.id;\n    const addressItem = props.item.item;\n    return {\n      id: ID || null,\n      addressId: addressItem.id || null,\n      title: addressItem.title || '',\n      address: addressItem.address || '',\n      instructions: addressItem.instructions || '',\n      location: addressItem.location || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required('Required!'),\n    address: Yup.string().required('Required'),\n    location: Yup.string().required('Required'),\n  }),\n  handleSubmit: (values) => {\n    // do submitting things\n  },\n});\n\nconst UpdateAddressTwo = (props: FormikProps<FormValues> & MyFormProps) => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n\n    handleReset,\n    isSubmitting,\n  } = props;\n  const ID = item.id;\n  let newAddressid = null;\n  const addressItem = item.item;\n  const addressValue = {\n    id: ID,\n    addressId: addressItem.id, \n    title: values.title,\n    address: values.address,\n    location: values.location,\n    instructions: values.instructions,\n    is_primary: true\n  };\n  const { state, dispatch } = useContext(ProfileContext);\n  const intl = useIntl();\n\n  const [updateAddressMutation] = useMutation(UPDATE_ADDRESS);\n  const [addAddressMutation] = useMutation(ADD_ADDRESS);\n\n  const handleSubmit = async () => {\n    if (isValid) {\n      const {id, addressId, title, address, location, instructions} = addressValue;\n      if (Object.keys(addressItem).length === 0) {\n        const {data}  = await addAddressMutation({\n          variables: { \n            id,\n            title,\n            address, \n            location,\n            instructions\n           },\n        });\n        newAddressid = data.addDeliveryAddress.id;\n        addressValue.id = data.addDeliveryAddress.id;\n        dispatch({\n          type: 'ADD_ADDRESS',\n          payload: addressValue \n        });\n        closeModal();\n      }else{\n        const updateAddressData = await updateAddressMutation({\n          variables: { \n            id,\n            addressId,\n            title,\n            address, \n            location,\n            instructions\n           }\n        });\n        dispatch({\n          type: 'UPDATE_ADDRESS',\n          payload: { value: addressValue, id: addressItem.id }\n\n        });\n        closeModal();\n      }\n    }\n  };\n\n  function inside(point, vs) {\n    var x = point[0], y = point[1];\n    \n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0], yi = vs[i][1];\n        var xj = vs[j][0], yj = vs[j][1];\n        \n        var intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    \n    return inside;\n};\n\nconst plazadoceDeOctubrePolygon = [\n  [-27.438348, -58.972117],\n  [-27.451195, -58.986501],\n  [-27.441537, -58.997427],\n  [27.428763, -58.983112],\n]\n\nconst plazaBelgranoPolygon = [\n  [-27.4481, -58.96074],\n  [-27.43829, -58.9722],\n  [-27.45114, -58.98647],\n  [-27.46134, -58.97495],\n]\n\nconst plazaEspañaPolygon = [\n  [-27.45114, -58.98647],\n  [-27.46134, -58.97495],\n  [-27.47423, -58.98923],\n  [-27.46392, -59.00075],\n]\n\nconst plazaNueveDeJulioPolygon = [\n  [-27.46392, -59.00075],\n  [-27.451147, -58.986537],\n  [-27.44148, -58.99731],\n  [-27.45442, -59.01161],\n]\n\nconst handleSelect = async (address) => {\n  setDeliveryAddress(address);\n  const results = await geocodeByAddress(address);\n  const latLng = await getLatLng(results[0]);\n  setNotInsideDeliveryAreas(false);\n  let deliveryOptionsMethods = [];\n\n  if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n    deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n      return !deliveryMethod.isPickUp;\n    });\n  } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n    deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n      return !deliveryMethod.isPickUp;\n    });\n  } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n      deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n  } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n    deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n      return !deliveryMethod.isPickUp;\n    });\n  } else {\n    setNotInsideDeliveryAreas(true);\n    console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n  }\n  setSearchResult(deliveryOptionsMethods)\n};\n\n  return (\n    <Form>\n      <Heading>{intl.formatMessage({ id: addressItem?.id ? 'editAddressId' : 'addNewAddressId', defaultMessage: 'Address name' })}</Heading>\n      <FieldWrapper>\n        <TextField\n          id=\"title\"\n          type=\"text\"\n          width='100%'\n          placeholder={intl.formatMessage({ id: 'addressRefId', defaultMessage: 'Address name' })}\n          error={touched.title && errors.title}\n          value={values.title}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"address\"\n          type=\"text\"\n          width='100%'\n          placeholder={intl.formatMessage({ id: 'addressId', defaultMessage: 'Address' })}\n          error={touched.address && errors.address}\n          value={values.address}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"location\"\n          type=\"text\"\n          placeholder={intl.formatMessage({ id: 'locationId', defaultMessage: 'Localidad' })}\n          width='100%'\n          error={touched.location && errors.location}\n          value={values.location}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"instructions\"\n          as=\"textarea\"\n          width='100%'\n          placeholder={intl.formatMessage({ id: 'instructionsId', defaultMessage: 'Delivery instructions' })}\n          error={touched.instructions && errors.instructions}\n          value={values.instructions}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n\n      <Button\n        onClick={handleSubmit}\n        type=\"submit\"\n        style={{ width: '100%', height: '44px' }}\n      >\n        <FormattedMessage id=\"savedAddressId\" defaultMessage=\"Save Address\" />\n      </Button>\n    </Form>\n  );\n};\n\nexport default FormEnhancer(UpdateAddressTwo);\n"]},"metadata":{},"sourceType":"module"}