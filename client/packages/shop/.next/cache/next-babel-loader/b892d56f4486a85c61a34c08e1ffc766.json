{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/client-only/client-only.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nexport { ClientOnly };\nimport React from 'react';\n\nfunction ClientOnly(props) {\n  _s();\n\n  var _React$useState = React.useState(function () {\n    return props.fallback;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Component = _React$useState2[0],\n      setComponent = _React$useState2[1];\n\n  React.useEffect(function () {\n    setComponent(function () {\n      return React.lazy(props.component);\n    });\n  }, []);\n  return __jsx(React.Suspense, {\n    fallback: props.fallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(Component, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(ClientOnly, \"39X9/QD+D4C80iqUzg4Mcy2Gf94=\");\n\n_c = ClientOnly;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientOnly\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/client-only/client-only.tsx"],"names":["ClientOnly","React","props","useState","fallback","Component","setComponent","useEffect","lazy","component"],"mappings":";;;;;;AAAA,SAASA,UAAT;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASD,UAAT,CAAoBE,KAApB,EAA2B;AAAA;;AAAA,wBACSD,KAAK,CAACE,QAAN,CAAe;AAAA,WAAMD,KAAK,CAACE,QAAZ;AAAA,GAAf,CADT;AAAA;AAAA,MAClBC,SADkB;AAAA,MACPC,YADO;;AAGzBL,EAAAA,KAAK,CAACM,SAAN,CAAgB,YAAM;AACpBD,IAAAA,YAAY,CAAC;AAAA,aAAML,KAAK,CAACO,IAAN,CAAWN,KAAK,CAACO,SAAjB,CAAN;AAAA,KAAD,CAAZ;AACD,GAFD,EAEG,EAFH;AAIA,SACE,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,QAAQ,EAAEP,KAAK,CAACE,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;GAZQJ,U;;KAAAA,U","sourcesContent":["export { ClientOnly }\n\nimport React from 'react'\n\nfunction ClientOnly(props) {\n  const [Component, setComponent] = React.useState(() => props.fallback)\n\n  React.useEffect(() => {\n    setComponent(() => React.lazy(props.component))\n  }, [])\n\n  return (\n    <React.Suspense fallback={props.fallback}>\n      <Component />\n    </React.Suspense>\n  )\n}"]},"metadata":{},"sourceType":"module"}