{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { Input } from 'components/forms/input';\nconst FieldWrapper = styled.div.withConfig({\n  displayName: \"text-field__FieldWrapper\",\n  componentId: \"b1ey9e-0\"\n})([\"textarea{height:auto;min-height:171px;padding-top:15px;resize:none;}\"]);\nconst InputFeedback = styled.span.withConfig({\n  displayName: \"text-field__InputFeedback\",\n  componentId: \"b1ey9e-1\"\n})([\"font-family:\", \";font-size:\", \"px;font-weight:\", \";color:\", \";padding-top:10px;display:flex;justify-content:flex-end;\"], themeGet('fonts.body', 'sans-serif'), themeGet('fontSizes.sm', '13'), themeGet('fontWeights.regular', '400'), themeGet('colors.secondary.hover', '#FF282F')); // const Input = styled.input`\n//   width: 100%;\n//   height: 54px;\n//   border-radius: 6px;\n//   font-family: ${themeGet('fontFamily.0', 'Lato, sans-serif')};\n//   border: 1px solid ${themeGet('colors.gray.700', '#e6e6e6')};\n//   color: ${themeGet('colors.text.bold', '#0D1136')};\n//   font-size: ${themeGet('fontSizes.base', '15')}px;\n//   font-weight: ${themeGet('fontWeights.regular', '400')};\n//   line-height: 19px;\n//   padding: 0 18px;\n//   box-sizing: border-box;\n//   transition: border-color 0.25s ease;\n//   &:hover,\n//   &:focus {\n//     outline: 0;\n//   }\n//   &:focus {\n//     border-color: ${themeGet('colors.primary', '#009e7f')};\n//   }\n//   &::placeholder {\n//     color: ${themeGet('colors.text.regular', '#77798C')};\n//   }\n// `;\n\nconst TextField = (_ref) => {\n  let {\n    type,\n    id,\n    label,\n    error,\n    value,\n    onChange,\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"type\", \"id\", \"label\", \"error\", \"value\", \"onChange\", \"className\"]);\n\n  return __jsx(FieldWrapper, null, label && __jsx(\"label\", {\n    className: \"label\",\n    htmlFor: id\n  }, label), __jsx(Input, _extends({\n    id: id,\n    type: type,\n    value: value,\n    onChange: onChange\n  }, props)), error && __jsx(InputFeedback, null, error));\n};\n\nexport default TextField;","map":null,"metadata":{},"sourceType":"module"}