{"ast":null,"code":"var _jsxFileName = \"/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two-sections/delivery-schedule.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport { ButtonGroup } from '../checkout-two/checkout-two.style';\n\nconst DeliverySchedule = (_ref) => {\n  let props = Object.assign({}, _ref);\n  const [deliveryMethodSelected, setDeliveryMethodSelected] = React.useState(undefined);\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const {\n    0: deliveryAddress,\n    1: setDeliveryAddress\n  } = useState(\"\");\n  const {\n    0: notInsideDeliveryAreas,\n    1: setNotInsideDeliveryAreas\n  } = useState(false);\n\n  const handleOnFocus = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const intl = useIntl();\n  return __jsx(React.Fragment, null, __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(RadioGroupThree, {\n    items: props.schedulesOfDeliveryMethodSelected,\n    component: (item, index) => {\n      var _props$deliveryMethod;\n\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: item.label,\n        details: item.details // link={item.isPickUp && item.pickUpAddress ? item.pickUpAddress : null}\n        ,\n        name: \"schedule\",\n        checked: item.id === ((_props$deliveryMethod = props.deliveryMethodSaved) === null || _props$deliveryMethod === void 0 ? void 0 : _props$deliveryMethod.id),\n        withActionButtons: false,\n        onChange: () => props.setDeliverySchedule(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }))) // <div style={{ paddingTop: '20px'}}>\n  //   {searchResult?.length ? searchResult.map((deliveryMethod, i) => {\n  //     return (\n  //       <PickUpOptions>\n  //         <Checkbox\n  //             keyName={`${i}-deliveryMethods`}\n  //             isChecked={deliveryMethodSelected?.id === deliveryMethod.id}\n  //             labelText={`${deliveryMethod.name} - ${deliveryMethod.details} `}\n  //             id={`deliveryMethod-${i}`}\n  //             onChange={e => {\n  //                 setDeliveryMethodAndSaveCookie(deliveryMethodSelected?.id === deliveryMethod.id ? null : deliveryMethod)\n  //             }}\n  //         />\n  //       </PickUpOptions>\n  //     )}) : ('')\n  //   }\n  // </div>\n  ;\n};\n\nexport default DeliverySchedule;","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two-sections/delivery-schedule.tsx"],"names":["React","useState","useIntl","RadioCard","RadioGroupThree","ButtonGroup","DeliverySchedule","props","deliveryMethodSelected","setDeliveryMethodSelected","undefined","zipCode","setZipCode","searchResult","setSearchResult","deliveryAddress","setDeliveryAddress","notInsideDeliveryAreas","setNotInsideDeliveryAreas","handleOnFocus","event","preventDefault","stopPropagation","intl","schedulesOfDeliveryMethodSelected","item","index","id","label","details","deliveryMethodSaved","setDeliverySchedule"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+D,OAA/D;AACA,SAA2BC,OAA3B,QAA0C,YAA1C;AAeA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,SAASC,WAAT,QAA4B,oCAA5B;;AAQA,MAAMC,gBAAiC,GAAG,UAAmB;AAAA,MAAbC,KAAa;AAE3D,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDT,KAAK,CAACC,QAAN,CAAeS,SAAf,CAA5D;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCd,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxC;AACA,QAAM;AAAA,OAACc,eAAD;AAAA,OAAkBC;AAAlB,MAAwCf,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM;AAAA,OAACgB,sBAAD;AAAA,OAAyBC;AAAzB,MAAsDjB,QAAQ,CAAC,KAAD,CAApE;;AAKA,QAAMkB,aAAa,GAAKC,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,eAAN;AACD,GAHD;;AAKA,QAAMC,IAAI,GAAGrB,OAAO,EAApB;AAGA,SACE,4BACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,MAAC,eAAD;AACE,IAAA,KAAK,EAAEK,KAAK,CAACiB,iCADf;AAEE,IAAA,SAAS,EAAE,CAACC,IAAD,EAAYC,KAAZ;AAAA;;AAAA,aACT,MAAC,SAAD;AACE,QAAA,EAAE,EAAED,IAAI,CAACE,EADX;AAEE,QAAA,GAAG,EAAEF,IAAI,CAACE,EAFZ;AAGE,QAAA,KAAK,EAAEF,IAAI,CAACG,KAHd;AAIE,QAAA,OAAO,EAAEH,IAAI,CAACI,OAJhB,CAKE;AALF;AAME,QAAA,IAAI,EAAC,UANP;AAOE,QAAA,OAAO,EAAEJ,IAAI,CAACE,EAAL,+BAAYpB,KAAK,CAACuB,mBAAlB,0DAAY,sBAA2BH,EAAvC,CAPX;AAQE,QAAA,iBAAiB,EAAE,KARrB;AASE,QAAA,QAAQ,EAAE,MAAMpB,KAAK,CAACwB,mBAAN,CAA0BN,IAA1B,CATlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADS;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CADJ,CADF,CAuBsB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCtB;AA0CD,CA9DD;;AAgEA,eAAenB,gBAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, deliveryCarrySelectOptions, deliveryMethodCookieKeyName, plazaBelgranoPolygon, plazaEspa√±aPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport { ActionButton, ActionsButtons, BannerIcon, Button, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Offer, OfferSection, Options, PickUpOptions, Wrapper } from './delivery-selection.style';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { alignContent, borderRadius, display, flexDirection, justifyContent, textAlign, width } from 'styled-system';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { ADD_ADDRESS } from 'graphql/mutation/address';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { Plus } from 'assets/icons/PlusMinus';\nimport { IconWrapper } from 'components/payment-group/payment-group.style';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport { ButtonGroup } from '../checkout-two/checkout-two.style';\n\ninterface Props {\n  setDeliverySchedule: any\n  schedulesOfDeliveryMethodSelected: any\n  deliveryMethodSaved: any\n}\n\nconst DeliverySchedule: React.FC<Props> = ({ ...props  }) => {\n\n  const [deliveryMethodSelected, setDeliveryMethodSelected] = React.useState(undefined);\n  \n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n  const [notInsideDeliveryAreas, setNotInsideDeliveryAreas] = useState(false);\n\n\n\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  const intl = useIntl();\n\n  \n  return (\n    <>\n        <ButtonGroup>\n              <RadioGroupThree\n                items={props.schedulesOfDeliveryMethodSelected}\n                component={(item: any, index: any) => (\n                  <RadioCard\n                    id={item.id}\n                    key={item.id}\n                    title={item.label}\n                    details={item.details}\n                    // link={item.isPickUp && item.pickUpAddress ? item.pickUpAddress : null}\n                    name='schedule'\n                    checked={item.id === props.deliveryMethodSaved?.id}\n                    withActionButtons={false}\n                    onChange={() => props.setDeliverySchedule(item)}\n                  />\n                )}\n              />\n            </ButtonGroup>\n      </>\n\n                      \n                        // <div style={{ paddingTop: '20px'}}>\n                        //   {searchResult?.length ? searchResult.map((deliveryMethod, i) => {\n                        //     return (\n                        //       <PickUpOptions>\n                        //         <Checkbox\n                        //             keyName={`${i}-deliveryMethods`}\n                        //             isChecked={deliveryMethodSelected?.id === deliveryMethod.id}\n                        //             labelText={`${deliveryMethod.name} - ${deliveryMethod.details} `}\n                        //             id={`deliveryMethod-${i}`}\n                        //             onChange={e => {\n                        //                 setDeliveryMethodAndSaveCookie(deliveryMethodSelected?.id === deliveryMethod.id ? null : deliveryMethod)\n                        //             }}\n                        //         />\n                        //       </PickUpOptions>\n                        //     )}) : ('')\n                        //   }\n                        // </div>\n        \n  );\n};\n\nexport default DeliverySchedule;\n\n"]},"metadata":{},"sourceType":"module"}