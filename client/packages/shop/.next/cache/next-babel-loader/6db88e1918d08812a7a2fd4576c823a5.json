{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Modal } from '@redq/reuse-modal';\nimport { openModal } from '@redq/reuse-modal';\nimport { SEO } from 'components/seo';\nimport Checkout from 'features/checkouts/checkout-two/checkout-two';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { PAYMENT_OPTION } from 'graphql/query/paymentoption';\nimport { ProfileProvider } from 'contexts/profile/profile.provider';\nimport ErrorMessage from 'components/error-message/error-message';\nimport ErrorMessageTwo from 'components/error-message/error-message-two';\nimport { AuthContext } from \"../contexts/auth/auth.context\";\nimport { useIntl } from 'react-intl';\nimport { Button } from \"../components/button/button\";\nimport styled from \"styled-components\";\nimport AuthenticationForm from \"../features/authentication-form\";\nconst LoginMessageDiv = styled.aside.withConfig({\n  displayName: \"checkout__LoginMessageDiv\",\n  componentId: \"ca89yr-0\"\n})({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '15vh',\n  padding: '0 1.5rem 1.5rem',\n  fontSize: '22px',\n  backgroundColor: '#fff'\n});\n\nconst CheckoutPage = ({\n  deviceType\n}) => {\n  const {\n    data: deliverData,\n    error: deliveryError,\n    loading: deliveryLoading,\n    refetch: deliveryRefetch\n  } = useQuery(DELIVERY_METHOD);\n  const {\n    data: paymentData,\n    error: paymentError,\n    loading: paymentLoading,\n    refetch: paymentRefetch\n  } = useQuery(PAYMENT_OPTION);\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_LOGGED_IN_USER);\n  const intl = useIntl();\n  const {\n    authDispatch\n  } = useContext(AuthContext);\n\n  const toggleSignInForm = () => {\n    authDispatch({\n      type: 'SIGNIN'\n    });\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto'\n      }\n    });\n  };\n\n  if (loading || deliveryLoading || paymentLoading) {\n    return __jsx(ErrorMessage, {\n      message: 'Loading...'\n    });\n  }\n\n  if (error || deliveryError || paymentError) {\n    // @ts-ignore\n    const err = error || deliveryError || paymentError;\n    return __jsx(React.Fragment, null, __jsx(ErrorMessageTwo, {\n      message: intl.formatMessage({\n        id: 'primaryId',\n        defaultMessage: err.toString()\n      })\n    }), __jsx(LoginMessageDiv, null, __jsx(Modal, null, __jsx(Button, {\n      type: \"button\",\n      onClick: toggleSignInForm,\n      size: \"big\",\n      style: {\n        width: '200px'\n      }\n    }, \"Login Now\"))));\n  }\n\n  const token = 'true';\n  deliveryRefetch();\n  paymentRefetch();\n  console.dir(deliverData.deliveryMethods);\n  console.dir(paymentData.paymentOptions);\n\n  const checkoutData = _objectSpread(_objectSpread({}, data.getUser), {}, {\n    deliveryMethods: [],\n    paymentMethods: []\n  });\n\n  console.dir(deliverData);\n  console.dir(paymentData);\n\n  if (checkoutData.deliveryMethods.length == 0 && (deliverData || deliverData.deliveryMethods)) {\n    checkoutData.deliveryMethods = [...deliverData.deliveryMethods.items];\n  }\n\n  if (checkoutData.paymentMethods.length == 0 && (paymentData || paymentData.paymentOptions)) {\n    checkoutData.paymentMethods = [...paymentData.paymentOptions.items];\n  }\n\n  return __jsx(React.Fragment, null, __jsx(SEO, {\n    title: \"Checkout - Ditto\",\n    description: \"Checkout Details\"\n  }), __jsx(ProfileProvider, {\n    initData: checkoutData\n  }, __jsx(Modal, null, __jsx(Checkout, {\n    token: token,\n    deviceType: deviceType\n  }))));\n};\n\nexport default CheckoutPage;","map":null,"metadata":{},"sourceType":"module"}