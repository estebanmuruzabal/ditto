{"ast":null,"code":"var _jsxFileName = \"/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two-sections/delivery-selection.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { ActionButton, ActionsButtons, BannerIcon, Button, ButtonGroup, CardWrapper, Container, DeleteButtonsContainer, DeliveryMethods, DeliveryText, Heading, Input, Options, Wrapper } from './delivery-selection.style';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { Plus } from 'assets/icons/PlusMinus';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport { IconWrapper } from '../checkout-two/checkout-two.style';\n\nconst DeliverySelection = (_ref) => {\n  var _props$userSavedAddre;\n\n  let props = Object.assign({}, _ref);\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const {\n    0: deliveryAddressAutocomplete,\n    1: setDeliveryAddressAutocomplete\n  } = useState(\"\");\n  const {\n    0: insideDeliveryArea,\n    1: setInsideDeliveryArea\n  } = useState(true); // const setDeliveryMethod =  (deliveryOrPickupMethodSelected) => {\n  //   const deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : {...deliveryOrPickupMethodSelected, deliveryAddressAutocomplete};\n  //   setDeliveryMethodSelected(deliveryMethod)\n  //   props.setDeliveryAddress(deliveryMethod, false)\n  //   // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n  //   // }\n  // };\n\n  function inside(point, vs) {\n    var x = point[0],\n        y = point[1];\n    var inside = false;\n\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0],\n          yi = vs[i][1];\n      var xj = vs[j][0],\n          yj = vs[j][1];\n      var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  ;\n\n  const searchPickupZipCode = e => {\n    var _props$deliveryMethod;\n\n    const zipCode = e.target.value;\n    handleOnFocus(e);\n    setZipCode(zipCode);\n    const pickUpOptionsMethods = (_props$deliveryMethod = props.deliveryMethods) === null || _props$deliveryMethod === void 0 ? void 0 : _props$deliveryMethod.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    }); // const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode)\n\n    const methodsFound = zipCode === resistenciaZipCode ? pickUpOptionsMethods : []; // e.stopPropagation();\n\n    props.setDeliveryMethodsSelected(methodsFound.length > 0 ? methodsFound : null);\n  };\n\n  const setDelivery = (e, deli) => {\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    props.setDeliveryMethodType(deli);\n    props.setDeliveryMethodsSelected(null);\n    setZipCode('');\n  };\n\n  const deleteDeliveryAddress = () => {\n    setDeliveryAddressAutocomplete('');\n    setInsideDeliveryArea(true);\n    setZipCode('');\n  };\n\n  const deleteDeliverySelection = () => {\n    props.setDeliveryMethodsSelected(null);\n    props.setDeliveryAddress(null, true);\n    setDeliveryAddressAutocomplete('');\n    setInsideDeliveryArea(true);\n    props.setDeliveryMethodType(null);\n    setZipCode('');\n  };\n\n  const handleOnFocus = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }; // deliveryMethodSelected\n\n\n  const isPickUpSelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  const intl = useIntl();\n\n  const handleSelect = async (address, addressAlreadyAdded) => {\n    const results = await geocodeByAddress(address);\n    console.log('results', results);\n    const latLng = await getLatLng(results[0]);\n    let deliveryOptionsMethods = [];\n    let insideDeliveryArea = false;\n\n    if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n      var _props$deliveryMethod2;\n\n      console.log('inside plazadoceDeOctubrePolygon');\n      insideDeliveryArea = true;\n      deliveryOptionsMethods = (_props$deliveryMethod2 = props.deliveryMethods) === null || _props$deliveryMethod2 === void 0 ? void 0 : _props$deliveryMethod2.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n      var _props$deliveryMethod3;\n\n      console.log('inside plazaBelgranoPolygon');\n      insideDeliveryArea = true;\n      deliveryOptionsMethods = (_props$deliveryMethod3 = props.deliveryMethods) === null || _props$deliveryMethod3 === void 0 ? void 0 : _props$deliveryMethod3.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n      var _props$deliveryMethod4;\n\n      console.log('inside plazaNueveDeJulioPolygon');\n      insideDeliveryArea = true;\n      deliveryOptionsMethods = (_props$deliveryMethod4 = props.deliveryMethods) === null || _props$deliveryMethod4 === void 0 ? void 0 : _props$deliveryMethod4.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n      var _props$deliveryMethod5;\n\n      insideDeliveryArea = true;\n      console.log('inside plazaEspañaPolygon');\n      deliveryOptionsMethods = (_props$deliveryMethod5 = props.deliveryMethods) === null || _props$deliveryMethod5 === void 0 ? void 0 : _props$deliveryMethod5.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    }\n\n    if (insideDeliveryArea) {\n      var _results$;\n\n      console.log('sad');\n      setInsideDeliveryArea(true);\n      props.setDeliveryMethodsSelected(deliveryOptionsMethods);\n      props.setDeliveryAddress((_results$ = results[0]) === null || _results$ === void 0 ? void 0 : _results$.formatted_address, addressAlreadyAdded);\n    } else {\n      setInsideDeliveryArea(false);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(DeliveryMethods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, props.deliveryMethodsSelected, __jsx(DeleteButtonsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    className: \"addButton\",\n    variant: \"text\",\n    type: \"button\",\n    onClick: () => deleteDeliverySelection(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, __jsx(IconWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, __jsx(Plus, {\n    width: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  })), __jsx(FormattedMessage, {\n    id: \"changeAddress\",\n    defaultMessage: \"Add New\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }))), __jsx(Options, {\n    style: {\n      justifyContent: !props.deliveryMethodsSelected ? 'space-between' : 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, __jsx(CardWrapper, {\n    color: isPickUpSelected ? '#009E7F' : '#e4f4fc',\n    onClick: e => setDelivery(e, DeliveryMethodsConstants.PICKUP),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"pickUpId\",\n    defaultMessage: \"notFoundId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 142\n    }\n  })), __jsx(CardWrapper, {\n    color: isDeliverySelected ? '#009E7F' : '#e4f4fc',\n    onClick: e => setDelivery(e, DeliveryMethodsConstants.DELIVERY),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"deliveryId\",\n    defaultMessage: \"notFoundId2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 146\n    }\n  })))), !!(props === null || props === void 0 ? void 0 : (_props$userSavedAddre = props.userSavedAddresses) === null || _props$userSavedAddre === void 0 ? void 0 : _props$userSavedAddre.length) && (props === null || props === void 0 ? void 0 : props.deliveryMethodTypeSelected) === DeliveryMethodsConstants.DELIVERY && __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, __jsx(RadioGroupThree, {\n    items: props.userSavedAddresses,\n    component: (item, index) => {\n      var _props$submitResult, _props$submitResult$d;\n\n      return __jsx(RadioCardTWO, {\n        id: `${index}-addresses`,\n        key: index,\n        address: item.address,\n        location: item.location,\n        instructions: item.instructions,\n        title: item.title,\n        name: \"address\",\n        isChecked: (_props$submitResult = props.submitResult) === null || _props$submitResult === void 0 ? void 0 : (_props$submitResult$d = _props$submitResult.delivery_address) === null || _props$submitResult$d === void 0 ? void 0 : _props$submitResult$d.includes(item.address),\n        onChange: () => props.handlePrimary(item, 'address'),\n        onClick: () => {\n          var _item$address, _item$address2;\n\n          handleSelect(`${(_item$address = item.address) === null || _item$address === void 0 ? void 0 : _item$address.split(\",\")[0]} ${(_item$address2 = item.address) === null || _item$address2 === void 0 ? void 0 : _item$address2.split(\",\")[1]}, ${item.location}, ${item.instructions}`, true);\n        },\n        hasEdit: false // onEdit={() => props.handleEditDelete(item, index, 'edit', 'address')}\n        ,\n        onDelete: () => props.handleEditDelete(item, index, 'delete', 'address'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  })), __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, !!props.deliveryMethodTypeSelected && __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, !props.deliveryMethodsSelected && __jsx(React.Fragment, null, __jsx(Heading, {\n    onClick: e => handleOnFocus(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 23\n    }\n  }, isPickUpSelected ? __jsx(FormattedMessage, {\n    id: \"pickupModalheading\",\n    defaultMessage: \"pickupModalheading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 23\n    }\n  }) : __jsx(FormattedMessage, {\n    id: \"deliveryModalheading\",\n    defaultMessage: \"deliveryModalheading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 23\n    }\n  })), isPickUpSelected ? __jsx(\"div\", {\n    onClick: e => handleOnFocus(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    onFocus: e => handleOnFocus(e) // placeholder='Código postal'\n    ,\n    value: zipCode,\n    autoComplete: \"off\" // we have to change the onChange because the is no one for the controller name actualy\n    ,\n    onChange: e => searchPickupZipCode(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 27\n    }\n  })) : __jsx(PlacesAutocomplete, {\n    value: deliveryAddressAutocomplete,\n    onChange: e => setDeliveryAddressAutocomplete(e),\n    onSelect: e => handleSelect(e, false),\n    searchOptions: {\n      types: [],\n      componentRestrictions: {\n        country: \"ar\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => __jsx(\"div\", {\n    onClick: e => handleOnFocus(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'left',\n      flexDirection: 'row',\n      alignItems: 'center',\n      padding: '0px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 31\n    }\n  }, __jsx(\"input\", _extends({}, getInputProps({\n    placeholder: \"Calle, altura, localidad\",\n    className: \"location-search-input\",\n    style: {\n      width: '100%',\n      padding: '0px 8px',\n      appearance: 'none',\n      fontFamily: `'Lato', sans-serif`,\n      fontSize: '15',\n      lineHeight: 'inherit',\n      border: '1px solid',\n      borderColor: '#f7f7f7',\n      borderRadius: '6px',\n      backgroundColor: '#f7f7f7',\n      color: '#0D1136',\n      height: '48px',\n      transition: 'all 0.25s ease',\n      // mb: 3,\n      '&:hover,&:focus': {\n        outline: 0,\n        borderColor: '#009e7f'\n      }\n    }\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  })), (deliveryAddressAutocomplete === null || deliveryAddressAutocomplete === void 0 ? void 0 : deliveryAddressAutocomplete.length) ? __jsx(ActionsButtons, {\n    className: \"button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 35\n    }\n  }, __jsx(ActionButton, {\n    onClick: () => deleteDeliveryAddress(),\n    className: \"delete-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 39\n    }\n  }, __jsx(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 43\n    }\n  }))) : ''), __jsx(\"div\", {\n    className: \"autocomplete-dropdown-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 31\n    }\n  }, loading && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 45\n    }\n  }, \"Loading...\"), suggestions.map((suggestion, i) => {\n    var _suggestion$descripti, _suggestion$descripti2;\n\n    const style = suggestion.active ? {\n      backgroundColor: \"#fafafa\",\n      cursor: \"pointer\",\n      borderBottom: \"1px solid gray\",\n      justifyContent: \"flex-start\",\n      display: 'flex',\n      maxWidth: '320px'\n    } : {\n      backgroundColor: \"#ffffff\",\n      cursor: \"pointer\",\n      borderBottom: \"1px solid gray\",\n      justifyContent: \"flex-start\",\n      display: 'flex',\n      maxWidth: '320px',\n      alignItems: \"center\"\n    };\n    return __jsx(\"div\", _extends({\n      key: `${i}-suggestion`\n    }, getSuggestionItemProps(suggestion, {\n      style\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 37\n      }\n    }), __jsx(BannerIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 39\n      }\n    }, __jsx(\"img\", {\n      src: DeliveryIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 51\n      }\n    })), (_suggestion$descripti = suggestion.description) === null || _suggestion$descripti === void 0 ? void 0 : _suggestion$descripti.split(\",\")[0], (_suggestion$descripti2 = suggestion.description) === null || _suggestion$descripti2 === void 0 ? void 0 : _suggestion$descripti2.split(\",\")[1]);\n  })))), !props.deliveryMethodsSelected && zipCode.length >= 4 && props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP && __jsx(DeliveryText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  }, intl.formatMessage({\n    id: 'noDittoPickUpLocations',\n    defaultMessage: 'noDittoPickUpLocations'\n  })), !insideDeliveryArea && __jsx(DeliveryText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 25\n    }\n  }, intl.formatMessage({\n    id: 'noDeliveryThereYet',\n    defaultMessage: 'noDeliveryThereYet'\n  }))))));\n};\n\nexport default DeliverySelection;","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two-sections/delivery-selection.tsx"],"names":["React","useState","FormattedMessage","useIntl","DeliveryMethodsConstants","plazaBelgranoPolygon","plazaEspañaPolygon","plazaNueveDeJulioPolygon","plazadoceDeOctubrePolygon","resistenciaZipCode","CloseIcon","ActionButton","ActionsButtons","BannerIcon","Button","ButtonGroup","CardWrapper","Container","DeleteButtonsContainer","DeliveryMethods","DeliveryText","Heading","Input","Options","Wrapper","PlacesAutocomplete","geocodeByAddress","getLatLng","DeliveryIcon","Plus","RadioCardTWO","RadioGroupThree","IconWrapper","DeliverySelection","props","zipCode","setZipCode","searchResult","setSearchResult","deliveryAddressAutocomplete","setDeliveryAddressAutocomplete","insideDeliveryArea","setInsideDeliveryArea","inside","point","vs","x","y","i","j","length","xi","yi","xj","yj","intersect","searchPickupZipCode","e","target","value","handleOnFocus","pickUpOptionsMethods","deliveryMethods","filter","deliveryMethod","isPickUp","methodsFound","setDeliveryMethodsSelected","setDelivery","deli","stopPropagation","setDeliveryMethodType","deleteDeliveryAddress","deleteDeliverySelection","setDeliveryAddress","event","preventDefault","isPickUpSelected","deliveryMethodTypeSelected","PICKUP","isDeliverySelected","DELIVERY","intl","handleSelect","address","addressAlreadyAdded","results","console","log","latLng","deliveryOptionsMethods","lat","lng","details","includes","name","formatted_address","deliveryMethodsSelected","justifyContent","userSavedAddresses","item","index","location","instructions","title","submitResult","delivery_address","handlePrimary","split","handleEditDelete","types","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","loading","width","display","flexDirection","alignItems","padding","placeholder","className","style","appearance","fontFamily","fontSize","lineHeight","border","borderColor","borderRadius","backgroundColor","color","height","transition","outline","map","suggestion","active","cursor","borderBottom","maxWidth","description","formatMessage","id","defaultMessage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, deliveryMethodCookieKeyName, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport { ActionButton, ActionsButtons, BannerIcon, Button, ButtonGroup, CardWrapper, Container, DeleteButtonsContainer, DeliveryMethods, DeliveryText, Heading, Input, Offer, OfferSection, Options, PickUpOptions, Wrapper } from './delivery-selection.style';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { alignContent, borderRadius, display, flexDirection, justifyContent, textAlign, width } from 'styled-system';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { ADD_ADDRESS } from 'graphql/mutation/address';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { Plus } from 'assets/icons/PlusMinus';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport RadioGroupTwo from 'components/radio-group/radio-group-two';\nimport { IconWrapper } from '../checkout-two/checkout-two.style';\nimport { ButtonsContainer } from 'components/add-time-schedule/add-schedule-card.style';\n\n\ninterface Props {\n  deliveryMethodSelected: any\n  setDeliveryAddress: any\n  deliveryMethodTypeSelected: any\n  setDeliveryMethodsSelected: any\n  deliveryMethodsSelected: any\n  setDeliveryMethodType: any\n  deliveryMethods: any\n  setSubmitResult: (result: any) => void\n  submitResult: any\n  cartProduct: any // Added this line\n  handleEditDelete?: (item: any, index: number, action: string, type: string) => void // Added this line\n  userSavedAddresses?: any[] // Added this line\n  handlePrimary?: (item: any, type: string) => void // Added this line\n}\n\nconst DeliverySelection: React.FC<Props> = ({ ...props  }) => {\n\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddressAutocomplete, setDeliveryAddressAutocomplete] = useState(\"\");\n  const [insideDeliveryArea, setInsideDeliveryArea] = useState(true);\n\n  // const setDeliveryMethod =  (deliveryOrPickupMethodSelected) => {\n  //   const deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : {...deliveryOrPickupMethodSelected, deliveryAddressAutocomplete};\n  //   setDeliveryMethodSelected(deliveryMethod)\n  //   props.setDeliveryAddress(deliveryMethod, false)\n\n  //   // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n  //   // }\n  // };\n\n  function inside(point, vs) {\n    var x = point[0], y = point[1];\n    \n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0], yi = vs[i][1];\n        var xj = vs[j][0], yj = vs[j][1];\n        \n        var intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    \n    return inside;\n};\n\n  const searchPickupZipCode =  (e) => {\n    const zipCode = e.target.value;\n    handleOnFocus(e)\n    setZipCode(zipCode)\n    const pickUpOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n\n    // const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode)\n    const methodsFound = zipCode === resistenciaZipCode ? pickUpOptionsMethods : [];\n\n    // e.stopPropagation();\n\n    props.setDeliveryMethodsSelected(methodsFound.length > 0 ? methodsFound : null)\n\n  };\n\n  const setDelivery =  (e, deli: DeliveryMethodsConstants) => {\n    e?.stopPropagation();\n    props.setDeliveryMethodType(deli)\n    props.setDeliveryMethodsSelected(null)\n    setZipCode('')\n  };\n\n  const deleteDeliveryAddress =  () => {\n    setDeliveryAddressAutocomplete('')\n    setInsideDeliveryArea(true)\n    setZipCode('')\n  };\n\n  const deleteDeliverySelection =  () => {\n    props.setDeliveryMethodsSelected(null)\n    props.setDeliveryAddress(null, true);\n    setDeliveryAddressAutocomplete('')\n    setInsideDeliveryArea(true)\n    props.setDeliveryMethodType(null)\n    setZipCode('')\n  };\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  // deliveryMethodSelected\n  const isPickUpSelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  const intl = useIntl();\n\n  const handleSelect = async (address, addressAlreadyAdded) => {\n\n    const results = await geocodeByAddress(address);\n    console.log('results', results);\n    const latLng = await getLatLng(results[0]);\n    let deliveryOptionsMethods = [];\n    let insideDeliveryArea = false;\n\n    if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n      console.log('inside plazadoceDeOctubrePolygon');\n      insideDeliveryArea = true;\n      deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n      console.log('inside plazaBelgranoPolygon');\n      insideDeliveryArea = true;\n      deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n      console.log('inside plazaNueveDeJulioPolygon');\n      insideDeliveryArea = true;\n        deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n          if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) { deliveryMethod.name = 'GRATIS'; return true;}\n          return !deliveryMethod.isPickUp;\n        });\n    } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n      insideDeliveryArea = true;\n      console.log('inside plazaEspañaPolygon');\n      deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    }\n\n    if (insideDeliveryArea) {\n      console.log('sad');\n      setInsideDeliveryArea(true)\n      props.setDeliveryMethodsSelected(deliveryOptionsMethods)\n      props.setDeliveryAddress(results[0]?.formatted_address, addressAlreadyAdded) \n    } else {\n      setInsideDeliveryArea(false)\n    }\n  };\n\n  return (\n      <>\n        <DeliveryMethods>\n          { props.deliveryMethodsSelected\n\n          }\n          <DeleteButtonsContainer>\n            <Button\n              className='addButton'\n              variant='text'\n              type='button'\n              onClick={() => deleteDeliverySelection()}\n            >\n              <IconWrapper>\n                <Plus width='10px' />\n              </IconWrapper>\n              <FormattedMessage id='changeAddress' defaultMessage='Add New' />\n            </Button>\n          </DeleteButtonsContainer>\n          <Options style={{justifyContent: !props.deliveryMethodsSelected ? 'space-between' : 'space-between'}}>\n              <CardWrapper color={isPickUpSelected ? '#009E7F' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.PICKUP)}><FormattedMessage id=\"pickUpId\" defaultMessage=\"notFoundId\" /></CardWrapper>\n              <CardWrapper color={isDeliverySelected ? '#009E7F' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.DELIVERY)}><FormattedMessage id=\"deliveryId\" defaultMessage=\"notFoundId2\" /></CardWrapper>\n          </Options>\n        </DeliveryMethods>\n        \n        { !!props?.userSavedAddresses?.length && props?.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY && (\n          <ButtonGroup>\n            <RadioGroupThree\n              items={props.userSavedAddresses}\n                component={(item: any, index: any) => (\n                <RadioCardTWO\n                    id={`${index}-addresses`}\n                    key={index}\n                    address={item.address}\n                    location={item.location}\n                    instructions={item.instructions}\n                    title={item.title}\n                    name='address'\n                    isChecked={props.submitResult?.delivery_address?.includes(item.address)}\n                    onChange={() => props.handlePrimary(item, 'address')}\n                    onClick={() => { \n                      handleSelect(`${item.address?.split(\",\")[0]} ${item.address?.split(\",\")[1]}, ${item.location}, ${item.instructions}`, true);\n                    }}\n                    hasEdit={false}\n                    // onEdit={() => props.handleEditDelete(item, index, 'edit', 'address')}\n                    onDelete={() =>\n                      props.handleEditDelete(item, index, 'delete', 'address')\n                    }\n                  />\n                )}\n                />\n              </ButtonGroup>\n            )}\n        \n            <Wrapper>  \n              { !!props.deliveryMethodTypeSelected && (\n                <Container>\n                  \n                    { !props.deliveryMethodsSelected && (\n                      <>\n                      <Heading  onClick={(e) => handleOnFocus(e)}>\n                      { isPickUpSelected ? (\n                      <FormattedMessage\n                          id=\"pickupModalheading\"\n                          defaultMessage=\"pickupModalheading\"\n                      />\n                      ) : (\n                      <FormattedMessage\n                          id=\"deliveryModalheading\"\n                          defaultMessage=\"deliveryModalheading\"\n                      />\n                      )}\n                    </Heading>\n                      { isPickUpSelected ? (\n                        <div onClick={(e) => handleOnFocus(e)}>\n                          <Input\n                              type='text'\n                              name='name'\n                              onFocus={(e) => handleOnFocus(e)}\n                              // placeholder='Código postal'\n                              value={zipCode}\n                              autoComplete=\"off\"\n                              // we have to change the onChange because the is no one for the controller name actualy\n                              onChange={(e) => searchPickupZipCode(e)}\n                          />\n                        </div>\n                        ) : (\n                        <PlacesAutocomplete\n                          value={deliveryAddressAutocomplete}\n                          onChange={(e) => setDeliveryAddressAutocomplete(e)}\n                          onSelect={(e) => handleSelect(e, false)}\n                          searchOptions={{\n                            types: [],\n                            componentRestrictions: { country: \"ar\" },\n                          }}\n                        >\n                          {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                            <div onClick={(e) => handleOnFocus(e)} >\n                              <div style={{ width: '100%',\n                                display: 'flex',\n                                justifyContent: 'left',\n                                flexDirection: 'row',\n                                alignItems: 'center',\n                                padding: '0px 0px',}}>\n                                <input\n                                  {...getInputProps({\n                                    placeholder: \"Calle, altura, localidad\",\n                                    className: \"location-search-input\",\n                                    style: {\n                                      width: '100%',\n                                      padding:'0px 8px',\n                                      appearance: 'none',\n                                      fontFamily: `'Lato', sans-serif`,\n                                      fontSize: '15',\n                                      lineHeight: 'inherit',\n                                      border: '1px solid',\n                                      borderColor: '#f7f7f7',\n                                      borderRadius: '6px',\n                                      backgroundColor: '#f7f7f7',\n                                      color: '#0D1136',\n                                      height: '48px',\n                                      transition: 'all 0.25s ease',\n                                      // mb: 3,\n                                      '&:hover,&:focus': {\n                                        outline: 0,\n                                        borderColor: '#009e7f',\n                                      },\n                                    },\n                                  })}\n                                />{ deliveryAddressAutocomplete?.length ? (\n                                  <ActionsButtons className='button-wrapper'>\n                                      <ActionButton onClick={() => deleteDeliveryAddress()} className='delete-btn'>\n                                          <CloseIcon />\n                                      </ActionButton>\n                                  </ActionsButtons>\n                                ): ''}\n                              </div>\n                              <div className=\"autocomplete-dropdown-container\">\n                                {loading && <div>Loading...</div>}\n                                {suggestions.map((suggestion, i) => {\n                                  const style = suggestion.active\n                                    ? { backgroundColor: \"#fafafa\", cursor: \"pointer\", borderBottom: \"1px solid gray\",justifyContent: \"flex-start\", display: 'flex', maxWidth: '320px' }\n                                    : { backgroundColor: \"#ffffff\", cursor: \"pointer\", borderBottom: \"1px solid gray\",justifyContent: \"flex-start\", display: 'flex', maxWidth: '320px', alignItems: \"center\" };\n                                  return (\n                                    <div key={`${i}-suggestion`} {...getSuggestionItemProps(suggestion, { style })}>\n                                      <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>{suggestion.description?.split(\",\")[0]}{suggestion.description?.split(\",\")[1]}\n                                    </div>\n                                  );\n                                })}\n                              </div>\n                            </div>\n                          )}\n                        </PlacesAutocomplete>\n                        )}\n                      { !props.deliveryMethodsSelected && zipCode.length >= 4 && props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP && (\n                        <DeliveryText>{intl.formatMessage({ id: 'noDittoPickUpLocations', defaultMessage: 'noDittoPickUpLocations' })}</DeliveryText>\n                      )}\n                      {!insideDeliveryArea && (\n                        <DeliveryText>{intl.formatMessage({ id: 'noDeliveryThereYet', defaultMessage: 'noDeliveryThereYet' })}</DeliveryText>\n                      )}\n                      </>\n                        \n                    )}\n                    \n                </Container>\n              )}\n          </Wrapper>\n      </>\n    );\n\n};\n\nexport default DeliverySelection;\n\n"]},"metadata":{},"sourceType":"module"}