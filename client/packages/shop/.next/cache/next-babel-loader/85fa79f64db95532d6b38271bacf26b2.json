{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from 'react';\nimport debounce from './debounce'; // maybe use a hook instead?\n\nfunction useDimensions() {\n  _s();\n\n  var liveMeasure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n  var initialDimensions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var _useState = useState(initialDimensions),\n      dimensions = _useState[0],\n      setDimensions = _useState[1];\n\n  var _useState2 = useState(null),\n      node = _useState2[0],\n      setNode = _useState2[1];\n\n  var ref = useCallback(function (newNode) {\n    setNode(newNode);\n  }, []);\n  useEffect(function () {\n    // need ref to continue\n    if (!node) {\n      return;\n    }\n\n    var measure = function measure() {\n      window.requestAnimationFrame(function () {\n        var newDimensions = node.getBoundingClientRect();\n        setDimensions(newDimensions);\n      });\n    }; // invoke measure right away\n\n\n    measure();\n\n    if (liveMeasure) {\n      var debounceMeasure = debounce(measure, delay);\n\n      if ('ResizeObserver' in window) {\n        var resizeObserver = new ResizeObserver(debounceMeasure);\n        resizeObserver.observe(node);\n        window.addEventListener('scroll', debounceMeasure);\n        return function () {\n          resizeObserver.disconnect();\n          window.removeEventListener('scroll', debounceMeasure);\n        };\n      }\n\n      window.addEventListener('resize', debounceMeasure);\n      window.addEventListener('scroll', debounceMeasure);\n      return function () {\n        window.removeEventListener('resize', debounceMeasure);\n        window.removeEventListener('scroll', debounceMeasure);\n      };\n    }\n  }, [node, liveMeasure, delay]);\n  return [ref, dimensions, node];\n}\n\n_s(useDimensions, \"mbWjFkT/DNnIEbCGrfVv621KYOQ=\");\n\nexport default useDimensions; // Usage\n// function App() {\n//   const [wrapperRef, dimensions] = useDimensions();\n//   return (\n//     <div ref={wrapperRef}>\n//       height: {dimensions.height}\n//       width: {dimensions.width}\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/utils/useComponentSize.js"],"names":["useState","useCallback","useEffect","debounce","useDimensions","liveMeasure","delay","initialDimensions","dimensions","setDimensions","node","setNode","ref","newNode","measure","window","requestAnimationFrame","newDimensions","getBoundingClientRect","debounceMeasure","resizeObserver","ResizeObserver","observe","addEventListener","disconnect","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAAmC;;AAEnC,SAASC,aAAT,GAIE;AAAA;;AAAA,MAHAC,WAGA,uEAHc,IAGd;AAAA,MAFAC,KAEA,uEAFQ,GAER;AAAA,MADAC,iBACA,uEADoB,EACpB;;AAAA,kBACoCP,QAAQ,CAACO,iBAAD,CAD5C;AAAA,MACOC,UADP;AAAA,MACmBC,aADnB;;AAAA,mBAEwBT,QAAQ,CAAC,IAAD,CAFhC;AAAA,MAEOU,IAFP;AAAA,MAEaC,OAFb;;AAIA,MAAMC,GAAG,GAAGX,WAAW,CAAC,UAACY,OAAD,EAAa;AACnCF,IAAAA,OAAO,CAACE,OAAD,CAAP;AACD,GAFsB,EAEpB,EAFoB,CAAvB;AAIAX,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAI,CAACQ,IAAL,EAAW;AACT;AACD;;AAED,QAAMI,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBC,MAAAA,MAAM,CAACC,qBAAP,CAA6B,YAAM;AACjC,YAAMC,aAAa,GAAGP,IAAI,CAACQ,qBAAL,EAAtB;AACAT,QAAAA,aAAa,CAACQ,aAAD,CAAb;AACD,OAHD;AAID,KALD,CANc,CAYd;;;AACAH,IAAAA,OAAO;;AAEP,QAAIT,WAAJ,EAAiB;AACf,UAAMc,eAAe,GAAGhB,QAAQ,CAACW,OAAD,EAAUR,KAAV,CAAhC;;AAEA,UAAI,oBAAoBS,MAAxB,EAAgC;AAC9B,YAAMK,cAAc,GAAG,IAAIC,cAAJ,CAAmBF,eAAnB,CAAvB;AACAC,QAAAA,cAAc,CAACE,OAAf,CAAuBZ,IAAvB;AACAK,QAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCJ,eAAlC;AAEA,eAAO,YAAM;AACXC,UAAAA,cAAc,CAACI,UAAf;AACAT,UAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCN,eAArC;AACD,SAHD;AAID;;AACDJ,MAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCJ,eAAlC;AACAJ,MAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCJ,eAAlC;AAEA,aAAO,YAAM;AACXJ,QAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCN,eAArC;AACAJ,QAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCN,eAArC;AACD,OAHD;AAID;AACF,GApCQ,EAoCN,CAACT,IAAD,EAAOL,WAAP,EAAoBC,KAApB,CApCM,CAAT;AAsCA,SAAO,CAACM,GAAD,EAAMJ,UAAN,EAAkBE,IAAlB,CAAP;AACD;;GAnDQN,a;;AAqDT,eAAeA,aAAf,C,CAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport debounce from './debounce'; // maybe use a hook instead?\n\nfunction useDimensions(\n  liveMeasure = true,\n  delay = 250,\n  initialDimensions = {}\n) {\n  const [dimensions, setDimensions] = useState(initialDimensions);\n  const [node, setNode] = useState(null);\n\n  const ref = useCallback((newNode) => {\n    setNode(newNode);\n  }, []);\n\n  useEffect(() => {\n    // need ref to continue\n    if (!node) {\n      return;\n    }\n\n    const measure = () => {\n      window.requestAnimationFrame(() => {\n        const newDimensions = node.getBoundingClientRect();\n        setDimensions(newDimensions);\n      });\n    };\n    // invoke measure right away\n    measure();\n\n    if (liveMeasure) {\n      const debounceMeasure = debounce(measure, delay);\n\n      if ('ResizeObserver' in window) {\n        const resizeObserver = new ResizeObserver(debounceMeasure);\n        resizeObserver.observe(node);\n        window.addEventListener('scroll', debounceMeasure);\n\n        return () => {\n          resizeObserver.disconnect();\n          window.removeEventListener('scroll', debounceMeasure);\n        };\n      }\n      window.addEventListener('resize', debounceMeasure);\n      window.addEventListener('scroll', debounceMeasure);\n\n      return () => {\n        window.removeEventListener('resize', debounceMeasure);\n        window.removeEventListener('scroll', debounceMeasure);\n      };\n    }\n  }, [node, liveMeasure, delay]);\n\n  return [ref, dimensions, node];\n}\n\nexport default useDimensions;\n\n// Usage\n\n// function App() {\n//   const [wrapperRef, dimensions] = useDimensions();\n\n//   return (\n//     <div ref={wrapperRef}>\n//       height: {dimensions.height}\n//       width: {dimensions.width}\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}