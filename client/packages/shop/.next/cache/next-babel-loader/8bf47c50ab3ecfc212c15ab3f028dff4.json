{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/components/address-card/address-card-two.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_ADDRESS, UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl'; // Shape of form values\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: props => {\n    const ID = props.item.id;\n    const addressItem = props.item.item;\n    return {\n      id: ID || null,\n      addressId: addressItem.id || null,\n      title: addressItem.title || '',\n      address: addressItem.address || '',\n      division: addressItem.division || '',\n      district: addressItem.district || '',\n      region: addressItem.region || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required('Title is required!'),\n    address: Yup.string().required('Address is required')\n  }),\n  handleSubmit: values => {// do submitting things\n  }\n});\n\nconst UpdateAddressTwo = props => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n    handleReset,\n    isSubmitting\n  } = props;\n  const ID = item.id;\n  let newAddressid = null;\n  const addressItem = item.item;\n  const addressValue = {\n    id: ID,\n    addressId: addressItem.id,\n    title: values.title,\n    address: values.address,\n    division: values.division,\n    district: values.district,\n    region: values.region\n  };\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const intl = useIntl();\n  const [updateAddressMutation] = useMutation(UPDATE_ADDRESS);\n  const [addAddressMutation] = useMutation(ADD_ADDRESS);\n\n  const handleSubmit = async () => {\n    if (isValid) {\n      const {\n        id,\n        addressId,\n        title,\n        address,\n        division,\n        district,\n        region\n      } = addressValue;\n\n      if (Object.keys(addressItem).length === 0) {\n        const {\n          data\n        } = await addAddressMutation({\n          variables: {\n            id,\n            title,\n            address,\n            division,\n            district,\n            region\n          }\n        });\n        newAddressid = data.addDeliveryAddress.id;\n        addressValue.id = data.addDeliveryAddress.id;\n        dispatch({\n          type: 'ADD_ADDRESS',\n          payload: addressValue\n        });\n        closeModal();\n      } else {\n        const updateAddressData = await updateAddressMutation({\n          variables: {\n            id,\n            addressId,\n            title,\n            address,\n            division,\n            district,\n            region\n          }\n        });\n        dispatch({\n          type: 'UPDATE_ADDRESS',\n          payload: {\n            value: addressValue,\n            id: addressItem.id\n          }\n        });\n        closeModal();\n      }\n    }\n  };\n\n  return __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, intl.formatMessage({\n    id: (addressItem === null || addressItem === void 0 ? void 0 : addressItem.id) ? 'editAddressId' : 'addNewAddressId',\n    defaultMessage: 'Address name'\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"title\",\n    type: \"text\",\n    placeholder: intl.formatMessage({\n      id: 'addressRefId',\n      defaultMessage: 'Address name'\n    }),\n    error: touched.title && errors.title,\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"district\",\n    type: \"text\",\n    placeholder: \"Enter District\",\n    error: touched.district && errors.district,\n    value: values.district,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"division\",\n    type: \"text\",\n    placeholder: intl.formatMessage({\n      id: 'localidadId',\n      defaultMessage: 'Localidad'\n    }),\n    error: touched.division && errors.division,\n    value: values.division,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"region\",\n    type: \"text\",\n    placeholder: intl.formatMessage({\n      id: 'provinciaId',\n      defaultMessage: 'Provincia'\n    }),\n    error: touched.region && errors.region,\n    value: values.region,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"address\",\n    as: \"textarea\",\n    placeholder: intl.formatMessage({\n      id: 'addressId',\n      defaultMessage: 'Direcci√≥n'\n    }),\n    error: touched.address && errors.address,\n    value: values.address,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  })), __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"submit\",\n    style: {\n      width: '100%',\n      height: '44px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"savedAddressId\",\n    defaultMessage: \"Save Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default FormEnhancer(UpdateAddressTwo);","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/components/address-card/address-card-two.tsx"],"names":["React","useContext","Yup","withFormik","Form","closeModal","TextField","Button","useMutation","ADD_ADDRESS","UPDATE_ADDRESS","FieldWrapper","Heading","ProfileContext","FormattedMessage","useIntl","FormEnhancer","mapPropsToValues","props","ID","item","id","addressItem","addressId","title","address","division","district","region","validationSchema","object","shape","string","required","handleSubmit","values","UpdateAddressTwo","isValid","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","newAddressid","addressValue","state","dispatch","intl","updateAddressMutation","addAddressMutation","Object","keys","length","data","variables","addDeliveryAddress","type","payload","updateAddressData","value","formatMessage","defaultMessage","width","height"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, FormikProps, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_ADDRESS, UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\n// Shape of form values\ninterface FormValues {\n  id: any | null;\n  addressId: any | null,\n  title: string;\n  address: string;\n  division?: string;\n  district?: string;\n  region?: string;\n}\n\n// The type of props MyForm receives\ninterface MyFormProps {\n  item?: any | null;\n  id?: any | null;\n}\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik<MyFormProps, FormValues>({\n  // Transform outer props into form values\n  mapPropsToValues: (props) => {\n    const ID = props.item.id;\n    const addressItem = props.item.item;\n    return {\n      id: ID || null,\n      addressId: addressItem.id || null,\n      title: addressItem.title || '',\n      address: addressItem.address || '',\n      division: addressItem.division || '',\n      district: addressItem.district || '',\n      region: addressItem.region || '',\n    };\n  },\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required('Title is required!'),\n    address: Yup.string().required('Address is required'),\n  }),\n  handleSubmit: (values) => {\n    // do submitting things\n  },\n});\n\nconst UpdateAddressTwo = (props: FormikProps<FormValues> & MyFormProps) => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n\n    handleReset,\n    isSubmitting,\n  } = props;\n  const ID = item.id;\n  let newAddressid = null;\n  const addressItem = item.item;\n  const addressValue = {\n    id: ID,\n    addressId: addressItem.id, \n    title: values.title,\n    address: values.address,\n    division: values.division,\n    district: values.district,\n    region: values.region\n  };\n  const { state, dispatch } = useContext(ProfileContext);\n  const intl = useIntl();\n\n  const [updateAddressMutation] = useMutation(UPDATE_ADDRESS);\n  const [addAddressMutation] = useMutation(ADD_ADDRESS);\n\n  const handleSubmit = async () => {\n    if (isValid) {\n      const {id, addressId, title, address, division, district, region} = addressValue;\n      if(Object.keys(addressItem).length === 0){\n        const {data}  = await addAddressMutation({\n          variables: { \n            id,\n            title,\n            address, \n            division,\n            district,\n            region\n           },\n        });\n        newAddressid = data.addDeliveryAddress.id;\n        addressValue.id = data.addDeliveryAddress.id;\n        dispatch({\n          type: 'ADD_ADDRESS',\n          payload: addressValue \n        });\n        closeModal();\n      }else{\n        const updateAddressData = await updateAddressMutation({\n          variables: { \n            id,\n            addressId,\n            title,\n            address, \n            division,\n            district,\n            region\n           }\n        });\n        dispatch({\n          type: 'UPDATE_ADDRESS',\n          payload: { value: addressValue, id: addressItem.id }\n\n        });\n        closeModal();\n      }\n    }\n  };\n  return (\n    <Form>\n      <Heading>{intl.formatMessage({ id: addressItem?.id ? 'editAddressId' : 'addNewAddressId', defaultMessage: 'Address name' })}</Heading>\n      <FieldWrapper>\n        <TextField\n          id=\"title\"\n          type=\"text\"\n          placeholder={intl.formatMessage({ id: 'addressRefId', defaultMessage: 'Address name' })}\n          error={touched.title && errors.title}\n          value={values.title}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"district\"\n          type=\"text\"\n          placeholder=\"Enter District\"\n          error={touched.district && errors.district}\n          value={values.district}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"division\"\n          type=\"text\"\n          placeholder={intl.formatMessage({ id: 'localidadId', defaultMessage: 'Localidad' })}\n          error={touched.division && errors.division}\n          value={values.division}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"region\"\n          type=\"text\"\n          placeholder={intl.formatMessage({ id: 'provinciaId', defaultMessage: 'Provincia' })}\n          error={touched.region && errors.region}\n          value={values.region}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"address\"\n          as=\"textarea\"\n          placeholder={intl.formatMessage({ id: 'addressId', defaultMessage: 'Direcci√≥n' })}\n          error={touched.address && errors.address}\n          value={values.address}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n\n      <Button\n        onClick={handleSubmit}\n        type=\"submit\"\n        style={{ width: '100%', height: '44px' }}\n      >\n        <FormattedMessage id=\"savedAddressId\" defaultMessage=\"Save Address\" />\n      </Button>\n    </Form>\n  );\n};\n\nexport default FormEnhancer(UpdateAddressTwo);\n"]},"metadata":{},"sourceType":"module"}