{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/user-profile/order/order.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ORDERS } from 'graphql/query/order.query';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { DesktopView, MobileView, OrderBox, OrderListWrapper, OrderList, OrderDetailsWrapper, Title, ImageWrapper, ItemWrapper, ItemDetails, ItemName, ItemSize, ItemSalePrice, ItemPrice, NoOrderFound } from './order.style';\nimport OrderDetails from './order-details/order-details';\nimport OrderCard from './order-card/order-card';\nimport OrderCardMobile from './order-card/order-card-mobile';\nimport useComponentSize from 'utils/useComponentSize';\nimport { FormattedMessage } from 'react-intl';\nimport { SHOP_IMAGE_HOST } from \"../../../utils/images-path\";\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nconst progressData = ['Ordern', 'Order On The Way', 'Order Delivered'];\nconst orderTableColumns = [{\n  title: __jsx(FormattedMessage, {\n    id: \"cartItems\",\n    defaultMessage: \"Items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }),\n  dataIndex: '',\n  key: 'items',\n  width: 250,\n  ellipsis: true,\n  render: (text, record) => {\n    return __jsx(ItemWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, __jsx(ImageWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: SHOP_IMAGE_HOST + record.image,\n      alt: record.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    })), __jsx(ItemDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, __jsx(ItemName, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, record.name), __jsx(ItemSize, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, record.unit), __jsx(ItemPrice, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"$\", record.price), record.sale_price ? __jsx(ItemSalePrice, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 34\n      }\n    }, \"$\", record.sale_price) : \"\"));\n  }\n}, {\n  title: __jsx(FormattedMessage, {\n    id: \"intlTableColTitle2\",\n    defaultMessage: \"Quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }),\n  dataIndex: 'quantity',\n  key: 'quantity',\n  align: 'center',\n  width: 100\n}, {\n  title: __jsx(FormattedMessage, {\n    id: \"intlTableColTitle3\",\n    defaultMessage: \"Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }\n  }),\n  dataIndex: '',\n  key: 'price',\n  align: 'right',\n  width: 100,\n  render: (text, record) => {\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }\n    }, \"$\", record.price * record.quantity);\n  }\n}];\n\nconst OrdersContent = () => {\n  const {\n    0: order,\n    1: setOrder\n  } = useState(null);\n  const {\n    0: active,\n    1: setActive\n  } = useState('');\n  const [targetRef, size] = useComponentSize();\n  const orderListHeight = size.height - 79;\n  const {\n    data: deliverData\n  } = useQuery(DELIVERY_METHOD);\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_ORDERS);\n  useEffect(() => {\n    if (data && data.getUserOrders.length !== 0) {\n      setOrder(data.getUserOrders[0]);\n      setActive(data.getUserOrders[0].id);\n    }\n  }, [data]);\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Cargando...',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 14\n      }\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    });\n  }\n\n  ;\n  const myOrder = data.getUserOrders;\n\n  const handleClick = order => {\n    setOrder(order);\n    setActive(order.id);\n  }; // const pickedUpOptionIds = deliverData.deliveryMethods.map(deliveryMethod => {\n  //   return deliveryMethod.isPickUp ? deliveryMethod.id : null;\n  // });\n  // // const deliveryOptionIds = deliveryMethods.map(deliveryMethod => {\n  // //   return !deliveryMethod.isPickUp ? deliveryMethod.id : null;\n  // // });\n  // const pickUpOptionSelected = pickedUpOptionIds.includes(order.delivery_method_id)\n\n\n  return __jsx(OrderBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, __jsx(DesktopView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, __jsx(OrderListWrapper, {\n    style: {\n      height: size.height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, __jsx(Title, {\n    style: {\n      padding: '0 20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"intlOrderPageTitle\",\n    defaultMessage: \"My Order\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  })), __jsx(Scrollbars, {\n    universal: true,\n    autoHide: true,\n    autoHeight: true,\n    autoHeightMin: 420,\n    autoHeightMax: isNaN(orderListHeight) ? 500 : orderListHeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, __jsx(OrderList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, myOrder.length !== 0 ? myOrder.map((current, index) => __jsx(OrderCard, {\n    key: index,\n    orderId: current.order_code,\n    className: current.id === active ? 'active' : '',\n    status: current.status,\n    date: current.datetime.split('2020').shift(),\n    amount: current.total,\n    onClick: () => {\n      handleClick(current);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  })) : __jsx(NoOrderFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"intlNoOrderFound\",\n    defaultMessage: \"No order found\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }))))), __jsx(OrderDetailsWrapper, {\n    ref: targetRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, __jsx(Title, {\n    style: {\n      padding: '0 20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"orderDetailsText\",\n    defaultMessage: \"Order Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  })), order ? __jsx(OrderDetails, {\n    id: order.id,\n    progressStatus: order.status,\n    progressData: order.order_tracking,\n    number: order.contact_number,\n    address: order.delivery_address,\n    deliveryDate: order.delivery_date,\n    subtotal: order.sub_total,\n    discount: order.discount_amount,\n    grandTotal: order.total,\n    tableData: order.order_products,\n    columns: orderTableColumns,\n    deliveryMethod: order.delivery_method,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }) : __jsx(NoOrderFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"intlNoOrderFound\",\n    defaultMessage: \"No order found\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  })))), order ? __jsx(MobileView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, __jsx(OrderList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, __jsx(OrderCardMobile, {\n    orders: myOrder,\n    className: order && order.id === active ? 'active' : '',\n    progressData: progressData,\n    columns: orderTableColumns,\n    onClick: () => {\n      handleClick(order);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }))) : __jsx(NoOrderFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"intlNoOrderFound\",\n    defaultMessage: \"No order found\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default OrdersContent;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/user-profile/order/order.tsx"],"names":["React","useState","useEffect","Scrollbars","useQuery","GET_ORDERS","ErrorMessage","DesktopView","MobileView","OrderBox","OrderListWrapper","OrderList","OrderDetailsWrapper","Title","ImageWrapper","ItemWrapper","ItemDetails","ItemName","ItemSize","ItemSalePrice","ItemPrice","NoOrderFound","OrderDetails","OrderCard","OrderCardMobile","useComponentSize","FormattedMessage","SHOP_IMAGE_HOST","DELIVERY_METHOD","progressData","orderTableColumns","title","dataIndex","key","width","ellipsis","render","text","record","image","name","unit","price","sale_price","align","quantity","OrdersContent","order","setOrder","active","setActive","targetRef","size","orderListHeight","height","data","deliverData","error","loading","getUserOrders","length","id","message","myOrder","handleClick","padding","isNaN","map","current","index","order_code","status","datetime","split","shift","total","order_tracking","contact_number","delivery_address","delivery_date","sub_total","discount_amount","order_products","delivery_method"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ORDERS } from 'graphql/query/order.query';\nimport ErrorMessage from 'components/error-message/error-message';\nimport {\n  DesktopView,\n  MobileView,\n  OrderBox,\n  OrderListWrapper,\n  OrderList,\n  OrderDetailsWrapper,\n  Title,\n  ImageWrapper,\n  ItemWrapper,\n  ItemDetails,\n  ItemName,\n  ItemSize,\n  ItemSalePrice,\n  ItemPrice,\n  NoOrderFound,\n} from './order.style';\n\nimport OrderDetails from './order-details/order-details';\nimport OrderCard from './order-card/order-card';\nimport OrderCardMobile from './order-card/order-card-mobile';\nimport useComponentSize from 'utils/useComponentSize';\nimport { FormattedMessage } from 'react-intl';\nimport {SHOP_IMAGE_HOST} from \"../../../utils/images-path\";\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\n\nconst progressData = ['Ordern', 'Order On The Way', 'Order Delivered'];\n\n\nconst orderTableColumns = [\n  {\n    title: <FormattedMessage id=\"cartItems\" defaultMessage=\"Items\" />,\n    dataIndex: '',\n    key: 'items',\n    width: 250,\n    ellipsis: true,\n    render: (text, record) => {\n      return (\n        <ItemWrapper>\n          <ImageWrapper>\n            <img src={SHOP_IMAGE_HOST+record.image} alt={record.name} />\n          </ImageWrapper>\n\n          <ItemDetails>\n            <ItemName>{record.name}</ItemName>\n            <ItemSize>{record.unit}</ItemSize>\n            <ItemPrice>${record.price}</ItemPrice>\n            {record.sale_price ? <ItemSalePrice>${record.sale_price}</ItemSalePrice> : \"\" }\n          </ItemDetails>\n        </ItemWrapper>\n      );\n    },\n  },\n  {\n    title: (\n      <FormattedMessage id=\"intlTableColTitle2\" defaultMessage=\"Quantity\" />\n    ),\n    dataIndex: 'quantity',\n    key: 'quantity',\n    align: 'center',\n    width: 100,\n  },\n  {\n    title: <FormattedMessage id=\"intlTableColTitle3\" defaultMessage=\"Price\" />,\n    dataIndex: '',\n    key: 'price',\n    align: 'right',\n    width: 100,\n    render: (text, record) => {\n      return <p>${record.price * record.quantity}</p>;\n    },\n  },\n];\n\nconst OrdersContent: React.FC<{}> = () => {\n\n  const [order, setOrder] = useState(null);\n  const [active, setActive] = useState('');\n  const [targetRef, size] = useComponentSize();\n  const orderListHeight = size.height - 79;\n  const {data: deliverData} = useQuery(DELIVERY_METHOD)\n\n  const { data, error, loading } = useQuery(GET_ORDERS);\n    useEffect( () => {\n      if (data && data.getUserOrders.length !== 0) {\n        setOrder(data.getUserOrders[0]);\n        setActive(data.getUserOrders[0].id);\n      }\n    }, [data]);\n\n    if (loading) {\n      return <ErrorMessage message={'Cargando...'} />\n    };\n\n    if (error) {\n      return (\n        <ErrorMessage message={error.message} />\n      );\n    };\n\n\n  const myOrder = data.getUserOrders;\n\n  const handleClick = (order: any) => {\n    setOrder(order);\n    setActive(order.id);\n  };\n\n  // const pickedUpOptionIds = deliverData.deliveryMethods.map(deliveryMethod => {\n  //   return deliveryMethod.isPickUp ? deliveryMethod.id : null;\n  // });\n  // // const deliveryOptionIds = deliveryMethods.map(deliveryMethod => {\n  // //   return !deliveryMethod.isPickUp ? deliveryMethod.id : null;\n  // // });\n  // const pickUpOptionSelected = pickedUpOptionIds.includes(order.delivery_method_id)\n\n  return (\n    <OrderBox>\n      <DesktopView>\n        <OrderListWrapper style={{ height: size.height }}>\n          <Title style={{ padding: '0 20px' }}>\n            <FormattedMessage\n              id=\"intlOrderPageTitle\"\n              defaultMessage=\"My Order\"\n            />\n          </Title>\n\n          <Scrollbars\n            universal\n            autoHide\n            autoHeight\n            autoHeightMin={420}\n            autoHeightMax={isNaN(orderListHeight) ? 500 : orderListHeight}\n          >\n            <OrderList>\n              {myOrder.length !== 0 ? (\n                myOrder.map((current: any, index: any) => (\n                  <OrderCard\n                    key={index}\n                    orderId={current.order_code}\n                    className={current.id === active ? 'active' : ''}\n                    status={current.status}\n                    date={current.datetime.split('2020').shift()}\n                    amount={current.total}\n                    onClick={() => {\n                      handleClick(current);\n                    }}\n                  />\n                ))\n              ) : (\n                <NoOrderFound>\n                  <FormattedMessage\n                    id=\"intlNoOrderFound\"\n                    defaultMessage=\"No order found\"\n                  />\n                </NoOrderFound>\n              )}\n            </OrderList>\n          </Scrollbars>\n        </OrderListWrapper>\n\n        <OrderDetailsWrapper ref={targetRef}>\n          <Title style={{ padding: '0 20px' }}>\n            <FormattedMessage\n              id=\"orderDetailsText\"\n              defaultMessage=\"Order Details\"\n            />\n          </Title>\n          {order ? (\n            <OrderDetails\n              id={order.id}\n              progressStatus={order.status}\n              progressData={order.order_tracking}\n              number={order.contact_number}\n              address={order.delivery_address}\n              deliveryDate={order.delivery_date}\n              subtotal={order.sub_total}\n              discount={order.discount_amount}\n              grandTotal={order.total}\n              tableData={order.order_products}\n              columns={orderTableColumns}\n              deliveryMethod={order.delivery_method}\n            />\n          ) : (\n            <NoOrderFound>\n              <FormattedMessage\n                id=\"intlNoOrderFound\"\n                defaultMessage=\"No order found\"\n              />\n            </NoOrderFound>\n          )}\n        </OrderDetailsWrapper>\n      </DesktopView>\n\n      {order ? (\n        <MobileView>\n            <OrderList>\n            <OrderCardMobile\n              orders={myOrder}\n              className={order && order.id === active ? 'active' : ''}\n              progressData={progressData}\n              columns={orderTableColumns}\n              onClick={() => {\n                handleClick(order);\n              }}\n            />\n          </OrderList>\n        </MobileView>\n      ) : (\n        <NoOrderFound>\n          <FormattedMessage\n            id=\"intlNoOrderFound\"\n            defaultMessage=\"No order found\"\n          />\n        </NoOrderFound>\n      )}\n    </OrderBox>\n  );\n};\n\nexport default OrdersContent;\n"]},"metadata":{},"sourceType":"module"}