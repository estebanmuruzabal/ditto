{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n// product card for general\nimport React, { useState } from 'react';\nimport Image from 'components/image/image';\nimport { Button } from 'components/button/button';\nimport { ProductCardWrapper, ProductImageWrapper, ProductInfo, DiscountPercent, OutOfStock, ButtonText, PriceContainer, PriceContainerRow, ProductCartBtn, ProductCartWrapper, ProductPrice, ProductPriceWrapper, SalePrice } from '../product-card.style';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { Counter } from 'components/counter/counter';\nimport { cartAnimation } from 'utils/cart-animation';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ProductQuantityExceededMsg } from '../product-card.style';\nimport CartPopUp from 'features/carts/cart-popup-two';\nimport { CURRENCY } from 'utils/constant';\n\nvar ProductCard = function ProductCard(_ref) {\n  var _getItem9, _getItem10;\n\n  var title = _ref.title,\n      image = _ref.image,\n      weight = _ref.weight,\n      price = _ref.price,\n      salePrice = _ref.salePrice,\n      discountInPercent = _ref.discountInPercent,\n      cartProducts = _ref.cartProducts,\n      addToCart = _ref.addToCart,\n      updateCart = _ref.updateCart,\n      value = _ref.value,\n      currency = _ref.currency,\n      onChange = _ref.onChange,\n      increment = _ref.increment,\n      decrement = _ref.decrement,\n      data = _ref.data,\n      deviceType = _ref.deviceType,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, [\"title\", \"image\", \"weight\", \"price\", \"salePrice\", \"discountInPercent\", \"cartProducts\", \"addToCart\", \"updateCart\", \"value\", \"currency\", \"onChange\", \"increment\", \"decrement\", \"data\", \"deviceType\", \"onClick\"]);\n\n  var _useCart = useCart(),\n      addItem = _useCart.addItem,\n      removeItem = _useCart.removeItem,\n      getItem = _useCart.getItem,\n      isInCart = _useCart.isInCart,\n      items = _useCart.items,\n      removeRecicledItemHandler = _useCart.removeRecicledItemHandler,\n      addRecicledItemHandler = _useCart.addRecicledItemHandler,\n      removeItemFromCart = _useCart.removeItemFromCart;\n\n  var _useState = useState(false),\n      showProductQuantityExceededMsg = _useState[0],\n      setShowProductQuantityExceededMsg = _useState[1];\n\n  var hasEcoButton = data.packagePrice > 0;\n  var intl = useIntl();\n\n  var handleAddClick = function handleAddClick(e) {\n    var _getItem, _getItem2;\n\n    var currentQuantity = (((_getItem = getItem(data.id)) === null || _getItem === void 0 ? void 0 : _getItem.quantity) || 0) + (((_getItem2 = getItem(data.id)) === null || _getItem2 === void 0 ? void 0 : _getItem2.recicledQuantity) || 0);\n    var stock = data.product_quantity;\n\n    if (stock <= currentQuantity) {\n      e.stopPropagation();\n      showProductQuantityExceededMsgFor5Sec();\n    } else {\n      e.stopPropagation();\n      addItem(data);\n\n      if (!isInCart(data.id)) {\n        cartAnimation(e);\n      }\n    }\n  };\n\n  var handleRecicledAddClick = function handleRecicledAddClick(e) {\n    var _getItem3, _getItem4;\n\n    var currentQuantity = (((_getItem3 = getItem(data.id)) === null || _getItem3 === void 0 ? void 0 : _getItem3.quantity) || 0) + (((_getItem4 = getItem(data.id)) === null || _getItem4 === void 0 ? void 0 : _getItem4.recicledQuantity) || 0);\n    var stock = data.product_quantity;\n\n    if (stock <= currentQuantity) {\n      e.stopPropagation();\n      showProductQuantityExceededMsgFor5Sec();\n    } else {\n      e.stopPropagation();\n      addRecicledItemHandler(data);\n    }\n  };\n\n  var handleRecicledRemoveClick = function handleRecicledRemoveClick(e) {\n    var _getItem5, _getItem6;\n\n    var recicledQuantity = ((_getItem5 = getItem(data.id)) === null || _getItem5 === void 0 ? void 0 : _getItem5.recicledQuantity) || 0;\n    var quantity = ((_getItem6 = getItem(data.id)) === null || _getItem6 === void 0 ? void 0 : _getItem6.quantity) || 0;\n    e.stopPropagation();\n    quantity === 0 && recicledQuantity === 1 ? removeItemFromCart(data) : removeRecicledItemHandler(data);\n  };\n\n  var handleRemoveClick = function handleRemoveClick(e) {\n    var _getItem7, _getItem8;\n\n    var recicledQuantity = ((_getItem7 = getItem(data.id)) === null || _getItem7 === void 0 ? void 0 : _getItem7.recicledQuantity) || 0;\n    var quantity = ((_getItem8 = getItem(data.id)) === null || _getItem8 === void 0 ? void 0 : _getItem8.quantity) || 0;\n    e.stopPropagation();\n    quantity === 1 && recicledQuantity === 0 ? removeItemFromCart(data) : removeItem(data);\n  };\n\n  var showProductQuantityExceededMsgFor5Sec = function showProductQuantityExceededMsgFor5Sec() {\n    setShowProductQuantityExceededMsg(true);\n    setTimeout(function () {\n      setShowProductQuantityExceededMsg(false);\n    }, 1500);\n  };\n\n  var PriceContent = function PriceContent() {\n    return __jsx(React.Fragment, null, data.product_quantity != 0 ? __jsx(ProductCartWrapper, null, __jsx(ProductCartBtn, {\n      style: {\n        display: 'flex'\n      }\n    }, __jsx(PriceContainer, null, __jsx(PriceContainerRow, null, __jsx(ProductPriceWrapper, null, data.discountInPercent ? __jsx(SalePrice, null, CURRENCY, \" \", data.sale_price) : null, __jsx(ProductPrice, null, CURRENCY, finalPrice)), noRecicledQuantityInCart ? __jsx(React.Fragment, null, __jsx(Counter, {\n      value: getItem(data.id).quantity,\n      onDecrement: handleRemoveClick,\n      onIncrement: handleAddClick\n    })) : __jsx(Button, {\n      className: \"cart-button\",\n      variant: \"secondary\",\n      borderRadius: 100,\n      onClick: handleAddClick\n    }, __jsx(ButtonText, null, __jsx(FormattedMessage, {\n      id: \"addToCartButton\",\n      defaultMessage: \"Cart\"\n    })))), hasEcoButton ? __jsx(PriceContainerRow, null, __jsx(ProductPriceWrapper, null, __jsx(ProductPrice, null, \" \", CURRENCY, \" \", Number(finalPrice - data.packagePrice))), reclicledQuantityInCart ? __jsx(React.Fragment, null, __jsx(Counter, {\n      value: reclicledQuantityInCart,\n      onDecrement: handleRecicledRemoveClick,\n      onIncrement: handleRecicledAddClick\n    })) : __jsx(Button, {\n      className: \"cart-button\",\n      variant: \"secondary\",\n      borderRadius: 100,\n      onClick: handleRecicledAddClick\n    }, __jsx(ButtonText, null, __jsx(FormattedMessage, {\n      id: \"addEcoToCartButton\",\n      defaultMessage: \"Cart\"\n    })))) : null)), noRecicledQuantityInCart || reclicledQuantityInCart ? __jsx(CartPopUp, {\n      deviceType: deviceType\n    }) : null) : __jsx(ProductCartWrapper, null, __jsx(\"p\", {\n      style: {\n        color: '#ff5e5e'\n      }\n    }, intl.formatMessage({\n      id: 'outOfStock',\n      defaultMessage: 'Out of stock'\n    }))), showProductQuantityExceededMsg && __jsx(ProductQuantityExceededMsg, null, __jsx(FormattedMessage, {\n      id: \"productStockLimit\",\n      defaultMessage: \"There is no more availability of this product\"\n    })), hasEcoButton && data.product_quantity != 0 && __jsx(\"span\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        margin: '0px -10px'\n      }\n    }, \"*\", __jsx(\"p\", {\n      className: \"eco-detail\"\n    }, __jsx(FormattedMessage, {\n      id: \"ecoDescription\",\n      defaultMessage: \"Eco purchase: you pay ${packageDiscount} if you have a package from us to returned.\",\n      values: {\n        packageDiscount: data.packagePrice\n      }\n    }))));\n  };\n\n  var finalPrice = salePrice ? salePrice : price;\n  var noRecicledQuantityInCart = (_getItem9 = getItem(data.id)) === null || _getItem9 === void 0 ? void 0 : _getItem9.quantity;\n  var reclicledQuantityInCart = (_getItem10 = getItem(data.id)) === null || _getItem10 === void 0 ? void 0 : _getItem10.recicledQuantity;\n  return __jsx(ProductCardWrapper, {\n    onClick: onClick,\n    className: \"product-card\"\n  }, __jsx(ProductImageWrapper, null, __jsx(Image, {\n    url: image,\n    className: \"product-image\",\n    style: {\n      position: 'relative'\n    },\n    alt: title\n  }), discountInPercent ? __jsx(React.Fragment, null, __jsx(DiscountPercent, null, discountInPercent, \"%\")) : '', data.product_quantity == 0 ? __jsx(React.Fragment, null, __jsx(OutOfStock, null, intl.formatMessage({\n    id: 'outOfStock',\n    defaultMessage: 'Out of stock'\n  }))) : ''), __jsx(ProductInfo, null, __jsx(\"h3\", {\n    className: \"product-title\"\n  }, title), __jsx(PriceContent, null)));\n};\n\nexport default ProductCard;","map":null,"metadata":{},"sourceType":"module"}