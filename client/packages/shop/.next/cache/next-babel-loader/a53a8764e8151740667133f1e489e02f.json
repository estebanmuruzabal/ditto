{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/your-plants.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport Link from 'next/link';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { HumiditySensorMode, LightSensorModes, WeekDays } from 'utils/constant';\nimport ErrorMessage from 'components/error-message/error-message';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';\nimport { PlantsPageContainer, OrderDetails, BlockTitle, Text, ListItem, ListTitle, ListDes, ButtonText, InputUpper, PlantPageWrapper, PlantsWrapper, WeekContainer, DayContainer, PlantsSensorContainer } from './your-plants.style';\nimport { FormattedMessage } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { Button } from 'components/button/button';\nimport { ADD_PLANT, UPDATE_HUMIDITY_SETTINGS_1, UPDATE_HUMIDITY_SETTINGS_2, UPDATE_LIGHT_SETTINGS } from 'graphql/query/plants.query';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { SuccessMsg } from 'features/user-profile/settings/settings.style';\nimport Switch from 'components/switch/switch';\n\nvar YourPlants = function YourPlants(_ref) {\n  _s();\n\n  var deviceType = _ref.deviceType;\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useQuery = useQuery(GET_LOGGED_IN_USER),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading; // const router = useRouter();\n  // const intl = useIntl();\n\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setPlantName = _useState[1];\n\n  var _useState2 = useState(''),\n      controllerId = _useState2[0],\n      setControllerID = _useState2[1];\n\n  var _useState3 = useState(''),\n      userinfoMsg = _useState3[0],\n      setUserinfoMsg = _useState3[1];\n\n  var _useState4 = useState(''),\n      daySelected = _useState4[0],\n      setDay = _useState4[1];\n\n  var _useMutation = useMutation(ADD_PLANT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addPlant = _useMutation2[0];\n\n  var _useMutation3 = useMutation(UPDATE_HUMIDITY_SETTINGS_1),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      updateSoilHumiditySettings1 = _useMutation4[0];\n\n  var _useMutation5 = useMutation(UPDATE_HUMIDITY_SETTINGS_2),\n      _useMutation6 = _slicedToArray(_useMutation5, 1),\n      updateSoilHumiditySettings2 = _useMutation6[0];\n\n  var _useMutation7 = useMutation(UPDATE_LIGHT_SETTINGS),\n      _useMutation8 = _slicedToArray(_useMutation7, 1),\n      updateLightSettings = _useMutation8[0];\n\n  var plants = state.plants;\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Cargando...',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    });\n  }\n\n  ;\n\n  var handleHumiditySettings1Change = function handleHumiditySettings1Change(plant, field, value) {\n    dispatch({\n      type: 'HANDLE_HUMIDITY_1_SETTINGS_CHANGE',\n      payload: {\n        plant: plant,\n        value: value,\n        field: field\n      }\n    });\n    setTimeout(function () {\n      handleSettings1SaveClick(plant, field, value);\n    }, 1000);\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000);\n  };\n\n  var handleHumiditySettings2Change = function handleHumiditySettings2Change(plant, field, value) {\n    dispatch({\n      type: 'HANDLE_HUMIDITY_2_SETTINGS_CHANGE',\n      payload: {\n        plant: plant,\n        value: value,\n        field: field\n      }\n    });\n    handleSettings2SaveClick(plant, field, value);\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000);\n  };\n\n  var handleAddClick = function handleAddClick() {\n    var _data$getUser;\n\n    addPlant({\n      variables: {\n        id: data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : _data$getUser.id,\n        name: name,\n        controllerId: Number(controllerId)\n      }\n    });\n  };\n\n  var handleLightSettingChange = function handleLightSettingChange(plant, field, value) {\n    dispatch({\n      type: 'HANDLE_LIGHT_SETTINGS_CHANGE',\n      payload: {\n        plant: plant,\n        value: value,\n        field: field\n      }\n    });\n    handleLightSettingSaveClick(plant, field, value);\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000);\n  }; //   const lightSchedule = {\n  //     daysToRepeat: [weekDays[0], weekDays[2], weekDays[3]],\n  //     startTime: '00:00',\n  //     endTime: '23:59',\n  //     enabled: true,\n  //     smartLight: false\n  // }\n\n\n  var handleSettings1SaveClick = function handleSettings1SaveClick(plant, fieldName, fieldValue) {\n    var _data$getUser2, _objectSpread2;\n\n    console.log(plant, fieldName, fieldValue);\n    updateSoilHumiditySettings1({\n      variables: _objectSpread((_objectSpread2 = {\n        id: data === null || data === void 0 ? void 0 : (_data$getUser2 = data.getUser) === null || _data$getUser2 === void 0 ? void 0 : _data$getUser2.id\n      }, _defineProperty(_objectSpread2, fieldName, fieldValue), _defineProperty(_objectSpread2, \"controllerId\", plant.controllerId), _objectSpread2), plant.soilHumiditySettings1)\n    });\n  };\n\n  var handleSettings2SaveClick = function handleSettings2SaveClick(plant, fieldName, fieldValue) {\n    var _data$getUser3, _objectSpread3;\n\n    console.log(plant, fieldName, fieldValue);\n    updateSoilHumiditySettings2({\n      variables: _objectSpread((_objectSpread3 = {\n        id: data === null || data === void 0 ? void 0 : (_data$getUser3 = data.getUser) === null || _data$getUser3 === void 0 ? void 0 : _data$getUser3.id\n      }, _defineProperty(_objectSpread3, fieldName, fieldValue), _defineProperty(_objectSpread3, \"controllerId\", plant.controllerId), _objectSpread3), plant.soilHumiditySettings2)\n    });\n  };\n\n  var handleLightSettingSaveClick = function handleLightSettingSaveClick(plant, fieldName, fieldValue) {\n    var _data$getUser4, _objectSpread4;\n\n    console.log(plant, fieldName, fieldValue);\n\n    var lightSettings = _objectSpread(_objectSpread({}, plant.lightSettings), {}, {\n      name: data.name,\n      type: data.type,\n      categories: data.categories,\n      description: data.description,\n      images_data: data.images_data,\n      slug: data.slug,\n      packagePrice: Number(data.packagePrice),\n      images: data.images,\n      price: Number(data.price),\n      unit: data.unit,\n      sale_price: Number(data.salePrice),\n      discount_in_percent: Number(data.discountInPercent),\n      product_quantity: Number(data.quantity),\n      is_featured: data.is_featured,\n      is_online: data.is_online,\n      meta_title: data.meta_title,\n      meta_keyword: data.meta_keyword,\n      meta_description: data.meta_description\n    });\n\n    createProduct({\n      variables: {\n        input: newProduct\n      }\n    });\n    c;\n    updateLightSettings({\n      variables: _objectSpread((_objectSpread4 = {\n        id: data === null || data === void 0 ? void 0 : (_data$getUser4 = data.getUser) === null || _data$getUser4 === void 0 ? void 0 : _data$getUser4.id\n      }, _defineProperty(_objectSpread4, fieldName, fieldValue), _defineProperty(_objectSpread4, \"controllerId\", plant.controllerId), _objectSpread4), plant.lightSettings)\n    });\n  }; // Add or edit modal\n\n\n  var handleModal = function handleModal(modalComponent) {\n    var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'add-time-schedule-modal';\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  var humidityModeOptions = [{\n    value: HumiditySensorMode.SEEDS_POOL_IRRIGATION,\n    label: 'Riego por inmersión'\n  }, {\n    value: HumiditySensorMode.MANUAL,\n    label: 'Manual'\n  }, {\n    value: HumiditySensorMode.IRRIGATE_SPECIFICT_AMOUNT_ON_DEMAND,\n    label: 'Semi-automático'\n  }, {\n    value: HumiditySensorMode.IRRIGATE_ON_DEMAND,\n    label: 'Automático'\n  }, {\n    value: HumiditySensorMode.SCHEDULE,\n    label: 'Calendario de riego'\n  }, {\n    value: HumiditySensorMode.NONE,\n    label: 'Ninguno'\n  }];\n  var lightModeOptions = [{\n    value: LightSensorModes.MANUAL,\n    label: 'Manual'\n  }, {\n    value: LightSensorModes.NONE,\n    label: 'Ninguno'\n  }, {\n    value: LightSensorModes.SCHEDULE,\n    label: 'Calendario'\n  }, {\n    value: LightSensorModes.SMART_SCHEDULE,\n    label: 'Calendario inteligente'\n  }];\n  var manualModeOptions = [{\n    value: true,\n    label: 'Prendido'\n  }, {\n    value: false,\n    label: 'Apagado'\n  }];\n  var fourRelaysOptions = [{\n    value: 'isRelayOneOn',\n    label: 'Enchufe 1'\n  }, {\n    value: 'isRelayTwoOn',\n    label: 'Enchufe 2'\n  }, {\n    value: 'isRelayThirdOn',\n    label: 'Enchufe 3'\n  }, {\n    value: 'isRelayFourthOn',\n    label: 'Enchufe 4'\n  }];\n  var eightRelaysOptions = [{\n    value: 'isRelayOneOn',\n    label: 'Enchufe 1'\n  }, {\n    value: 'isRelayTwoOn',\n    label: 'Enchufe 2'\n  }, {\n    value: 'isRelayThirdOn',\n    label: 'Enchufe 3'\n  }, {\n    value: 'isRelayFourthOn',\n    label: 'Enchufe 4'\n  }];\n\n  var renderSoilSensor1 = function renderSoilSensor1(plant, setting, i) {\n    var _plant$soilHumiditySe5, _plant$soilHumiditySe7, _plant$soilHumiditySe8, _plant$soilHumiditySe9, _plant$soilHumiditySe10, _setting$relayOneIdRe, _setting$relayOneIdRe2, _plant$soilHumiditySe11, _plant$soilHumiditySe12;\n\n    var selectedMode = humidityModeOptions.find(function (option) {\n      var _plant$soilHumiditySe;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe === void 0 ? void 0 : _plant$soilHumiditySe.mode);\n    });\n    var selectedManualState = manualModeOptions.find(function (option) {\n      var _plant$soilHumiditySe2;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe2 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe2 === void 0 ? void 0 : _plant$soilHumiditySe2.relayOneWorking);\n    });\n    var relayOneSelected = fourRelaysOptions.find(function (option) {\n      var _plant$soilHumiditySe3;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe3 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe3 === void 0 ? void 0 : _plant$soilHumiditySe3.relayOneIdRelated);\n    });\n    var relayTwoSelected = fourRelaysOptions.find(function (option) {\n      var _plant$soilHumiditySe4;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe4 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe4 === void 0 ? void 0 : _plant$soilHumiditySe4.relayTwoIdRelated);\n    });\n    return __jsx(React.Fragment, null, __jsx(PlantsSensorContainer, {\n      key: i + '-orderList',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"plantName\",\n      defaultMessage: \"plantName\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    }, __jsx(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings1.name,\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'name', e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\" // intlInputLabelId=\"profileEmailField\"\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"soilHumidityId\",\n      defaultMessage: \"soilHumidityId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 15\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.soilHumidity1, \" %\"))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"humidityModeId\",\n      defaultMessage: \"humidityModeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'mode', e.value);\n      },\n      value: selectedMode,\n      options: humidityModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 15\n      }\n    }))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"notifyChangesId\",\n      defaultMessage: \"notifyChangesId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }\n    }, __jsx(Switch, {\n      disabled: false,\n      checked: plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe5 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe5 === void 0 ? void 0 : _plant$soilHumiditySe5.sendWhatsappWarnings,\n      labelPosition: 'right' // className,\n      ,\n      onUpdate: function onUpdate() {\n        var _plant$soilHumiditySe6;\n\n        return handleHumiditySettings1Change(plant, 'sendWhatsappWarnings', !(plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe6 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe6 === void 0 ? void 0 : _plant$soilHumiditySe6.sendWhatsappWarnings));\n      } // style\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 15\n      }\n    }))), ((plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe7 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe7 === void 0 ? void 0 : _plant$soilHumiditySe7.mode) === HumiditySensorMode.IRRIGATE_ON_DEMAND || (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe8 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe8 === void 0 ? void 0 : _plant$soilHumiditySe8.mode) === HumiditySensorMode.SEEDS_POOL_IRRIGATION) && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"maxHumidityId\",\n      defaultMessage: \"maxHumidityId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"number\",\n      name: \"maxWarning\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings1.maxWarning,\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'maxWarning', e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\" // intlInputLabelId=\"profileEmailField\"\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"minHumidityId\",\n      defaultMessage: \"minHumidityId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 15\n      }\n    }, __jsx(InputUpper, {\n      type: \"number\",\n      name: \"minWarning\",\n      value: plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe9 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe9 === void 0 ? void 0 : _plant$soilHumiditySe9.minWarning,\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'minWarning', e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\" // intlInputLabelId=\"profileNameField\"\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"asociateRelayOneId\",\n      defaultMessage: \"asociateRelayOneId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'relayOneIdRelated', e.value);\n      },\n      value: relayOneSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"asociateRelayTwoId\",\n      defaultMessage: \"asociateRelayTwoId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'relayTwoIdRelated', e.value);\n      },\n      value: relayTwoSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 17\n      }\n    })))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe10 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe10 === void 0 ? void 0 : _plant$soilHumiditySe10.mode) === HumiditySensorMode.MANUAL && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"manualModeStateId\",\n      defaultMessage: \"manualModeStateId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'relayOneWorking', e.value);\n      },\n      value: selectedManualState,\n      options: manualModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: ((_setting$relayOneIdRe = setting.relayOneIdRelated) === null || _setting$relayOneIdRe === void 0 ? void 0 : _setting$relayOneIdRe.length) ? 'asociateRelayId' : 'asociatedRelayId',\n      defaultMessage: ((_setting$relayOneIdRe2 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe2 === void 0 ? void 0 : _setting$relayOneIdRe2.length) ? 'asociateRelayId' : 'asociatedRelayId',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'relayOneIdRelated', e.value);\n      },\n      value: relayOneSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }\n    })))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe11 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe11 === void 0 ? void 0 : _plant$soilHumiditySe11.mode) === HumiditySensorMode.SEEDS_POOL_IRRIGATION && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"irrigationTimeId\",\n      defaultMessage: \"irrigationTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"number\",\n      name: \"relayOneAutomatedTimeToRun\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings1.relayOneAutomatedTimeToRun,\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'relayOneAutomatedTimeToRun', e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\" // intlInputLabelId=\"profileEmailField\"\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"irrigationEvacuationTimeId\",\n      defaultMessage: \"irrigationEvacuationTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"number\",\n      name: \"relayTwoAutomatedTimeToRun\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings1.relayTwoAutomatedTimeToRun,\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'relayTwoAutomatedTimeToRun', e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 17\n      }\n    })))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe12 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe12 === void 0 ? void 0 : _plant$soilHumiditySe12.mode) === HumiditySensorMode.NONE && __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 11\n      }\n    }, \"Necesitas seleccionar un modo\")));\n  };\n\n  var renderSoilSensor2 = function renderSoilSensor2(plant, setting, i) {\n    var _plant$soilHumiditySe17, _plant$soilHumiditySe19, _plant$soilHumiditySe20, _plant$soilHumiditySe21, _plant$soilHumiditySe22, _setting$relayOneIdRe3, _setting$relayOneIdRe4, _plant$soilHumiditySe23, _plant$soilHumiditySe24;\n\n    var selectedMode = humidityModeOptions.find(function (option) {\n      var _plant$soilHumiditySe13;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe13 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe13 === void 0 ? void 0 : _plant$soilHumiditySe13.mode);\n    });\n    var selectedManualState = manualModeOptions.find(function (option) {\n      var _plant$soilHumiditySe14;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe14 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe14 === void 0 ? void 0 : _plant$soilHumiditySe14.relayOneWorking);\n    });\n    var relayOneSelected = fourRelaysOptions.find(function (option) {\n      var _plant$soilHumiditySe15;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe15 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe15 === void 0 ? void 0 : _plant$soilHumiditySe15.relayOneIdRelated);\n    });\n    var relayTwoSelected = fourRelaysOptions.find(function (option) {\n      var _plant$soilHumiditySe16;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe16 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe16 === void 0 ? void 0 : _plant$soilHumiditySe16.relayTwoIdRelated);\n    });\n    return __jsx(PlantsSensorContainer, {\n      key: i + '-orderList',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"plantName\",\n      defaultMessage: \"plantName\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 11\n      }\n    }, __jsx(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings2.name,\n      onChange: function onChange(e) {\n        return handleHumiditySettings2Change(plant, 'name', e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 13\n      }\n    }))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"soilHumidityId\",\n      defaultMessage: \"soilHumidityId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 17\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 15\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.soilHumidity2, \" %\"))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 11\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"humidityModeId\",\n      defaultMessage: \"humidityModeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 17\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleHumiditySettings2Change(plant, 'mode', e.value);\n      },\n      value: selectedMode,\n      options: humidityModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 15\n      }\n    }))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 11\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"notifyChangesId\",\n      defaultMessage: \"notifyChangesId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 17\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 13\n      }\n    }, __jsx(Switch, {\n      disabled: false,\n      checked: plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe17 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe17 === void 0 ? void 0 : _plant$soilHumiditySe17.sendWhatsappWarnings,\n      labelPosition: 'right' // className,\n      ,\n      onUpdate: function onUpdate() {\n        var _plant$soilHumiditySe18;\n\n        return handleHumiditySettings2Change(plant, 'sendWhatsappWarnings', !(plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe18 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe18 === void 0 ? void 0 : _plant$soilHumiditySe18.sendWhatsappWarnings));\n      } // style\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 15\n      }\n    }))), ((plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe19 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe19 === void 0 ? void 0 : _plant$soilHumiditySe19.mode) === HumiditySensorMode.IRRIGATE_ON_DEMAND || (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe20 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe20 === void 0 ? void 0 : _plant$soilHumiditySe20.mode) === HumiditySensorMode.SEEDS_POOL_IRRIGATION) && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"maxHumidityId\",\n      defaultMessage: \"maxHumidityId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"number\" // min=\"1\" \n      // max=\"5\"\n      // placeholder={intl.formatMessage({\n      //   id: 'couponPlaceholder',\n      //   defaultMessage: 'Enter Coupon Here',\n      // })}\n      // inputRef={register({required: true})}\n      //               placeholder='Ex: Search By Name'\n      // required={true}\n      ,\n      name: \"maxWarning\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings2.maxWarning,\n      onChange: function onChange(e) {\n        return handleHumiditySettings2Change(plant, 'maxWarning', e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"minHumidityId\",\n      defaultMessage: \"minHumidityId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 15\n      }\n    }, __jsx(InputUpper, {\n      type: \"number\",\n      name: \"minWarning\",\n      value: plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe21 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe21 === void 0 ? void 0 : _plant$soilHumiditySe21.minWarning,\n      onChange: function onChange(e) {\n        return handleHumiditySettings2Change(plant, 'minWarning', e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"asociateRelayOneId\",\n      defaultMessage: \"asociateRelayOneId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleHumiditySettings2Change(plant, 'relayOneIdRelated', e.value);\n      },\n      value: relayOneSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"asociateRelayTwoId\",\n      defaultMessage: \"asociateRelayTwoId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleHumiditySettings2Change(plant, 'relayTwoIdRelated', e.value);\n      },\n      value: relayTwoSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 17\n      }\n    })))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe22 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe22 === void 0 ? void 0 : _plant$soilHumiditySe22.mode) === HumiditySensorMode.MANUAL && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"manualModeStateId\",\n      defaultMessage: \"manualModeStateId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleHumiditySettings2Change(plant, 'relayOneWorking', e.value);\n      },\n      value: selectedManualState,\n      options: manualModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: ((_setting$relayOneIdRe3 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe3 === void 0 ? void 0 : _setting$relayOneIdRe3.length) ? 'asociateRelayId' : 'asociatedRelayId',\n      defaultMessage: ((_setting$relayOneIdRe4 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe4 === void 0 ? void 0 : _setting$relayOneIdRe4.length) ? 'asociateRelayId' : 'asociatedRelayId',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleHumiditySettings2Change(plant, 'relayOneIdRelated', e.value);\n      },\n      value: relayOneSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 17\n      }\n    })))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe23 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe23 === void 0 ? void 0 : _plant$soilHumiditySe23.mode) === HumiditySensorMode.SEEDS_POOL_IRRIGATION && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"irrigationTimeId\",\n      defaultMessage: \"irrigationTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"number\",\n      name: \"relayOneAutomatedTimeToRun\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings2.relayOneAutomatedTimeToRun,\n      onChange: function onChange(e) {\n        return handleHumiditySettings2Change(plant, 'relayOneAutomatedTimeToRun', e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"irrigationEvacuationTimeId\",\n      defaultMessage: \"irrigationEvacuationTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"number\",\n      name: \"relayTwoAutomatedTimeToRun\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings2.relayTwoAutomatedTimeToRun,\n      onChange: function onChange(e) {\n        return handleHumiditySettings2Change(plant, 'relayTwoAutomatedTimeToRun', e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 17\n      }\n    })))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe24 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe24 === void 0 ? void 0 : _plant$soilHumiditySe24.mode) === HumiditySensorMode.NONE && __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 11\n      }\n    }, \"Necesitas seleccionar un modo\"));\n  };\n\n  var renderAirTemperatureSensor = function renderAirTemperatureSensor(plant, i) {\n    return __jsx(PlantsSensorContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"tempSensorId\",\n      defaultMessage: \"tempSensorId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 13\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.tempeture, \" \\xB0\"))));\n  };\n\n  var renderAirHumiditySensor = function renderAirHumiditySensor(plant, i) {\n    return __jsx(PlantsSensorContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"humedadAmbienteSensorId\",\n      defaultMessage: \"humedadAmbienteSensorId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 13\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.airHumidity, \" %\"))));\n  };\n\n  var renderLightSensor = function renderLightSensor(plant, setting, i) {\n    var _setting$relayOneIdRe5, _setting$relayOneIdRe6;\n\n    var selectedMode = lightModeOptions.find(function (option) {\n      return option.value === setting.mode;\n    });\n    var selectedManualState = manualModeOptions.find(function (option) {\n      return option.value === setting.relayOneWorking;\n    });\n    var relayOneSelected = fourRelaysOptions.find(function (option) {\n      return option.value === setting.relayOneIdRelated;\n    });\n    var relayTwoSelected = fourRelaysOptions.find(function (option) {\n      return option.value === setting.relayTwoIdRelated;\n    });\n    console.log('light setting:::', setting);\n    return __jsx(PlantsSensorContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"lightId\",\n      defaultMessage: \"lightId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 13\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.light, \" %\"))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"lightModeId\",\n      defaultMessage: \"lightModeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 11\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleLightSettingChange(plant, 'mode', e.value);\n      },\n      value: selectedMode,\n      options: lightModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 13\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: ((_setting$relayOneIdRe5 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe5 === void 0 ? void 0 : _setting$relayOneIdRe5.length) ? 'asociatedRelayId' : 'asociateRelayId',\n      defaultMessage: ((_setting$relayOneIdRe6 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe6 === void 0 ? void 0 : _setting$relayOneIdRe6.length) ? 'asociatedRelayId' : 'asociateRelayId',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 11\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleLightSettingChange(plant, 'relayOneIdRelated', e.value);\n      },\n      value: relayOneSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 13\n      }\n    }))), setting.mode === LightSensorModes.MANUAL && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"manualModeStateId\",\n      defaultMessage: \"manualModeStateId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleLightSettingChange(plant, 'relayOneWorking', e.value);\n      },\n      value: selectedManualState,\n      options: manualModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 17\n      }\n    })))), setting.mode === LightSensorModes.SCHEDULE && __jsx(React.Fragment, null, __jsx(WeekContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 13\n      }\n    }, Object.keys(WeekDays).map(function (day, i) {\n      return __jsx(DayContainer, {\n        key: i + '-day-container',\n        style: {\n          backgroundColor: daySelected === day ? '#E6E6E6' : 'transparent'\n        },\n        onClick: function onClick() {\n          return setDay(day);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 19\n        }\n      }, day.substring(0, 3));\n    })), __jsx(Button, {\n      size: \"big\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: function onClick() {\n        var _data$getUser5;\n\n        return handleModal(AddTimeSchedule, {\n          item: {\n            name: 'add-light-setting'\n          },\n          id: data === null || data === void 0 ? void 0 : (_data$getUser5 = data.getUser) === null || _data$getUser5 === void 0 ? void 0 : _data$getUser5.id\n        }, 'add-address-modal');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addTimeScheduleId\",\n      defaultMessage: \"addTimeScheduleId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 15\n      }\n    }))));\n  };\n\n  var selectStyle = {\n    control: function control(styles) {\n      return _objectSpread(_objectSpread({}, styles), {}, {\n        width: '197px'\n      });\n    } // option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    //   // const color = chroma(data.color);\n    //   return {\n    //     ...styles,\n    //     backgroundColor: isDisabled ? 'red' : blue,\n    //     color: '#FFF',\n    //     cursor: isDisabled ? 'not-allowed' : 'default',\n    //     ...\n    //   };\n    // }\n\n  };\n  return __jsx(PlantPageWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 5\n    }\n  }, __jsx(PlantsPageContainer, {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1002,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1003,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: \"home-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"backProfileBtn\",\n    defaultMessage: \"Back to Profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 13\n    }\n  }))), __jsx(OrderDetails, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 9\n    }\n  }, __jsx(BlockTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1010,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"yourPlants\",\n    defaultMessage: \"Your Plants\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 13\n    }\n  })), (plants === null || plants === void 0 ? void 0 : plants.length) < 1 && __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 36\n    }\n  }, \"No tienes plantas registradas\"), plants === null || plants === void 0 ? void 0 : plants.map(function (plant, i) {\n    return __jsx(PlantsWrapper, {\n      key: i + '-orderList',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 17\n      }\n    }, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 19\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 23\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1023,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"controllerNameId\",\n      defaultMessage: \"controllerNameId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 27\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 23\n      }\n    }, __jsx(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: plant === null || plant === void 0 ? void 0 : plant.name // onChange={(e: any) => handleHumiditySettings1Change(plant, 'name', e.target.value)}\n      ,\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 25\n      }\n    }))), renderSoilSensor1(plant, plant.soilHumiditySettings1, i), renderSoilSensor2(plant, plant.soilHumiditySettings2, i), renderLightSensor(plant, plant.lightSettings, i), renderAirTemperatureSensor(plant, i), renderAirHumiditySensor(plant, i));\n  }), userinfoMsg && __jsx(SuccessMsg, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"userInfoSuccess\",\n    defaultMessage: userinfoMsg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 17\n    }\n  })))), __jsx(PlantsPageContainer, {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1065,\n      columnNumber: 7\n    }\n  }, __jsx(BlockTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"addController\",\n    defaultMessage: \"Your Plants\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1067,\n      columnNumber: 11\n    }\n  })), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1073,\n      columnNumber: 9\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1074,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"plantNameField\",\n    defaultMessage: \"Name of the plant\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1076,\n      columnNumber: 15\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1082,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    onChange: function onChange(e) {\n      return setPlantName(e.target.value);\n    },\n    backgroundColor: \"#F7F7F7\",\n    width: \"197px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1083,\n      columnNumber: 13\n    }\n  }))), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1094,\n      columnNumber: 9\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1095,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1096,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"controllerIdField\",\n    defaultMessage: \"ID of the controller\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1097,\n      columnNumber: 15\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1103,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"controllerId\",\n    value: controllerId,\n    onChange: function onChange(e) {\n      return setControllerID(e.target.value);\n    },\n    backgroundColor: \"#F7F7F7\",\n    width: \"197px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1104,\n      columnNumber: 13\n    }\n  }))), __jsx(Button, {\n    className: \"cart-button\",\n    variant: \"secondary\",\n    borderRadius: 100,\n    onClick: handleAddClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 9\n    }\n  }, __jsx(ButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1116,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"addPlantButton\",\n    defaultMessage: \"Add plant\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1117,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(YourPlants, \"5R/E+uVE+W2k0Sx44hpGJcviRco=\", false, function () {\n  return [useQuery, useMutation, useMutation, useMutation, useMutation];\n});\n\n_c = YourPlants;\nexport default YourPlants;\n\nvar _c;\n\n$RefreshReg$(_c, \"YourPlants\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/your-plants.tsx"],"names":["React","useState","useContext","Link","openModal","useMutation","useQuery","HumiditySensorMode","LightSensorModes","WeekDays","ErrorMessage","AddTimeSchedule","PlantsPageContainer","OrderDetails","BlockTitle","Text","ListItem","ListTitle","ListDes","ButtonText","InputUpper","PlantPageWrapper","PlantsWrapper","WeekContainer","DayContainer","PlantsSensorContainer","FormattedMessage","GET_LOGGED_IN_USER","Button","ADD_PLANT","UPDATE_HUMIDITY_SETTINGS_1","UPDATE_HUMIDITY_SETTINGS_2","UPDATE_LIGHT_SETTINGS","Select","Input","ProfileContext","SuccessMsg","Switch","YourPlants","deviceType","state","dispatch","data","error","loading","name","setPlantName","controllerId","setControllerID","userinfoMsg","setUserinfoMsg","daySelected","setDay","addPlant","updateSoilHumiditySettings1","updateSoilHumiditySettings2","updateLightSettings","plants","message","handleHumiditySettings1Change","plant","field","value","type","payload","setTimeout","handleSettings1SaveClick","handleHumiditySettings2Change","handleSettings2SaveClick","handleAddClick","variables","id","getUser","Number","handleLightSettingChange","handleLightSettingSaveClick","fieldName","fieldValue","console","log","soilHumiditySettings1","soilHumiditySettings2","lightSettings","categories","description","images_data","slug","packagePrice","images","price","unit","sale_price","salePrice","discount_in_percent","discountInPercent","product_quantity","quantity","is_featured","is_online","meta_title","meta_keyword","meta_description","createProduct","input","newProduct","c","handleModal","modalComponent","modalProps","className","show","config","width","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","humidityModeOptions","SEEDS_POOL_IRRIGATION","label","MANUAL","IRRIGATE_SPECIFICT_AMOUNT_ON_DEMAND","IRRIGATE_ON_DEMAND","SCHEDULE","NONE","lightModeOptions","SMART_SCHEDULE","manualModeOptions","fourRelaysOptions","eightRelaysOptions","renderSoilSensor1","setting","i","selectedMode","find","option","mode","selectedManualState","relayOneWorking","relayOneSelected","relayOneIdRelated","relayTwoSelected","relayTwoIdRelated","e","target","justifyContent","marginLeft","soilHumidity1","selectStyle","sendWhatsappWarnings","maxWarning","minWarning","length","relayOneAutomatedTimeToRun","relayTwoAutomatedTimeToRun","renderSoilSensor2","soilHumidity2","renderAirTemperatureSensor","tempeture","renderAirHumiditySensor","airHumidity","renderLightSensor","light","Object","keys","map","day","backgroundColor","substring","control","styles"],"mappings":"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","sourcesContent":["import React,  { useState, useEffect, useContext } from 'react';\nimport Link from 'next/link';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { CURRENCY, HumiditySensorMode, LightSensorModes, WeekDays } from 'utils/constant';\nimport ErrorMessage from 'components/error-message/error-message';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';  \n\nimport OrderReceivedWrapper, {\n  PlantsPageContainer,\n  OrderInfo,\n  OrderDetails,\n  TotalAmount,\n  BlockTitle,\n  Text,\n  InfoBlockWrapper,\n  InfoBlock,\n  ListItem,\n  ListTitle,\n  ListDes,\n  ButtonText,\n  Row,\n  InputUpper,\n  PlantPageWrapper,\n  PlantsWrapper,\n  WeekContainer,\n  DayContainer,\n  PlantsSensorContainer\n} from './your-plants.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { PlantsListWrapper } from 'features/your-plants/your-plants.style';\nimport ErrorMessageTwo from 'components/error-message/error-message-two';\nimport { Button } from 'components/button/button';\nimport { ADD_PLANT, UPDATE_HUMIDITY_SETTINGS_1, UPDATE_HUMIDITY_SETTINGS_2, UPDATE_LIGHT_SETTINGS } from 'graphql/query/plants.query';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { SuccessMsg } from 'features/user-profile/settings/settings.style';\nimport Switch from 'components/switch/switch';\n  \n\ntype YourPlantsProps = {\n  data?: any;\n  index?: Number;\n  Router?: any;\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst YourPlants: React.FC<YourPlantsProps> = ({ deviceType }) => {\n  const { state, dispatch } = useContext(ProfileContext);\n  const { data, error, loading } = useQuery(GET_LOGGED_IN_USER);\n  // const router = useRouter();\n  // const intl = useIntl();\n  const [name, setPlantName] = useState('');\n  const [controllerId, setControllerID] = useState('');\n  const [userinfoMsg, setUserinfoMsg] = useState('');\n  const [daySelected, setDay] = useState('');\n  const [addPlant] = useMutation(ADD_PLANT);\n  const [updateSoilHumiditySettings1] = useMutation(UPDATE_HUMIDITY_SETTINGS_1);\n  const [updateSoilHumiditySettings2] = useMutation(UPDATE_HUMIDITY_SETTINGS_2);\n  const [updateLightSettings] = useMutation(UPDATE_LIGHT_SETTINGS);\n  const { plants } = state;\n\n  if (loading) {\n    return <ErrorMessage message={'Cargando...'} />\n  };\n\n  if (error) {\n    return (\n      <ErrorMessage message={error.message} />\n    );\n  };\n\n  const handleHumiditySettings1Change = (plant: any, field: string, value: string | boolean) => {\n    dispatch({\n      type: 'HANDLE_HUMIDITY_1_SETTINGS_CHANGE',\n      payload: { plant, value, field },\n    });\n\n    setTimeout(function () {\n      handleSettings1SaveClick(plant, field, value);\n    }, 1000)\n\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000)\n  };\n\n  const handleHumiditySettings2Change = (plant: any, field: string, value: string | boolean) => {\n    dispatch({\n      type: 'HANDLE_HUMIDITY_2_SETTINGS_CHANGE',\n      payload: { plant, value, field },\n    });\n\n    handleSettings2SaveClick(plant, field, value);\n\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000)\n  };\n  \n  const handleAddClick = () => {\n    addPlant({\n      variables: {\n        id: data?.getUser?.id,\n        name,\n        controllerId: Number(controllerId)\n      },\n    });\n  };\n\n  const handleLightSettingChange = (plant: any, field: string, value: string | boolean) => {\n    dispatch({\n      type: 'HANDLE_LIGHT_SETTINGS_CHANGE',\n      payload: { plant, value, field },\n    });\n\n    handleLightSettingSaveClick(plant, field, value);\n\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000)\n  };\n\n//   const lightSchedule = {\n//     daysToRepeat: [weekDays[0], weekDays[2], weekDays[3]],\n//     startTime: '00:00',\n//     endTime: '23:59',\n//     enabled: true,\n//     smartLight: false\n// }\n    \n  const handleSettings1SaveClick = (plant: any, fieldName: string, fieldValue: string | boolean) => {\n    console.log(plant, fieldName, fieldValue);\n    updateSoilHumiditySettings1({\n      variables: {\n        id: data?.getUser?.id,\n        [fieldName]: fieldValue,\n        controllerId: plant.controllerId,\n        ...plant.soilHumiditySettings1\n      },\n    });\n  };\n\n  const handleSettings2SaveClick = (plant: any, fieldName: string, fieldValue: string | boolean) => {\n    console.log(plant, fieldName, fieldValue);\n    updateSoilHumiditySettings2({\n      variables: {\n        id: data?.getUser?.id,\n        [fieldName]: fieldValue,\n        controllerId: plant.controllerId,\n        ...plant.soilHumiditySettings2\n      },\n    });\n  };\n\n  const handleLightSettingSaveClick = (plant: any, fieldName: string, fieldValue: string | boolean) => {\n    console.log(plant, fieldName, fieldValue);\n    const lightSettings = {\n      ...plant.lightSettings,\n      name: data.name,\n      type: data.type,\n      categories: data.categories,\n      description: data.description,\n      images_data: data.images_data,\n      slug: data.slug,\n      packagePrice: Number(data.packagePrice),\n      images: data.images,\n      price: Number(data.price),\n      unit: data.unit,\n      sale_price: Number(data.salePrice),\n      discount_in_percent: Number(data.discountInPercent),\n      product_quantity: Number(data.quantity),\n      is_featured: data.is_featured,\n      is_online: data.is_online,\n      meta_title: data.meta_title,\n      meta_keyword: data.meta_keyword,\n      meta_description: data.meta_description,\n    };\n    createProduct({\n      variables: { input: newProduct },\n    });\nc \n    updateLightSettings({\n      variables: {\n        id: data?.getUser?.id,\n        [fieldName]: fieldValue,\n        controllerId: plant.controllerId,\n        ...plant.lightSettings\n      },\n    });\n  };\n\n  // Add or edit modal\n  const handleModal = (\n    modalComponent: any,\n    modalProps = {},\n    className: string = 'add-time-schedule-modal'\n  ) => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className,\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: { item: modalProps },\n    });\n  };\n  \n  const humidityModeOptions = [\n    { value: HumiditySensorMode.SEEDS_POOL_IRRIGATION, label: 'Riego por inmersión' },\n    { value: HumiditySensorMode.MANUAL, label: 'Manual' },\n    { value: HumiditySensorMode.IRRIGATE_SPECIFICT_AMOUNT_ON_DEMAND, label: 'Semi-automático' },\n    { value: HumiditySensorMode.IRRIGATE_ON_DEMAND, label: 'Automático' },\n    { value: HumiditySensorMode.SCHEDULE, label: 'Calendario de riego' },\n    { value: HumiditySensorMode.NONE, label: 'Ninguno' }\n  ];\n\n  const lightModeOptions = [\n    { value: LightSensorModes.MANUAL, label: 'Manual' },\n    { value: LightSensorModes.NONE, label: 'Ninguno' },\n    { value: LightSensorModes.SCHEDULE, label: 'Calendario' },\n    { value: LightSensorModes.SMART_SCHEDULE, label: 'Calendario inteligente' }\n  ];\n\n  const manualModeOptions = [\n    { value: true, label: 'Prendido' },\n    { value: false, label: 'Apagado' }\n  ];\n\n  const fourRelaysOptions = [\n    { value: 'isRelayOneOn', label: 'Enchufe 1' },\n    { value: 'isRelayTwoOn', label: 'Enchufe 2' },\n    { value: 'isRelayThirdOn', label: 'Enchufe 3' },\n    { value: 'isRelayFourthOn', label: 'Enchufe 4' }\n  ];\n\n  const eightRelaysOptions = [\n    { value: 'isRelayOneOn', label: 'Enchufe 1' },\n    { value: 'isRelayTwoOn', label: 'Enchufe 2' },\n    { value: 'isRelayThirdOn', label: 'Enchufe 3' },\n    { value: 'isRelayFourthOn', label: 'Enchufe 4' }\n  ];\n\n  const renderSoilSensor1 = (plant: any,setting: any, i: any) => {\n    const selectedMode = humidityModeOptions.find((option) => option.value === plant?.soilHumiditySettings1?.mode);\n    const selectedManualState = manualModeOptions.find((option) => option.value === plant?.soilHumiditySettings1?.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === plant?.soilHumiditySettings1?.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find((option) => option.value === plant?.soilHumiditySettings1?.relayTwoIdRelated);\n    return (\n      <>\n      <PlantsSensorContainer key={i + '-orderList'}>\n        <ListItem>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"plantName\"\n                defaultMessage=\"plantName\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <Input\n              type='text'\n              name='name'\n              value={plant?.soilHumiditySettings1.name}\n              onChange={(e: any) => handleHumiditySettings1Change(plant, 'name', e.target.value)}\n              backgroundColor='#F7F7F7'\n              width='197px'\n              // intlInputLabelId=\"profileEmailField\"\n            />\n          </ListDes>\n        </ListItem>\n      \n\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"soilHumidityId\"\n                  defaultMessage=\"soilHumidityId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes style={{ marginLeft: '10px' }}>\n              <Text>{plant?.soilHumidity1} %</Text>\n            </ListDes>\n          </ListItem>\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"humidityModeId\"\n                  defaultMessage=\"humidityModeId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes>\n              <Select \n                onChange={(e: any) => handleHumiditySettings1Change(plant, 'mode', e.value)}\n                value={selectedMode}\n                options={humidityModeOptions}\n                styles={selectStyle}\n                menuPosition={'fixed'}\n              />\n            </ListDes>\n          </ListItem>\n\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"notifyChangesId\"\n                  defaultMessage=\"notifyChangesId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes style={{ marginLeft: '10px' }}>\n              <Switch \n                disabled={false}\n                checked={plant?.soilHumiditySettings1?.sendWhatsappWarnings}\n                labelPosition={'right'}\n                // className,\n                onUpdate={() => handleHumiditySettings1Change(plant, 'sendWhatsappWarnings', !plant?.soilHumiditySettings1?.sendWhatsappWarnings)}\n                // style\n              />\n            </ListDes>\n          </ListItem>\n\n\n        { (plant?.soilHumiditySettings1?.mode === HumiditySensorMode.IRRIGATE_ON_DEMAND ||\n          plant?.soilHumiditySettings1?.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION) && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='maxHumidityId'\n                    defaultMessage='maxHumidityId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Input\n                  type='number'\n                  name='maxWarning'\n                  value={plant?.soilHumiditySettings1.maxWarning}\n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'maxWarning', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                  // intlInputLabelId=\"profileEmailField\"\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='minHumidityId'\n                    defaultMessage='minHumidityId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <InputUpper\n                  type='number'\n                  name='minWarning'\n                  value={plant?.soilHumiditySettings1?.minWarning}\n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'minWarning', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                  // intlInputLabelId=\"profileNameField\"\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='asociateRelayOneId'\n                    defaultMessage='asociateRelayOneId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'relayOneIdRelated', e.value)}\n                  value={relayOneSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='asociateRelayTwoId'\n                    defaultMessage='asociateRelayTwoId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'relayTwoIdRelated', e.value)}\n                  value={relayTwoSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n          </>\n        )}\n\n        { plant?.soilHumiditySettings1?.mode === HumiditySensorMode.MANUAL && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='manualModeStateId'\n                    defaultMessage='manualModeStateId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'relayOneWorking', e.value)}\n                  value={selectedManualState}\n                  options={manualModeOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id={setting.relayOneIdRelated?.length ? 'asociateRelayId' :'asociatedRelayId' }\n                    defaultMessage={setting.relayOneIdRelated?.length ? 'asociateRelayId' :'asociatedRelayId'}\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'relayOneIdRelated', e.value)}\n                  value={relayOneSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n          </>\n        )}\n\n        { plant?.soilHumiditySettings1?.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='irrigationTimeId'\n                    defaultMessage='irrigationTimeId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Input\n                  type='number'\n                  name='relayOneAutomatedTimeToRun'\n                  value={plant?.soilHumiditySettings1.relayOneAutomatedTimeToRun}\n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'relayOneAutomatedTimeToRun', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                  // intlInputLabelId=\"profileEmailField\"\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='irrigationEvacuationTimeId'\n                    defaultMessage='irrigationEvacuationTimeId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Input\n                  type='number'\n                  name='relayTwoAutomatedTimeToRun'\n                  value={plant?.soilHumiditySettings1.relayTwoAutomatedTimeToRun}\n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'relayTwoAutomatedTimeToRun', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                />\n              </ListDes>\n            </ListItem>\n\n          </>\n        )}\n        \n        \n        { plant?.soilHumiditySettings1?.mode === HumiditySensorMode.NONE && (\n          <Text>Necesitas seleccionar un modo</Text>\n        )}\n        </PlantsSensorContainer>\n      </>\n    )\n  }\n\n  const renderSoilSensor2 = (plant: any, setting: any, i: any) => {\n    const selectedMode = humidityModeOptions.find((option) => option.value === plant?.soilHumiditySettings2?.mode);\n    const selectedManualState = manualModeOptions.find((option) => option.value === plant?.soilHumiditySettings2?.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === plant?.soilHumiditySettings2?.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find((option) => option.value === plant?.soilHumiditySettings2?.relayTwoIdRelated);\n    return (\n      <PlantsSensorContainer key={i + '-orderList'}>\n        <ListItem>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"plantName\"\n                defaultMessage=\"plantName\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <Input\n              type='text'\n              name='name'\n              value={plant?.soilHumiditySettings2.name}\n              onChange={(e: any) => handleHumiditySettings2Change(plant, 'name', e.target.value)}\n              backgroundColor='#F7F7F7'\n              width='197px'\n            />\n          </ListDes>\n        </ListItem>\n      \n\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"soilHumidityId\"\n                  defaultMessage=\"soilHumidityId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes style={{ marginLeft: '10px' }}>\n              <Text>{plant?.soilHumidity2} %</Text>\n            </ListDes>\n          </ListItem>\n          <ListItem>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"humidityModeId\"\n                  defaultMessage=\"humidityModeId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes>\n              <Select \n                onChange={(e: any) => handleHumiditySettings2Change(plant, 'mode', e.value)}\n                value={selectedMode}\n                options={humidityModeOptions}\n                styles={selectStyle}\n                menuPosition={'fixed'}\n              />\n            </ListDes>\n          </ListItem>\n\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"notifyChangesId\"\n                  defaultMessage=\"notifyChangesId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes style={{ marginLeft: '10px' }}>\n              <Switch \n                disabled={false}\n                checked={plant?.soilHumiditySettings2?.sendWhatsappWarnings}\n                labelPosition={'right'}\n                // className,\n                onUpdate={() => handleHumiditySettings2Change(plant, 'sendWhatsappWarnings', !plant?.soilHumiditySettings2?.sendWhatsappWarnings)}\n                // style\n              />\n            </ListDes>\n          </ListItem>\n\n\n        { (plant?.soilHumiditySettings2?.mode === HumiditySensorMode.IRRIGATE_ON_DEMAND ||\n          plant?.soilHumiditySettings2?.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION) && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='maxHumidityId'\n                    defaultMessage='maxHumidityId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Input\n                  type='number'\n                  // min=\"1\" \n                  // max=\"5\"\n                  // placeholder={intl.formatMessage({\n                  //   id: 'couponPlaceholder',\n                  //   defaultMessage: 'Enter Coupon Here',\n                  // })}\n                  // inputRef={register({required: true})}\n                  //               placeholder='Ex: Search By Name'\n                  // required={true}\n                  name='maxWarning'\n                  value={plant?.soilHumiditySettings2.maxWarning}\n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'maxWarning', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='minHumidityId'\n                    defaultMessage='minHumidityId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <InputUpper\n                  type='number'\n                  name='minWarning'\n                  value={plant?.soilHumiditySettings2?.minWarning}\n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'minWarning', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='asociateRelayOneId'\n                    defaultMessage='asociateRelayOneId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'relayOneIdRelated', e.value)}\n                  value={relayOneSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='asociateRelayTwoId'\n                    defaultMessage='asociateRelayTwoId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'relayTwoIdRelated', e.value)}\n                  value={relayTwoSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n          </>\n        )}\n\n        { plant?.soilHumiditySettings2?.mode === HumiditySensorMode.MANUAL && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='manualModeStateId'\n                    defaultMessage='manualModeStateId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'relayOneWorking', e.value)}\n                  value={selectedManualState}\n                  options={manualModeOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id={setting.relayOneIdRelated?.length ? 'asociateRelayId' : 'asociatedRelayId'}\n                    defaultMessage={setting.relayOneIdRelated?.length ? 'asociateRelayId' : 'asociatedRelayId'}\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'relayOneIdRelated', e.value)}\n                  value={relayOneSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n          </>\n        )}\n\n        { plant?.soilHumiditySettings2?.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='irrigationTimeId'\n                    defaultMessage='irrigationTimeId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Input\n                  type='number'\n                  name='relayOneAutomatedTimeToRun'\n                  value={plant?.soilHumiditySettings2.relayOneAutomatedTimeToRun}\n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'relayOneAutomatedTimeToRun', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='irrigationEvacuationTimeId'\n                    defaultMessage='irrigationEvacuationTimeId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Input\n                  type='number'\n                  name='relayTwoAutomatedTimeToRun'\n                  value={plant?.soilHumiditySettings2.relayTwoAutomatedTimeToRun}\n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'relayTwoAutomatedTimeToRun', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                />\n              </ListDes>\n            </ListItem>\n          </>\n        )}\n        \n        \n        { plant?.soilHumiditySettings2?.mode === HumiditySensorMode.NONE && (\n          <Text>Necesitas seleccionar un modo</Text>\n        )}\n        </PlantsSensorContainer>\n    )\n  }\n\n  const renderAirTemperatureSensor = (plant: any, i: any) => {\n    return (\n      <PlantsSensorContainer>\n        <ListItem style={{ justifyContent: 'flex-start' }}>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"tempSensorId\"\n                defaultMessage=\"tempSensorId\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes style={{ marginLeft: '10px' }}>\n            <Text>{plant?.tempeture} °</Text>\n          </ListDes>\n        </ListItem>\n      </PlantsSensorContainer>\n    )\n  }\n\n  const renderAirHumiditySensor = (plant: any, i: any) => {\n    return (\n      <PlantsSensorContainer>\n        <ListItem style={{ justifyContent: 'flex-start' }}>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"humedadAmbienteSensorId\"\n                defaultMessage=\"humedadAmbienteSensorId\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes style={{ marginLeft: '10px' }}>\n            <Text>{plant?.airHumidity} %</Text>\n          </ListDes>\n        </ListItem>\n      </PlantsSensorContainer>\n    )\n  }\n\n  const renderLightSensor = (plant: any, setting: any, i: any) => {\n    const selectedMode = lightModeOptions.find((option) => option.value === setting.mode);\n    const selectedManualState = manualModeOptions.find((option) => option.value === setting.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === setting.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find((option) => option.value === setting.relayTwoIdRelated);\n    console.log('light setting:::', setting);\n    return (\n      <PlantsSensorContainer>\n        <ListItem style={{ justifyContent: 'flex-start' }}>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"lightId\"\n                defaultMessage=\"lightId\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes style={{ marginLeft: '10px' }}>\n            <Text>{plant?.light} %</Text>\n          </ListDes>\n        </ListItem>\n\n        <ListItem style={{ justifyContent: 'flex-start' }}>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"lightModeId\"\n                defaultMessage=\"lightModeId\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <Select \n              onChange={(e: any) => handleLightSettingChange(plant, 'mode', e.value)}\n              value={selectedMode}\n              options={lightModeOptions}\n              styles={selectStyle}\n              menuPosition={'fixed'}\n            />\n          </ListDes>\n        </ListItem>\n\n        <ListItem>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n                defaultMessage={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <Select \n              onChange={(e: any) => handleLightSettingChange(plant, 'relayOneIdRelated', e.value)}\n              value={relayOneSelected}\n              options={fourRelaysOptions}\n              styles={selectStyle}\n              menuPosition={'fixed'}\n            />\n          </ListDes>\n        </ListItem>\n\n        { setting.mode === LightSensorModes.MANUAL && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='manualModeStateId'\n                    defaultMessage='manualModeStateId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleLightSettingChange(plant, 'relayOneWorking', e.value)}\n                  value={selectedManualState}\n                  options={manualModeOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n          </>\n        )}\n\n        { setting.mode === LightSensorModes.SCHEDULE && (\n          <>\n            <WeekContainer>\n            {Object.keys(WeekDays).map((day, i: number) => {\n               return (\n                  <DayContainer\n                    key={i + '-day-container'}\n                    style={{ backgroundColor: daySelected === day ? '#E6E6E6' : 'transparent' }}\n                    onClick={() => setDay(day)}\n                  >\n                    {day.substring(0,3)}\n                  </DayContainer>\n                )\n              })\n            }\n            </WeekContainer>\n\n            <Button\n              size='big'\n              variant='outlined'\n              type='button'\n              className='add-button'\n              onClick={() =>handleModal(\n                  AddTimeSchedule, \n                  {\n                    item:{\n                      name: 'add-light-setting',\n                      \n                    },\n                    id: data?.getUser?.id\n                  },\n                  'add-address-modal')\n              }\n            >\n              <FormattedMessage\n                id='addTimeScheduleId'\n                defaultMessage='addTimeScheduleId' \n              />\n            </Button>\n          </>\n        )}\n\n\n      </PlantsSensorContainer>\n\n    )\n  }\n\n  const selectStyle = {\n    control: styles => ({ ...styles, width: '197px' }),\n    // option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    //   // const color = chroma(data.color);\n    //   return {\n    //     ...styles,\n    //     backgroundColor: isDisabled ? 'red' : blue,\n    //     color: '#FFF',\n    //     cursor: isDisabled ? 'not-allowed' : 'default',\n    //     ...\n    //   };\n    // }\n  };\n\n  return (\n    <PlantPageWrapper>\n      <PlantsPageContainer style={{ width: '100%' }}>\n        <Link href=\"/profile\">\n          <a className=\"home-btn\">\n            <FormattedMessage id=\"backProfileBtn\" defaultMessage=\"Back to Profile\" />\n          </a>\n        </Link>\n\n        <OrderDetails>\n          <BlockTitle>\n            <FormattedMessage\n              id=\"yourPlants\"\n              defaultMessage=\"Your Plants\"\n            />\n          </BlockTitle>\n\n          { plants?.length < 1 && (<Text>No tienes plantas registradas</Text>) }\n          { plants?.map((plant, i: number) => {\n              return (\n                <PlantsWrapper key={i + '-orderList'}>\n                  <ListItem>\n                      <ListTitle>\n                        <Text bold>\n                          <FormattedMessage\n                            id=\"controllerNameId\"\n                            defaultMessage=\"controllerNameId\"\n                          />\n                        </Text>\n                      </ListTitle>\n                      <ListDes>\n                        <Input\n                          type='text'\n                          name='name'\n                          value={plant?.name}\n                          // onChange={(e: any) => handleHumiditySettings1Change(plant, 'name', e.target.value)}\n                          backgroundColor='#F7F7F7'\n                          width='197px'\n                        />\n                      </ListDes>\n                    </ListItem>\n\n                  {renderSoilSensor1(plant, plant.soilHumiditySettings1, i)}\n                  {renderSoilSensor2(plant, plant.soilHumiditySettings2, i)}\n                  {renderLightSensor(plant, plant.lightSettings, i)}\n                  {renderAirTemperatureSensor(plant, i)}\n                  {renderAirHumiditySensor(plant, i)}\n\n                </PlantsWrapper>\n              )\n            })\n          }\n\n          {userinfoMsg && (\n              <SuccessMsg>\n                <FormattedMessage\n                  id='userInfoSuccess'\n                  defaultMessage={userinfoMsg}\n                />\n              </SuccessMsg>\n          )}\n\n        </OrderDetails>\n      </PlantsPageContainer>\n\n      <PlantsPageContainer style={{ width: '100%' }}>\n        <BlockTitle>\n          <FormattedMessage\n            id=\"addController\"\n            defaultMessage=\"Your Plants\"\n          />\n        </BlockTitle>\n\n        <ListItem>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id='plantNameField'\n                defaultMessage='Name of the plant'\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <Input\n              type='text'\n              name='name'\n              value={name}\n              onChange={(e) => setPlantName(e.target.value)}\n              backgroundColor='#F7F7F7'\n              width='197px'\n            />\n          </ListDes>\n        </ListItem>\n\n        <ListItem>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id='controllerIdField'\n                defaultMessage='ID of the controller'\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <Input\n              type='text'\n              name='controllerId'\n              value={controllerId}\n              onChange={(e) => setControllerID(e.target.value)}\n              backgroundColor='#F7F7F7'\n              width='197px'\n            />\n          </ListDes>\n        </ListItem>\n\n        <Button className=\"cart-button\" variant=\"secondary\" borderRadius={100} onClick={handleAddClick}>\n          <ButtonText>\n            <FormattedMessage id={\"addPlantButton\"} defaultMessage=\"Add plant\" />\n          </ButtonText>\n        </Button>\n      </PlantsPageContainer>\n    </PlantPageWrapper>\n  );\n};\n\nexport default YourPlants;\n"]},"metadata":{},"sourceType":"module"}