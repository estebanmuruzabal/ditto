{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/your-plants.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext } from 'react';\nimport Link from 'next/link';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { HumiditySensorMode, LightSensorModes, WeekDays } from 'utils/constant';\nimport ErrorMessage from 'components/error-message/error-message';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';\nimport { PlantsPageContainer, OrderDetails, BlockTitle, Text, ListItem, ListTitle, ListDes, ButtonText, InputUpper, PlantPageWrapper, PlantsWrapper, WeekContainer, DayContainer, PlantsSensorContainer, ScheduleTime, ActionButton, CardButtons, TextSpaced } from './your-plants.style';\nimport { FormattedMessage } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { Button } from 'components/button/button';\nimport { ADD_PLANT, UPDATE_HUMIDITY_1_SETTINGS, UPDATE_HUMIDITY_2_SETTINGS, UPDATE_LIGHT_SETTINGS } from 'graphql/query/plants.query';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { SuccessMsg } from 'features/user-profile/settings/settings.style';\nimport Switch from 'components/switch/switch';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\n\nconst YourPlants = ({\n  deviceType\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_LOGGED_IN_USER); // const router = useRouter();\n  // const intl = useIntl();\n\n  const {\n    0: name,\n    1: setPlantName\n  } = useState('');\n  const {\n    0: controllerId,\n    1: setControllerID\n  } = useState('');\n  const {\n    0: userinfoMsg,\n    1: setUserinfoMsg\n  } = useState('');\n  const {\n    0: daySelected,\n    1: setDay\n  } = useState('');\n  const [addPlant] = useMutation(ADD_PLANT);\n  const [updateSoilHumiditySettings1] = useMutation(UPDATE_HUMIDITY_1_SETTINGS);\n  const [updateSoilHumiditySettings2] = useMutation(UPDATE_HUMIDITY_2_SETTINGS);\n  const [updateLightSettings] = useMutation(UPDATE_LIGHT_SETTINGS);\n  const {\n    plants\n  } = state;\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Cargando...',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    });\n  }\n\n  ;\n\n  const handleHumiditySettings1Change = (plant, field, value) => {\n    dispatch({\n      type: 'HANDLE_HUMIDITY_1_SETTINGS_CHANGE',\n      payload: {\n        plant,\n        value,\n        field\n      }\n    });\n    setTimeout(function () {\n      handleSettings1SaveClick(plant, field, value);\n    }, 1000);\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000);\n  };\n\n  const handleHumiditySettings2Change = (plant, field, value) => {\n    dispatch({\n      type: 'HANDLE_HUMIDITY_2_SETTINGS_CHANGE',\n      payload: {\n        plant,\n        value,\n        field\n      }\n    });\n    handleSettings2SaveClick(plant, field, value);\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000);\n  };\n\n  const handleAddClick = () => {\n    var _data$getUser;\n\n    addPlant({\n      variables: {\n        id: data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : _data$getUser.id,\n        name,\n        controllerId: Number(controllerId)\n      }\n    });\n  };\n\n  const handleLightSettingChange = (plant, field, value) => {\n    dispatch({\n      type: 'HANDLE_LIGHT_SETTINGS_CHANGE',\n      payload: {\n        plant,\n        value,\n        field\n      }\n    });\n    handleLightSettingSaveClick(plant, field, value);\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000);\n  };\n\n  const onDeleteSchedule = (plant, settingName, position) => {\n    var _data$getUser2;\n\n    delete plant[settingName][position];\n    updateLightSettings({\n      variables: {\n        id: data === null || data === void 0 ? void 0 : (_data$getUser2 = data.getUser) === null || _data$getUser2 === void 0 ? void 0 : _data$getUser2.id,\n        controllerId: plant.controllerId,\n        input: plant[settingName]\n      }\n    });\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000);\n  };\n\n  const handleSettings1SaveClick = (plant, fieldName, fieldValue) => {\n    var _data$getUser3;\n\n    updateSoilHumiditySettings1({\n      variables: {\n        id: data === null || data === void 0 ? void 0 : (_data$getUser3 = data.getUser) === null || _data$getUser3 === void 0 ? void 0 : _data$getUser3.id,\n        controllerId: plant.controllerId,\n        input: _objectSpread({\n          [fieldName]: fieldValue\n        }, plant.soilHumiditySettings1)\n      }\n    });\n  };\n\n  const handleSettings2SaveClick = (plant, fieldName, fieldValue) => {\n    var _data$getUser4;\n\n    updateSoilHumiditySettings2({\n      variables: {\n        id: data === null || data === void 0 ? void 0 : (_data$getUser4 = data.getUser) === null || _data$getUser4 === void 0 ? void 0 : _data$getUser4.id,\n        controllerId: plant.controllerId,\n        input: _objectSpread({\n          [fieldName]: fieldValue\n        }, plant.soilHumiditySettings2)\n      }\n    });\n  };\n\n  const handleLightSettingSaveClick = (plant, fieldName, fieldValue) => {\n    var _data$getUser5;\n\n    updateLightSettings({\n      variables: {\n        id: data === null || data === void 0 ? void 0 : (_data$getUser5 = data.getUser) === null || _data$getUser5 === void 0 ? void 0 : _data$getUser5.id,\n        controllerId: plant.controllerId,\n        input: _objectSpread({\n          [fieldName]: fieldValue\n        }, plant.lightSettings)\n      }\n    });\n  }; // Add or edit modal\n\n\n  const handleModal = (modalComponent, modalProps = {}, className = 'add-time-schedule-modal') => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  const humidityModeOptions = [{\n    value: HumiditySensorMode.SEEDS_POOL_IRRIGATION,\n    label: 'Riego por inmersión'\n  }, {\n    value: HumiditySensorMode.MANUAL,\n    label: 'Manual'\n  }, {\n    value: HumiditySensorMode.IRRIGATE_SPECIFICT_AMOUNT_ON_DEMAND,\n    label: 'Semi-automático'\n  }, {\n    value: HumiditySensorMode.IRRIGATE_ON_DEMAND,\n    label: 'Automático'\n  }, {\n    value: HumiditySensorMode.SCHEDULE,\n    label: 'Calendario de riego'\n  }, {\n    value: HumiditySensorMode.NONE,\n    label: 'Ninguno'\n  }];\n  const lightModeOptions = [{\n    value: LightSensorModes.MANUAL,\n    label: 'Manual'\n  }, {\n    value: LightSensorModes.NONE,\n    label: 'Ninguno'\n  }, {\n    value: LightSensorModes.SCHEDULE,\n    label: 'Calendario'\n  }, {\n    value: LightSensorModes.SMART_SCHEDULE,\n    label: 'Calendario inteligente'\n  }];\n  const manualModeOptions = [{\n    value: true,\n    label: 'Prendido'\n  }, {\n    value: false,\n    label: 'Apagado'\n  }];\n  const fourRelaysOptions = [{\n    value: 'isRelayOneOn',\n    label: 'Enchufe 1'\n  }, {\n    value: 'isRelayTwoOn',\n    label: 'Enchufe 2'\n  }, {\n    value: 'isRelayThirdOn',\n    label: 'Enchufe 3'\n  }, {\n    value: 'isRelayFourthOn',\n    label: 'Enchufe 4'\n  }];\n  const eightRelaysOptions = [{\n    value: 'isRelayOneOn',\n    label: 'Enchufe 1'\n  }, {\n    value: 'isRelayTwoOn',\n    label: 'Enchufe 2'\n  }, {\n    value: 'isRelayThirdOn',\n    label: 'Enchufe 3'\n  }, {\n    value: 'isRelayFourthOn',\n    label: 'Enchufe 4'\n  }];\n\n  const renderSoilSensor1 = (plant, setting, i) => {\n    var _plant$soilHumiditySe5, _plant$soilHumiditySe7, _plant$soilHumiditySe8, _plant$soilHumiditySe9, _setting$scheduledOnT, _plant$soilHumiditySe10, _setting$relayOneIdRe, _setting$relayOneIdRe2, _plant$soilHumiditySe11, _plant$soilHumiditySe12;\n\n    const selectedMode = humidityModeOptions.find(option => {\n      var _plant$soilHumiditySe;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe === void 0 ? void 0 : _plant$soilHumiditySe.mode);\n    });\n    const selectedManualState = manualModeOptions.find(option => {\n      var _plant$soilHumiditySe2;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe2 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe2 === void 0 ? void 0 : _plant$soilHumiditySe2.relayOneWorking);\n    });\n    const relayOneSelected = fourRelaysOptions.find(option => {\n      var _plant$soilHumiditySe3;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe3 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe3 === void 0 ? void 0 : _plant$soilHumiditySe3.relayOneIdRelated);\n    });\n    const relayTwoSelected = fourRelaysOptions.find(option => {\n      var _plant$soilHumiditySe4;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe4 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe4 === void 0 ? void 0 : _plant$soilHumiditySe4.relayTwoIdRelated);\n    });\n    return __jsx(React.Fragment, null, __jsx(PlantsSensorContainer, {\n      key: i + '-orderList',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"plantName\",\n      defaultMessage: \"plantName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }\n    }, __jsx(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings1.name,\n      onChange: e => handleHumiditySettings1Change(plant, 'name', e.target.value),\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      height: \"34.5px\" // intlInputLabelId=\"profileEmailField\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"soilHumidityId\",\n      defaultMessage: \"soilHumidityId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 15\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.soilHumidity1, \" %\"))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"humidityModeId\",\n      defaultMessage: \"humidityModeId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      onChange: e => handleHumiditySettings1Change(plant, 'mode', e.value),\n      value: selectedMode,\n      options: humidityModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 15\n      }\n    }))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"notifyChangesId\",\n      defaultMessage: \"notifyChangesId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    }, __jsx(Switch, {\n      disabled: false,\n      checked: plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe5 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe5 === void 0 ? void 0 : _plant$soilHumiditySe5.sendWhatsappWarnings,\n      labelPosition: 'right' // className,\n      ,\n      onUpdate: () => {\n        var _plant$soilHumiditySe6;\n\n        return handleHumiditySettings1Change(plant, 'sendWhatsappWarnings', !(plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe6 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe6 === void 0 ? void 0 : _plant$soilHumiditySe6.sendWhatsappWarnings));\n      } // style\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 15\n      }\n    }))), ((plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe7 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe7 === void 0 ? void 0 : _plant$soilHumiditySe7.mode) === HumiditySensorMode.IRRIGATE_ON_DEMAND || (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe8 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe8 === void 0 ? void 0 : _plant$soilHumiditySe8.mode) === HumiditySensorMode.SEEDS_POOL_IRRIGATION) && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"maxHumidityId\",\n      defaultMessage: \"maxHumidityId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"number\",\n      name: \"maxWarning\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings1.maxWarning,\n      onChange: e => handleHumiditySettings1Change(plant, 'maxWarning', e.target.value),\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      height: \"34.5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"minHumidityId\",\n      defaultMessage: \"minHumidityId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 15\n      }\n    }, __jsx(InputUpper, {\n      type: \"number\",\n      name: \"minWarning\",\n      value: plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe9 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe9 === void 0 ? void 0 : _plant$soilHumiditySe9.minWarning,\n      onChange: e => handleHumiditySettings1Change(plant, 'minWarning', e.target.value),\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      height: \"34.5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"asociateRelayOneId\",\n      defaultMessage: \"asociateRelayOneId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: e => handleHumiditySettings1Change(plant, 'relayOneIdRelated', e.value),\n      value: relayOneSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"asociateRelayTwoId\",\n      defaultMessage: \"asociateRelayTwoId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: e => handleHumiditySettings1Change(plant, 'relayTwoIdRelated', e.value),\n      value: relayTwoSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }\n    })))), setting.mode === HumiditySensorMode.SCHEDULE && __jsx(React.Fragment, null, __jsx(WeekContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }\n    }, Object.keys(WeekDays).map((day, i) => {\n      return __jsx(DayContainer, {\n        key: i + '-day--humidity-1container',\n        style: {\n          backgroundColor: daySelected === day ? '#E6E6E6' : 'transparent'\n        },\n        onClick: () => setDay(day),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 19\n        }\n      }, day.substring(0, 3));\n    })), setting === null || setting === void 0 ? void 0 : (_setting$scheduledOnT = setting.scheduledOnTimes) === null || _setting$scheduledOnT === void 0 ? void 0 : _setting$scheduledOnT.map((schedule, i) => {\n      return __jsx(WeekContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 17\n        }\n      }, schedule.daysToRepeat.includes(daySelected) ? __jsx(ScheduleTime, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 21\n        }\n      }, __jsx(TextSpaced, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 23\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"startTimeId\",\n        defaultMessage: \"startTimeId\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 35\n        }\n      })), \" \", __jsx(TextSpaced, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 115\n        }\n      }, schedule.startTime), __jsx(TextSpaced, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 23\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"endTimeId\",\n        defaultMessage: \"endTimeId\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 35\n        }\n      })), \" \", __jsx(TextSpaced, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 111\n        }\n      }, schedule.endTime), __jsx(CardButtons, {\n        className: \"button-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 23\n        }\n      }, __jsx(ActionButton, {\n        onClick: () => {\n          var _data$getUser6;\n\n          return handleModal(AddTimeSchedule, {\n            name: 'add-humidity-1-schedule',\n            plant,\n            id: data === null || data === void 0 ? void 0 : (_data$getUser6 = data.getUser) === null || _data$getUser6 === void 0 ? void 0 : _data$getUser6.id\n          });\n        },\n        className: \"edit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 25\n        }\n      }, __jsx(PencilIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 27\n        }\n      })), __jsx(ActionButton, {\n        onClick: () => onDeleteSchedule(plant, 'soilHumiditySettings1', i),\n        className: \"delete-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 25\n        }\n      }, __jsx(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 27\n        }\n      })))) : __jsx(ScheduleTime, {\n        style: {\n          border: '0px',\n          height: '42px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 23\n        }\n      }));\n    }), __jsx(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: () => {\n        var _data$getUser7;\n\n        return handleModal(AddTimeSchedule, {\n          name: 'add-humidity-1-schedule',\n          plant,\n          id: data === null || data === void 0 ? void 0 : (_data$getUser7 = data.getUser) === null || _data$getUser7 === void 0 ? void 0 : _data$getUser7.id\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addTimeScheduleId\",\n      defaultMessage: \"addTimeScheduleId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 15\n      }\n    }))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe10 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe10 === void 0 ? void 0 : _plant$soilHumiditySe10.mode) === HumiditySensorMode.MANUAL && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"manualModeStateId\",\n      defaultMessage: \"manualModeStateId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: e => handleHumiditySettings1Change(plant, 'relayOneWorking', e.value),\n      value: selectedManualState,\n      options: manualModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: ((_setting$relayOneIdRe = setting.relayOneIdRelated) === null || _setting$relayOneIdRe === void 0 ? void 0 : _setting$relayOneIdRe.length) ? 'asociateRelayId' : 'asociatedRelayId',\n      defaultMessage: ((_setting$relayOneIdRe2 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe2 === void 0 ? void 0 : _setting$relayOneIdRe2.length) ? 'asociateRelayId' : 'asociatedRelayId',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: e => handleHumiditySettings1Change(plant, 'relayOneIdRelated', e.value),\n      value: relayOneSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 17\n      }\n    })))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe11 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe11 === void 0 ? void 0 : _plant$soilHumiditySe11.mode) === HumiditySensorMode.SEEDS_POOL_IRRIGATION && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"irrigationTimeId\",\n      defaultMessage: \"irrigationTimeId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"number\",\n      name: \"relayOneAutomatedTimeToRun\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings1.relayOneAutomatedTimeToRun,\n      onChange: e => handleHumiditySettings1Change(plant, 'relayOneAutomatedTimeToRun', e.target.value),\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      height: \"34.5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"irrigationEvacuationTimeId\",\n      defaultMessage: \"irrigationEvacuationTimeId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"number\",\n      name: \"relayTwoAutomatedTimeToRun\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings1.relayTwoAutomatedTimeToRun,\n      onChange: e => handleHumiditySettings1Change(plant, 'relayTwoAutomatedTimeToRun', e.target.value),\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      height: \"34.5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 17\n      }\n    })))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe12 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe12 === void 0 ? void 0 : _plant$soilHumiditySe12.mode) === HumiditySensorMode.NONE && __jsx(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 11\n      }\n    }, \"Necesitas seleccionar un modo\")));\n  };\n\n  const renderSoilSensor2 = (plant, setting, i) => {\n    var _plant$soilHumiditySe17, _plant$soilHumiditySe19, _plant$soilHumiditySe20, _plant$soilHumiditySe21, _plant$soilHumiditySe22, _setting$relayOneIdRe3, _setting$relayOneIdRe4, _plant$soilHumiditySe23, _setting$scheduledOnT2, _setting$scheduledOnT3, _plant$soilHumiditySe24;\n\n    const selectedMode = humidityModeOptions.find(option => {\n      var _plant$soilHumiditySe13;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe13 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe13 === void 0 ? void 0 : _plant$soilHumiditySe13.mode);\n    });\n    const selectedManualState = manualModeOptions.find(option => {\n      var _plant$soilHumiditySe14;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe14 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe14 === void 0 ? void 0 : _plant$soilHumiditySe14.relayOneWorking);\n    });\n    const relayOneSelected = fourRelaysOptions.find(option => {\n      var _plant$soilHumiditySe15;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe15 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe15 === void 0 ? void 0 : _plant$soilHumiditySe15.relayOneIdRelated);\n    });\n    const relayTwoSelected = fourRelaysOptions.find(option => {\n      var _plant$soilHumiditySe16;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe16 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe16 === void 0 ? void 0 : _plant$soilHumiditySe16.relayTwoIdRelated);\n    });\n    return __jsx(PlantsSensorContainer, {\n      key: i + '-orderList',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"plantName\",\n      defaultMessage: \"plantName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 11\n      }\n    }, __jsx(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings2.name,\n      onChange: e => handleHumiditySettings2Change(plant, 'name', e.target.value),\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      height: \"34.5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 13\n      }\n    }))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 11\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"soilHumidityId\",\n      defaultMessage: \"soilHumidityId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 17\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 15\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.soilHumidity2, \" %\"))), __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 11\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"humidityModeId\",\n      defaultMessage: \"humidityModeId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 17\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      onChange: e => handleHumiditySettings2Change(plant, 'mode', e.value),\n      value: selectedMode,\n      options: humidityModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 15\n      }\n    }))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 11\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"notifyChangesId\",\n      defaultMessage: \"notifyChangesId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 17\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 13\n      }\n    }, __jsx(Switch, {\n      disabled: false,\n      checked: plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe17 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe17 === void 0 ? void 0 : _plant$soilHumiditySe17.sendWhatsappWarnings,\n      labelPosition: 'right' // className,\n      ,\n      onUpdate: () => {\n        var _plant$soilHumiditySe18;\n\n        return handleHumiditySettings2Change(plant, 'sendWhatsappWarnings', !(plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe18 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe18 === void 0 ? void 0 : _plant$soilHumiditySe18.sendWhatsappWarnings));\n      } // style\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 15\n      }\n    }))), ((plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe19 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe19 === void 0 ? void 0 : _plant$soilHumiditySe19.mode) === HumiditySensorMode.IRRIGATE_ON_DEMAND || (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe20 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe20 === void 0 ? void 0 : _plant$soilHumiditySe20.mode) === HumiditySensorMode.SEEDS_POOL_IRRIGATION) && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"maxHumidityId\",\n      defaultMessage: \"maxHumidityId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"number\" // min=\"1\" \n      // max=\"5\"\n      // placeholder={intl.formatMessage({\n      //   id: 'couponPlaceholder',\n      //   defaultMessage: 'Enter Coupon Here',\n      // })}\n      // inputRef={register({required: true})}\n      //               placeholder='Ex: Search By Name'\n      // required={true}\n      ,\n      name: \"maxWarning\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings2.maxWarning,\n      onChange: e => handleHumiditySettings2Change(plant, 'maxWarning', e.target.value),\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      height: \"34.5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"minHumidityId\",\n      defaultMessage: \"minHumidityId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 15\n      }\n    }, __jsx(InputUpper, {\n      type: \"number\",\n      name: \"minWarning\",\n      value: plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe21 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe21 === void 0 ? void 0 : _plant$soilHumiditySe21.minWarning,\n      onChange: e => handleHumiditySettings2Change(plant, 'minWarning', e.target.value),\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      height: \"34.5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"asociateRelayOneId\",\n      defaultMessage: \"asociateRelayOneId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: e => handleHumiditySettings2Change(plant, 'relayOneIdRelated', e.value),\n      value: relayOneSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"asociateRelayTwoId\",\n      defaultMessage: \"asociateRelayTwoId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: e => handleHumiditySettings2Change(plant, 'relayTwoIdRelated', e.value),\n      value: relayTwoSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 17\n      }\n    })))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe22 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe22 === void 0 ? void 0 : _plant$soilHumiditySe22.mode) === HumiditySensorMode.MANUAL && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"manualModeStateId\",\n      defaultMessage: \"manualModeStateId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: e => handleHumiditySettings2Change(plant, 'relayOneWorking', e.value),\n      value: selectedManualState,\n      options: manualModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: ((_setting$relayOneIdRe3 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe3 === void 0 ? void 0 : _setting$relayOneIdRe3.length) ? 'asociateRelayId' : 'asociatedRelayId',\n      defaultMessage: ((_setting$relayOneIdRe4 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe4 === void 0 ? void 0 : _setting$relayOneIdRe4.length) ? 'asociateRelayId' : 'asociatedRelayId',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: e => handleHumiditySettings2Change(plant, 'relayOneIdRelated', e.value),\n      value: relayOneSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 17\n      }\n    })))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe23 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe23 === void 0 ? void 0 : _plant$soilHumiditySe23.mode) === HumiditySensorMode.SEEDS_POOL_IRRIGATION && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"irrigationTimeId\",\n      defaultMessage: \"irrigationTimeId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"number\",\n      name: \"relayOneAutomatedTimeToRun\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings2.relayOneAutomatedTimeToRun,\n      onChange: e => handleHumiditySettings2Change(plant, 'relayOneAutomatedTimeToRun', e.target.value),\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      height: \"34.5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"irrigationEvacuationTimeId\",\n      defaultMessage: \"irrigationEvacuationTimeId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"number\",\n      name: \"relayTwoAutomatedTimeToRun\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings2.relayTwoAutomatedTimeToRun,\n      onChange: e => handleHumiditySettings2Change(plant, 'relayTwoAutomatedTimeToRun', e.target.value),\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      height: \"34.5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 17\n      }\n    })))), setting.mode === HumiditySensorMode.SCHEDULE && __jsx(React.Fragment, null, __jsx(WeekContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 13\n      }\n    }, Object.keys(WeekDays).map((day, i) => {\n      return __jsx(DayContainer, {\n        key: i + '-day--humidity-2container',\n        style: {\n          backgroundColor: daySelected === day ? '#E6E6E6' : 'transparent'\n        },\n        onClick: () => setDay(day),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 19\n        }\n      }, day.substring(0, 3));\n    })), !(setting === null || setting === void 0 ? void 0 : (_setting$scheduledOnT2 = setting.scheduledOnTimes) === null || _setting$scheduledOnT2 === void 0 ? void 0 : _setting$scheduledOnT2.length) && __jsx(ScheduleTime, {\n      style: {\n        border: '0px',\n        height: '42px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 54\n      }\n    }), setting === null || setting === void 0 ? void 0 : (_setting$scheduledOnT3 = setting.scheduledOnTimes) === null || _setting$scheduledOnT3 === void 0 ? void 0 : _setting$scheduledOnT3.map((schedule, i) => {\n      return __jsx(WeekContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 17\n        }\n      }, schedule.daysToRepeat.includes(daySelected) ? __jsx(ScheduleTime, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 21\n        }\n      }, __jsx(TextSpaced, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 23\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"startTimeId\",\n        defaultMessage: \"startTimeId\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 35\n        }\n      })), \" \", __jsx(TextSpaced, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 115\n        }\n      }, schedule.startTime), __jsx(TextSpaced, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 23\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"endTimeId\",\n        defaultMessage: \"endTimeId\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 35\n        }\n      })), \" \", __jsx(TextSpaced, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 111\n        }\n      }, schedule.endTime), __jsx(CardButtons, {\n        className: \"button-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 23\n        }\n      }, __jsx(ActionButton, {\n        onClick: () => {\n          var _data$getUser8;\n\n          return handleModal(AddTimeSchedule, {\n            name: 'add-humidity-2-schedule',\n            plant,\n            id: data === null || data === void 0 ? void 0 : (_data$getUser8 = data.getUser) === null || _data$getUser8 === void 0 ? void 0 : _data$getUser8.id\n          });\n        },\n        className: \"edit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 25\n        }\n      }, __jsx(PencilIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 27\n        }\n      })), __jsx(ActionButton, {\n        onClick: () => onDeleteSchedule(plant, 'soilHumiditySettings2', i),\n        className: \"delete-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 25\n        }\n      }, __jsx(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 27\n        }\n      })))) : __jsx(ScheduleTime, {\n        style: {\n          border: '0px',\n          height: '42px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 23\n        }\n      }));\n    }), __jsx(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: () => {\n        var _data$getUser9;\n\n        return handleModal(AddTimeSchedule, {\n          name: 'add-humidity-2-schedule',\n          plant,\n          id: data === null || data === void 0 ? void 0 : (_data$getUser9 = data.getUser) === null || _data$getUser9 === void 0 ? void 0 : _data$getUser9.id\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addTimeScheduleId\",\n      defaultMessage: \"addTimeScheduleId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 15\n      }\n    }))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe24 = plant.soilHumiditySettings2) === null || _plant$soilHumiditySe24 === void 0 ? void 0 : _plant$soilHumiditySe24.mode) === HumiditySensorMode.NONE && __jsx(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 11\n      }\n    }, \"Necesitas seleccionar un modo\"));\n  };\n\n  const renderAirTemperatureSensor = (plant, i) => {\n    return __jsx(PlantsSensorContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"tempSensorId\",\n      defaultMessage: \"tempSensorId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 13\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.tempeture, \" \\xB0\"))));\n  };\n\n  const renderAirHumiditySensor = (plant, i) => {\n    return __jsx(PlantsSensorContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"humedadAmbienteSensorId\",\n      defaultMessage: \"humedadAmbienteSensorId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 13\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.airHumidity, \" %\"))));\n  };\n\n  const renderLightSensor = (plant, setting, i) => {\n    var _setting$relayOneIdRe5, _setting$relayOneIdRe6, _setting$scheduledOnT4;\n\n    const selectedMode = lightModeOptions.find(option => option.value === setting.mode);\n    const selectedManualState = manualModeOptions.find(option => option.value === setting.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find(option => option.value === setting.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find(option => option.value === setting.relayTwoIdRelated);\n    console.log('light setting:::', setting);\n    return __jsx(PlantsSensorContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"lightId\",\n      defaultMessage: \"lightId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 13\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.light, \" %\"))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"lightModeId\",\n      defaultMessage: \"lightModeId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 11\n      }\n    }, __jsx(Select, {\n      onChange: e => handleLightSettingChange(plant, 'mode', e.value),\n      value: selectedMode,\n      options: lightModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 13\n      }\n    }))), ((setting === null || setting === void 0 ? void 0 : setting.mode) === LightSensorModes.MANUAL || (setting === null || setting === void 0 ? void 0 : setting.mode) === LightSensorModes.SCHEDULE || (setting === null || setting === void 0 ? void 0 : setting.mode) === LightSensorModes.SMART_SCHEDULE) && __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 11\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1014,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: ((_setting$relayOneIdRe5 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe5 === void 0 ? void 0 : _setting$relayOneIdRe5.length) ? 'asociatedRelayId' : 'asociateRelayId',\n      defaultMessage: ((_setting$relayOneIdRe6 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe6 === void 0 ? void 0 : _setting$relayOneIdRe6.length) ? 'asociatedRelayId' : 'asociateRelayId',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 17\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      onChange: e => handleLightSettingChange(plant, 'relayOneIdRelated', e.value),\n      value: relayOneSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1023,\n        columnNumber: 15\n      }\n    }))), setting.mode === LightSensorModes.MANUAL && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1038,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"manualModeStateId\",\n      defaultMessage: \"manualModeStateId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 19\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: e => handleLightSettingChange(plant, 'relayOneWorking', e.value),\n      value: selectedManualState,\n      options: manualModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 17\n      }\n    })))), (setting.mode === LightSensorModes.SCHEDULE || setting.mode === LightSensorModes.SMART_SCHEDULE) && __jsx(React.Fragment, null, __jsx(WeekContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1060,\n        columnNumber: 13\n      }\n    }, Object.keys(WeekDays).map((day, i) => {\n      return __jsx(DayContainer, {\n        key: i + '-day-container',\n        style: {\n          backgroundColor: daySelected === day ? '#E6E6E6' : 'transparent'\n        },\n        onClick: () => setDay(day),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 19\n        }\n      }, day.substring(0, 3));\n    })), setting === null || setting === void 0 ? void 0 : (_setting$scheduledOnT4 = setting.scheduledOnTimes) === null || _setting$scheduledOnT4 === void 0 ? void 0 : _setting$scheduledOnT4.map((schedule, i) => {\n      return __jsx(WeekContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 17\n        }\n      }, schedule.daysToRepeat.includes(daySelected) ? __jsx(ScheduleTime, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1079,\n          columnNumber: 21\n        }\n      }, __jsx(TextSpaced, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 23\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"startTimeId\",\n        defaultMessage: \"startTimeId\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 35\n        }\n      })), \" \", __jsx(TextSpaced, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 115\n        }\n      }, schedule.startTime), __jsx(TextSpaced, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 23\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"endTimeId\",\n        defaultMessage: \"endTimeId\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 35\n        }\n      })), \" \", __jsx(TextSpaced, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 111\n        }\n      }, schedule.endTime), __jsx(CardButtons, {\n        className: \"button-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 23\n        }\n      }, __jsx(ActionButton, {\n        onClick: () => {\n          var _data$getUser10;\n\n          return handleModal(AddTimeSchedule, {\n            name: 'add-light-schedule',\n            plant,\n            id: data === null || data === void 0 ? void 0 : (_data$getUser10 = data.getUser) === null || _data$getUser10 === void 0 ? void 0 : _data$getUser10.id\n          });\n        },\n        className: \"edit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 25\n        }\n      }, __jsx(PencilIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 27\n        }\n      })), __jsx(ActionButton, {\n        onClick: () => onDeleteSchedule(plant, 'lightSettings', i),\n        className: \"delete-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 25\n        }\n      }, __jsx(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 27\n        }\n      })))) : __jsx(ScheduleTime, {\n        style: {\n          border: '0px',\n          height: '42px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 23\n        }\n      }));\n    }), __jsx(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: () => {\n        var _data$getUser11;\n\n        return handleModal(AddTimeSchedule, {\n          name: 'add-light-schedule',\n          plant,\n          id: data === null || data === void 0 ? void 0 : (_data$getUser11 = data.getUser) === null || _data$getUser11 === void 0 ? void 0 : _data$getUser11.id\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addTimeScheduleId\",\n      defaultMessage: \"addTimeScheduleId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 15\n      }\n    }))));\n  };\n\n  const selectStyle = {\n    control: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      width: '197px'\n    })\n  };\n  return __jsx(PlantPageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1129,\n      columnNumber: 5\n    }\n  }, __jsx(PlantsPageContainer, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1131,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: \"home-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1132,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"backProfileBtn\",\n    defaultMessage: \"Back to Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1133,\n      columnNumber: 13\n    }\n  }))), __jsx(OrderDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137,\n      columnNumber: 9\n    }\n  }, __jsx(BlockTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1138,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"yourPlants\",\n    defaultMessage: \"Your Plants\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1139,\n      columnNumber: 13\n    }\n  })), (plants === null || plants === void 0 ? void 0 : plants.length) < 1 && __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1145,\n      columnNumber: 36\n    }\n  }, \"No tienes plantas registradas\"), plants === null || plants === void 0 ? void 0 : plants.map((plant, i) => {\n    return __jsx(PlantsWrapper, {\n      key: i + '-orderList',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1148,\n        columnNumber: 17\n      }\n    }, __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 19\n      }\n    }, __jsx(ListTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1150,\n        columnNumber: 23\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"controllerNameId\",\n      defaultMessage: \"controllerNameId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1152,\n        columnNumber: 27\n      }\n    }))), __jsx(ListDes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 23\n      }\n    }, __jsx(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: plant === null || plant === void 0 ? void 0 : plant.name // onChange={(e: any) => handleHumiditySettings1Change(plant, 'name', e.target.value)}\n      ,\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      height: \"34.5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1159,\n        columnNumber: 25\n      }\n    }))), renderSoilSensor1(plant, plant.soilHumiditySettings1, i), renderSoilSensor2(plant, plant.soilHumiditySettings2, i), renderLightSensor(plant, plant.lightSettings, i), renderAirTemperatureSensor(plant, i), renderAirHumiditySensor(plant, i));\n  }), userinfoMsg && __jsx(SuccessMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1183,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"userInfoSuccess\",\n    defaultMessage: userinfoMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1184,\n      columnNumber: 17\n    }\n  })))), __jsx(PlantsPageContainer, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 7\n    }\n  }, __jsx(BlockTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1195,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"addController\",\n    defaultMessage: \"Your Plants\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1196,\n      columnNumber: 11\n    }\n  })), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1202,\n      columnNumber: 9\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1203,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"plantNameField\",\n    defaultMessage: \"Name of the plant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1205,\n      columnNumber: 15\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1211,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    onChange: e => setPlantName(e.target.value),\n    backgroundColor: \"#F7F7F7\",\n    width: \"197px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 13\n    }\n  }))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1223,\n      columnNumber: 9\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1225,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"controllerIdField\",\n    defaultMessage: \"ID of the controller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1226,\n      columnNumber: 15\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1232,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"controllerId\",\n    value: controllerId,\n    onChange: e => setControllerID(e.target.value),\n    backgroundColor: \"#F7F7F7\",\n    width: \"197px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1233,\n      columnNumber: 13\n    }\n  }))), __jsx(Button, {\n    className: \"cart-button\",\n    variant: \"secondary\",\n    borderRadius: 100,\n    onClick: handleAddClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1244,\n      columnNumber: 9\n    }\n  }, __jsx(ButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1245,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"addPlantButton\",\n    defaultMessage: \"Add plant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default YourPlants;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/your-plants.tsx"],"names":["React","useState","useContext","Link","openModal","useMutation","useQuery","HumiditySensorMode","LightSensorModes","WeekDays","ErrorMessage","AddTimeSchedule","PlantsPageContainer","OrderDetails","BlockTitle","Text","ListItem","ListTitle","ListDes","ButtonText","InputUpper","PlantPageWrapper","PlantsWrapper","WeekContainer","DayContainer","PlantsSensorContainer","ScheduleTime","ActionButton","CardButtons","TextSpaced","FormattedMessage","GET_LOGGED_IN_USER","Button","ADD_PLANT","UPDATE_HUMIDITY_1_SETTINGS","UPDATE_HUMIDITY_2_SETTINGS","UPDATE_LIGHT_SETTINGS","Select","Input","ProfileContext","SuccessMsg","Switch","PencilIcon","CloseIcon","YourPlants","deviceType","state","dispatch","data","error","loading","name","setPlantName","controllerId","setControllerID","userinfoMsg","setUserinfoMsg","daySelected","setDay","addPlant","updateSoilHumiditySettings1","updateSoilHumiditySettings2","updateLightSettings","plants","message","handleHumiditySettings1Change","plant","field","value","type","payload","setTimeout","handleSettings1SaveClick","handleHumiditySettings2Change","handleSettings2SaveClick","handleAddClick","variables","id","getUser","Number","handleLightSettingChange","handleLightSettingSaveClick","onDeleteSchedule","settingName","position","input","fieldName","fieldValue","soilHumiditySettings1","soilHumiditySettings2","lightSettings","handleModal","modalComponent","modalProps","className","show","config","width","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","humidityModeOptions","SEEDS_POOL_IRRIGATION","label","MANUAL","IRRIGATE_SPECIFICT_AMOUNT_ON_DEMAND","IRRIGATE_ON_DEMAND","SCHEDULE","NONE","lightModeOptions","SMART_SCHEDULE","manualModeOptions","fourRelaysOptions","eightRelaysOptions","renderSoilSensor1","setting","i","selectedMode","find","option","mode","selectedManualState","relayOneWorking","relayOneSelected","relayOneIdRelated","relayTwoSelected","relayTwoIdRelated","e","target","justifyContent","marginLeft","soilHumidity1","selectStyle","sendWhatsappWarnings","maxWarning","minWarning","Object","keys","map","day","backgroundColor","substring","scheduledOnTimes","schedule","daysToRepeat","includes","startTime","endTime","border","length","relayOneAutomatedTimeToRun","relayTwoAutomatedTimeToRun","renderSoilSensor2","soilHumidity2","renderAirTemperatureSensor","tempeture","renderAirHumiditySensor","airHumidity","renderLightSensor","console","log","light","control","styles"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,qBAAtC;AACA,SAAmBC,kBAAnB,EAAuCC,gBAAvC,EAAyDC,QAAzD,QAAyE,gBAAzE;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,eAAP,MAA4B,gDAA5B;AAEA,SACEC,mBADF,EAGEC,YAHF,EAKEC,UALF,EAMEC,IANF,EASEC,QATF,EAUEC,SAVF,EAWEC,OAXF,EAYEC,UAZF,EAcEC,UAdF,EAeEC,gBAfF,EAgBEC,aAhBF,EAiBEC,aAjBF,EAkBEC,YAlBF,EAmBEC,qBAnBF,EAoBEC,YApBF,EAqBEC,YArBF,EAsBEC,WAtBF,EAuBEC,UAvBF,QAwBO,qBAxBP;AAyBA,SAASC,gBAAT,QAA0C,YAA1C;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AAGA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,SAAT,EAAoBC,0BAApB,EAAgDC,0BAAhD,EAA4EC,qBAA5E,QAAyG,4BAAzG;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,UAAT,QAA2B,+CAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAcA,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAChE,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsB7C,UAAU,CAACqC,cAAD,CAAtC;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2B5C,QAAQ,CAACyB,kBAAD,CAAzC,CAFgE,CAGhE;AACA;;AACA,QAAM;AAAA,OAACoB,IAAD;AAAA,OAAOC;AAAP,MAAuBnD,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM;AAAA,OAACoD,YAAD;AAAA,OAAeC;AAAf,MAAkCrD,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACsD,WAAD;AAAA,OAAcC;AAAd,MAAgCvD,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACwD,WAAD;AAAA,OAAcC;AAAd,MAAwBzD,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC0D,QAAD,IAAatD,WAAW,CAAC4B,SAAD,CAA9B;AACA,QAAM,CAAC2B,2BAAD,IAAgCvD,WAAW,CAAC6B,0BAAD,CAAjD;AACA,QAAM,CAAC2B,2BAAD,IAAgCxD,WAAW,CAAC8B,0BAAD,CAAjD;AACA,QAAM,CAAC2B,mBAAD,IAAwBzD,WAAW,CAAC+B,qBAAD,CAAzC;AACA,QAAM;AAAE2B,IAAAA;AAAF,MAAajB,KAAnB;;AAEA,MAAII,OAAJ,EAAa;AACX,WAAO,MAAC,YAAD;AAAc,MAAA,OAAO,EAAE,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAAA;;AAED,MAAID,KAAJ,EAAW;AACT,WACE,MAAC,YAAD;AAAc,MAAA,OAAO,EAAEA,KAAK,CAACe,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAAA;;AAED,QAAMC,6BAA6B,GAAG,CAACC,KAAD,EAAaC,KAAb,EAA4BC,KAA5B,KAAwD;AAC5FrB,IAAAA,QAAQ,CAAC;AACPsB,MAAAA,IAAI,EAAE,mCADC;AAEPC,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,KAAF;AAASE,QAAAA,KAAT;AAAgBD,QAAAA;AAAhB;AAFF,KAAD,CAAR;AAKAI,IAAAA,UAAU,CAAC,YAAY;AACrBC,MAAAA,wBAAwB,CAACN,KAAD,EAAQC,KAAR,EAAeC,KAAf,CAAxB;AACD,KAFS,EAEP,IAFO,CAAV;AAIAZ,IAAAA,cAAc,CAAC,+BAAD,CAAd;AACAe,IAAAA,UAAU,CAAC,YAAY;AACrBf,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAdD;;AAgBA,QAAMiB,6BAA6B,GAAG,CAACP,KAAD,EAAaC,KAAb,EAA4BC,KAA5B,KAAwD;AAC5FrB,IAAAA,QAAQ,CAAC;AACPsB,MAAAA,IAAI,EAAE,mCADC;AAEPC,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,KAAF;AAASE,QAAAA,KAAT;AAAgBD,QAAAA;AAAhB;AAFF,KAAD,CAAR;AAKAO,IAAAA,wBAAwB,CAACR,KAAD,EAAQC,KAAR,EAAeC,KAAf,CAAxB;AAEAZ,IAAAA,cAAc,CAAC,+BAAD,CAAd;AACAe,IAAAA,UAAU,CAAC,YAAY;AACrBf,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAZD;;AAcA,QAAMmB,cAAc,GAAG,MAAM;AAAA;;AAC3BhB,IAAAA,QAAQ,CAAC;AACPiB,MAAAA,SAAS,EAAE;AACTC,QAAAA,EAAE,EAAE7B,IAAF,aAAEA,IAAF,wCAAEA,IAAI,CAAE8B,OAAR,kDAAE,cAAeD,EADV;AAET1B,QAAAA,IAFS;AAGTE,QAAAA,YAAY,EAAE0B,MAAM,CAAC1B,YAAD;AAHX;AADJ,KAAD,CAAR;AAOD,GARD;;AAUA,QAAM2B,wBAAwB,GAAG,CAACd,KAAD,EAAaC,KAAb,EAA4BC,KAA5B,KAAwD;AACvFrB,IAAAA,QAAQ,CAAC;AACPsB,MAAAA,IAAI,EAAE,8BADC;AAEPC,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,KAAF;AAASE,QAAAA,KAAT;AAAgBD,QAAAA;AAAhB;AAFF,KAAD,CAAR;AAKAc,IAAAA,2BAA2B,CAACf,KAAD,EAAQC,KAAR,EAAeC,KAAf,CAA3B;AAEAZ,IAAAA,cAAc,CAAC,+BAAD,CAAd;AACAe,IAAAA,UAAU,CAAC,YAAY;AACrBf,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAZD;;AAcA,QAAM0B,gBAAgB,GAAG,CAAChB,KAAD,EAAaiB,WAAb,EAA+BC,QAA/B,KAAoD;AAAA;;AAE3E,WAAOlB,KAAK,CAACiB,WAAD,CAAL,CAAmBC,QAAnB,CAAP;AAEAtB,IAAAA,mBAAmB,CAAC;AAClBc,MAAAA,SAAS,EAAE;AACTC,QAAAA,EAAE,EAAE7B,IAAF,aAAEA,IAAF,yCAAEA,IAAI,CAAE8B,OAAR,mDAAE,eAAeD,EADV;AAETxB,QAAAA,YAAY,EAAEa,KAAK,CAACb,YAFX;AAGTgC,QAAAA,KAAK,EAAEnB,KAAK,CAACiB,WAAD;AAHH;AADO,KAAD,CAAnB;AAQA3B,IAAAA,cAAc,CAAC,+BAAD,CAAd;AACAe,IAAAA,UAAU,CAAC,YAAY;AACrBf,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAhBD;;AAkBA,QAAMgB,wBAAwB,GAAG,CAACN,KAAD,EAAaoB,SAAb,EAAgCC,UAAhC,KAAiE;AAAA;;AAChG3B,IAAAA,2BAA2B,CAAC;AAC1BgB,MAAAA,SAAS,EAAE;AACTC,QAAAA,EAAE,EAAE7B,IAAF,aAAEA,IAAF,yCAAEA,IAAI,CAAE8B,OAAR,mDAAE,eAAeD,EADV;AAETxB,QAAAA,YAAY,EAAEa,KAAK,CAACb,YAFX;AAGTgC,QAAAA,KAAK;AAAI,WAACC,SAAD,GAAaC;AAAjB,WAAgCrB,KAAK,CAACsB,qBAAtC;AAHI;AADe,KAAD,CAA3B;AAOD,GARD;;AAUA,QAAMd,wBAAwB,GAAG,CAACR,KAAD,EAAaoB,SAAb,EAAgCC,UAAhC,KAAiE;AAAA;;AAChG1B,IAAAA,2BAA2B,CAAC;AAC1Be,MAAAA,SAAS,EAAE;AACTC,QAAAA,EAAE,EAAE7B,IAAF,aAAEA,IAAF,yCAAEA,IAAI,CAAE8B,OAAR,mDAAE,eAAeD,EADV;AAETxB,QAAAA,YAAY,EAAEa,KAAK,CAACb,YAFX;AAGTgC,QAAAA,KAAK;AAAI,WAACC,SAAD,GAAaC;AAAjB,WAAgCrB,KAAK,CAACuB,qBAAtC;AAHI;AADe,KAAD,CAA3B;AAOD,GARD;;AAUA,QAAMR,2BAA2B,GAAG,CAACf,KAAD,EAAaoB,SAAb,EAAgCC,UAAhC,KAAiE;AAAA;;AACnGzB,IAAAA,mBAAmB,CAAC;AAClBc,MAAAA,SAAS,EAAE;AACTC,QAAAA,EAAE,EAAE7B,IAAF,aAAEA,IAAF,yCAAEA,IAAI,CAAE8B,OAAR,mDAAE,eAAeD,EADV;AAETxB,QAAAA,YAAY,EAAEa,KAAK,CAACb,YAFX;AAGTgC,QAAAA,KAAK;AAAI,WAACC,SAAD,GAAaC;AAAjB,WAAgCrB,KAAK,CAACwB,aAAtC;AAHI;AADO,KAAD,CAAnB;AAOD,GARD,CArHgE,CA+HhE;;;AACA,QAAMC,WAAW,GAAG,CAClBC,cADkB,EAElBC,UAAU,GAAG,EAFK,EAGlBC,SAAiB,GAAG,yBAHF,KAIf;AACH1F,IAAAA,SAAS,CAAC;AACR2F,MAAAA,IAAI,EAAE,IADE;AAERC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,GADD;AAENC,QAAAA,MAAM,EAAE,MAFF;AAGNC,QAAAA,cAAc,EAAE,KAHV;AAINC,QAAAA,eAAe,EAAE,IAJX;AAKNN,QAAAA,SAAS,EAAEA;AALL,OAFA;AASRO,MAAAA,mBAAmB,EAAE,IATb;AAURC,MAAAA,SAAS,EAAEV,cAVH;AAWRW,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAEX;AAAR;AAXR,KAAD,CAAT;AAaD,GAlBD;;AAoBA,QAAMY,mBAAmB,GAAG,CAC1B;AAAErC,IAAAA,KAAK,EAAE7D,kBAAkB,CAACmG,qBAA5B;AAAmDC,IAAAA,KAAK,EAAE;AAA1D,GAD0B,EAE1B;AAAEvC,IAAAA,KAAK,EAAE7D,kBAAkB,CAACqG,MAA5B;AAAoCD,IAAAA,KAAK,EAAE;AAA3C,GAF0B,EAG1B;AAAEvC,IAAAA,KAAK,EAAE7D,kBAAkB,CAACsG,mCAA5B;AAAiEF,IAAAA,KAAK,EAAE;AAAxE,GAH0B,EAI1B;AAAEvC,IAAAA,KAAK,EAAE7D,kBAAkB,CAACuG,kBAA5B;AAAgDH,IAAAA,KAAK,EAAE;AAAvD,GAJ0B,EAK1B;AAAEvC,IAAAA,KAAK,EAAE7D,kBAAkB,CAACwG,QAA5B;AAAsCJ,IAAAA,KAAK,EAAE;AAA7C,GAL0B,EAM1B;AAAEvC,IAAAA,KAAK,EAAE7D,kBAAkB,CAACyG,IAA5B;AAAkCL,IAAAA,KAAK,EAAE;AAAzC,GAN0B,CAA5B;AASA,QAAMM,gBAAgB,GAAG,CACvB;AAAE7C,IAAAA,KAAK,EAAE5D,gBAAgB,CAACoG,MAA1B;AAAkCD,IAAAA,KAAK,EAAE;AAAzC,GADuB,EAEvB;AAAEvC,IAAAA,KAAK,EAAE5D,gBAAgB,CAACwG,IAA1B;AAAgCL,IAAAA,KAAK,EAAE;AAAvC,GAFuB,EAGvB;AAAEvC,IAAAA,KAAK,EAAE5D,gBAAgB,CAACuG,QAA1B;AAAoCJ,IAAAA,KAAK,EAAE;AAA3C,GAHuB,EAIvB;AAAEvC,IAAAA,KAAK,EAAE5D,gBAAgB,CAAC0G,cAA1B;AAA0CP,IAAAA,KAAK,EAAE;AAAjD,GAJuB,CAAzB;AAOA,QAAMQ,iBAAiB,GAAG,CACxB;AAAE/C,IAAAA,KAAK,EAAE,IAAT;AAAeuC,IAAAA,KAAK,EAAE;AAAtB,GADwB,EAExB;AAAEvC,IAAAA,KAAK,EAAE,KAAT;AAAgBuC,IAAAA,KAAK,EAAE;AAAvB,GAFwB,CAA1B;AAKA,QAAMS,iBAAiB,GAAG,CACxB;AAAEhD,IAAAA,KAAK,EAAE,cAAT;AAAyBuC,IAAAA,KAAK,EAAE;AAAhC,GADwB,EAExB;AAAEvC,IAAAA,KAAK,EAAE,cAAT;AAAyBuC,IAAAA,KAAK,EAAE;AAAhC,GAFwB,EAGxB;AAAEvC,IAAAA,KAAK,EAAE,gBAAT;AAA2BuC,IAAAA,KAAK,EAAE;AAAlC,GAHwB,EAIxB;AAAEvC,IAAAA,KAAK,EAAE,iBAAT;AAA4BuC,IAAAA,KAAK,EAAE;AAAnC,GAJwB,CAA1B;AAOA,QAAMU,kBAAkB,GAAG,CACzB;AAAEjD,IAAAA,KAAK,EAAE,cAAT;AAAyBuC,IAAAA,KAAK,EAAE;AAAhC,GADyB,EAEzB;AAAEvC,IAAAA,KAAK,EAAE,cAAT;AAAyBuC,IAAAA,KAAK,EAAE;AAAhC,GAFyB,EAGzB;AAAEvC,IAAAA,KAAK,EAAE,gBAAT;AAA2BuC,IAAAA,KAAK,EAAE;AAAlC,GAHyB,EAIzB;AAAEvC,IAAAA,KAAK,EAAE,iBAAT;AAA4BuC,IAAAA,KAAK,EAAE;AAAnC,GAJyB,CAA3B;;AAOA,QAAMW,iBAAiB,GAAG,CAACpD,KAAD,EAAYqD,OAAZ,EAA0BC,CAA1B,KAAqC;AAAA;;AAC7D,UAAMC,YAAY,GAAGhB,mBAAmB,CAACiB,IAApB,CAA0BC,MAAD;AAAA;;AAAA,aAAYA,MAAM,CAACvD,KAAP,MAAiBF,KAAjB,aAAiBA,KAAjB,gDAAiBA,KAAK,CAAEsB,qBAAxB,0DAAiB,sBAA8BoC,IAA/C,CAAZ;AAAA,KAAzB,CAArB;AACA,UAAMC,mBAAmB,GAAGV,iBAAiB,CAACO,IAAlB,CAAwBC,MAAD;AAAA;;AAAA,aAAYA,MAAM,CAACvD,KAAP,MAAiBF,KAAjB,aAAiBA,KAAjB,iDAAiBA,KAAK,CAAEsB,qBAAxB,2DAAiB,uBAA8BsC,eAA/C,CAAZ;AAAA,KAAvB,CAA5B;AACA,UAAMC,gBAAgB,GAAGX,iBAAiB,CAACM,IAAlB,CAAwBC,MAAD;AAAA;;AAAA,aAAYA,MAAM,CAACvD,KAAP,MAAiBF,KAAjB,aAAiBA,KAAjB,iDAAiBA,KAAK,CAAEsB,qBAAxB,2DAAiB,uBAA8BwC,iBAA/C,CAAZ;AAAA,KAAvB,CAAzB;AACA,UAAMC,gBAAgB,GAAGb,iBAAiB,CAACM,IAAlB,CAAwBC,MAAD;AAAA;;AAAA,aAAYA,MAAM,CAACvD,KAAP,MAAiBF,KAAjB,aAAiBA,KAAjB,iDAAiBA,KAAK,CAAEsB,qBAAxB,2DAAiB,uBAA8B0C,iBAA/C,CAAZ;AAAA,KAAvB,CAAzB;AACA,WACE,4BACA,MAAC,qBAAD;AAAuB,MAAA,GAAG,EAAEV,CAAC,GAAG,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,WADL;AAEE,MAAA,cAAc,EAAC,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAEtD,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEsB,qBAAP,CAA6BrC,IAHtC;AAIE,MAAA,QAAQ,EAAGgF,CAAD,IAAYlE,6BAA6B,CAACC,KAAD,EAAQ,MAAR,EAAgBiE,CAAC,CAACC,MAAF,CAAShE,KAAzB,CAJrD;AAKE,MAAA,eAAe,EAAC,SALlB;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,MAAM,EAAC,QAPT,CAQE;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,EAyBI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEiE,QAAAA,cAAc,EAAE;AAAlB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,cAAc,EAAC,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOpE,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAEqE,aAAd,OADF,CATF,CAzBJ,EAsCI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEF,QAAAA,cAAc,EAAE;AAAlB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,cAAc,EAAC,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAGF,CAAD,IAAYlE,6BAA6B,CAACC,KAAD,EAAQ,MAAR,EAAgBiE,CAAC,CAAC/D,KAAlB,CADrD;AAEE,MAAA,KAAK,EAAEqD,YAFT;AAGE,MAAA,OAAO,EAAEhB,mBAHX;AAIE,MAAA,MAAM,EAAE+B,WAJV;AAKE,MAAA,YAAY,EAAE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CAtCJ,EA0DI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEH,QAAAA,cAAc,EAAE;AAAlB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,iBADL;AAEE,MAAA,cAAc,EAAC,iBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KADZ;AAEE,MAAA,OAAO,EAAEpE,KAAF,aAAEA,KAAF,iDAAEA,KAAK,CAAEsB,qBAAT,2DAAE,uBAA8BiD,oBAFzC;AAGE,MAAA,aAAa,EAAE,OAHjB,CAIE;AAJF;AAKE,MAAA,QAAQ,EAAE;AAAA;;AAAA,eAAMxE,6BAA6B,CAACC,KAAD,EAAQ,sBAAR,EAAgC,EAACA,KAAD,aAACA,KAAD,iDAACA,KAAK,CAAEsB,qBAAR,2DAAC,uBAA8BiD,oBAA/B,CAAhC,CAAnC;AAAA,OALZ,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CA1DJ,EAgFI,CAAC,CAAAvE,KAAK,SAAL,IAAAA,KAAK,WAAL,sCAAAA,KAAK,CAAEsB,qBAAP,kFAA8BoC,IAA9B,MAAuCrH,kBAAkB,CAACuG,kBAA1D,IACD,CAAA5C,KAAK,SAAL,IAAAA,KAAK,WAAL,sCAAAA,KAAK,CAAEsB,qBAAP,kFAA8BoC,IAA9B,MAAuCrH,kBAAkB,CAACmG,qBAD1D,KAEA,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,cAAc,EAAC,eAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,KAAK,EAAExC,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEsB,qBAAP,CAA6BkD,UAHtC;AAIE,MAAA,QAAQ,EAAGP,CAAD,IAAYlE,6BAA6B,CAACC,KAAD,EAAQ,YAAR,EAAsBiE,CAAC,CAACC,MAAF,CAAShE,KAA/B,CAJrD;AAKE,MAAA,eAAe,EAAC,SALlB;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,EAuBE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,cAAc,EAAC,eAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,KAAK,EAAEF,KAAF,aAAEA,KAAF,iDAAEA,KAAK,CAAEsB,qBAAT,2DAAE,uBAA8BmD,UAHvC;AAIE,MAAA,QAAQ,EAAGR,CAAD,IAAYlE,6BAA6B,CAACC,KAAD,EAAQ,YAAR,EAAsBiE,CAAC,CAACC,MAAF,CAAShE,KAA/B,CAJrD;AAKE,MAAA,eAAe,EAAC,SALlB;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CAvBF,EA6CE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,oBADL;AAEE,MAAA,cAAc,EAAC,oBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAG+D,CAAD,IAAYlE,6BAA6B,CAACC,KAAD,EAAQ,mBAAR,EAA6BiE,CAAC,CAAC/D,KAA/B,CADrD;AAEE,MAAA,KAAK,EAAE2D,gBAFT;AAGE,MAAA,OAAO,EAAEX,iBAHX;AAIE,MAAA,MAAM,EAAEoB,WAJV;AAKE,MAAA,YAAY,EAAE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CA7CF,EAiEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,oBADL;AAEE,MAAA,cAAc,EAAC,oBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAGL,CAAD,IAAYlE,6BAA6B,CAACC,KAAD,EAAQ,mBAAR,EAA6BiE,CAAC,CAAC/D,KAA/B,CADrD;AAEE,MAAA,KAAK,EAAE6D,gBAFT;AAGE,MAAA,OAAO,EAAEb,iBAHX;AAIE,MAAA,MAAM,EAAEoB,WAJV;AAKE,MAAA,YAAY,EAAE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CAjEF,CAlFJ,EA0KIjB,OAAO,CAACK,IAAR,KAAiBrH,kBAAkB,CAACwG,QAApC,IACA,4BACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC6B,MAAM,CAACC,IAAP,CAAYpI,QAAZ,EAAsBqI,GAAtB,CAA0B,CAACC,GAAD,EAAMvB,CAAN,KAAoB;AAC5C,aACG,MAAC,YAAD;AACE,QAAA,GAAG,EAAEA,CAAC,GAAG,2BADX;AAEE,QAAA,KAAK,EAAE;AAAEwB,UAAAA,eAAe,EAAEvF,WAAW,KAAKsF,GAAhB,GAAsB,SAAtB,GAAkC;AAArD,SAFT;AAGE,QAAA,OAAO,EAAE,MAAMrF,MAAM,CAACqF,GAAD,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAgB,CAAhB,CALH,CADH;AASA,KAVF,CADD,CADF,EAgBI1B,OAhBJ,aAgBIA,OAhBJ,gDAgBIA,OAAO,CAAE2B,gBAhBb,0DAgBI,sBAA2BJ,GAA3B,CAA+B,CAACK,QAAD,EAAgB3B,CAAhB,KAA8B;AAC7D,aACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI2B,QAAQ,CAACC,YAAT,CAAsBC,QAAtB,CAA+B5F,WAA/B,IACA,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAY,MAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,aAArB;AAAmC,QAAA,cAAc,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ,CADF,OAC8F,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAa0F,QAAQ,CAACG,SAAtB,CAD9F,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAY,MAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,WAArB;AAAiC,QAAA,cAAc,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ,CAFF,OAE0F,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaH,QAAQ,CAACI,OAAtB,CAF1F,EAGE,MAAC,WAAD;AAAa,QAAA,SAAS,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,YAAD;AAAc,QAAA,OAAO,EAAE;AAAA;;AAAA,iBAAM5D,WAAW,CAAEhF,eAAF,EAAmB;AAAEwC,YAAAA,IAAI,EAAE,yBAAR;AAAmCe,YAAAA,KAAnC;AAA0CW,YAAAA,EAAE,EAAE7B,IAAF,aAAEA,IAAF,yCAAEA,IAAI,CAAE8B,OAAR,mDAAE,eAAeD;AAA7D,WAAnB,CAAjB;AAAA,SAAvB;AAAgI,QAAA,SAAS,EAAC,UAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKE,MAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAMK,gBAAgB,CAAChB,KAAD,EAAQ,uBAAR,EAAiCsD,CAAjC,CAA7C;AAAkF,QAAA,SAAS,EAAC,YAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,CAHF,CADA,GAcE,MAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEgC,UAAAA,MAAM,EAAE,KAAV;AAAiBtD,UAAAA,MAAM,EAAE;AAAzB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfN,CADF;AAmBD,KApBC,CAhBJ,EAsCE,MAAC,MAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,SAAS,EAAC,YAJZ;AAKE,MAAA,OAAO,EAAE;AAAA;;AAAA,eAAMP,WAAW,CACtBhF,eADsB,EAEtB;AACIwC,UAAAA,IAAI,EAAE,yBADV;AAEIe,UAAAA,KAFJ;AAGIW,UAAAA,EAAE,EAAE7B,IAAF,aAAEA,IAAF,yCAAEA,IAAI,CAAE8B,OAAR,mDAAE,eAAeD;AAHvB,SAFsB,CAAjB;AAAA,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,mBADL;AAEE,MAAA,cAAc,EAAC,mBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CAtCF,CA3KJ,EAwOI,CAAAX,KAAK,SAAL,IAAAA,KAAK,WAAL,uCAAAA,KAAK,CAAEsB,qBAAP,oFAA8BoC,IAA9B,MAAuCrH,kBAAkB,CAACqG,MAA1D,IACA,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,mBADL;AAEE,MAAA,cAAc,EAAC,mBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAGuB,CAAD,IAAYlE,6BAA6B,CAACC,KAAD,EAAQ,iBAAR,EAA2BiE,CAAC,CAAC/D,KAA7B,CADrD;AAEE,MAAA,KAAK,EAAEyD,mBAFT;AAGE,MAAA,OAAO,EAAEV,iBAHX;AAIE,MAAA,MAAM,EAAEqB,WAJV;AAKE,MAAA,YAAY,EAAE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,EAqBE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAE,0BAAAjB,OAAO,CAACS,iBAAR,gFAA2ByB,MAA3B,IAAoC,iBAApC,GAAuD,kBAD7D;AAEE,MAAA,cAAc,EAAE,2BAAAlC,OAAO,CAACS,iBAAR,kFAA2ByB,MAA3B,IAAoC,iBAApC,GAAuD,kBAFzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAGtB,CAAD,IAAYlE,6BAA6B,CAACC,KAAD,EAAQ,mBAAR,EAA6BiE,CAAC,CAAC/D,KAA/B,CADrD;AAEE,MAAA,KAAK,EAAE2D,gBAFT;AAGE,MAAA,OAAO,EAAEX,iBAHX;AAIE,MAAA,MAAM,EAAEoB,WAJV;AAKE,MAAA,YAAY,EAAE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CArBF,CAzOJ,EAoRI,CAAAtE,KAAK,SAAL,IAAAA,KAAK,WAAL,uCAAAA,KAAK,CAAEsB,qBAAP,oFAA8BoC,IAA9B,MAAuCrH,kBAAkB,CAACmG,qBAA1D,IACA,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,kBADL;AAEE,MAAA,cAAc,EAAC,kBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,4BAFP;AAGE,MAAA,KAAK,EAAExC,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEsB,qBAAP,CAA6BkE,0BAHtC;AAIE,MAAA,QAAQ,EAAGvB,CAAD,IAAYlE,6BAA6B,CAACC,KAAD,EAAQ,4BAAR,EAAsCiE,CAAC,CAACC,MAAF,CAAShE,KAA/C,CAJrD;AAKE,MAAA,eAAe,EAAC,SALlB;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,EAuBE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,4BADL;AAEE,MAAA,cAAc,EAAC,4BAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,4BAFP;AAGE,MAAA,KAAK,EAAEF,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEsB,qBAAP,CAA6BmE,0BAHtC;AAIE,MAAA,QAAQ,EAAGxB,CAAD,IAAYlE,6BAA6B,CAACC,KAAD,EAAQ,4BAAR,EAAsCiE,CAAC,CAACC,MAAF,CAAShE,KAA/C,CAJrD;AAKE,MAAA,eAAe,EAAC,SALlB;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CAvBF,CArRJ,EAsUI,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,uCAAAA,KAAK,CAAEsB,qBAAP,oFAA8BoC,IAA9B,MAAuCrH,kBAAkB,CAACyG,IAA1D,IACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAvUJ,CADA,CADF;AA8UD,GAnVD;;AAqVA,QAAM4C,iBAAiB,GAAG,CAAC1F,KAAD,EAAaqD,OAAb,EAA2BC,CAA3B,KAAsC;AAAA;;AAC9D,UAAMC,YAAY,GAAGhB,mBAAmB,CAACiB,IAApB,CAA0BC,MAAD;AAAA;;AAAA,aAAYA,MAAM,CAACvD,KAAP,MAAiBF,KAAjB,aAAiBA,KAAjB,kDAAiBA,KAAK,CAAEuB,qBAAxB,4DAAiB,wBAA8BmC,IAA/C,CAAZ;AAAA,KAAzB,CAArB;AACA,UAAMC,mBAAmB,GAAGV,iBAAiB,CAACO,IAAlB,CAAwBC,MAAD;AAAA;;AAAA,aAAYA,MAAM,CAACvD,KAAP,MAAiBF,KAAjB,aAAiBA,KAAjB,kDAAiBA,KAAK,CAAEuB,qBAAxB,4DAAiB,wBAA8BqC,eAA/C,CAAZ;AAAA,KAAvB,CAA5B;AACA,UAAMC,gBAAgB,GAAGX,iBAAiB,CAACM,IAAlB,CAAwBC,MAAD;AAAA;;AAAA,aAAYA,MAAM,CAACvD,KAAP,MAAiBF,KAAjB,aAAiBA,KAAjB,kDAAiBA,KAAK,CAAEuB,qBAAxB,4DAAiB,wBAA8BuC,iBAA/C,CAAZ;AAAA,KAAvB,CAAzB;AACA,UAAMC,gBAAgB,GAAGb,iBAAiB,CAACM,IAAlB,CAAwBC,MAAD;AAAA;;AAAA,aAAYA,MAAM,CAACvD,KAAP,MAAiBF,KAAjB,aAAiBA,KAAjB,kDAAiBA,KAAK,CAAEuB,qBAAxB,4DAAiB,wBAA8ByC,iBAA/C,CAAZ;AAAA,KAAvB,CAAzB;AACA,WACE,MAAC,qBAAD;AAAuB,MAAA,GAAG,EAAEV,CAAC,GAAG,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,WADL;AAEE,MAAA,cAAc,EAAC,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAEtD,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEuB,qBAAP,CAA6BtC,IAHtC;AAIE,MAAA,QAAQ,EAAGgF,CAAD,IAAY1D,6BAA6B,CAACP,KAAD,EAAQ,MAAR,EAAgBiE,CAAC,CAACC,MAAF,CAAShE,KAAzB,CAJrD;AAKE,MAAA,eAAe,EAAC,SALlB;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,EAwBI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEiE,QAAAA,cAAc,EAAE;AAAlB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,cAAc,EAAC,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOpE,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAE2F,aAAd,OADF,CATF,CAxBJ,EAqCI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,cAAc,EAAC,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAG1B,CAAD,IAAY1D,6BAA6B,CAACP,KAAD,EAAQ,MAAR,EAAgBiE,CAAC,CAAC/D,KAAlB,CADrD;AAEE,MAAA,KAAK,EAAEqD,YAFT;AAGE,MAAA,OAAO,EAAEhB,mBAHX;AAIE,MAAA,MAAM,EAAE+B,WAJV;AAKE,MAAA,YAAY,EAAE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CArCJ,EAyDI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEH,QAAAA,cAAc,EAAE;AAAlB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,iBADL;AAEE,MAAA,cAAc,EAAC,iBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KADZ;AAEE,MAAA,OAAO,EAAEpE,KAAF,aAAEA,KAAF,kDAAEA,KAAK,CAAEuB,qBAAT,4DAAE,wBAA8BgD,oBAFzC;AAGE,MAAA,aAAa,EAAE,OAHjB,CAIE;AAJF;AAKE,MAAA,QAAQ,EAAE;AAAA;;AAAA,eAAMhE,6BAA6B,CAACP,KAAD,EAAQ,sBAAR,EAAgC,EAACA,KAAD,aAACA,KAAD,kDAACA,KAAK,CAAEuB,qBAAR,4DAAC,wBAA8BgD,oBAA/B,CAAhC,CAAnC;AAAA,OALZ,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CAzDJ,EA+EI,CAAC,CAAAvE,KAAK,SAAL,IAAAA,KAAK,WAAL,uCAAAA,KAAK,CAAEuB,qBAAP,oFAA8BmC,IAA9B,MAAuCrH,kBAAkB,CAACuG,kBAA1D,IACD,CAAA5C,KAAK,SAAL,IAAAA,KAAK,WAAL,uCAAAA,KAAK,CAAEuB,qBAAP,oFAA8BmC,IAA9B,MAAuCrH,kBAAkB,CAACmG,qBAD1D,KAEA,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,cAAc,EAAC,eAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVF;AAWE,MAAA,IAAI,EAAC,YAXP;AAYE,MAAA,KAAK,EAAExC,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEuB,qBAAP,CAA6BiD,UAZtC;AAaE,MAAA,QAAQ,EAAGP,CAAD,IAAY1D,6BAA6B,CAACP,KAAD,EAAQ,YAAR,EAAsBiE,CAAC,CAACC,MAAF,CAAShE,KAA/B,CAbrD;AAcE,MAAA,eAAe,EAAC,SAdlB;AAeE,MAAA,KAAK,EAAC,OAfR;AAgBE,MAAA,MAAM,EAAC,QAhBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,EAgCE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,cAAc,EAAC,eAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,KAAK,EAAEF,KAAF,aAAEA,KAAF,kDAAEA,KAAK,CAAEuB,qBAAT,4DAAE,wBAA8BkD,UAHvC;AAIE,MAAA,QAAQ,EAAGR,CAAD,IAAY1D,6BAA6B,CAACP,KAAD,EAAQ,YAAR,EAAsBiE,CAAC,CAACC,MAAF,CAAShE,KAA/B,CAJrD;AAKE,MAAA,eAAe,EAAC,SALlB;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CAhCF,EAsDE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,oBADL;AAEE,MAAA,cAAc,EAAC,oBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAG+D,CAAD,IAAY1D,6BAA6B,CAACP,KAAD,EAAQ,mBAAR,EAA6BiE,CAAC,CAAC/D,KAA/B,CADrD;AAEE,MAAA,KAAK,EAAE2D,gBAFT;AAGE,MAAA,OAAO,EAAEX,iBAHX;AAIE,MAAA,MAAM,EAAEoB,WAJV;AAKE,MAAA,YAAY,EAAE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CAtDF,EA0EE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,oBADL;AAEE,MAAA,cAAc,EAAC,oBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAGL,CAAD,IAAY1D,6BAA6B,CAACP,KAAD,EAAQ,mBAAR,EAA6BiE,CAAC,CAAC/D,KAA/B,CADrD;AAEE,MAAA,KAAK,EAAE6D,gBAFT;AAGE,MAAA,OAAO,EAAEb,iBAHX;AAIE,MAAA,MAAM,EAAEoB,WAJV;AAKE,MAAA,YAAY,EAAE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CA1EF,CAjFJ,EAiLI,CAAAtE,KAAK,SAAL,IAAAA,KAAK,WAAL,uCAAAA,KAAK,CAAEuB,qBAAP,oFAA8BmC,IAA9B,MAAuCrH,kBAAkB,CAACqG,MAA1D,IACA,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,mBADL;AAEE,MAAA,cAAc,EAAC,mBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAGuB,CAAD,IAAY1D,6BAA6B,CAACP,KAAD,EAAQ,iBAAR,EAA2BiE,CAAC,CAAC/D,KAA7B,CADrD;AAEE,MAAA,KAAK,EAAEyD,mBAFT;AAGE,MAAA,OAAO,EAAEV,iBAHX;AAIE,MAAA,MAAM,EAAEqB,WAJV;AAKE,MAAA,YAAY,EAAE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,EAqBE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAE,2BAAAjB,OAAO,CAACS,iBAAR,kFAA2ByB,MAA3B,IAAoC,iBAApC,GAAwD,kBAD9D;AAEE,MAAA,cAAc,EAAE,2BAAAlC,OAAO,CAACS,iBAAR,kFAA2ByB,MAA3B,IAAoC,iBAApC,GAAwD,kBAF1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAGtB,CAAD,IAAY1D,6BAA6B,CAACP,KAAD,EAAQ,mBAAR,EAA6BiE,CAAC,CAAC/D,KAA/B,CADrD;AAEE,MAAA,KAAK,EAAE2D,gBAFT;AAGE,MAAA,OAAO,EAAEX,iBAHX;AAIE,MAAA,MAAM,EAAEoB,WAJV;AAKE,MAAA,YAAY,EAAE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CArBF,CAlLJ,EA6NI,CAAAtE,KAAK,SAAL,IAAAA,KAAK,WAAL,uCAAAA,KAAK,CAAEuB,qBAAP,oFAA8BmC,IAA9B,MAAuCrH,kBAAkB,CAACmG,qBAA1D,IACA,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,kBADL;AAEE,MAAA,cAAc,EAAC,kBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,4BAFP;AAGE,MAAA,KAAK,EAAExC,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEuB,qBAAP,CAA6BiE,0BAHtC;AAIE,MAAA,QAAQ,EAAGvB,CAAD,IAAY1D,6BAA6B,CAACP,KAAD,EAAQ,4BAAR,EAAsCiE,CAAC,CAACC,MAAF,CAAShE,KAA/C,CAJrD;AAKE,MAAA,eAAe,EAAC,SALlB;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,EAuBE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,4BADL;AAEE,MAAA,cAAc,EAAC,4BAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,4BAFP;AAGE,MAAA,KAAK,EAAEF,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEuB,qBAAP,CAA6BkE,0BAHtC;AAIE,MAAA,QAAQ,EAAGxB,CAAD,IAAY1D,6BAA6B,CAACP,KAAD,EAAQ,4BAAR,EAAsCiE,CAAC,CAACC,MAAF,CAAShE,KAA/C,CAJrD;AAKE,MAAA,eAAe,EAAC,SALlB;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CAvBF,CA9NJ,EA6QImD,OAAO,CAACK,IAAR,KAAiBrH,kBAAkB,CAACwG,QAApC,IACA,4BACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC6B,MAAM,CAACC,IAAP,CAAYpI,QAAZ,EAAsBqI,GAAtB,CAA0B,CAACC,GAAD,EAAMvB,CAAN,KAAoB;AAC5C,aACG,MAAC,YAAD;AACE,QAAA,GAAG,EAAEA,CAAC,GAAG,2BADX;AAEE,QAAA,KAAK,EAAE;AAAEwB,UAAAA,eAAe,EAAEvF,WAAW,KAAKsF,GAAhB,GAAsB,SAAtB,GAAkC;AAArD,SAFT;AAGE,QAAA,OAAO,EAAE,MAAMrF,MAAM,CAACqF,GAAD,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAgB,CAAhB,CALH,CADH;AASA,KAVF,CADD,CADF,EAgBI,EAAC1B,OAAD,aAACA,OAAD,iDAACA,OAAO,CAAE2B,gBAAV,2DAAC,uBAA2BO,MAA5B,KAAuC,MAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAED,QAAAA,MAAM,EAAE,KAAV;AAAiBtD,QAAAA,MAAM,EAAE;AAAzB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhB3C,EAiBIqB,OAjBJ,aAiBIA,OAjBJ,iDAiBIA,OAAO,CAAE2B,gBAjBb,2DAiBI,uBAA2BJ,GAA3B,CAA+B,CAACK,QAAD,EAAgB3B,CAAhB,KAA8B;AAC7D,aACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI2B,QAAQ,CAACC,YAAT,CAAsBC,QAAtB,CAA+B5F,WAA/B,IACA,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAY,MAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,aAArB;AAAmC,QAAA,cAAc,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ,CADF,OAC8F,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAa0F,QAAQ,CAACG,SAAtB,CAD9F,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAY,MAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,WAArB;AAAiC,QAAA,cAAc,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ,CAFF,OAE0F,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaH,QAAQ,CAACI,OAAtB,CAF1F,EAGE,MAAC,WAAD;AAAa,QAAA,SAAS,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,YAAD;AAAc,QAAA,OAAO,EAAE;AAAA;;AAAA,iBAAM5D,WAAW,CAAEhF,eAAF,EAAmB;AAAEwC,YAAAA,IAAI,EAAE,yBAAR;AAAmCe,YAAAA,KAAnC;AAA0CW,YAAAA,EAAE,EAAE7B,IAAF,aAAEA,IAAF,yCAAEA,IAAI,CAAE8B,OAAR,mDAAE,eAAeD;AAA7D,WAAnB,CAAjB;AAAA,SAAvB;AAAgI,QAAA,SAAS,EAAC,UAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKE,MAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAMK,gBAAgB,CAAChB,KAAD,EAAQ,uBAAR,EAAiCsD,CAAjC,CAA7C;AAAkF,QAAA,SAAS,EAAC,YAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,CAHF,CADA,GAcE,MAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEgC,UAAAA,MAAM,EAAE,KAAV;AAAiBtD,UAAAA,MAAM,EAAE;AAAzB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfN,CADF;AAmBD,KApBC,CAjBJ,EAwCE,MAAC,MAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,SAAS,EAAC,YAJZ;AAKE,MAAA,OAAO,EAAE;AAAA;;AAAA,eAAMP,WAAW,CACtBhF,eADsB,EAEtB;AACIwC,UAAAA,IAAI,EAAE,yBADV;AAEIe,UAAAA,KAFJ;AAGIW,UAAAA,EAAE,EAAE7B,IAAF,aAAEA,IAAF,yCAAEA,IAAI,CAAE8B,OAAR,mDAAE,eAAeD;AAHvB,SAFsB,CAAjB;AAAA,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,mBADL;AAEE,MAAA,cAAc,EAAC,mBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CAxCF,CA9QJ,EA6UI,CAAAX,KAAK,SAAL,IAAAA,KAAK,WAAL,uCAAAA,KAAK,CAAEuB,qBAAP,oFAA8BmC,IAA9B,MAAuCrH,kBAAkB,CAACyG,IAA1D,IACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCA9UJ,CADF;AAmVD,GAxVD;;AA0VA,QAAM8C,0BAA0B,GAAG,CAAC5F,KAAD,EAAasD,CAAb,KAAwB;AACzD,WACE,MAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEa,QAAAA,cAAc,EAAE;AAAlB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,cAAc,EAAC,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOpE,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAE6F,SAAd,UADF,CATF,CADF,CADF;AAiBD,GAlBD;;AAoBA,QAAMC,uBAAuB,GAAG,CAAC9F,KAAD,EAAasD,CAAb,KAAwB;AACtD,WACE,MAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEa,QAAAA,cAAc,EAAE;AAAlB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,yBADL;AAEE,MAAA,cAAc,EAAC,yBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOpE,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAE+F,WAAd,OADF,CATF,CADF,CADF;AAiBD,GAlBD;;AAoBA,QAAMC,iBAAiB,GAAG,CAAChG,KAAD,EAAaqD,OAAb,EAA2BC,CAA3B,KAAsC;AAAA;;AAC9D,UAAMC,YAAY,GAAGR,gBAAgB,CAACS,IAAjB,CAAuBC,MAAD,IAAYA,MAAM,CAACvD,KAAP,KAAiBmD,OAAO,CAACK,IAA3D,CAArB;AACA,UAAMC,mBAAmB,GAAGV,iBAAiB,CAACO,IAAlB,CAAwBC,MAAD,IAAYA,MAAM,CAACvD,KAAP,KAAiBmD,OAAO,CAACO,eAA5D,CAA5B;AACA,UAAMC,gBAAgB,GAAGX,iBAAiB,CAACM,IAAlB,CAAwBC,MAAD,IAAYA,MAAM,CAACvD,KAAP,KAAiBmD,OAAO,CAACS,iBAA5D,CAAzB;AACA,UAAMC,gBAAgB,GAAGb,iBAAiB,CAACM,IAAlB,CAAwBC,MAAD,IAAYA,MAAM,CAACvD,KAAP,KAAiBmD,OAAO,CAACW,iBAA5D,CAAzB;AACAiC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC7C,OAAhC;AACA,WACE,MAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEc,QAAAA,cAAc,EAAE;AAAlB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,cAAc,EAAC,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOpE,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAEmG,KAAd,OADF,CATF,CADF,EAeE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEhC,QAAAA,cAAc,EAAE;AAAlB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,cAAc,EAAC,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAGF,CAAD,IAAYnD,wBAAwB,CAACd,KAAD,EAAQ,MAAR,EAAgBiE,CAAC,CAAC/D,KAAlB,CADhD;AAEE,MAAA,KAAK,EAAEqD,YAFT;AAGE,MAAA,OAAO,EAAER,gBAHX;AAIE,MAAA,MAAM,EAAEuB,WAJV;AAKE,MAAA,YAAY,EAAE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CAfF,EAmCI,CAAC,CAAAjB,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,IAAT,MAAkBpH,gBAAgB,CAACoG,MAAnC,IAA6C,CAAAW,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,IAAT,MAAkBpH,gBAAgB,CAACuG,QAAhF,IAA4F,CAAAQ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,IAAT,MAAkBpH,gBAAgB,CAAC0G,cAAhI,KACA,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAE,2BAAAK,OAAO,CAACS,iBAAR,kFAA2ByB,MAA3B,IAAoC,kBAApC,GAAwD,iBAD9D;AAEE,MAAA,cAAc,EAAE,2BAAAlC,OAAO,CAACS,iBAAR,kFAA2ByB,MAA3B,IAAoC,kBAApC,GAAwD,iBAF1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAGtB,CAAD,IAAYnD,wBAAwB,CAACd,KAAD,EAAQ,mBAAR,EAA6BiE,CAAC,CAAC/D,KAA/B,CADhD;AAEE,MAAA,KAAK,EAAE2D,gBAFT;AAGE,MAAA,OAAO,EAAEX,iBAHX;AAIE,MAAA,MAAM,EAAEoB,WAJV;AAKE,MAAA,YAAY,EAAE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CApCJ,EAyDIjB,OAAO,CAACK,IAAR,KAAiBpH,gBAAgB,CAACoG,MAAlC,IACA,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,mBADL;AAEE,MAAA,cAAc,EAAC,mBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAGuB,CAAD,IAAYnD,wBAAwB,CAACd,KAAD,EAAQ,iBAAR,EAA2BiE,CAAC,CAAC/D,KAA7B,CADhD;AAEE,MAAA,KAAK,EAAEyD,mBAFT;AAGE,MAAA,OAAO,EAAEV,iBAHX;AAIE,MAAA,MAAM,EAAEqB,WAJV;AAKE,MAAA,YAAY,EAAE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,CA1DJ,EAiFI,CAACjB,OAAO,CAACK,IAAR,KAAiBpH,gBAAgB,CAACuG,QAAlC,IAA8CQ,OAAO,CAACK,IAAR,KAAiBpH,gBAAgB,CAAC0G,cAAjF,KACA,4BACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC0B,MAAM,CAACC,IAAP,CAAYpI,QAAZ,EAAsBqI,GAAtB,CAA0B,CAACC,GAAD,EAAMvB,CAAN,KAAoB;AAC5C,aACG,MAAC,YAAD;AACE,QAAA,GAAG,EAAEA,CAAC,GAAG,gBADX;AAEE,QAAA,KAAK,EAAE;AAAEwB,UAAAA,eAAe,EAAEvF,WAAW,KAAKsF,GAAhB,GAAsB,SAAtB,GAAkC;AAArD,SAFT;AAGE,QAAA,OAAO,EAAE,MAAMrF,MAAM,CAACqF,GAAD,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAgB,CAAhB,CALH,CADH;AASA,KAVF,CADD,CADF,EAgBI1B,OAhBJ,aAgBIA,OAhBJ,iDAgBIA,OAAO,CAAE2B,gBAhBb,2DAgBI,uBAA2BJ,GAA3B,CAA+B,CAACK,QAAD,EAAgB3B,CAAhB,KAA8B;AAC7D,aACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI2B,QAAQ,CAACC,YAAT,CAAsBC,QAAtB,CAA+B5F,WAA/B,IACA,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAY,MAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,aAArB;AAAmC,QAAA,cAAc,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ,CADF,OAC8F,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAa0F,QAAQ,CAACG,SAAtB,CAD9F,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAY,MAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,WAArB;AAAiC,QAAA,cAAc,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ,CAFF,OAE0F,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaH,QAAQ,CAACI,OAAtB,CAF1F,EAGE,MAAC,WAAD;AAAa,QAAA,SAAS,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,YAAD;AAAc,QAAA,OAAO,EAAE;AAAA;;AAAA,iBAAM5D,WAAW,CAAEhF,eAAF,EAAmB;AAAEwC,YAAAA,IAAI,EAAE,oBAAR;AAA8Be,YAAAA,KAA9B;AAAqCW,YAAAA,EAAE,EAAE7B,IAAF,aAAEA,IAAF,0CAAEA,IAAI,CAAE8B,OAAR,oDAAE,gBAAeD;AAAxD,WAAnB,CAAjB;AAAA,SAAvB;AAA2H,QAAA,SAAS,EAAC,UAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKE,MAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAMK,gBAAgB,CAAChB,KAAD,EAAQ,eAAR,EAAyBsD,CAAzB,CAA7C;AAA0E,QAAA,SAAS,EAAC,YAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,CAHF,CADA,GAcE,MAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEgC,UAAAA,MAAM,EAAE,KAAV;AAAiBtD,UAAAA,MAAM,EAAE;AAAzB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfN,CADF;AAmBD,KApBC,CAhBJ,EAsCE,MAAC,MAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,SAAS,EAAC,YAJZ;AAKE,MAAA,OAAO,EAAE;AAAA;;AAAA,eAAMP,WAAW,CACtBhF,eADsB,EAEtB;AACIwC,UAAAA,IAAI,EAAE,oBADV;AAEIe,UAAAA,KAFJ;AAGIW,UAAAA,EAAE,EAAE7B,IAAF,aAAEA,IAAF,0CAAEA,IAAI,CAAE8B,OAAR,oDAAE,gBAAeD;AAHvB,SAFsB,CAAjB;AAAA,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,mBADL;AAEE,MAAA,cAAc,EAAC,mBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CAtCF,CAlFJ,CADF;AAoJD,GA1JD;;AA4JA,QAAM2D,WAAW,GAAG;AAAE8B,IAAAA,OAAO,EAAEC,MAAM,oCAAUA,MAAV;AAAkBtE,MAAAA,KAAK,EAAE;AAAzB;AAAjB,GAApB;AAEA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AAAqB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,gBAArB;AAAsC,IAAA,cAAc,EAAC,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAOE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,cAAc,EAAC,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQI,CAAAlC,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAE0F,MAAR,IAAiB,CAAjB,IAAuB,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAR3B,EASI1F,MATJ,aASIA,MATJ,uBASIA,MAAM,CAAE+E,GAAR,CAAY,CAAC5E,KAAD,EAAQsD,CAAR,KAAsB;AAChC,WACE,MAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,CAAC,GAAG,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,kBADL;AAEE,MAAA,cAAc,EAAC,kBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADJ,EASI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAEtD,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEf,IAHhB,CAIE;AAJF;AAKE,MAAA,eAAe,EAAC,SALlB;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATJ,CADF,EAuBGmE,iBAAiB,CAACpD,KAAD,EAAQA,KAAK,CAACsB,qBAAd,EAAqCgC,CAArC,CAvBpB,EAwBGoC,iBAAiB,CAAC1F,KAAD,EAAQA,KAAK,CAACuB,qBAAd,EAAqC+B,CAArC,CAxBpB,EAyBG0C,iBAAiB,CAAChG,KAAD,EAAQA,KAAK,CAACwB,aAAd,EAA6B8B,CAA7B,CAzBpB,EA0BGsC,0BAA0B,CAAC5F,KAAD,EAAQsD,CAAR,CA1B7B,EA2BGwC,uBAAuB,CAAC9F,KAAD,EAAQsD,CAAR,CA3B1B,CADF;AAgCD,GAjCD,CATJ,EA6CGjE,WAAW,IACR,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,cAAc,EAAEA,WAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA9CN,CAPF,CADF,EAiEE,MAAC,mBAAD;AAAqB,IAAA,KAAK,EAAE;AAAE0C,MAAAA,KAAK,EAAE;AAAT,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,eADL;AAEE,IAAA,cAAc,EAAC,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,cAAc,EAAC,mBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAE9C,IAHT;AAIE,IAAA,QAAQ,EAAGgF,CAAD,IAAO/E,YAAY,CAAC+E,CAAC,CAACC,MAAF,CAAShE,KAAV,CAJ/B;AAKE,IAAA,eAAe,EAAC,SALlB;AAME,IAAA,KAAK,EAAC,OANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CARF,EA6BE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,mBADL;AAEE,IAAA,cAAc,EAAC,sBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,KAAK,EAAEf,YAHT;AAIE,IAAA,QAAQ,EAAG8E,CAAD,IAAO7E,eAAe,CAAC6E,CAAC,CAACC,MAAF,CAAShE,KAAV,CAJlC;AAKE,IAAA,eAAe,EAAC,SALlB;AAME,IAAA,KAAK,EAAC,OANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CA7BF,EAkDE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAgC,IAAA,OAAO,EAAC,WAAxC;AAAoD,IAAA,YAAY,EAAE,GAAlE;AAAuE,IAAA,OAAO,EAAEO,cAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAE,gBAAtB;AAAwC,IAAA,cAAc,EAAC,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAlDF,CAjEF,CADF;AA4HD,CAxqCD;;AA0qCA,eAAe/B,UAAf","sourcesContent":["import React,  { useState, useEffect, useContext } from 'react';\nimport Link from 'next/link';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { CURRENCY, HumiditySensorMode, LightSensorModes, WeekDays } from 'utils/constant';\nimport ErrorMessage from 'components/error-message/error-message';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';  \n\nimport OrderReceivedWrapper, {\n  PlantsPageContainer,\n  OrderInfo,\n  OrderDetails,\n  TotalAmount,\n  BlockTitle,\n  Text,\n  InfoBlockWrapper,\n  InfoBlock,\n  ListItem,\n  ListTitle,\n  ListDes,\n  ButtonText,\n  Row,\n  InputUpper,\n  PlantPageWrapper,\n  PlantsWrapper,\n  WeekContainer,\n  DayContainer,\n  PlantsSensorContainer,\n  ScheduleTime,\n  ActionButton,\n  CardButtons,\n  TextSpaced\n} from './your-plants.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { PlantsListWrapper } from 'features/your-plants/your-plants.style';\nimport ErrorMessageTwo from 'components/error-message/error-message-two';\nimport { Button } from 'components/button/button';\nimport { ADD_PLANT, UPDATE_HUMIDITY_1_SETTINGS, UPDATE_HUMIDITY_2_SETTINGS, UPDATE_LIGHT_SETTINGS } from 'graphql/query/plants.query';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { SuccessMsg } from 'features/user-profile/settings/settings.style';\nimport Switch from 'components/switch/switch';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\n  \n\ntype YourPlantsProps = {\n  data?: any;\n  index?: Number;\n  Router?: any;\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst YourPlants: React.FC<YourPlantsProps> = ({ deviceType }) => {\n  const { state, dispatch } = useContext(ProfileContext);\n  const { data, error, loading } = useQuery(GET_LOGGED_IN_USER);\n  // const router = useRouter();\n  // const intl = useIntl();\n  const [name, setPlantName] = useState('');\n  const [controllerId, setControllerID] = useState('');\n  const [userinfoMsg, setUserinfoMsg] = useState('');\n  const [daySelected, setDay] = useState('');\n  const [addPlant] = useMutation(ADD_PLANT);\n  const [updateSoilHumiditySettings1] = useMutation(UPDATE_HUMIDITY_1_SETTINGS);\n  const [updateSoilHumiditySettings2] = useMutation(UPDATE_HUMIDITY_2_SETTINGS);\n  const [updateLightSettings] = useMutation(UPDATE_LIGHT_SETTINGS);\n  const { plants } = state;\n\n  if (loading) {\n    return <ErrorMessage message={'Cargando...'} />\n  };\n\n  if (error) {\n    return (\n      <ErrorMessage message={error.message} />\n    );\n  };\n\n  const handleHumiditySettings1Change = (plant: any, field: string, value: string | boolean) => {\n    dispatch({\n      type: 'HANDLE_HUMIDITY_1_SETTINGS_CHANGE',\n      payload: { plant, value, field },\n    });\n\n    setTimeout(function () {\n      handleSettings1SaveClick(plant, field, value);\n    }, 1000)\n\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000)\n  };\n\n  const handleHumiditySettings2Change = (plant: any, field: string, value: string | boolean) => {\n    dispatch({\n      type: 'HANDLE_HUMIDITY_2_SETTINGS_CHANGE',\n      payload: { plant, value, field },\n    });\n\n    handleSettings2SaveClick(plant, field, value);\n\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000)\n  };\n  \n  const handleAddClick = () => {\n    addPlant({\n      variables: {\n        id: data?.getUser?.id,\n        name,\n        controllerId: Number(controllerId)\n      },\n    });\n  };\n\n  const handleLightSettingChange = (plant: any, field: string, value: string | boolean) => {\n    dispatch({\n      type: 'HANDLE_LIGHT_SETTINGS_CHANGE',\n      payload: { plant, value, field },\n    });\n\n    handleLightSettingSaveClick(plant, field, value);\n\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000)\n  };\n\n  const onDeleteSchedule = (plant: any, settingName: any, position: number) => {\n\n    delete plant[settingName][position];\n    \n    updateLightSettings({\n      variables: {\n        id: data?.getUser?.id,\n        controllerId: plant.controllerId,\n        input: plant[settingName]\n      },\n    });\n\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000)\n  };\n    \n  const handleSettings1SaveClick = (plant: any, fieldName: string, fieldValue: string | boolean) => {\n    updateSoilHumiditySettings1({\n      variables: {\n        id: data?.getUser?.id,\n        controllerId: plant.controllerId,\n        input: { [fieldName]: fieldValue, ...plant.soilHumiditySettings1 }\n      }\n    });\n  };\n\n  const handleSettings2SaveClick = (plant: any, fieldName: string, fieldValue: string | boolean) => {\n    updateSoilHumiditySettings2({\n      variables: {\n        id: data?.getUser?.id,\n        controllerId: plant.controllerId,\n        input: { [fieldName]: fieldValue, ...plant.soilHumiditySettings2 }\n      }\n    });\n  };\n\n  const handleLightSettingSaveClick = (plant: any, fieldName: string, fieldValue: string | boolean) => {\n    updateLightSettings({\n      variables: {\n        id: data?.getUser?.id,\n        controllerId: plant.controllerId,\n        input: { [fieldName]: fieldValue, ...plant.lightSettings }\n      },\n    });\n  };\n\n  // Add or edit modal\n  const handleModal = (\n    modalComponent: any,\n    modalProps = {},\n    className: string = 'add-time-schedule-modal'\n  ) => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className,\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: { item: modalProps },\n    });\n  };\n  \n  const humidityModeOptions = [\n    { value: HumiditySensorMode.SEEDS_POOL_IRRIGATION, label: 'Riego por inmersión' },\n    { value: HumiditySensorMode.MANUAL, label: 'Manual' },\n    { value: HumiditySensorMode.IRRIGATE_SPECIFICT_AMOUNT_ON_DEMAND, label: 'Semi-automático' },\n    { value: HumiditySensorMode.IRRIGATE_ON_DEMAND, label: 'Automático' },\n    { value: HumiditySensorMode.SCHEDULE, label: 'Calendario de riego' },\n    { value: HumiditySensorMode.NONE, label: 'Ninguno' }\n  ];\n\n  const lightModeOptions = [\n    { value: LightSensorModes.MANUAL, label: 'Manual' },\n    { value: LightSensorModes.NONE, label: 'Ninguno' },\n    { value: LightSensorModes.SCHEDULE, label: 'Calendario' },\n    { value: LightSensorModes.SMART_SCHEDULE, label: 'Calendario inteligente' }\n  ];\n\n  const manualModeOptions = [\n    { value: true, label: 'Prendido' },\n    { value: false, label: 'Apagado' }\n  ];\n\n  const fourRelaysOptions = [\n    { value: 'isRelayOneOn', label: 'Enchufe 1' },\n    { value: 'isRelayTwoOn', label: 'Enchufe 2' },\n    { value: 'isRelayThirdOn', label: 'Enchufe 3' },\n    { value: 'isRelayFourthOn', label: 'Enchufe 4' }\n  ];\n\n  const eightRelaysOptions = [\n    { value: 'isRelayOneOn', label: 'Enchufe 1' },\n    { value: 'isRelayTwoOn', label: 'Enchufe 2' },\n    { value: 'isRelayThirdOn', label: 'Enchufe 3' },\n    { value: 'isRelayFourthOn', label: 'Enchufe 4' }\n  ];\n\n  const renderSoilSensor1 = (plant: any,setting: any, i: any) => {\n    const selectedMode = humidityModeOptions.find((option) => option.value === plant?.soilHumiditySettings1?.mode);\n    const selectedManualState = manualModeOptions.find((option) => option.value === plant?.soilHumiditySettings1?.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === plant?.soilHumiditySettings1?.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find((option) => option.value === plant?.soilHumiditySettings1?.relayTwoIdRelated);\n    return (\n      <>\n      <PlantsSensorContainer key={i + '-orderList'}>\n        <ListItem>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"plantName\"\n                defaultMessage=\"plantName\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <Input\n              type='text'\n              name='name'\n              value={plant?.soilHumiditySettings1.name}\n              onChange={(e: any) => handleHumiditySettings1Change(plant, 'name', e.target.value)}\n              backgroundColor='#F7F7F7'\n              width='197px'\n              height='34.5px'\n              // intlInputLabelId=\"profileEmailField\"\n            />\n          </ListDes>\n        </ListItem>\n      \n\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"soilHumidityId\"\n                  defaultMessage=\"soilHumidityId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes style={{ marginLeft: '10px' }}>\n              <Text>{plant?.soilHumidity1} %</Text>\n            </ListDes>\n          </ListItem>\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"humidityModeId\"\n                  defaultMessage=\"humidityModeId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes>\n              <Select \n                onChange={(e: any) => handleHumiditySettings1Change(plant, 'mode', e.value)}\n                value={selectedMode}\n                options={humidityModeOptions}\n                styles={selectStyle}\n                menuPosition={'fixed'}\n              />\n            </ListDes>\n          </ListItem>\n\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"notifyChangesId\"\n                  defaultMessage=\"notifyChangesId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes style={{ marginLeft: '10px' }}>\n              <Switch \n                disabled={false}\n                checked={plant?.soilHumiditySettings1?.sendWhatsappWarnings}\n                labelPosition={'right'}\n                // className,\n                onUpdate={() => handleHumiditySettings1Change(plant, 'sendWhatsappWarnings', !plant?.soilHumiditySettings1?.sendWhatsappWarnings)}\n                // style\n              />\n            </ListDes>\n          </ListItem>\n\n\n        { (plant?.soilHumiditySettings1?.mode === HumiditySensorMode.IRRIGATE_ON_DEMAND ||\n          plant?.soilHumiditySettings1?.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION) && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='maxHumidityId'\n                    defaultMessage='maxHumidityId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Input\n                  type='number'\n                  name='maxWarning'\n                  value={plant?.soilHumiditySettings1.maxWarning}\n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'maxWarning', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                  height='34.5px'\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='minHumidityId'\n                    defaultMessage='minHumidityId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <InputUpper\n                  type='number'\n                  name='minWarning'\n                  value={plant?.soilHumiditySettings1?.minWarning}\n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'minWarning', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                  height='34.5px'\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='asociateRelayOneId'\n                    defaultMessage='asociateRelayOneId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'relayOneIdRelated', e.value)}\n                  value={relayOneSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='asociateRelayTwoId'\n                    defaultMessage='asociateRelayTwoId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'relayTwoIdRelated', e.value)}\n                  value={relayTwoSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n          </>\n        )}\n\n\n        { setting.mode === HumiditySensorMode.SCHEDULE && (\n          <>\n            <WeekContainer>\n            {Object.keys(WeekDays).map((day, i: number) => {\n               return (\n                  <DayContainer\n                    key={i + '-day--humidity-1container'}\n                    style={{ backgroundColor: daySelected === day ? '#E6E6E6' : 'transparent' }}\n                    onClick={() => setDay(day)}\n                  >\n                    {day.substring(0,3)}\n                  </DayContainer>\n                )\n              })\n            }\n            </WeekContainer>\n\n            { setting?.scheduledOnTimes?.map((schedule: any, i: number) => {\n              return (\n                <WeekContainer>\n                  { schedule.daysToRepeat.includes(daySelected) ? (\n                    <ScheduleTime>\n                      <TextSpaced><FormattedMessage id='startTimeId' defaultMessage='startTimeId' /></TextSpaced> <TextSpaced>{schedule.startTime}</TextSpaced>\n                      <TextSpaced><FormattedMessage id='endTimeId' defaultMessage='endTimeId' /></TextSpaced> <TextSpaced>{schedule.endTime}</TextSpaced>\n                      <CardButtons className='button-wrapper'>\n                        <ActionButton onClick={() => handleModal( AddTimeSchedule, { name: 'add-humidity-1-schedule', plant, id: data?.getUser?.id } )} className='edit-btn'>\n                          <PencilIcon />\n                        </ActionButton>\n\n                        <ActionButton onClick={() => onDeleteSchedule(plant, 'soilHumiditySettings1', i)} className='delete-btn'>\n                          <CloseIcon />\n                        </ActionButton>\n                      </CardButtons>\n                    </ScheduleTime>\n                  ) : <ScheduleTime style={{ border: '0px', height: '42px' }}></ScheduleTime>}\n                </WeekContainer>\n              )\n            }\n            )}\n            <Button\n              size='small'\n              variant='outlined'\n              type='button'\n              className='add-button'\n              onClick={() => handleModal(\n                  AddTimeSchedule, \n                  {\n                      name: 'add-humidity-1-schedule',\n                      plant,\n                      id: data?.getUser?.id\n                  }\n                )\n              }\n            >\n              <FormattedMessage\n                id='addTimeScheduleId'\n                defaultMessage='addTimeScheduleId' \n              />\n            </Button>\n          </>\n        )}\n        \n        { plant?.soilHumiditySettings1?.mode === HumiditySensorMode.MANUAL && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='manualModeStateId'\n                    defaultMessage='manualModeStateId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'relayOneWorking', e.value)}\n                  value={selectedManualState}\n                  options={manualModeOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id={setting.relayOneIdRelated?.length ? 'asociateRelayId' :'asociatedRelayId' }\n                    defaultMessage={setting.relayOneIdRelated?.length ? 'asociateRelayId' :'asociatedRelayId'}\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'relayOneIdRelated', e.value)}\n                  value={relayOneSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n          </>\n        )}\n\n        { plant?.soilHumiditySettings1?.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='irrigationTimeId'\n                    defaultMessage='irrigationTimeId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Input\n                  type='number'\n                  name='relayOneAutomatedTimeToRun'\n                  value={plant?.soilHumiditySettings1.relayOneAutomatedTimeToRun}\n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'relayOneAutomatedTimeToRun', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                  height='34.5px'\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='irrigationEvacuationTimeId'\n                    defaultMessage='irrigationEvacuationTimeId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Input\n                  type='number'\n                  name='relayTwoAutomatedTimeToRun'\n                  value={plant?.soilHumiditySettings1.relayTwoAutomatedTimeToRun}\n                  onChange={(e: any) => handleHumiditySettings1Change(plant, 'relayTwoAutomatedTimeToRun', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                  height='34.5px'\n                />\n              </ListDes>\n            </ListItem>\n\n          </>\n        )}\n        \n        \n        { plant?.soilHumiditySettings1?.mode === HumiditySensorMode.NONE && (\n          <Text>Necesitas seleccionar un modo</Text>\n        )}\n        </PlantsSensorContainer>\n      </>\n    )\n  }\n\n  const renderSoilSensor2 = (plant: any, setting: any, i: any) => {\n    const selectedMode = humidityModeOptions.find((option) => option.value === plant?.soilHumiditySettings2?.mode);\n    const selectedManualState = manualModeOptions.find((option) => option.value === plant?.soilHumiditySettings2?.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === plant?.soilHumiditySettings2?.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find((option) => option.value === plant?.soilHumiditySettings2?.relayTwoIdRelated);\n    return (\n      <PlantsSensorContainer key={i + '-orderList'}>\n        <ListItem>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"plantName\"\n                defaultMessage=\"plantName\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <Input\n              type='text'\n              name='name'\n              value={plant?.soilHumiditySettings2.name}\n              onChange={(e: any) => handleHumiditySettings2Change(plant, 'name', e.target.value)}\n              backgroundColor='#F7F7F7'\n              width='197px'\n              height='34.5px'\n            />\n          </ListDes>\n        </ListItem>\n      \n\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"soilHumidityId\"\n                  defaultMessage=\"soilHumidityId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes style={{ marginLeft: '10px' }}>\n              <Text>{plant?.soilHumidity2} %</Text>\n            </ListDes>\n          </ListItem>\n          <ListItem>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"humidityModeId\"\n                  defaultMessage=\"humidityModeId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes>\n              <Select \n                onChange={(e: any) => handleHumiditySettings2Change(plant, 'mode', e.value)}\n                value={selectedMode}\n                options={humidityModeOptions}\n                styles={selectStyle}\n                menuPosition={'fixed'}\n              />\n            </ListDes>\n          </ListItem>\n\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"notifyChangesId\"\n                  defaultMessage=\"notifyChangesId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes style={{ marginLeft: '10px' }}>\n              <Switch \n                disabled={false}\n                checked={plant?.soilHumiditySettings2?.sendWhatsappWarnings}\n                labelPosition={'right'}\n                // className,\n                onUpdate={() => handleHumiditySettings2Change(plant, 'sendWhatsappWarnings', !plant?.soilHumiditySettings2?.sendWhatsappWarnings)}\n                // style\n              />\n            </ListDes>\n          </ListItem>\n\n\n        { (plant?.soilHumiditySettings2?.mode === HumiditySensorMode.IRRIGATE_ON_DEMAND ||\n          plant?.soilHumiditySettings2?.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION) && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='maxHumidityId'\n                    defaultMessage='maxHumidityId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Input\n                  type='number'\n                  // min=\"1\" \n                  // max=\"5\"\n                  // placeholder={intl.formatMessage({\n                  //   id: 'couponPlaceholder',\n                  //   defaultMessage: 'Enter Coupon Here',\n                  // })}\n                  // inputRef={register({required: true})}\n                  //               placeholder='Ex: Search By Name'\n                  // required={true}\n                  name='maxWarning'\n                  value={plant?.soilHumiditySettings2.maxWarning}\n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'maxWarning', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                  height='34.5px'\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='minHumidityId'\n                    defaultMessage='minHumidityId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <InputUpper\n                  type='number'\n                  name='minWarning'\n                  value={plant?.soilHumiditySettings2?.minWarning}\n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'minWarning', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                  height='34.5px'\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='asociateRelayOneId'\n                    defaultMessage='asociateRelayOneId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'relayOneIdRelated', e.value)}\n                  value={relayOneSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='asociateRelayTwoId'\n                    defaultMessage='asociateRelayTwoId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'relayTwoIdRelated', e.value)}\n                  value={relayTwoSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n          </>\n        )}\n\n        { plant?.soilHumiditySettings2?.mode === HumiditySensorMode.MANUAL && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='manualModeStateId'\n                    defaultMessage='manualModeStateId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'relayOneWorking', e.value)}\n                  value={selectedManualState}\n                  options={manualModeOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id={setting.relayOneIdRelated?.length ? 'asociateRelayId' : 'asociatedRelayId'}\n                    defaultMessage={setting.relayOneIdRelated?.length ? 'asociateRelayId' : 'asociatedRelayId'}\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'relayOneIdRelated', e.value)}\n                  value={relayOneSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n          </>\n        )}\n\n        { plant?.soilHumiditySettings2?.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='irrigationTimeId'\n                    defaultMessage='irrigationTimeId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Input\n                  type='number'\n                  name='relayOneAutomatedTimeToRun'\n                  value={plant?.soilHumiditySettings2.relayOneAutomatedTimeToRun}\n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'relayOneAutomatedTimeToRun', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                  height='34.5px'\n                />\n              </ListDes>\n            </ListItem>\n\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='irrigationEvacuationTimeId'\n                    defaultMessage='irrigationEvacuationTimeId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Input\n                  type='number'\n                  name='relayTwoAutomatedTimeToRun'\n                  value={plant?.soilHumiditySettings2.relayTwoAutomatedTimeToRun}\n                  onChange={(e: any) => handleHumiditySettings2Change(plant, 'relayTwoAutomatedTimeToRun', e.target.value)}\n                  backgroundColor='#F7F7F7'\n                  width='197px'\n                  height='34.5px'\n                />\n              </ListDes>\n            </ListItem>\n          </>\n        )}\n        \n        { setting.mode === HumiditySensorMode.SCHEDULE && (\n          <>\n            <WeekContainer>\n            {Object.keys(WeekDays).map((day, i: number) => {\n               return (\n                  <DayContainer\n                    key={i + '-day--humidity-2container'}\n                    style={{ backgroundColor: daySelected === day ? '#E6E6E6' : 'transparent' }}\n                    onClick={() => setDay(day)}\n                  >\n                    {day.substring(0,3)}\n                  </DayContainer>\n                )\n              })\n            }\n            </WeekContainer>\n\n            { !setting?.scheduledOnTimes?.length && (<ScheduleTime style={{ border: '0px', height: '42px' }}></ScheduleTime>) }\n            { setting?.scheduledOnTimes?.map((schedule: any, i: number) => {\n              return (\n                <WeekContainer>\n                  { schedule.daysToRepeat.includes(daySelected) ? (\n                    <ScheduleTime>\n                      <TextSpaced><FormattedMessage id='startTimeId' defaultMessage='startTimeId' /></TextSpaced> <TextSpaced>{schedule.startTime}</TextSpaced>\n                      <TextSpaced><FormattedMessage id='endTimeId' defaultMessage='endTimeId' /></TextSpaced> <TextSpaced>{schedule.endTime}</TextSpaced>\n                      <CardButtons className='button-wrapper'>\n                        <ActionButton onClick={() => handleModal( AddTimeSchedule, { name: 'add-humidity-2-schedule', plant, id: data?.getUser?.id } )} className='edit-btn'>\n                          <PencilIcon />\n                        </ActionButton>\n\n                        <ActionButton onClick={() => onDeleteSchedule(plant, 'soilHumiditySettings2', i)} className='delete-btn'>\n                          <CloseIcon />\n                        </ActionButton>\n                      </CardButtons>\n                    </ScheduleTime>\n                  ) : <ScheduleTime style={{ border: '0px', height: '42px' }}></ScheduleTime>}\n                </WeekContainer>\n              )\n            }\n            )}\n\n            <Button\n              size='small'\n              variant='outlined'\n              type='button'\n              className='add-button'\n              onClick={() => handleModal(\n                  AddTimeSchedule, \n                  {\n                      name: 'add-humidity-2-schedule',\n                      plant,\n                      id: data?.getUser?.id\n                  }\n                )\n              }\n            >\n              <FormattedMessage\n                id='addTimeScheduleId'\n                defaultMessage='addTimeScheduleId' \n              />\n            </Button>\n          </>\n        )}\n        \n        { plant?.soilHumiditySettings2?.mode === HumiditySensorMode.NONE && (\n          <Text>Necesitas seleccionar un modo</Text>\n        )}\n        </PlantsSensorContainer>\n    )\n  }\n\n  const renderAirTemperatureSensor = (plant: any, i: any) => {\n    return (\n      <PlantsSensorContainer>\n        <ListItem style={{ justifyContent: 'flex-start' }}>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"tempSensorId\"\n                defaultMessage=\"tempSensorId\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes style={{ marginLeft: '10px' }}>\n            <Text>{plant?.tempeture} °</Text>\n          </ListDes>\n        </ListItem>\n      </PlantsSensorContainer>\n    )\n  }\n\n  const renderAirHumiditySensor = (plant: any, i: any) => {\n    return (\n      <PlantsSensorContainer>\n        <ListItem style={{ justifyContent: 'flex-start' }}>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"humedadAmbienteSensorId\"\n                defaultMessage=\"humedadAmbienteSensorId\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes style={{ marginLeft: '10px' }}>\n            <Text>{plant?.airHumidity} %</Text>\n          </ListDes>\n        </ListItem>\n      </PlantsSensorContainer>\n    )\n  }\n\n  const renderLightSensor = (plant: any, setting: any, i: any) => {\n    const selectedMode = lightModeOptions.find((option) => option.value === setting.mode);\n    const selectedManualState = manualModeOptions.find((option) => option.value === setting.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === setting.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find((option) => option.value === setting.relayTwoIdRelated);\n    console.log('light setting:::', setting);\n    return (\n      <PlantsSensorContainer>\n        <ListItem style={{ justifyContent: 'flex-start' }}>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"lightId\"\n                defaultMessage=\"lightId\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes style={{ marginLeft: '10px' }}>\n            <Text>{plant?.light} %</Text>\n          </ListDes>\n        </ListItem>\n\n        <ListItem style={{ justifyContent: 'flex-start' }}>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"lightModeId\"\n                defaultMessage=\"lightModeId\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <Select \n              onChange={(e: any) => handleLightSettingChange(plant, 'mode', e.value)}\n              value={selectedMode}\n              options={lightModeOptions}\n              styles={selectStyle}\n              menuPosition={'fixed'}\n            />\n          </ListDes>\n        </ListItem>\n\n        { (setting?.mode === LightSensorModes.MANUAL || setting?.mode === LightSensorModes.SCHEDULE || setting?.mode === LightSensorModes.SMART_SCHEDULE) && (\n          <ListItem>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n                  defaultMessage={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n                />\n              </Text>\n            </ListTitle>\n            <ListDes>\n              <Select \n                onChange={(e: any) => handleLightSettingChange(plant, 'relayOneIdRelated', e.value)}\n                value={relayOneSelected}\n                options={fourRelaysOptions}\n                styles={selectStyle}\n                menuPosition={'fixed'}\n              />\n            </ListDes>\n          </ListItem>\n        )}\n        \n        { setting.mode === LightSensorModes.MANUAL && (\n          <>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id='manualModeStateId'\n                    defaultMessage='manualModeStateId'\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleLightSettingChange(plant, 'relayOneWorking', e.value)}\n                  value={selectedManualState}\n                  options={manualModeOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n          </>\n        )}\n\n        { (setting.mode === LightSensorModes.SCHEDULE || setting.mode === LightSensorModes.SMART_SCHEDULE) && (\n          <>\n            <WeekContainer>\n            {Object.keys(WeekDays).map((day, i: number) => {\n               return (\n                  <DayContainer\n                    key={i + '-day-container'}\n                    style={{ backgroundColor: daySelected === day ? '#E6E6E6' : 'transparent' }}\n                    onClick={() => setDay(day)}\n                  >\n                    {day.substring(0,3)}\n                  </DayContainer>\n                )\n              })\n            }\n            </WeekContainer>\n\n            { setting?.scheduledOnTimes?.map((schedule: any, i: number) => {\n              return (\n                <WeekContainer>\n                  { schedule.daysToRepeat.includes(daySelected) ? (\n                    <ScheduleTime>\n                      <TextSpaced><FormattedMessage id='startTimeId' defaultMessage='startTimeId' /></TextSpaced> <TextSpaced>{schedule.startTime}</TextSpaced>\n                      <TextSpaced><FormattedMessage id='endTimeId' defaultMessage='endTimeId' /></TextSpaced> <TextSpaced>{schedule.endTime}</TextSpaced>\n                      <CardButtons className='button-wrapper'>\n                        <ActionButton onClick={() => handleModal( AddTimeSchedule, { name: 'add-light-schedule', plant, id: data?.getUser?.id } )} className='edit-btn'>\n                          <PencilIcon />\n                        </ActionButton>\n\n                        <ActionButton onClick={() => onDeleteSchedule(plant, 'lightSettings', i)} className='delete-btn'>\n                          <CloseIcon />\n                        </ActionButton>\n                      </CardButtons>\n                    </ScheduleTime>\n                  ) : <ScheduleTime style={{ border: '0px', height: '42px' }}></ScheduleTime>}\n                </WeekContainer>\n              )\n            }\n            )}\n            <Button\n              size='small'\n              variant='outlined'\n              type='button'\n              className='add-button'\n              onClick={() => handleModal(\n                  AddTimeSchedule, \n                  {\n                      name: 'add-light-schedule',\n                      plant,\n                      id: data?.getUser?.id\n                  }\n                )\n              }\n            >\n              <FormattedMessage\n                id='addTimeScheduleId'\n                defaultMessage='addTimeScheduleId' \n              />\n            </Button>\n          </>\n        )}\n\n\n      </PlantsSensorContainer>\n\n    )\n  }\n\n  const selectStyle = { control: styles => ({ ...styles, width: '197px' }) };\n\n  return (\n    <PlantPageWrapper>\n      <PlantsPageContainer style={{ width: '100%' }}>\n        <Link href=\"/profile\">\n          <a className=\"home-btn\">\n            <FormattedMessage id=\"backProfileBtn\" defaultMessage=\"Back to Profile\" />\n          </a>\n        </Link>\n\n        <OrderDetails>\n          <BlockTitle>\n            <FormattedMessage\n              id=\"yourPlants\"\n              defaultMessage=\"Your Plants\"\n            />\n          </BlockTitle>\n\n          { plants?.length < 1 && (<Text>No tienes plantas registradas</Text>) }\n          { plants?.map((plant, i: number) => {\n              return (\n                <PlantsWrapper key={i + '-orderList'}>\n                  <ListItem>\n                      <ListTitle>\n                        <Text bold>\n                          <FormattedMessage\n                            id=\"controllerNameId\"\n                            defaultMessage=\"controllerNameId\"\n                          />\n                        </Text>\n                      </ListTitle>\n                      <ListDes>\n                        <Input\n                          type='text'\n                          name='name'\n                          value={plant?.name}\n                          // onChange={(e: any) => handleHumiditySettings1Change(plant, 'name', e.target.value)}\n                          backgroundColor='#F7F7F7'\n                          width='197px'\n                          height='34.5px'\n                        />\n                      </ListDes>\n                    </ListItem>\n\n                  {renderSoilSensor1(plant, plant.soilHumiditySettings1, i)}\n                  {renderSoilSensor2(plant, plant.soilHumiditySettings2, i)}\n                  {renderLightSensor(plant, plant.lightSettings, i)}\n                  {renderAirTemperatureSensor(plant, i)}\n                  {renderAirHumiditySensor(plant, i)}\n\n                </PlantsWrapper>\n              )\n            })\n          }\n\n          {userinfoMsg && (\n              <SuccessMsg>\n                <FormattedMessage\n                  id='userInfoSuccess'\n                  defaultMessage={userinfoMsg}\n                />\n              </SuccessMsg>\n          )}\n\n        </OrderDetails>\n      </PlantsPageContainer>\n\n      <PlantsPageContainer style={{ width: '100%' }}>\n        <BlockTitle>\n          <FormattedMessage\n            id=\"addController\"\n            defaultMessage=\"Your Plants\"\n          />\n        </BlockTitle>\n\n        <ListItem>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id='plantNameField'\n                defaultMessage='Name of the plant'\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <Input\n              type='text'\n              name='name'\n              value={name}\n              onChange={(e) => setPlantName(e.target.value)}\n              backgroundColor='#F7F7F7'\n              width='197px'\n            />\n          </ListDes>\n        </ListItem>\n\n        <ListItem>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id='controllerIdField'\n                defaultMessage='ID of the controller'\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <Input\n              type='number'\n              name='controllerId'\n              value={controllerId}\n              onChange={(e) => setControllerID(e.target.value)}\n              backgroundColor='#F7F7F7'\n              width='197px'\n            />\n          </ListDes>\n        </ListItem>\n\n        <Button className=\"cart-button\" variant=\"secondary\" borderRadius={100} onClick={handleAddClick}>\n          <ButtonText>\n            <FormattedMessage id={\"addPlantButton\"} defaultMessage=\"Add plant\" />\n          </ButtonText>\n        </Button>\n      </PlantsPageContainer>\n    </PlantPageWrapper>\n  );\n};\n\nexport default YourPlants;\n"]},"metadata":{},"sourceType":"module"}