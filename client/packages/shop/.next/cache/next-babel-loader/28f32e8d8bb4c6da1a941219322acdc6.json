{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/authentication-form/login.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { LinkButton, Button, Wrapper, Container, Heading, SubHeading, OfferSection, Offer // Input,\n} from './authentication-form.style';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { closeModal } from '@redq/reuse-modal';\nimport { Input } from 'components/forms/input';\nimport { SIGNIN_MUTATION } from 'graphql/mutation/signin';\nimport Router, { useRouter } from 'next/router';\nimport PhoneInput from 'react-phone-input-2';\nimport es from 'react-phone-input-2/lang/es.json';\nexport default function SignInModal() {\n  _s();\n\n  var _error$toString;\n\n  var router = useRouter();\n  var intl = useIntl();\n\n  var _useContext = useContext(AuthContext),\n      authDispatch = _useContext.authDispatch;\n\n  var _React$useState = React.useState(process.env.ENV === 'development' ? '+543624951926' : '+543624951926'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      phone = _React$useState2[0],\n      setPhone = _React$useState2[1];\n\n  var _React$useState3 = React.useState('123456'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var toggleSignUpForm = function toggleSignUpForm() {\n    authDispatch({\n      type: 'SIGNUP'\n    });\n  };\n\n  var toggleForgotPassForm = function toggleForgotPassForm() {\n    authDispatch({\n      type: 'FORGOTPASS'\n    });\n  };\n\n  var togglePhoneVerificationForm = function togglePhoneVerificationForm() {\n    authDispatch({\n      type: 'PHONE_VERIFICATION'\n    });\n  };\n\n  var _useMutation = useMutation(SIGNIN_MUTATION, {\n    onCompleted: function onCompleted(data) {\n      var _data$login = data.login,\n          access_token = _data$login.access_token,\n          user = _data$login.user;\n\n      if (true) {\n        localStorage.setItem('access_token', \"\".concat(access_token));\n        authDispatch({\n          type: 'SIGNIN_SUCCESS',\n          user: user\n        });\n        closeModal();\n        Router.push('/[type]', router.asPath);\n      }\n    },\n    onError: function onError(error) {\n      setPhone('');\n      setPassword('');\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signinMeMutation = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error,\n      data = _useMutation2$.data;\n\n  var handlePhoneChange = function handlePhoneChange(value, data, event, formattedValue) {\n    setPhone(value);\n  };\n\n  var authError = error === null || error === void 0 ? void 0 : (_error$toString = error.toString()) === null || _error$toString === void 0 ? void 0 : _error$toString.includes(\"User dose not exits.\");\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"welcomeBack\",\n    defaultMessage: \"Welcome Back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), __jsx(SubHeading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"loginText\",\n    defaultMessage: \"Login with your phone number & password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), __jsx(\"form\", {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return signinMeMutation({\n                  variables: {\n                    phone: phone,\n                    password: password\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(PhoneInput, {\n    inputProps: {\n      name: 'phone',\n      required: true,\n      autoFocus: true\n    },\n    containerStyle: {\n      textAlign: \"left\"\n    },\n    inputStyle: {\n      backgroundColor: \"#F7F7F7\",\n      height: \"48px\",\n      marginBottom: \"10px\",\n      width: \"100%\"\n    },\n    onlyCountries: ['ar'],\n    localization: es,\n    country: 'ar',\n    masks: {\n      ar: '(...) ...-....'\n    },\n    value: phone,\n    onChange: handlePhoneChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    type: \"password\",\n    placeholder: intl.formatMessage({\n      id: 'passwordPlaceholder',\n      defaultMessage: 'Password (min 6 characters)'\n    }),\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    required: true,\n    height: \"48px\",\n    backgroundColor: \"#F7F7F7\",\n    mb: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    variant: \"primary\",\n    size: \"big\",\n    style: {\n      width: '100%'\n    },\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"continueBtn\",\n    defaultMessage: \"Continue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }))), loading && __jsx(\"p\", {\n    style: {\n      marginTop: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Loading...\"), authError && __jsx(\"p\", {\n    style: {\n      marginTop: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 23\n    }\n  }, \" \", intl.formatMessage({\n    id: 'userNotFound',\n    defaultMessage: 'Invalid user/password'\n  })), error && !authError && __jsx(\"p\", {\n    style: {\n      marginTop: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 32\n    }\n  }, \" \", \"\".concat((error === null || error === void 0 ? void 0 : error.message) || error, \". Please try again\")), __jsx(Offer, {\n    style: {\n      padding: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"dontHaveAccount\",\n    defaultMessage: \"Don't have any account?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }), ' ', __jsx(LinkButton, {\n    onClick: toggleSignUpForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"signUpBtnText\",\n    defaultMessage: \"Sign Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  })))), __jsx(OfferSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, __jsx(Offer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"phoneVerifyText\",\n    defaultMessage: \"Phone number not verified?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }), ' ', __jsx(LinkButton, {\n    onClick: togglePhoneVerificationForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"verifyNowText\",\n    defaultMessage: \"Verify Now\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(SignInModal, \"/u5I9oJRN66f6Dn5gJ1A4trJcjs=\", false, function () {\n  return [useRouter, useIntl, useMutation];\n});\n\n_c = SignInModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInModal\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/authentication-form/login.tsx"],"names":["React","useContext","LinkButton","Button","Wrapper","Container","Heading","SubHeading","OfferSection","Offer","useMutation","AuthContext","FormattedMessage","useIntl","closeModal","Input","SIGNIN_MUTATION","Router","useRouter","PhoneInput","es","SignInModal","router","intl","authDispatch","useState","process","env","ENV","phone","setPhone","password","setPassword","toggleSignUpForm","type","toggleForgotPassForm","togglePhoneVerificationForm","onCompleted","data","login","access_token","user","localStorage","setItem","push","asPath","onError","error","signinMeMutation","loading","handlePhoneChange","value","event","formattedValue","authError","toString","includes","e","preventDefault","variables","name","required","autoFocus","textAlign","backgroundColor","height","marginBottom","width","ar","formatMessage","id","defaultMessage","target","marginTop","message","padding"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport {\n  LinkButton,\n  Button,\n  IconWrapper,\n  Wrapper,\n  Container,\n  LogoWrapper,\n  Heading,\n  SubHeading,\n  OfferSection,\n  Offer,\n  // Input,\n  Divider,\n} from './authentication-form.style';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { closeModal } from '@redq/reuse-modal';\nimport { Input } from 'components/forms/input';\nimport { SIGNIN_MUTATION } from 'graphql/mutation/signin';\nimport Router, { useRouter } from 'next/router';\nimport PhoneInput from 'react-phone-input-2'\nimport startsWith from 'lodash.startswith';\nimport es from 'react-phone-input-2/lang/es.json'\n\nexport default function SignInModal() {\n  const router = useRouter();\n  const intl = useIntl();\n  const { authDispatch } = useContext<any>(AuthContext);\n  const [phone, setPhone] = React.useState(process.env.ENV === 'development' ? '+543624951926' : '+543624951926');\n  const [password, setPassword] = React.useState('123456');\n\n  const toggleSignUpForm = () => {\n    authDispatch({\n      type: 'SIGNUP',\n    });\n  };\n\n  const toggleForgotPassForm = () => {\n    authDispatch({\n      type: 'FORGOTPASS',\n    });\n  };\n\n  const togglePhoneVerificationForm = () => {\n    authDispatch({\n      type: 'PHONE_VERIFICATION',\n    });\n  };\n\n  const [\n    signinMeMutation,\n    { \n      loading,\n      error,\n      data\n    }\n  ] = useMutation(SIGNIN_MUTATION,{\n    onCompleted: (data) => {\n      const { access_token, user } = data.login;\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('access_token', `${access_token}`);\n        authDispatch({ \n          type: 'SIGNIN_SUCCESS',\n          user\n        });\n        closeModal();\n        Router.push('/[type]', router.asPath);\n      }\n    },\n    onError: (error) => {\n      setPhone('');\n      setPassword('');\n    }\n  });\n\n  const handlePhoneChange = (value, data, event, formattedValue) => {\n    setPhone(value)\n  }\n  const authError = error?.toString()?.includes(\"User dose not exits.\");\n  return (\n    <Wrapper>\n      <Container>\n        <Heading>\n          <FormattedMessage id='welcomeBack' defaultMessage='Welcome Back' />\n        </Heading>\n\n        <SubHeading>\n          <FormattedMessage\n            id='loginText'\n            defaultMessage='Login with your phone number &amp; password'\n          />\n        </SubHeading>\n        <form onSubmit={\n            async (e) => {\n                e.preventDefault();\n                await signinMeMutation({\n                  variables: {phone, password}\n                });\n              }\n          }\n        >\n          <PhoneInput\n              inputProps={{\n                name: 'phone',\n                required: true,\n                autoFocus: true\n              }}\n              containerStyle={{textAlign: \"left\"}}\n              inputStyle={{backgroundColor: \"#F7F7F7\", height: \"48px\", marginBottom: \"10px\", width: \"100%\"}}\n              onlyCountries={['ar']}\n              localization={es}\n              country={'ar'}\n              masks={{ar: '(...) ...-....'}}\n              value={phone}\n              onChange={handlePhoneChange}\n          />\n\n          <Input\n            type='password'\n            placeholder={intl.formatMessage({\n              id: 'passwordPlaceholder',\n              defaultMessage: 'Password (min 6 characters)',\n            })}\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            height='48px'\n            backgroundColor='#F7F7F7'\n            mb='10px'\n          />\n\n          <Button\n            variant='primary'\n            size='big'\n            style={{ width: '100%' }}\n            type='submit'\n          >\n            <FormattedMessage id='continueBtn' defaultMessage='Continue' />\n          </Button>\n        </form>\n        \n        {loading && <p style={{\n          marginTop: \"15px\"\n        }}>Loading...</p>}\n        \n        {authError && <p style={{\n          marginTop: \"15px\"\n        }}> {intl.formatMessage({ id: 'userNotFound', defaultMessage: 'Invalid user/password' })}</p>}\n        \n        {error && !authError &&<p style={{\n          marginTop: \"15px\"\n        }}> {`${error?.message || error}. Please try again`}</p>}\n      \n        <Offer style={{ padding: '20px 0' }}>\n          <FormattedMessage\n            id='dontHaveAccount'\n            defaultMessage=\"Don't have any account?\"\n          />{' '}\n          <LinkButton onClick={toggleSignUpForm}>\n            <FormattedMessage id='signUpBtnText' defaultMessage='Sign Up' />\n          </LinkButton>\n        </Offer>\n      </Container>\n\n      <OfferSection>\n        <Offer>\n          <FormattedMessage\n            id='phoneVerifyText'\n            defaultMessage='Phone number not verified?'\n          />{' '}\n          <LinkButton onClick={togglePhoneVerificationForm}>\n            <FormattedMessage id='verifyNowText' defaultMessage='Verify Now' />\n          </LinkButton>\n        </Offer>\n      </OfferSection>\n\n      {/*<OfferSection>\n        <Offer>\n          <FormattedMessage\n            id='forgotPasswordText'\n            defaultMessage='Forgot your password?'\n          />{' '}\n          <LinkButton onClick={toggleForgotPassForm}>\n            <FormattedMessage id='resetText' defaultMessage='Reset It' />\n          </LinkButton>\n        </Offer>\n      </OfferSection>*/}\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}