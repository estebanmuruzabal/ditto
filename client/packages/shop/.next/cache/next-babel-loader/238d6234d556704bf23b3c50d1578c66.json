{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/humidity-logs-graph/humidity-logs-graph.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { SearchWrapper } from './humidity-logs-graph.style';\nimport GraphChart from 'components/graph-chart/graph-chart';\n\nvar HumidityLogsGraph = function HumidityLogsGraph(_ref) {\n  var data = _ref.data,\n      props = _objectWithoutProperties(_ref, [\"data\"]);\n\n  console.log(data);\n  JSON.stringify(data);\n  var humidities = [];\n  var times = [];\n  Object.keys(data).forEach(function (key, index) {\n    if (data[key].humidity >= 0 || data[key].humidity <= 100) humidities.push(data[key].humidity);\n    var trimed = data[key].timestamp.substring(0, data[key].timestamp.length - 6);\n    times.push(data[key].timestamp);\n  });\n  console.log('times', times);\n  console.log('humidities', humidities);\n  return __jsx(SearchWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(GraphChart // widgetTitle='Humidity history'\n  , {\n    colors: ['#6571f0'],\n    series: humidities.slice(Math.max(humidities.length - 5, 0)),\n    labels: times.slice(Math.max(times.length - 5, 0)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = HumidityLogsGraph;\nexport default HumidityLogsGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"HumidityLogsGraph\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/humidity-logs-graph/humidity-logs-graph.tsx"],"names":["React","SearchWrapper","GraphChart","HumidityLogsGraph","data","props","console","log","JSON","stringify","humidities","times","Object","keys","forEach","key","index","humidity","push","trimed","timestamp","substring","length","slice","Math","max"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAmD,OAAnD;AAGA,SAAQC,aAAR,QAA8C,6BAA9C;AAGA,OAAOC,UAAP,MAAuB,oCAAvB;;AAMA,IAAMC,iBAAkC,GAAG,SAArCA,iBAAqC,OAAyB;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,MAAbC,KAAa;;AAClEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAI,EAAAA,IAAI,CAACC,SAAL,CAAeL,IAAf;AACA,MAAIM,UAAU,GAAG,EAAjB;AACA,MAAIC,KAAK,GAAG,EAAZ;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYT,IAAZ,EAAkBU,OAAlB,CAA0B,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC9C,QAAIZ,IAAI,CAACW,GAAD,CAAJ,CAAUE,QAAV,IAAsB,CAAtB,IAA2Bb,IAAI,CAACW,GAAD,CAAJ,CAAUE,QAAV,IAAsB,GAArD,EAA0DP,UAAU,CAACQ,IAAX,CAAgBd,IAAI,CAACW,GAAD,CAAJ,CAAUE,QAA1B;AAC1D,QAAIE,MAAM,GAAGf,IAAI,CAACW,GAAD,CAAJ,CAAUK,SAAV,CAAoBC,SAApB,CAA8B,CAA9B,EAAiCjB,IAAI,CAACW,GAAD,CAAJ,CAAUK,SAAV,CAAoBE,MAApB,GAA6B,CAA9D,CAAb;AAEAX,IAAAA,KAAK,CAACO,IAAN,CAAWd,IAAI,CAACW,GAAD,CAAJ,CAAUK,SAArB;AAEH,GANC;AAOAd,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,KAArB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,UAA1B;AACA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,CACE;AADF;AAEE,IAAA,MAAM,EAAE,CAAC,SAAD,CAFV;AAGE,IAAA,MAAM,EAAEA,UAAU,CAACa,KAAX,CAAiBC,IAAI,CAACC,GAAL,CAASf,UAAU,CAACY,MAAX,GAAoB,CAA7B,EAAgC,CAAhC,CAAjB,CAHV;AAIE,IAAA,MAAM,EAAEX,KAAK,CAACY,KAAN,CAAYC,IAAI,CAACC,GAAL,CAASd,KAAK,CAACW,MAAN,GAAe,CAAxB,EAA2B,CAA3B,CAAZ,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CAxBD;;KAAMnB,iB;AA0BN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { SearchBox } from 'components/search-box/search-box';\nimport Router,{ useRouter } from 'next/router';\nimport {SearchWrapper, SearchResultWrap} from './humidity-logs-graph.style';\nimport { IHumidityLogs } from 'utils/types';\nimport LineChart from 'components/line-chart/line-chart';\nimport GraphChart from 'components/graph-chart/graph-chart';\n\ninterface Props {\n  data?: IHumidityLogs;\n}\n\nconst HumidityLogsGraph: React.FC<Props> = ({ data, ...props  }) => {\n  console.log(data)\n  JSON.stringify(data)\n  let humidities = [];\n  let times = [];\n  Object.keys(data).forEach(function (key, index) {\n    if (data[key].humidity >= 0 || data[key].humidity <= 100) humidities.push(data[key].humidity);\n    let trimed = data[key].timestamp.substring(0, data[key].timestamp.length - 6);\n\n    times.push(data[key].timestamp);\n    \n});\n  console.log('times', times)\n  console.log('humidities', humidities)\n  return (\n    <SearchWrapper>\n      <GraphChart\n        // widgetTitle='Humidity history'\n        colors={['#6571f0']}\n        series={humidities.slice(Math.max(humidities.length - 5, 0))}\n        labels={times.slice(Math.max(times.length - 5, 0))}\n      />\n    </SearchWrapper>\n  );\n};\n\nexport default HumidityLogsGraph;\n"]},"metadata":{},"sourceType":"module"}