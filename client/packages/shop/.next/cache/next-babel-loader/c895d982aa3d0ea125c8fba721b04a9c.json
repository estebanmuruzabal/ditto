{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { BannerIcon, BannerText, DeliveryMethods, LocationContent, MethodOption, SubHeaderWrapper } from './sub-header.style';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\n\nconst LocationMenu = ({\n  cityAndStateText,\n  onClick,\n  deliveryMethodSelected\n}) => {\n  return __jsx(LocationContent, {\n    onClick: onClick\n  }, __jsx(\"i\", {\n    class: \"ld ld-ChevronUp ml2 dn db-m\",\n    \"aria-hidden\": \"true\"\n  }), deliveryMethodSelected, \"|\", __jsx(BannerIcon, null, __jsx(\"img\", {\n    src: DeliveryIcon,\n    alt: \"\"\n  })), __jsx(BannerText, null, cityAndStateText && cityAndStateText));\n};\n\nconst DeliveryMethodsView = ({\n  cityAndStateText,\n  onClick\n}) => {\n  return __jsx(DeliveryMethods, null, __jsx(MethodOption, {\n    onClick: () => onClick('Pickup')\n  }, \"Pickup\"), __jsx(MethodOption, {\n    onClick: () => onClick('Delivery')\n  }, \"Delivery\"));\n};\n\nconst SubHeader = (_ref) => {\n  let props = Object.assign({}, _ref);\n  const {\n    location\n  } = useLocale();\n  const mobile = useMedia('(max-width: 580px)');\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState('');\n  const cityAndStateText = location ? mobile ? `${location.split(', ')[1]}, ${location.split(', ')[2]}` : `${location.split(', ')[0]}, ${location.split(', ')[1]}` : '';\n  console.log('location', location);\n  return __jsx(SubHeaderWrapper, {\n    className: props.className,\n    id: \"layout-header\"\n  }, __jsx(PopoverBigger, {\n    direction: \"left\",\n    className: \"user-pages-dropdown\",\n    handler: __jsx(LocationMenu, {\n      onClick: () => null,\n      deliveryMethodSelected: deliveryMethodSelected,\n      cityAndStateText: cityAndStateText\n    }),\n    content: __jsx(DeliveryMethodsView, {\n      onClick: setDeliveryMethod,\n      cityAndStateText: cityAndStateText\n    })\n  }));\n};\n\nexport default SubHeader;","map":null,"metadata":{},"sourceType":"module"}