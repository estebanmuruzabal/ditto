{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport { BannerIcon, BannerText, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, LocationContent, Offer, OfferSection, Options, SubHeaderWrapper, Wrapper } from './sub-header.style';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { GiftBox } from 'assets/icons/GiftBox';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\nconst LocationMenu = ({\n  deliveryMethodSaved,\n  isOpen\n}) => {\n  var _deliveryMethodSaved$, _deliveryMethodSaved$2, _deliveryMethodSaved$3, _deliveryMethodSaved$4, _deliveryMethodSaved$5, _deliveryMethodSaved$6, _deliveryMethodSaved$7, _deliveryMethodSaved$8, _deliveryMethodSaved$9;\n\n  const mobile = useMedia('(max-width: 580px)');\n  const address = mobile ? deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$ = deliveryMethodSaved.details) === null || _deliveryMethodSaved$ === void 0 ? void 0 : (_deliveryMethodSaved$2 = _deliveryMethodSaved$.split('|')) === null || _deliveryMethodSaved$2 === void 0 ? void 0 : _deliveryMethodSaved$2[0].substring(0, (deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$3 = deliveryMethodSaved.details) === null || _deliveryMethodSaved$3 === void 0 ? void 0 : (_deliveryMethodSaved$4 = _deliveryMethodSaved$3.split('|')) === null || _deliveryMethodSaved$4 === void 0 ? void 0 : (_deliveryMethodSaved$5 = _deliveryMethodSaved$4[0]) === null || _deliveryMethodSaved$5 === void 0 ? void 0 : _deliveryMethodSaved$5.length) - 6) : deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$6 = deliveryMethodSaved.details) === null || _deliveryMethodSaved$6 === void 0 ? void 0 : (_deliveryMethodSaved$7 = _deliveryMethodSaved$6.split('|')) === null || _deliveryMethodSaved$7 === void 0 ? void 0 : _deliveryMethodSaved$7[0];\n  const time = deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$8 = deliveryMethodSaved.details) === null || _deliveryMethodSaved$8 === void 0 ? void 0 : (_deliveryMethodSaved$9 = _deliveryMethodSaved$8.split('|')) === null || _deliveryMethodSaved$9 === void 0 ? void 0 : _deliveryMethodSaved$9[1];\n  const intl = useIntl();\n  const defaultText = intl.formatMessage({\n    id: 'defaultDeliveryPickupText',\n    defaultMessage: 'check here'\n  });\n  return __jsx(LocationContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, isOpen ? __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleDown,\n    className: \"fas fa-chevron-down\",\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleUp,\n    className: \"fas fa-chevron-up\",\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }\n  }), __jsx(DeliveryText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, deliveryMethodSaved ? (deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.isPickUp) ? DeliveryMethodsConstants.PICKUP : DeliveryMethodsConstants.DELIVERY : defaultText), (deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.name) && address && __jsx(React.Fragment, null, \"|\", __jsx(BannerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: DeliveryIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  })), __jsx(BannerText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, `${deliveryMethodSaved.name} - ${address}`)));\n};\n\nconst SubHeader = (_ref) => {\n  var _deliverData$delivery;\n\n  let props = Object.assign({}, _ref);\n  const {\n    location\n  } = useLocale();\n  const mobile = useMedia('(max-width: 580px)');\n  const intl = useIntl();\n  const [deliveryMethodTypeSelected, setDeliveryMethodType] = React.useState();\n  const [deliveryMethodSaved, setDeliveryMethodSaved] = React.useState();\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(undefined);\n  const {\n    data: deliverData\n  } = useQuery(DELIVERY_METHOD);\n  const deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items;\n  const {\n    0: address,\n    1: setDeliveryAddress\n  } = useState(\"\");\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  useEffect(() => {\n    if (getCookie('deliveryMethodSaved') && !deliveryMethodSaved) {\n      const deliveryMethodSaved = JSON.parse(getCookie('deliveryMethodSaved'));\n      setDeliveryMethodSaved(deliveryMethodSaved);\n    }\n  }, []);\n\n  const setDeliveryMethodAndSaveCookie = deli => {\n    setDeliveryMethod(deli);\n    setDeliveryMethodSaved(deli); // if (getCookie('first_visit')) {\n\n    setCookie('deliveryMethodSaved', deli); // }\n  };\n\n  const handleSelect = address => {\n    geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => {\n      console.log('Success', latLng);\n      setDeliveryAddress(address);\n    }).catch(error => console.error('Error', error));\n  };\n\n  const isPointInPolygon = (latitude, longitude, polygon) => {\n    if (typeof latitude !== 'number' || typeof longitude !== 'number') {\n      throw new TypeError('Invalid latitude or longitude. Numbers are expected');\n    } else if (!polygon || !Array.isArray(polygon)) {\n      throw new TypeError('Invalid polygon. Array with locations expected');\n    } else if (polygon.length === 0) {\n      throw new TypeError('Invalid polygon. Non-empty Array expected');\n    }\n\n    const x = latitude;\n    const y = longitude;\n    let inside = false;\n\n    for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n      const xi = polygon[i][0];\n      const yi = polygon[i][1];\n      const xj = polygon[j][0];\n      const yj = polygon[j][1];\n      const intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  };\n\n  const dogsBeachPolygon = [{\n    latitude: 32.7502030,\n    longitude: -117.2432460\n  }, {\n    latitude: 32.7489451,\n    longitude: -117.2523153\n  }, {\n    latitude: 32.7541973,\n    longitude: -117.2525931\n  }, {\n    latitude: 32.7542674,\n    longitude: -117.2460937\n  }];\n  console.log('isInside:', isPointInPolygon(32.7449888, -117.2263579, dogsBeachPolygon));\n\n  const searchDeliveryZipCode = (e, deli) => {\n    handleOnFocus(e);\n    setZipCode(deli);\n    const deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n      return !deliveryMethod.isPickUp;\n    });\n    const methodFound = deliveryOptionsMethods.filter(method => method.details.includes(zipCode));\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : null);\n  };\n\n  const searchPickupZipCode = (e, deli) => {\n    handleOnFocus(e);\n    setZipCode(deli);\n    const pickUpOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n    const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode));\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : null);\n  };\n\n  const setDelivery = (e, deli) => {\n    e.stopPropagation();\n    setDeliveryMethodType(deli);\n    setSearchResult(null);\n    setZipCode('');\n  };\n\n  const handleOnFocus = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }; // deliveryMethodSelected\n\n\n  const isPickUpSelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  return __jsx(SubHeaderWrapper, {\n    className: props.className,\n    id: \"layout-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverBigger, {\n    direction: \"left\",\n    className: \"user-pages-dropdown\",\n    openHandler: __jsx(LocationMenu, {\n      isOpen: false,\n      deliveryMethodSaved: deliveryMethodSaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 22\n      }\n    }),\n    closeHandler: __jsx(LocationMenu, {\n      isOpen: true,\n      deliveryMethodSaved: deliveryMethodSaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 23\n      }\n    }),\n    content: __jsx(DeliveryMethods, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, __jsx(Options, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, __jsx(CardWrapper, {\n      color: isPickUpSelected ? '#0d1136' : '#e4f4fc',\n      onClick: e => setDelivery(e, DeliveryMethodsConstants.PICKUP),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, \"Pickup\"), __jsx(CardWrapper, {\n      color: isDeliverySelected ? '#0d1136' : '#e4f4fc',\n      onClick: e => setDelivery(e, DeliveryMethodsConstants.DELIVERY),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, \"Delivery\")), __jsx(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, __jsx(Heading, {\n      onClick: e => handleOnFocus(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, isPickUpSelected ? __jsx(FormattedMessage, {\n      id: \"pickupModalheading\",\n      defaultMessage: \"Select Your Location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }) : __jsx(FormattedMessage, {\n      id: \"deliveryModalheading\",\n      defaultMessage: \"Select Your Location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      onClick: e => handleOnFocus(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, __jsx(Input, {\n      type: \"text\",\n      name: \"name\",\n      onFocus: e => handleOnFocus(e),\n      placeholder: \"Enter zip code\",\n      value: zipCode // we have to change the onChange because the is no one for the controller name actualy\n      ,\n      onChange: e => isPickUpSelected ? searchPickupZipCode(e, e.target.value) : searchDeliveryZipCode(e, e.target.value),\n      width: \"197px\",\n      height: \"34.5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }), __jsx(PlacesAutocomplete, {\n      value: address,\n      onChange: e => setDeliveryAddress(e),\n      onSelect: handleSelect,\n      searchOptions: {\n        types: [],\n        componentRestrictions: {\n          country: \"us\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    }, __jsx(\"input\", _extends({}, getInputProps({\n      placeholder: \"Enter address\",\n      className: \"location-search-input\",\n      style: {\n        display: 'block',\n        width: '220px',\n        padding: '0px 8px',\n        appearance: 'none',\n        fontFamily: `'Lato', sans-serif`,\n        fontSize: 'base',\n        lineHeight: 'inherit',\n        border: '1px solid',\n        borderColor: '#f1f1f1',\n        borderRadius: '3px',\n        backgroundColor: 'white',\n        color: 'text.bold',\n        height: '48px',\n        transition: 'all 0.25s ease',\n        // mb: 3,\n        '&:focus': {\n          borderColor: '#009E7F'\n        }\n      }\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, loading && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 39\n      }\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const style = suggestion.active ? {\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n      } : {\n        backgroundColor: \"#ffffff\",\n        cursor: \"pointer\"\n      };\n      return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n        style\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 31\n        }\n      }), suggestion.description);\n    }))))), (searchResult === null || searchResult === void 0 ? void 0 : searchResult.length) === 0 && zipCode.length > 4 && __jsx(DeliveryText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 20\n      }\n    }, deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP ? 'No Dittos Pickup Locations found, yet, sorry' : 'Sorry, we dont deliver there, yet..'), (searchResult === null || searchResult === void 0 ? void 0 : searchResult.length) ? searchResult.map((result, i) => {\n      return __jsx(Checkbox, {\n        keyName: `${i}-results`,\n        isChecked: (deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === result.id,\n        labelText: `${result.name} - ${result.details}`,\n        id: `result-${i}`,\n        onChange: e => {\n          setDeliveryMethodAndSaveCookie((deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === result.id ? null : result);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 23\n        }\n      });\n    }) : ''), __jsx(OfferSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 15\n      }\n    }, __jsx(GiftBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }), __jsx(Offer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"locationModalFooter\",\n      defaultMessage: \"Free Delivery For 1st Order\",\n      values: {\n        number: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 19\n      }\n    }))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SubHeader;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx"],"names":["React","useState","useEffect","BannerIcon","BannerText","CardWrapper","Container","DeliveryMethods","DeliveryText","Heading","Input","LocationContent","Offer","OfferSection","Options","SubHeaderWrapper","Wrapper","useLocale","DeliveryIcon","useMedia","FormattedMessage","useIntl","PopoverBigger","FontAwesomeIcon","faChevronCircleDown","faChevronCircleUp","DeliveryMethodsConstants","useQuery","DELIVERY_METHOD","GiftBox","Checkbox","getCookie","setCookie","PlacesAutocomplete","geocodeByAddress","getLatLng","LocationMenu","deliveryMethodSaved","isOpen","mobile","address","details","split","substring","length","time","intl","defaultText","formatMessage","id","defaultMessage","color","isPickUp","PICKUP","DELIVERY","name","SubHeader","props","location","deliveryMethodTypeSelected","setDeliveryMethodType","setDeliveryMethodSaved","deliveryMethodSelected","setDeliveryMethod","undefined","data","deliverData","deliveryMethods","items","setDeliveryAddress","zipCode","setZipCode","searchResult","setSearchResult","JSON","parse","setDeliveryMethodAndSaveCookie","deli","handleSelect","then","results","latLng","console","log","catch","error","isPointInPolygon","latitude","longitude","polygon","TypeError","Array","isArray","x","y","inside","i","j","xi","yi","xj","yj","intersect","dogsBeachPolygon","searchDeliveryZipCode","e","handleOnFocus","deliveryOptionsMethods","filter","deliveryMethod","methodFound","method","includes","stopPropagation","searchPickupZipCode","pickUpOptionsMethods","setDelivery","event","preventDefault","isPickUpSelected","isDeliverySelected","className","target","value","types","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","style","display","width","padding","appearance","fontFamily","fontSize","lineHeight","border","borderColor","borderRadius","backgroundColor","height","transition","map","suggestion","active","cursor","description","result","number"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA+D,OAA/D;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAyCC,WAAzC,EAAsDC,SAAtD,EAAiEC,eAAjE,EAAkFC,YAAlF,EAAgGC,OAAhG,EAAyGC,KAAzG,EAAgHC,eAAhH,EAA+IC,KAA/I,EAAsJC,YAAtJ,EAAoKC,OAApK,EAA6KC,gBAA7K,EAA+LC,OAA/L,QAA8M,oBAA9M;AAEA,SAASC,SAAT,QAA0B,qCAA1B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,YAA1C;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AAIA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAAkBC,mBAAlB,EAAuCC,iBAAvC,QAAyE,mCAAzE;AACA,SAASC,wBAAT,QAAyC,gBAAzC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,eAArC;AACA,OAAOC,kBAAP,IAA6BC,gBAA7B,EAA+CC,SAA/C,QAAgE,2BAAhE;;AAOA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,mBAAF;AAAuBC,EAAAA;AAAvB,CAAD,KAAqC;AAAA;;AACxD,QAAMC,MAAM,GAAGpB,QAAQ,CAAC,oBAAD,CAAvB;AACA,QAAMqB,OAAO,GAAGD,MAAM,GAClBF,mBADkB,aAClBA,mBADkB,gDAClBA,mBAAmB,CAAEI,OADH,oFAClB,sBAA8BC,KAA9B,CAAoC,GAApC,CADkB,2DAClB,uBAA2C,CAA3C,EAA8CC,SAA9C,CAAwD,CAAxD,EAA2D,CAAAN,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,sCAAAA,mBAAmB,CAAEI,OAArB,4GAA8BC,KAA9B,CAAoC,GAApC,6GAA2C,CAA3C,mFAA+CE,MAA/C,IAAwD,CAAnH,CADkB,GAElBP,mBAFkB,aAElBA,mBAFkB,iDAElBA,mBAAmB,CAAEI,OAFH,qFAElB,uBAA8BC,KAA9B,CAAoC,GAApC,CAFkB,2DAElB,uBAA2C,CAA3C,CAFJ;AAGA,QAAMG,IAAI,GAAGR,mBAAH,aAAGA,mBAAH,iDAAGA,mBAAmB,CAAEI,OAAxB,qFAAG,uBAA8BC,KAA9B,CAAoC,GAApC,CAAH,2DAAG,uBAA2C,CAA3C,CAAb;AAEA,QAAMI,IAAI,GAAGzB,OAAO,EAApB;AAEA,QAAM0B,WAAW,GAAGD,IAAI,CAACE,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE,2BAAN;AAAmCC,IAAAA,cAAc,EAAE;AAAnD,GAAnB,CAApB;AACA,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMZ,MAAM,GACH,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEd,mBAAvB;AAA4C,IAAA,SAAS,EAAC,qBAAtD;AAA4E,IAAA,KAAK,EAAE;AAAE2B,MAAAA,KAAK,EAAE;AAAT,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAEH,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAE1B,iBAAvB;AAA0C,IAAA,SAAS,EAAC,mBAApD;AAAwE,IAAA,KAAK,EAAE;AAAE0B,MAAAA,KAAK,EAAE;AAAT,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHT,EAQI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAed,mBAAmB,GAAG,CAAAA,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,YAAAA,mBAAmB,CAAEe,QAArB,IAAgC1B,wBAAwB,CAAC2B,MAAzD,GAAkE3B,wBAAwB,CAAC4B,QAA9F,GAAyGP,WAA3I,CARJ,EASM,CAAAV,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,YAAAA,mBAAmB,CAAEkB,IAArB,KAA6Bf,OAA7B,IACA,iCAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY;AAAK,IAAA,GAAG,EAAEtB,YAAV;AAAwB,IAAA,GAAG,EAAC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,CAFF,EAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAc,GAAEmB,mBAAmB,CAACkB,IAAK,MAAKf,OAAQ,EAAtD,CAHF,CAVN,CADF;AAmBD,CA7BD;;AAgCA,MAAMgB,SAA0B,GAAG,UAAmB;AAAA;;AAAA,MAAbC,KAAa;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAezC,SAAS,EAA9B;AACA,QAAMsB,MAAM,GAAGpB,QAAQ,CAAC,oBAAD,CAAvB;AACA,QAAM2B,IAAI,GAAGzB,OAAO,EAApB;AACA,QAAM,CAACsC,0BAAD,EAA6BC,qBAA7B,IAAsD5D,KAAK,CAACC,QAAN,EAA5D;AACA,QAAM,CAACoC,mBAAD,EAAsBwB,sBAAtB,IAAgD7D,KAAK,CAACC,QAAN,EAAtD;AACA,QAAM,CAAC6D,sBAAD,EAAyBC,iBAAzB,IAA8C/D,KAAK,CAACC,QAAN,CAAe+D,SAAf,CAApD;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAwBvC,QAAQ,CAACC,eAAD,CAAtC;AACA,QAAMuC,eAAe,GAAGD,WAAH,aAAGA,WAAH,gDAAGA,WAAW,CAAEC,eAAhB,0DAAG,sBAA8BC,KAAtD;AACA,QAAM;AAAA,OAAC5B,OAAD;AAAA,OAAU6B;AAAV,MAAgCpE,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqE,OAAD,EAAUC,UAAV,IAAwBvE,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACuE,YAAD,EAAeC,eAAf,IAAkCzE,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,SAAS,CAAC,qBAAD,CAAT,IAAoC,CAACM,mBAAzC,EAA8D;AAC5D,YAAMA,mBAAmB,GAAGqC,IAAI,CAACC,KAAL,CAAW5C,SAAS,CAAC,qBAAD,CAApB,CAA5B;AACA8B,MAAAA,sBAAsB,CAACxB,mBAAD,CAAtB;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMuC,8BAA8B,GAAKC,IAAD,IAAU;AAChDd,IAAAA,iBAAiB,CAACc,IAAD,CAAjB;AACAhB,IAAAA,sBAAsB,CAACgB,IAAD,CAAtB,CAFgD,CAGhD;;AACE7C,IAAAA,SAAS,CAAC,qBAAD,EAAwB6C,IAAxB,CAAT,CAJ8C,CAKhD;AACD,GAND;;AAQA,QAAMC,YAAY,GAAGtC,OAAO,IAAI;AAC9BN,IAAAA,gBAAgB,CAACM,OAAD,CAAhB,CACGuC,IADH,CACQC,OAAO,IAAI7C,SAAS,CAAC6C,OAAO,CAAC,CAAD,CAAR,CAD5B,EAEGD,IAFH,CAEQE,MAAM,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACAZ,MAAAA,kBAAkB,CAAC7B,OAAD,CAAlB;AACD,KALH,EAMG4C,KANH,CAMSC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CANlB;AAQD,GATD;;AAWA,QAAMC,gBAAgB,GAAG,CAACC,QAAD,EAAWC,SAAX,EAAsBC,OAAtB,KAAkC;AACzD,QAAI,OAAOF,QAAP,KAAoB,QAApB,IAAgC,OAAOC,SAAP,KAAqB,QAAzD,EAAmE;AACjE,YAAM,IAAIE,SAAJ,CAAc,qDAAd,CAAN;AACD,KAFD,MAEO,IAAI,CAACD,OAAD,IAAY,CAACE,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAjB,EAAyC;AAC9C,YAAM,IAAIC,SAAJ,CAAc,gDAAd,CAAN;AACD,KAFM,MAEA,IAAID,OAAO,CAAC7C,MAAR,KAAmB,CAAvB,EAA0B;AAC/B,YAAM,IAAI8C,SAAJ,CAAc,2CAAd,CAAN;AACD;;AAED,UAAMG,CAAC,GAAGN,QAAV;AAAoB,UAAMO,CAAC,GAAGN,SAAV;AAEpB,QAAIO,MAAM,GAAG,KAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGR,OAAO,CAAC7C,MAAR,GAAiB,CAArC,EAAwCoD,CAAC,GAAGP,OAAO,CAAC7C,MAApD,EAA4DqD,CAAC,GAAGD,CAAC,EAAjE,EAAqE;AACnE,YAAME,EAAE,GAAGT,OAAO,CAACO,CAAD,CAAP,CAAW,CAAX,CAAX;AAA0B,YAAMG,EAAE,GAAGV,OAAO,CAACO,CAAD,CAAP,CAAW,CAAX,CAAX;AAC1B,YAAMI,EAAE,GAAGX,OAAO,CAACQ,CAAD,CAAP,CAAW,CAAX,CAAX;AAA0B,YAAMI,EAAE,GAAGZ,OAAO,CAACQ,CAAD,CAAP,CAAW,CAAX,CAAX;AAE1B,YAAMK,SAAS,GAAKH,EAAE,GAAGL,CAAN,KAAcO,EAAE,GAAGP,CAApB,IACTD,CAAC,GAAG,CAACO,EAAE,GAAGF,EAAN,KAAaJ,CAAC,GAAGK,EAAjB,KAAwBE,EAAE,GAAGF,EAA7B,IAAmCD,EADhD;AAEA,UAAII,SAAJ,EAAeP,MAAM,GAAG,CAACA,MAAV;AAChB;;AAED,WAAOA,MAAP;AACD,GAtBD;;AAwBA,QAAMQ,gBAAgB,GAAG,CACvB;AAAEhB,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,SAAS,EAAE,CAAC;AAApC,GADuB,EAEvB;AAAED,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,SAAS,EAAE,CAAC;AAApC,GAFuB,EAGvB;AAAED,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,SAAS,EAAE,CAAC;AAApC,GAHuB,EAIvB;AAAED,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,SAAS,EAAE,CAAC;AAApC,GAJuB,CAAzB;AAOAN,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBG,gBAAgB,CAAC,UAAD,EAAa,CAAC,WAAd,EAA2BiB,gBAA3B,CAAzC;;AAEA,QAAMC,qBAAqB,GAAI,CAACC,CAAD,EAAI5B,IAAJ,KAAa;AAC1C6B,IAAAA,aAAa,CAACD,CAAD,CAAb;AACAlC,IAAAA,UAAU,CAACM,IAAD,CAAV;AACA,UAAM8B,sBAAsB,GAAGxC,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAEyC,MAAjB,CAAwBC,cAAc,IAAI;AACvE,aAAO,CAACA,cAAc,CAACzD,QAAvB;AACD,KAF8B,CAA/B;AAIA,UAAM0D,WAAW,GAAGH,sBAAsB,CAACC,MAAvB,CAA8BG,MAAM,IAAIA,MAAM,CAACtE,OAAP,CAAeuE,QAAf,CAAwB1C,OAAxB,CAAxC,CAApB;AAEAmC,IAAAA,CAAC,CAACQ,eAAF;AACAxC,IAAAA,eAAe,CAACI,IAAI,GAAGiC,WAAH,GAAiB,IAAtB,CAAf;AACD,GAXD;;AAaA,QAAMI,mBAAmB,GAAI,CAACT,CAAD,EAAI5B,IAAJ,KAAa;AACxC6B,IAAAA,aAAa,CAACD,CAAD,CAAb;AACAlC,IAAAA,UAAU,CAACM,IAAD,CAAV;AACA,UAAMsC,oBAAoB,GAAGhD,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAEyC,MAAjB,CAAwBC,cAAc,IAAI;AACrE,aAAOA,cAAc,CAACzD,QAAf,KAA4B,IAAnC;AACD,KAF4B,CAA7B;AAIA,UAAM0D,WAAW,GAAGK,oBAAoB,CAACP,MAArB,CAA4BG,MAAM,IAAIA,MAAM,CAACtE,OAAP,CAAeuE,QAAf,CAAwB1C,OAAxB,CAAtC,CAApB;AAEAmC,IAAAA,CAAC,CAACQ,eAAF;AACAxC,IAAAA,eAAe,CAACI,IAAI,GAAGiC,WAAH,GAAiB,IAAtB,CAAf;AACD,GAXD;;AAaA,QAAMM,WAAW,GAAI,CAACX,CAAD,EAAI5B,IAAJ,KAAuC;AAC1D4B,IAAAA,CAAC,CAACQ,eAAF;AACArD,IAAAA,qBAAqB,CAACiB,IAAD,CAArB;AACAJ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GALD;;AAOA,QAAMmC,aAAa,GAAKW,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACJ,eAAN;AACD,GAHD,CAzGoD,CA8GpD;;;AACA,QAAMM,gBAAgB,GAAG5D,0BAA0B,KAAKjC,wBAAwB,CAAC2B,MAAjF;AACA,QAAMmE,kBAAkB,GAAG7D,0BAA0B,KAAKjC,wBAAwB,CAAC4B,QAAnF;AAEA,SACE,MAAC,gBAAD;AAAkB,IAAA,SAAS,EAAEG,KAAK,CAACgE,SAAnC;AAA8C,IAAA,EAAE,EAAC,eAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAGE,IAAA,WAAW,EAAE,MAAC,YAAD;AACX,MAAA,MAAM,EAAE,KADG;AACI,MAAA,mBAAmB,EAAEpF,mBADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHf;AAME,IAAA,YAAY,EAAE,MAAC,YAAD;AACZ,MAAA,MAAM,EAAE,IADI;AACE,MAAA,mBAAmB,EAAEA,mBADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANhB;AASE,IAAA,OAAO,EACL,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAa,MAAA,KAAK,EAAEkF,gBAAgB,GAAG,SAAH,GAAe,SAAnD;AAA8D,MAAA,OAAO,EAAGd,CAAD,IAAOW,WAAW,CAACX,CAAD,EAAI/E,wBAAwB,CAAC2B,MAA7B,CAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,WAAD;AAAa,MAAA,KAAK,EAAEmE,kBAAkB,GAAG,SAAH,GAAe,SAArD;AAAgE,MAAA,OAAO,EAAGf,CAAD,IAAOW,WAAW,CAACX,CAAD,EAAI/E,wBAAwB,CAAC4B,QAA7B,CAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CAFF,EAME,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAU,MAAA,OAAO,EAAGmD,CAAD,IAAOC,aAAa,CAACD,CAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIc,gBAAgB,GAChB,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,oBADL;AAEE,MAAA,cAAc,EAAC,sBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB,GAMhB,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,sBADL;AAEE,MAAA,cAAc,EAAC,sBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADF,EAoBE;AAAK,MAAA,OAAO,EAAGd,CAAD,IAAOC,aAAa,CAACD,CAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,KAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,OAAO,EAAGA,CAAD,IAAOC,aAAa,CAACD,CAAD,CAHjC;AAII,MAAA,WAAW,EAAC,gBAJhB;AAKI,MAAA,KAAK,EAAEnC,OALX,CAMI;AANJ;AAOI,MAAA,QAAQ,EAAGmC,CAAD,IAAOc,gBAAgB,GAAGL,mBAAmB,CAACT,CAAD,EAAIA,CAAC,CAACiB,MAAF,CAASC,KAAb,CAAtB,GAA4CnB,qBAAqB,CAACC,CAAD,EAAIA,CAAC,CAACiB,MAAF,CAASC,KAAb,CAPtG;AAQI,MAAA,KAAK,EAAC,OARV;AASI,MAAA,MAAM,EAAC,QATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAYE,MAAC,kBAAD;AACE,MAAA,KAAK,EAAEnF,OADT;AAEE,MAAA,QAAQ,EAAGiE,CAAD,IAAOpC,kBAAkB,CAACoC,CAAD,CAFrC;AAGE,MAAA,QAAQ,EAAE3B,YAHZ;AAIE,MAAA,aAAa,EAAE;AACb8C,QAAAA,KAAK,EAAE,EADM;AAEbC,QAAAA,qBAAqB,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAFV,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,CAAC;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA,WAAjB;AAA8BC,MAAAA,sBAA9B;AAAsDC,MAAAA;AAAtD,KAAD,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,4BACMH,aAAa,CAAC;AAChBI,MAAAA,WAAW,EAAE,eADG;AAEhBV,MAAAA,SAAS,EAAE,uBAFK;AAGhBW,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,OADJ;AAELC,QAAAA,KAAK,EAAE,OAFF;AAILC,QAAAA,OAAO,EAAC,SAJH;AAKLC,QAAAA,UAAU,EAAE,MALP;AAMLC,QAAAA,UAAU,EAAG,oBANR;AAOLC,QAAAA,QAAQ,EAAE,MAPL;AAQLC,QAAAA,UAAU,EAAE,SARP;AASLC,QAAAA,MAAM,EAAE,WATH;AAULC,QAAAA,WAAW,EAAE,SAVR;AAWLC,QAAAA,YAAY,EAAE,KAXT;AAYLC,QAAAA,eAAe,EAAE,OAZZ;AAaL5F,QAAAA,KAAK,EAAE,WAbF;AAcL6F,QAAAA,MAAM,EAAE,MAdH;AAeLC,QAAAA,UAAU,EAAE,gBAfP;AAgBL;AACA,mBAAW;AACTJ,UAAAA,WAAW,EAAE;AADJ;AAjBN;AAHS,KAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EA4BE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADd,EAEGF,WAAW,CAACkB,GAAZ,CAAiBC,UAAD,IAAgB;AAC/B,YAAMf,KAAK,GAAGe,UAAU,CAACC,MAAX,GACV;AAAEL,QAAAA,eAAe,EAAE,SAAnB;AAA8BM,QAAAA,MAAM,EAAE;AAAtC,OADU,GAEV;AAAEN,QAAAA,eAAe,EAAE,SAAnB;AAA8BM,QAAAA,MAAM,EAAE;AAAtC,OAFJ;AAGA,aACE,0BAASpB,sBAAsB,CAACkB,UAAD,EAAa;AAAEf,QAAAA;AAAF,OAAb,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGe,UAAU,CAACG,WADd,CADF;AAKD,KATA,CAFH,CA5BF,CAVJ,CAZF,CApBF,EAuFI,CAAA9E,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAE5B,MAAd,MAAyB,CAAzB,IAA8B0B,OAAO,CAAC1B,MAAR,GAAiB,CAA/C,IACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAee,0BAA0B,KAAKjC,wBAAwB,CAAC2B,MAAxD,GAAiE,8CAAjE,GAAkH,qCAAjI,CAxFL,EA0FG,CAAAmB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAE5B,MAAd,IAAuB4B,YAAY,CAAC0E,GAAb,CAAiB,CAACK,MAAD,EAASvD,CAAT,KAAe;AACtD,aACI,MAAC,QAAD;AACE,QAAA,OAAO,EAAG,GAAEA,CAAE,UADhB;AAEE,QAAA,SAAS,EAAE,CAAAlC,sBAAsB,SAAtB,IAAAA,sBAAsB,WAAtB,YAAAA,sBAAsB,CAAEb,EAAxB,MAA+BsG,MAAM,CAACtG,EAFnD;AAGE,QAAA,SAAS,EAAG,GAAEsG,MAAM,CAAChG,IAAK,MAAKgG,MAAM,CAAC9G,OAAQ,EAHhD;AAIE,QAAA,EAAE,EAAG,UAASuD,CAAE,EAJlB;AAKE,QAAA,QAAQ,EAAES,CAAC,IAAI;AACb7B,UAAAA,8BAA8B,CAAC,CAAAd,sBAAsB,SAAtB,IAAAA,sBAAsB,WAAtB,YAAAA,sBAAsB,CAAEb,EAAxB,MAA+BsG,MAAM,CAACtG,EAAtC,GAA2C,IAA3C,GAAkDsG,MAAnD,CAA9B;AACD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAWI,KAZkB,CAAvB,GAaM,EAvGT,CADF,EAkHE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,qBADL;AAEE,MAAA,cAAc,EAAC,6BAFjB;AAGE,MAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CAlHF,CANF,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAqJD,CAvQD;;AAyQA,eAAehG,SAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { BannerIcon, BannerText, Button, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, LocationContent, MethodOption, Offer, OfferSection, Options, SubHeaderWrapper, Wrapper } from './sub-header.style';\nimport { openModal } from '@redq/reuse-modal';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport Popover from 'components/popover/popover';\nimport { useMedia } from 'utils/use-media';\nimport { MenuItem } from 'layouts/header/menu/language-switcher/language-switcher.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport LocationModal from 'features/location-modal/location-modal';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from 'features/authentication-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faChevronCircleDown, faChevronCircleUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { GiftBox } from 'assets/icons/GiftBox';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\ninterface Props {\n  className: string\n}\n\n\nconst LocationMenu = ({ deliveryMethodSaved, isOpen }) => {\n  const mobile = useMedia('(max-width: 580px)');\n  const address = mobile \n    ? deliveryMethodSaved?.details?.split('|')?.[0].substring(0, deliveryMethodSaved?.details?.split('|')?.[0]?.length - 6)\n    : deliveryMethodSaved?.details?.split('|')?.[0]\n  const time = deliveryMethodSaved?.details?.split('|')?.[1]\n\n  const intl = useIntl();\n\n  const defaultText = intl.formatMessage({ id: 'defaultDeliveryPickupText', defaultMessage: 'check here' })\n  return (\n    <LocationContent>\n        { isOpen \n          ? (<FontAwesomeIcon icon={faChevronCircleDown} className=\"fas fa-chevron-down\" style={{ color: \"black\" }} />) \n          : (<FontAwesomeIcon icon={faChevronCircleUp} className=\"fas fa-chevron-up\" style={{ color: \"black\" }} />)\n        }\n        { \n\n        }\n        <DeliveryText>{deliveryMethodSaved ? deliveryMethodSaved?.isPickUp ? DeliveryMethodsConstants.PICKUP : DeliveryMethodsConstants.DELIVERY : defaultText}</DeliveryText>\n        { deliveryMethodSaved?.name && address && (\n          <>\n              |\n            <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>\n            <BannerText>{`${deliveryMethodSaved.name} - ${address}`}</BannerText>\n          </>\n        )}\n      </LocationContent>\n  );\n};\n\n\nconst SubHeader: React.FC<Props> = ({ ...props  }) => {\n  const { location } = useLocale();\n  const mobile = useMedia('(max-width: 580px)');\n  const intl = useIntl();\n  const [deliveryMethodTypeSelected, setDeliveryMethodType] = React.useState();\n  const [deliveryMethodSaved, setDeliveryMethodSaved] = React.useState();\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(undefined);\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  const [address, setDeliveryAddress] = useState(\"\");\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  \n  useEffect(() => {\n    if (getCookie('deliveryMethodSaved') && !deliveryMethodSaved) {\n      const deliveryMethodSaved = JSON.parse(getCookie('deliveryMethodSaved'));\n      setDeliveryMethodSaved(deliveryMethodSaved)\n    }\n  }, []);\n  \n  const setDeliveryMethodAndSaveCookie =  (deli) => {\n    setDeliveryMethod(deli)\n    setDeliveryMethodSaved(deli)\n    // if (getCookie('first_visit')) {\n      setCookie('deliveryMethodSaved', deli);\n    // }\n  };\n  \n  const handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        console.log('Success', latLng)\n        setDeliveryAddress(address)\n      })\n      .catch(error => console.error('Error', error));\n\n  };\n\n  const isPointInPolygon = (latitude, longitude, polygon) => {\n    if (typeof latitude !== 'number' || typeof longitude !== 'number') {\n      throw new TypeError('Invalid latitude or longitude. Numbers are expected')\n    } else if (!polygon || !Array.isArray(polygon)) {\n      throw new TypeError('Invalid polygon. Array with locations expected')\n    } else if (polygon.length === 0) {\n      throw new TypeError('Invalid polygon. Non-empty Array expected')\n    }\n  \n    const x = latitude; const y = longitude\n  \n    let inside = false\n    for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n      const xi = polygon[i][0]; const yi = polygon[i][1]\n      const xj = polygon[j][0]; const yj = polygon[j][1]\n  \n      const intersect = ((yi > y) !== (yj > y)) &&\n              (x < (xj - xi) * (y - yi) / (yj - yi) + xi)\n      if (intersect) inside = !inside\n    }\n  \n    return inside\n  };\n\n  const dogsBeachPolygon = [\n    { latitude: 32.7502030, longitude: -117.2432460},\n    { latitude: 32.7489451, longitude: -117.2523153},\n    { latitude: 32.7541973, longitude: -117.2525931},\n    { latitude: 32.7542674, longitude: -117.2460937},\n  ]\n\n  console.log('isInside:', isPointInPolygon(32.7449888, -117.2263579, dogsBeachPolygon))\n  \n  const searchDeliveryZipCode =  (e, deli) => {\n    handleOnFocus(e)\n    setZipCode(deli)\n    const deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      return !deliveryMethod.isPickUp;\n    });\n   \n    const methodFound = deliveryOptionsMethods.filter(method => method.details.includes(zipCode));\n\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : null)\n  };\n  \n  const searchPickupZipCode =  (e, deli) => {\n    handleOnFocus(e)\n    setZipCode(deli)\n    const pickUpOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n\n    const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode));\n\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : null)\n  };\n\n  const setDelivery =  (e, deli: DeliveryMethodsConstants) => {\n    e.stopPropagation();\n    setDeliveryMethodType(deli)\n    setSearchResult(null)\n    setZipCode('')\n  };\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  // deliveryMethodSelected\n  const isPickUpSelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n\n  return (\n    <SubHeaderWrapper className={props.className} id=\"layout-header\">\n      <PopoverBigger\n        direction=\"left\"\n        className=\"user-pages-dropdown\"\n        openHandler={<LocationMenu\n          isOpen={false} deliveryMethodSaved={deliveryMethodSaved} />\n        }\n        closeHandler={<LocationMenu\n          isOpen={true} deliveryMethodSaved={deliveryMethodSaved}/>\n        }\n        content={\n          <DeliveryMethods>\n      \n            <Options>\n              <CardWrapper color={isPickUpSelected ? '#0d1136' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.PICKUP)}>Pickup</CardWrapper> \n              <CardWrapper color={isDeliverySelected ? '#0d1136' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.DELIVERY)}>Delivery</CardWrapper> \n            </Options>\n            <Wrapper>\n              <Container>\n                <Heading  onClick={(e) => handleOnFocus(e)}>\n                  { isPickUpSelected ? (\n                    <FormattedMessage\n                      id=\"pickupModalheading\"\n                      defaultMessage=\"Select Your Location\"\n                    />\n                  ) : (\n                    <FormattedMessage\n                      id=\"deliveryModalheading\"\n                      defaultMessage=\"Select Your Location\"\n                    />\n                  )}\n                </Heading>\n                {/* <SubHeading>\n                  <FormattedMessage\n                    id=\"locationModalSubHeading\"\n                    defaultMessage=\"You have to select your location for deliver service perpous\"\n                  />\n                </SubHeading> */}\n                <div onClick={(e) => handleOnFocus(e)}>\n                <Input\n                    type='text'\n                    name='name'\n                    onFocus={(e) => handleOnFocus(e)}\n                    placeholder='Enter zip code'\n                    value={zipCode}\n                    // we have to change the onChange because the is no one for the controller name actualy\n                    onChange={(e) => isPickUpSelected ? searchPickupZipCode(e, e.target.value) : searchDeliveryZipCode(e, e.target.value)}\n                    width='197px'\n                    height='34.5px'\n                  />\n                  <PlacesAutocomplete\n                    value={address}\n                    onChange={(e) => setDeliveryAddress(e)}\n                    onSelect={handleSelect}\n                    searchOptions={{\n                      types: [],\n                      componentRestrictions: { country: \"us\" },\n                    }}\n                  >\n                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                      <div>\n                        <input\n                          {...getInputProps({\n                            placeholder: \"Enter address\",\n                            className: \"location-search-input\",\n                            style: {\n                              display: 'block',\n                              width: '220px',\n\n                              padding:'0px 8px',\n                              appearance: 'none',\n                              fontFamily: `'Lato', sans-serif`,\n                              fontSize: 'base',\n                              lineHeight: 'inherit',\n                              border: '1px solid',\n                              borderColor: '#f1f1f1',\n                              borderRadius: '3px',\n                              backgroundColor: 'white',\n                              color: 'text.bold',\n                              height: '48px',\n                              transition: 'all 0.25s ease',\n                              // mb: 3,\n                              '&:focus': {\n                                borderColor: '#009E7F',\n                              },\n                            },\n                          })}\n                        />\n                        <div className=\"autocomplete-dropdown-container\">\n                          {loading && <div>Loading...</div>}\n                          {suggestions.map((suggestion) => {\n                            const style = suggestion.active\n                              ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                              : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                            return (\n                              <div {...getSuggestionItemProps(suggestion, { style })}>\n                                {suggestion.description}\n                              </div>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    )}\n                  </PlacesAutocomplete>\n                </div>\n                { searchResult?.length === 0 && zipCode.length > 4 && (\n                   <DeliveryText>{deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP ? 'No Dittos Pickup Locations found, yet, sorry' : 'Sorry, we dont deliver there, yet..'}</DeliveryText>\n                )}\n                {searchResult?.length ? searchResult.map((result, i) => {\n                  return (\n                      <Checkbox\n                        keyName={`${i}-results`}\n                        isChecked={deliveryMethodSelected?.id === result.id}\n                        labelText={`${result.name} - ${result.details}`}\n                        id={`result-${i}`}\n                        onChange={e => {\n                          setDeliveryMethodAndSaveCookie(deliveryMethodSelected?.id === result.id ? null : result)\n                        }}\n\n                      />\n                    )}\n                  ) : ('')\n                }\n              </Container>\n              {/* <Button\n                  fullwidth\n                  radius={100}\n                  onClick={null}\n                >\n                  <FormattedMessage id='con' defaultMessage='Save' />\n                </Button> */}\n              <OfferSection>\n                <GiftBox />\n                <Offer>\n                  <FormattedMessage\n                    id=\"locationModalFooter\"\n                    defaultMessage=\"Free Delivery For 1st Order\"\n                    values={{ number: 1 }}\n                  />\n                </Offer>\n              </OfferSection>\n            </Wrapper>\n        </DeliveryMethods>\n        }\n      />\n  </SubHeaderWrapper>\n  );\n\n};\n\nexport default SubHeader;\n"]},"metadata":{},"sourceType":"module"}