{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { BannerIcon, BannerText, DeliveryMethods, LocationContent, MethodOption, SubHeaderWrapper } from './sub-header.style';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { AuthContext } from 'contexts/auth/auth.context';\n\nconst LocationMenu = ({\n  cityAndStateText,\n  onClick,\n  deliveryMethodSelected\n}) => {\n  return __jsx(LocationContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"i\", {\n    class: \"ld ld-ChevronUp ml2 dn db-m\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), deliveryMethodSelected, \"|\", __jsx(BannerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: DeliveryIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  })), __jsx(BannerText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, cityAndStateText && cityAndStateText));\n};\n\nconst DeliveryMethodsView = ({\n  cityAndStateText,\n  setDeliveryMethod,\n  openLocationModal\n}) => {\n  return __jsx(DeliveryMethods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    onClick: () => openLocationModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Find the closest DittoFarm\"), __jsx(MethodOption, {\n    onClick: () => setDeliveryMethod('Pickup'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Pickup\"), __jsx(MethodOption, {\n    onClick: () => setDeliveryMethod('Delivery'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Delivery\"));\n};\n\nconst SubHeader = (_ref) => {\n  let props = Object.assign({}, _ref);\n  const {\n    location\n  } = useLocale();\n  const mobile = useMedia('(max-width: 580px)');\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState('');\n  const {\n    authDispatch\n  } = useContext(AuthContext);\n  const cityAndStateText = location ? mobile ? `${location.split(', ')[1]}, ${location.split(', ')[2]}` : `${location.split(', ')[0]}, ${location.split(', ')[1]}` : '';\n\n  const openLocationModal = () => {\n    authDispatch({\n      type: 'LOCATION_MODAL'\n    });\n  };\n\n  console.log('location', location);\n  return __jsx(SubHeaderWrapper, {\n    className: props.className,\n    id: \"layout-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverBigger, {\n    direction: \"left\",\n    className: \"user-pages-dropdown\",\n    handler: __jsx(LocationMenu, {\n      deliveryMethodSelected: deliveryMethodSelected,\n      cityAndStateText: cityAndStateText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }\n    }),\n    content: __jsx(DeliveryMethodsView, {\n      setDeliveryMethod: setDeliveryMethod,\n      cityAndStateText: cityAndStateText,\n      openLocationModal: openLocationModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 18\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SubHeader;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx"],"names":["React","useContext","BannerIcon","BannerText","DeliveryMethods","LocationContent","MethodOption","SubHeaderWrapper","useLocale","DeliveryIcon","useMedia","PopoverBigger","AuthContext","LocationMenu","cityAndStateText","onClick","deliveryMethodSelected","DeliveryMethodsView","setDeliveryMethod","openLocationModal","SubHeader","props","location","mobile","useState","authDispatch","split","type","console","log","className"],"mappings":";;AAAA,OAAOA,KAAP,IAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,eAAjC,EAAkDC,eAAlD,EAAmEC,YAAnE,EAAiFC,gBAAjF,QAAyG,oBAAzG;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AAGA,OAAOC,aAAP,MAA0B,0CAA1B;AAEA,SAASC,WAAT,QAA4B,4BAA5B;;AAMA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA,OAApB;AAA6BC,EAAAA;AAA7B,CAAD,KAA2D;AAE9E,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,KAAK,EAAC,6BAAT;AAAuC,mBAAY,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKA,sBAFL,OAII,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY;AAAK,IAAA,GAAG,EAAEP,YAAV;AAAwB,IAAA,GAAG,EAAC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,CAJJ,EAKI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaK,gBAAgB,IAAIA,gBAAjC,CALJ,CADF;AASD,CAXD;;AAaA,MAAMG,mBAAmB,GAAG,CAAC;AAAEH,EAAAA,gBAAF;AAAoBI,EAAAA,iBAApB;AAAuCC,EAAAA;AAAvC,CAAD,KAAgE;AAC1F,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,OAAO,EAAE,MAAMA,iBAAiB,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMD,iBAAiB,CAAC,QAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMA,iBAAiB,CAAC,UAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF;AAOD,CARD;;AAUA,MAAME,SAA0B,GAAG,UAAmB;AAAA,MAAbC,KAAa;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAed,SAAS,EAA9B;AACA,QAAMe,MAAM,GAAGb,QAAQ,CAAC,oBAAD,CAAvB;AACA,QAAM,CAACM,sBAAD,EAAyBE,iBAAzB,IAA8ClB,KAAK,CAACwB,QAAN,CAAe,EAAf,CAApD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAmBxB,UAAU,CAAMW,WAAN,CAAnC;AAEA,QAAME,gBAAgB,GAAGQ,QAAQ,GAAGC,MAAM,GACvC,GAAED,QAAQ,CAACI,KAAT,CAAe,IAAf,EAAqB,CAArB,CAAwB,KAAIJ,QAAQ,CAACI,KAAT,CAAe,IAAf,EAAqB,CAArB,CAAwB,EADf,GAErC,GAAEJ,QAAQ,CAACI,KAAT,CAAe,IAAf,EAAqB,CAArB,CAAwB,KAAIJ,QAAQ,CAACI,KAAT,CAAe,IAAf,EAAqB,CAArB,CAAwB,EAF1B,GAG7B,EAHJ;;AAKA,QAAMP,iBAAiB,GAAG,MAAM;AAC9BM,IAAAA,YAAY,CAAC;AACXE,MAAAA,IAAI,EAAE;AADK,KAAD,CAAZ;AAGD,GAJD;;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBP,QAAvB;AACA,SACE,MAAC,gBAAD;AAAkB,IAAA,SAAS,EAAED,KAAK,CAACS,SAAnC;AAA8C,IAAA,EAAE,EAAC,eAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAGE,IAAA,OAAO,EAAE,MAAC,YAAD;AAAc,MAAA,sBAAsB,EAAEd,sBAAtC;AAA8D,MAAA,gBAAgB,EAAEF,gBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHX;AAIE,IAAA,OAAO,EAAE,MAAC,mBAAD;AAAqB,MAAA,iBAAiB,EAAEI,iBAAxC;AAA2D,MAAA,gBAAgB,EAAEJ,gBAA7E;AAA+F,MAAA,iBAAiB,EAAEK,iBAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD,CA7BD;;AA+BA,eAAeC,SAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { BannerIcon, BannerText, DeliveryMethods, LocationContent, MethodOption, SubHeaderWrapper } from './sub-header.style';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport Popover from 'components/popover/popover';\nimport { useMedia } from 'utils/use-media';\nimport { MenuItem } from 'layouts/header/menu/language-switcher/language-switcher.style';\nimport { FormattedMessage } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport LocationModal from 'features/location-modal/location-modal';\nimport { AuthContext } from 'contexts/auth/auth.context';\ninterface Props {\n  className: string\n}\n\n\nconst LocationMenu = ({ cityAndStateText, onClick, deliveryMethodSelected }) => {\n  \n  return (\n    <LocationContent>\n        <i class=\"ld ld-ChevronUp ml2 dn db-m\" aria-hidden=\"true\"></i>\n        {deliveryMethodSelected}\n        |\n        <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>\n        <BannerText>{cityAndStateText && cityAndStateText}</BannerText>\n      </LocationContent>\n  );\n};\n\nconst DeliveryMethodsView = ({ cityAndStateText, setDeliveryMethod, openLocationModal }) => {\n  return (\n    <DeliveryMethods>\n      <div onClick={() => openLocationModal()}>Find the closest DittoFarm</div>\n      <MethodOption onClick={() => setDeliveryMethod('Pickup')}>Pickup</MethodOption> \n      <MethodOption onClick={() => setDeliveryMethod('Delivery')}>Delivery</MethodOption> \n    </DeliveryMethods>\n  );\n};\n\nconst SubHeader: React.FC<Props> = ({ ...props  }) => {\n  const { location } = useLocale();\n  const mobile = useMedia('(max-width: 580px)');\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState('');\n  const { authDispatch } = useContext<any>(AuthContext);\n\n  const cityAndStateText = location ? mobile ?\n    `${location.split(', ')[1]}, ${location.split(', ')[2]}`\n    : `${location.split(', ')[0]}, ${location.split(', ')[1]}`\n    : '';\n\n  const openLocationModal = () => {\n    authDispatch({\n      type: 'LOCATION_MODAL',\n    });\n  };\n\n  console.log('location',location)\n  return (\n    <SubHeaderWrapper className={props.className} id=\"layout-header\">\n      <PopoverBigger\n        direction=\"left\"\n        className=\"user-pages-dropdown\"\n        handler={<LocationMenu deliveryMethodSelected={deliveryMethodSelected} cityAndStateText={cityAndStateText} />}\n        content={<DeliveryMethodsView setDeliveryMethod={setDeliveryMethod} cityAndStateText={cityAndStateText} openLocationModal={openLocationModal} />}\n      />\n  </SubHeaderWrapper>\n  );\n\n};\n\nexport default SubHeader;\n"]},"metadata":{},"sourceType":"module"}