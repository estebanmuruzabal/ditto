{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/layouts/header/menu/language-switcher/language-switcher.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { Box, SelectedItem, MenuItem } from './language-switcher.style';\nimport Popover from 'components/popover/popover';\nimport { FormattedMessage } from 'react-intl';\nimport * as flagIcons from 'assets/icons/flags';\nimport { useLocale } from 'contexts/language/language.provider';\nimport { LANGUAGE_MENU } from 'site-settings/site-navigation';\nimport { Arrow } from '../left-menu/left-menu.style';\nimport { MenuDown } from 'assets/icons/MenuDown';\nimport { useMutation } from '@apollo/react-hooks';\nimport { UPDATE_USER } from 'graphql/mutation/user';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\n\nvar FlagIcon = function FlagIcon(_ref) {\n  var name = _ref.name;\n  var TagName = flagIcons[name];\n  return !!TagName ? __jsx(TagName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 22\n    }\n  }) : __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 36\n    }\n  }, \"Invalid icon \", name);\n};\n\n_c = FlagIcon;\n\nvar LanguageMenu = function LanguageMenu(_ref2) {\n  var onClick = _ref2.onClick;\n  return __jsx(React.Fragment, null, LANGUAGE_MENU.map(function (item) {\n    return __jsx(MenuItem, {\n      onClick: onClick,\n      key: item.id,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, __jsx(FlagIcon, {\n      name: item.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    })), __jsx(FormattedMessage, {\n      id: item.id,\n      defaultMessage: item.defaultMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }));\n  }));\n};\n\n_c2 = LanguageMenu;\n\nvar LanguageSwitcher = function LanguageSwitcher() {\n  _s();\n\n  var _useLocale = useLocale(),\n      locale = _useLocale.locale,\n      changeLanguage = _useLocale.changeLanguage;\n\n  var _React$useContext = React.useContext(AuthContext),\n      authState = _React$useContext.authState,\n      authDispatch = _React$useContext.authDispatch;\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useMutation = useMutation(UPDATE_USER),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateUserMutation = _useMutation2[0];\n\n  console.log('stateeeL', authState);\n\n  var handleSave = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var name, email, id;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              name = state.name, email = state.email, id = state.id; // await updateUserMutation({\n              //   variables: {\n              //     id,\n              //      name,\n              //      email\n              //     }\n              // });\n              // setUserinfoMsg('Update user info successfully');\n              // setTimeout(function () {\n              //   setUserinfoMsg('');\n              // }, 8000)\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSave() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var selectedLanguage = LANGUAGE_MENU.find(function (x) {\n    return x.id === locale;\n  });\n\n  var languageChangeHandler = function languageChangeHandler(e) {\n    changeLanguage(e.target.value);\n  };\n\n  return __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(Popover, {\n    className: \"right\",\n    handler: __jsx(SelectedItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.id,\n      defaultMessage: selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.defaultMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    })), __jsx(Arrow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, __jsx(MenuDown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }))),\n    content: __jsx(LanguageMenu, {\n      onClick: languageChangeHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 18\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(LanguageSwitcher, \"KvbTUiVsJ2wXNtpf113dgz9k05Y=\", false, function () {\n  return [useLocale, useMutation];\n});\n\n_c3 = LanguageSwitcher;\nexport default LanguageSwitcher;\n{\n  /* <MainMenu>\n         <Popover\n           className=\"right\"\n           handler={\n             <SelectedItem>\n               <span>\n                 <Icon>\n                   <CategoryIcon name={activeMenu?.icon} />\n                 </Icon>\n                 <span>\n                   <FormattedMessage\n                     id={activeMenu?.id}\n                     defaultMessage={activeMenu?.defaultMessage}\n                   />\n                 </span>\n               </span>\n               <Arrow>\n                 <MenuDown />\n               </Arrow>\n             </SelectedItem>\n           }\n           content={<CategoryMenu onClick={setActiveMenu} />}\n         />\n       </MainMenu> */\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FlagIcon\");\n$RefreshReg$(_c2, \"LanguageMenu\");\n$RefreshReg$(_c3, \"LanguageSwitcher\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/layouts/header/menu/language-switcher/language-switcher.tsx"],"names":["React","useContext","Box","SelectedItem","MenuItem","Popover","FormattedMessage","flagIcons","useLocale","LANGUAGE_MENU","Arrow","MenuDown","useMutation","UPDATE_USER","ProfileContext","AuthContext","FlagIcon","name","TagName","LanguageMenu","onClick","map","item","id","icon","defaultMessage","LanguageSwitcher","locale","changeLanguage","authState","authDispatch","state","dispatch","updateUserMutation","console","log","handleSave","email","selectedLanguage","find","x","languageChangeHandler","e","target","value"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,GAAT,EAAcC,YAAd,EAAkCC,QAAlC,QAAkD,2BAAlD;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAO,KAAKC,SAAZ,MAA2B,oBAA3B;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,KAAT,QAAsB,8BAAtB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7B,MAAMC,OAAO,GAAGX,SAAS,CAACU,IAAD,CAAzB;AACA,SAAO,CAAC,CAACC,OAAF,GAAY,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBD,IAAjB,CAAjC;AACD,CAHD;;KAAMD,Q;;AAKN,IAAMG,YAAY,GAAG,SAAfA,YAAe,QAAiB;AAAA,MAAdC,OAAc,SAAdA,OAAc;AACpC,SACE,4BACGX,aAAa,CAACY,GAAd,CAAkB,UAACC,IAAD;AAAA,WACjB,MAAC,QAAD;AAAU,MAAA,OAAO,EAAEF,OAAnB;AAA4B,MAAA,GAAG,EAAEE,IAAI,CAACC,EAAtC;AAA0C,MAAA,KAAK,EAAED,IAAI,CAACC,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,IAAI,EAAED,IAAI,CAACE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,MAAC,gBAAD;AAAkB,MAAA,EAAE,EAAEF,IAAI,CAACC,EAA3B;AAA+B,MAAA,cAAc,EAAED,IAAI,CAACG,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADiB;AAAA,GAAlB,CADH,CADF;AAYD,CAbD;;MAAMN,Y;;AAeN,IAAMO,gBAA8B,GAAG,SAAjCA,gBAAiC,GAAM;AAAA;;AAAA,mBACRlB,SAAS,EADD;AAAA,MACnCmB,MADmC,cACnCA,MADmC;AAAA,MAC3BC,cAD2B,cAC3BA,cAD2B;;AAAA,0BAKvC5B,KAAK,CAACC,UAAN,CAAsBc,WAAtB,CALuC;AAAA,MAGzCc,SAHyC,qBAGzCA,SAHyC;AAAA,MAIzCC,YAJyC,qBAIzCA,YAJyC;;AAAA,oBAOf7B,UAAU,CAACa,cAAD,CAPK;AAAA,MAOnCiB,KAPmC,eAOnCA,KAPmC;AAAA,MAO5BC,QAP4B,eAO5BA,QAP4B;;AAAA,qBAQdpB,WAAW,CAACC,WAAD,CARG;AAAA;AAAA,MAQpCoB,kBARoC;;AAU3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,SAAxB;;AACA,MAAMO,UAAU;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACTnB,cAAAA,IADS,GACWc,KADX,CACTd,IADS,EACHoB,KADG,GACWN,KADX,CACHM,KADG,EACId,EADJ,GACWQ,KADX,CACIR,EADJ,EAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVa,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAeA,MAAME,gBAAgB,GAAG7B,aAAa,CAAC8B,IAAd,CAAmB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACjB,EAAF,KAASI,MAAhB;AAAA,GAAnB,CAAzB;;AACA,MAAMc,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,CAAD,EAAO;AACnCd,IAAAA,cAAc,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAGA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,OAAO,EACL,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAEN,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEf,EADxB;AAEE,MAAA,cAAc,EAAEe,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEb,cAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAUE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,CAHJ;AAkBE,IAAA,OAAO,EAAE,MAAC,YAAD;AAAc,MAAA,OAAO,EAAEgB,qBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAwBD,CAtDD;;GAAMf,gB;UAC+BlB,S,EAONI,W;;;MARzBc,gB;AAwDN,eAAeA,gBAAf;AACA;AAAC;;;;;;;;;;;;;;;;;;;;;;;;AAuBoB","sourcesContent":["import React, { useContext } from 'react';\nimport { Box, SelectedItem, Flag, MenuItem } from './language-switcher.style';\nimport Popover from 'components/popover/popover';\nimport { FormattedMessage } from 'react-intl';\nimport * as flagIcons from 'assets/icons/flags';\nimport { useLocale } from 'contexts/language/language.provider';\nimport { LANGUAGE_MENU } from 'site-settings/site-navigation';\nimport { Arrow } from '../left-menu/left-menu.style';\nimport { MenuDown } from 'assets/icons/MenuDown';\nimport { useMutation } from '@apollo/react-hooks';\nimport { UPDATE_USER } from 'graphql/mutation/user';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\n\nconst FlagIcon = ({ name }) => {\n  const TagName = flagIcons[name];\n  return !!TagName ? <TagName /> : <p>Invalid icon {name}</p>;\n};\n\nconst LanguageMenu = ({ onClick }) => {\n  return (\n    <>\n      {LANGUAGE_MENU.map((item) => (\n        <MenuItem onClick={onClick} key={item.id} value={item.id}>\n          <span>\n            <FlagIcon name={item.icon} />\n          </span>\n          <FormattedMessage id={item.id} defaultMessage={item.defaultMessage} />\n        </MenuItem>\n      ))}\n    </>\n  );\n};\n\nconst LanguageSwitcher: React.FC<{}> = () => {\n  const { locale, changeLanguage } = useLocale();\n  const {\n    authState,\n    authDispatch,\n  } = React.useContext<any>(AuthContext);\n  \n  const { state, dispatch } = useContext(ProfileContext);\n  const [updateUserMutation] = useMutation(UPDATE_USER);\n  \n  console.log('stateeeL', authState)\n  const handleSave = async () => {\n    const { name, email, id } = state;\n    // await updateUserMutation({\n    //   variables: {\n    //     id,\n    //      name,\n    //      email\n    //     }\n    // });\n    // setUserinfoMsg('Update user info successfully');\n    // setTimeout(function () {\n    //   setUserinfoMsg('');\n    // }, 8000)\n  };\n  \n  const selectedLanguage = LANGUAGE_MENU.find((x) => x.id === locale);\n  const languageChangeHandler = (e) => {\n    changeLanguage(e.target.value);\n  };\n  return (\n    <Box>\n      <Popover\n        className=\"right\"\n        handler={\n          <SelectedItem>\n            {/* <Flag>\n              <FlagIcon name={selectedLanguage?.icon} />\n            </Flag> */}\n            <span>\n              <FormattedMessage\n                id={selectedLanguage?.id}\n                defaultMessage={selectedLanguage?.defaultMessage}\n              />\n            </span>\n            <Arrow>\n              <MenuDown />\n            </Arrow>\n          </SelectedItem>\n        }\n        content={<LanguageMenu onClick={languageChangeHandler} />}\n      />\n    </Box>\n  );\n};\n\nexport default LanguageSwitcher;\n{/* <MainMenu>\n        <Popover\n          className=\"right\"\n          handler={\n            <SelectedItem>\n              <span>\n                <Icon>\n                  <CategoryIcon name={activeMenu?.icon} />\n                </Icon>\n                <span>\n                  <FormattedMessage\n                    id={activeMenu?.id}\n                    defaultMessage={activeMenu?.defaultMessage}\n                  />\n                </span>\n              </span>\n              <Arrow>\n                <MenuDown />\n              </Arrow>\n            </SelectedItem>\n          }\n          content={<CategoryMenu onClick={setActiveMenu} />}\n        />\n      </MainMenu> */}\n"]},"metadata":{},"sourceType":"module"}