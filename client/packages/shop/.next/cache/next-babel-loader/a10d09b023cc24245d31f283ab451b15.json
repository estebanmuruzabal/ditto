{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/address-card/address-card-two.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport React, { useContext, useEffect } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { ADD_ADDRESS, UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { BannerIcon, DeliveryText, FieldWrapper, Heading, PickUpOptions } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { getCookie } from 'utils/session';\nimport { deliveryMethodCookieKeyName, plazaBelgranoPolygon, plazadoceDeOctubrePolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon } from 'utils/constant';\nimport Checkbox from 'components/checkbox/checkbox'; // Shape of form values\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: props => {\n    const ID = props.item.id;\n    const addressItem = props.item.item;\n    return {\n      id: ID || null,\n      addressId: addressItem.id || null,\n      title: addressItem.title || '',\n      address: addressItem.address || '',\n      instructions: addressItem.instructions || '',\n      location: addressItem.location || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required('Required!'),\n    address: Yup.string().required('Required'),\n    location: Yup.string().required('Required')\n  }),\n  handleSubmit: values => {// do submitting things\n  }\n});\n\nconst UpdateAddressTwo = props => {\n  var _deliverData$delivery;\n\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n    handleReset,\n    isSubmitting\n  } = props;\n  const {\n    data: deliverData\n  } = useQuery(DELIVERY_METHOD);\n  const deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items;\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddress, setDeliveryAddress] = React.useState(\"\");\n  const [notInsideDeliveryAreas, setNotInsideDeliveryAreas] = React.useState(false);\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(undefined);\n  useEffect(() => {\n    const savedDeliveryMethod = getCookie(deliveryMethodCookieKeyName);\n\n    if (savedDeliveryMethod) {\n      const deliveryMethodSaved = JSON.parse(savedDeliveryMethod);\n      console.log(deliveryMethodSaved);\n      setDeliveryAddress(deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.deliveryAddress);\n    }\n  }, []);\n  const ID = item.id;\n  let newAddressid = null;\n  const addressItem = item.item;\n  const addressValue = {\n    id: ID,\n    addressId: addressItem.id,\n    title: values.title,\n    address: values.address,\n    location: values.location,\n    instructions: values.instructions,\n    is_primary: true\n  };\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const intl = useIntl();\n  const [updateAddressMutation] = useMutation(UPDATE_ADDRESS);\n  const [addAddressMutation] = useMutation(ADD_ADDRESS);\n\n  const handleSubmit = async () => {\n    if (isValid) {\n      const {\n        id,\n        addressId,\n        title,\n        address,\n        location,\n        instructions\n      } = addressValue;\n\n      if (Object.keys(addressItem).length === 0) {\n        const {\n          data\n        } = await addAddressMutation({\n          variables: {\n            id,\n            title,\n            address,\n            location,\n            instructions\n          }\n        });\n        newAddressid = data.addDeliveryAddress.id;\n        addressValue.id = data.addDeliveryAddress.id;\n        dispatch({\n          type: 'ADD_ADDRESS',\n          payload: addressValue\n        });\n        closeModal();\n      } else {\n        const updateAddressData = await updateAddressMutation({\n          variables: {\n            id,\n            addressId,\n            title,\n            address,\n            location,\n            instructions\n          }\n        });\n        dispatch({\n          type: 'UPDATE_ADDRESS',\n          payload: {\n            value: addressValue,\n            id: addressItem.id\n          }\n        });\n        closeModal();\n      }\n    }\n  };\n\n  function inside(point, vs) {\n    var x = point[0],\n        y = point[1];\n    var inside = false;\n\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0],\n          yi = vs[i][1];\n      var xj = vs[j][0],\n          yj = vs[j][1];\n      var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  ;\n\n  const handleSelect = async address => {\n    setDeliveryAddress(address);\n    const results = await geocodeByAddress(address);\n    const latLng = await getLatLng(results[0]);\n    setNotInsideDeliveryAreas(false);\n    let deliveryOptionsMethods = [];\n\n    if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n      deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) {\n          deliveryMethod.name = 'Delivery Gratis';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n      deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) {\n          deliveryMethod.name = 'Delivery Gratis';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n      deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) {\n          deliveryMethod.name = 'Delivery Gratis';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n      deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) {\n          deliveryMethod.name = 'Delivery Gratis';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else {\n      setNotInsideDeliveryAreas(true);\n      console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n    }\n\n    setSearchResult(deliveryOptionsMethods);\n  };\n\n  return __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, intl.formatMessage({\n    id: (addressItem === null || addressItem === void 0 ? void 0 : addressItem.id) ? 'editAddressId' : 'addNewAddressId',\n    defaultMessage: 'Address name'\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"title\",\n    type: \"text\",\n    width: \"100%\",\n    placeholder: intl.formatMessage({\n      id: 'addressRefId',\n      defaultMessage: 'Address name'\n    }),\n    error: touched.title && errors.title,\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, __jsx(PlacesAutocomplete, {\n    value: deliveryAddress && (deliveryAddress === null || deliveryAddress === void 0 ? void 0 : deliveryAddress.split(',')[0]),\n    onChange: e => setDeliveryAddress(e),\n    onSelect: handleSelect,\n    searchOptions: {\n      types: [],\n      componentRestrictions: {\n        country: \"ar\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", _extends({}, getInputProps({\n    placeholder: \"Dirección\",\n    className: \"location-search-input\",\n    style: {\n      width: '300px',\n      padding: '0px 8px',\n      appearance: 'none',\n      fontFamily: `'Lato', sans-serif`,\n      fontSize: '15',\n      lineHeight: 'inherit',\n      border: '1px solid',\n      borderColor: '#f7f7f7',\n      borderRadius: '6px',\n      backgroundColor: 'white',\n      color: '#0D1136',\n      height: '48px',\n      transition: 'all 0.25s ease',\n      // mb: 3,\n      '&:hover,&:focus': {\n        outline: 0,\n        borderColor: '#009e7f'\n      }\n    }\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"autocomplete-dropdown-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, loading && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 31\n    }\n  }, \"Loading...\"), suggestions.map(suggestion => {\n    const style = suggestion.active ? {\n      backgroundColor: \"#fafafa\",\n      cursor: \"pointer\"\n    } : {\n      backgroundColor: \"#ffffff\",\n      cursor: \"pointer\"\n    };\n    return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n      style\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 23\n      }\n    }), __jsx(BannerIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: DeliveryIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 37\n      }\n    })), suggestion.description);\n  })))), (searchResult === null || searchResult === void 0 ? void 0 : searchResult.length) ? searchResult.map((deliveryMethod, i) => {\n    return __jsx(PickUpOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, __jsx(Checkbox, {\n      keyName: `${i}-deliveryMethods`,\n      isChecked: (deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === deliveryMethod.id,\n      labelText: `${deliveryMethod.name} - ${deliveryMethod.details} `,\n      id: `deliveryMethod-${i}`,\n      onChange: e => {\n        setDeliveryMethod((deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === deliveryMethod.id ? null : deliveryMethod);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 19\n      }\n    }));\n  }) : '', notInsideDeliveryAreas && __jsx(DeliveryText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, intl.formatMessage({\n    id: 'noDeliveryThereYet',\n    defaultMessage: 'noDeliveryThereYet'\n  }))), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"location\",\n    type: \"text\",\n    placeholder: intl.formatMessage({\n      id: 'locationId',\n      defaultMessage: 'Localidad'\n    }),\n    width: \"100%\",\n    error: touched.location && errors.location,\n    value: deliveryAddress && deliveryAddress.split(',')[1],\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"instructions\",\n    as: \"textarea\",\n    width: \"100%\",\n    placeholder: intl.formatMessage({\n      id: 'instructionsId',\n      defaultMessage: 'Delivery instructions'\n    }),\n    error: touched.instructions && errors.instructions,\n    value: values.instructions,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  })), __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"submit\",\n    style: {\n      width: '100%',\n      height: '44px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"savedAddressId\",\n    defaultMessage: \"Save Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default FormEnhancer(UpdateAddressTwo);","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/address-card/address-card-two.tsx"],"names":["DeliveryIcon","React","useContext","useEffect","Yup","withFormik","Form","closeModal","TextField","Button","useMutation","useQuery","ADD_ADDRESS","UPDATE_ADDRESS","BannerIcon","DeliveryText","FieldWrapper","Heading","PickUpOptions","ProfileContext","FormattedMessage","useIntl","PlacesAutocomplete","geocodeByAddress","getLatLng","DELIVERY_METHOD","getCookie","deliveryMethodCookieKeyName","plazaBelgranoPolygon","plazadoceDeOctubrePolygon","plazaEspañaPolygon","plazaNueveDeJulioPolygon","Checkbox","FormEnhancer","mapPropsToValues","props","ID","item","id","addressItem","addressId","title","address","instructions","location","validationSchema","object","shape","string","required","handleSubmit","values","UpdateAddressTwo","isValid","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","data","deliverData","deliveryMethods","items","searchResult","setSearchResult","useState","deliveryAddress","setDeliveryAddress","notInsideDeliveryAreas","setNotInsideDeliveryAreas","deliveryMethodSelected","setDeliveryMethod","undefined","savedDeliveryMethod","deliveryMethodSaved","JSON","parse","console","log","newAddressid","addressValue","is_primary","state","dispatch","intl","updateAddressMutation","addAddressMutation","Object","keys","length","variables","addDeliveryAddress","type","payload","updateAddressData","value","inside","point","vs","x","y","i","j","xi","yi","xj","yj","intersect","handleSelect","results","latLng","deliveryOptionsMethods","lat","lng","filter","deliveryMethod","isPickUp","details","includes","name","formatMessage","defaultMessage","split","e","types","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","style","width","padding","appearance","fontFamily","fontSize","lineHeight","border","borderColor","borderRadius","backgroundColor","color","height","transition","outline","map","suggestion","active","cursor","description"],"mappings":"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","sourcesContent":["import DeliveryIcon from 'assets/images/locationIcon.webp';\nimport React, { useContext, useEffect } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, FormikProps, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { ADD_ADDRESS, UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { BannerIcon, DeliveryText, FieldWrapper, Heading, PickUpOptions } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { getCookie } from 'utils/session';\nimport { deliveryMethodCookieKeyName, plazaBelgranoPolygon, plazadoceDeOctubrePolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon } from 'utils/constant';\nimport Checkbox from 'components/checkbox/checkbox';\n\n// Shape of form values\ninterface FormValues {\n  id: any | null;\n  addressId: any | null,\n  title: string;\n  address: string;\n  location?: string;\n  instructions?: string;\n}\n\n// The type of props MyForm receives\ninterface MyFormProps {\n  item?: any | null;\n  id?: any | null;\n}\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik<MyFormProps, FormValues>({\n  // Transform outer props into form values\n  mapPropsToValues: (props) => {\n    const ID = props.item.id;\n    const addressItem = props.item.item;\n    return {\n      id: ID || null,\n      addressId: addressItem.id || null,\n      title: addressItem.title || '',\n      address: addressItem.address || '',\n      instructions: addressItem.instructions || '',\n      location: addressItem.location || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required('Required!'),\n    address: Yup.string().required('Required'),\n    location: Yup.string().required('Required'),\n  }),\n  handleSubmit: (values) => {\n    // do submitting things\n  },\n});\n\nconst UpdateAddressTwo = (props: FormikProps<FormValues> & MyFormProps) => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n\n    handleReset,\n    isSubmitting,\n  } = props;\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  \n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddress, setDeliveryAddress] = React.useState(\"\");\n  const [notInsideDeliveryAreas, setNotInsideDeliveryAreas] = React.useState(false);\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(undefined);\n\n  useEffect(() => {\n    const savedDeliveryMethod = getCookie(deliveryMethodCookieKeyName);\n    if (savedDeliveryMethod) {\n      const deliveryMethodSaved = JSON.parse(savedDeliveryMethod);\n      console.log(deliveryMethodSaved)\n      setDeliveryAddress(deliveryMethodSaved?.deliveryAddress)\n    }\n  }, []);\n\n  const ID = item.id;\n  let newAddressid = null;\n  const addressItem = item.item;\n  const addressValue = {\n    id: ID,\n    addressId: addressItem.id, \n    title: values.title,\n    address: values.address,\n    location: values.location,\n    instructions: values.instructions,\n    is_primary: true\n  };\n  const { state, dispatch } = useContext(ProfileContext);\n  const intl = useIntl();\n\n  const [updateAddressMutation] = useMutation(UPDATE_ADDRESS);\n  const [addAddressMutation] = useMutation(ADD_ADDRESS);\n\n  const handleSubmit = async () => {\n    if (isValid) {\n      const {id, addressId, title, address, location, instructions} = addressValue;\n      if (Object.keys(addressItem).length === 0) {\n        const {data}  = await addAddressMutation({\n          variables: { \n            id,\n            title,\n            address, \n            location,\n            instructions\n           },\n        });\n        newAddressid = data.addDeliveryAddress.id;\n        addressValue.id = data.addDeliveryAddress.id;\n        dispatch({\n          type: 'ADD_ADDRESS',\n          payload: addressValue \n        });\n        closeModal();\n      }else{\n        const updateAddressData = await updateAddressMutation({\n          variables: { \n            id,\n            addressId,\n            title,\n            address, \n            location,\n            instructions\n           }\n        });\n        dispatch({\n          type: 'UPDATE_ADDRESS',\n          payload: { value: addressValue, id: addressItem.id }\n\n        });\n        closeModal();\n      }\n    }\n  };\n\n  function inside(point, vs) {\n    var x = point[0], y = point[1];\n    \n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0], yi = vs[i][1];\n        var xj = vs[j][0], yj = vs[j][1];\n        \n        var intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    \n    return inside;\n};\n\nconst handleSelect = async (address) => {\n  setDeliveryAddress(address);\n  const results = await geocodeByAddress(address);\n  const latLng = await getLatLng(results[0]);\n  setNotInsideDeliveryAreas(false);\n  let deliveryOptionsMethods = [];\n\n  if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n    deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n      return !deliveryMethod.isPickUp;\n    });\n  } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n    deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n      return !deliveryMethod.isPickUp;\n    });\n  } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n      deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n  } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n    deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n      return !deliveryMethod.isPickUp;\n    });\n  } else {\n    setNotInsideDeliveryAreas(true);\n    console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n  }\n  setSearchResult(deliveryOptionsMethods)\n};\n\n  return (\n    <Form>\n      <Heading>{intl.formatMessage({ id: addressItem?.id ? 'editAddressId' : 'addNewAddressId', defaultMessage: 'Address name' })}</Heading>\n      <FieldWrapper>\n        <TextField\n          id=\"title\"\n          type=\"text\"\n          width='100%'\n          placeholder={intl.formatMessage({ id: 'addressRefId', defaultMessage: 'Address name' })}\n          error={touched.title && errors.title}\n          value={values.title}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n          <PlacesAutocomplete\n            value={deliveryAddress && deliveryAddress?.split(',')[0]}\n            onChange={(e) => setDeliveryAddress(e)}\n            onSelect={handleSelect}\n            searchOptions={{\n              types: [],\n              componentRestrictions: { country: \"ar\" },\n            }}\n          >\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n              <div>\n                <input\n                  {...getInputProps({\n                    placeholder: \"Dirección\",\n                    className: \"location-search-input\",\n                    style: {\n                      width: '300px',\n                      padding:'0px 8px',\n                      appearance: 'none',\n                      fontFamily: `'Lato', sans-serif`,\n                      fontSize: '15',\n                      lineHeight: 'inherit',\n                      border: '1px solid',\n                      borderColor: '#f7f7f7',\n                      borderRadius: '6px',\n                      backgroundColor: 'white',\n                      color: '#0D1136',\n                      height: '48px',\n                      transition: 'all 0.25s ease',\n                      // mb: 3,\n                      '&:hover,&:focus': {\n                        outline: 0,\n                        borderColor: '#009e7f',\n                      },\n                    },\n                  })}\n                />\n                <div className=\"autocomplete-dropdown-container\">\n                  {loading && <div>Loading...</div>}\n                  {suggestions.map((suggestion) => {\n                    const style = suggestion.active\n                      ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                      : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                    return (\n                      <div {...getSuggestionItemProps(suggestion, { style })}>\n                        <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>{suggestion.description}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </PlacesAutocomplete>\n          {searchResult?.length ? searchResult.map((deliveryMethod, i) => {\n              return (\n                <PickUpOptions>\n                  <Checkbox\n                      keyName={`${i}-deliveryMethods`}\n                      isChecked={deliveryMethodSelected?.id === deliveryMethod.id}\n                      labelText={`${deliveryMethod.name} - ${deliveryMethod.details} `}\n                      id={`deliveryMethod-${i}`}\n                      onChange={e => {\n                          setDeliveryMethod(deliveryMethodSelected?.id === deliveryMethod.id ? null : deliveryMethod)\n                      }}\n                  />\n                </PickUpOptions>\n              )}\n              ) : ('')\n          }\n          {notInsideDeliveryAreas && (\n            <DeliveryText>{intl.formatMessage({ id: 'noDeliveryThereYet', defaultMessage: 'noDeliveryThereYet' })}</DeliveryText>\n          )}\n          {/* <TextField\n            id=\"address\"\n            type=\"text\"\n            width='100%'\n            placeholder={intl.formatMessage({ id: 'addressId', defaultMessage: 'Address' })}\n            error={touched.address && errors.address}\n            value={values.address}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          /> */}\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"location\"\n          type=\"text\"\n          placeholder={intl.formatMessage({ id: 'locationId', defaultMessage: 'Localidad' })}\n          width='100%'\n          error={touched.location && errors.location}\n          value={deliveryAddress && deliveryAddress.split(',')[1]}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"instructions\"\n          as=\"textarea\"\n          width='100%'\n          placeholder={intl.formatMessage({ id: 'instructionsId', defaultMessage: 'Delivery instructions' })}\n          error={touched.instructions && errors.instructions}\n          value={values.instructions}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n\n      <Button\n        onClick={handleSubmit}\n        type=\"submit\"\n        style={{ width: '100%', height: '44px' }}\n      >\n        <FormattedMessage id=\"savedAddressId\" defaultMessage=\"Save Address\" />\n      </Button>\n    </Form>\n  );\n};\n\nexport default FormEnhancer(UpdateAddressTwo);\n"]},"metadata":{},"sourceType":"module"}