{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/checkbox/checkbox.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { StyledCheckBox, StyledCheckBoxLabel, StyledCheckBoxLabelText, StyledCheckBoxInputIndicator } from './checkbox.style';\nimport Checkbox from '@mui/material/Checkbox';\n\nconst CheckBox = ({\n  className,\n  isChecked,\n  labelText,\n  keyName,\n  id,\n  labelPosition = 'right',\n  disabled = false,\n  onChange\n}) => {\n  // use toggle hooks\n  console.log('isChecked', isChecked, keyName);\n  return __jsx(StyledCheckBox, {\n    key: keyName,\n    className: `Mahdi Fashion__checkbox ${keyName}`.trim(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(StyledCheckBoxLabel, {\n    htmlFor: id,\n    position: labelPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, labelText && __jsx(StyledCheckBoxLabelText, {\n    position: labelPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, labelText), __jsx(Checkbox, {\n    className: \"checkbox-input\",\n    checked: isChecked,\n    onChange: onChange,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(StyledCheckBoxInputIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CheckBox;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/checkbox/checkbox.tsx"],"names":["React","StyledCheckBox","StyledCheckBoxLabel","StyledCheckBoxLabelText","StyledCheckBoxInputIndicator","Checkbox","CheckBox","className","isChecked","labelText","keyName","id","labelPosition","disabled","onChange","console","log","trim"],"mappings":";;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SACEC,cADF,EAEEC,mBAFF,EAGEC,uBAHF,EAKEC,4BALF,QAMO,kBANP;AAOA,OAAOC,QAAP,MAAqB,wBAArB;;AAcA,MAAMC,QAAiC,GAAG,CAAC;AACzCC,EAAAA,SADyC;AAEzCC,EAAAA,SAFyC;AAGzCC,EAAAA,SAHyC;AAIzCC,EAAAA,OAJyC;AAKzCC,EAAAA,EALyC;AAMzCC,EAAAA,aAAa,GAAG,OANyB;AAOzCC,EAAAA,QAAQ,GAAG,KAP8B;AAQzCC,EAAAA;AARyC,CAAD,KASpC;AACJ;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,SAAzB,EAAoCE,OAApC;AACA,SACE,MAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,OAArB;AAA8B,IAAA,SAAS,EAAG,2BAA0BA,OAAQ,EAAnC,CAAqCO,IAArC,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AAAqB,IAAA,OAAO,EAAEN,EAA9B;AAAkC,IAAA,QAAQ,EAAEC,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SAAS,IACR,MAAC,uBAAD;AAAyB,IAAA,QAAQ,EAAEG,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SADH,CAFJ,EAME,MAAC,QAAD;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,OAAO,EAAED,SAFX;AAGE,IAAA,QAAQ,EAAEM,QAHZ;AAIE,IAAA,QAAQ,EAAED,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAYE,MAAC,4BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,CADF;AAkBD,CA/BD;;AAiCA,eAAeP,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n  StyledCheckBox,\n  StyledCheckBoxLabel,\n  StyledCheckBoxLabelText,\n  StyledCheckBoxInput,\n  StyledCheckBoxInputIndicator,\n} from './checkbox.style';\nimport Checkbox from '@mui/material/Checkbox';\n\ntype CheckBoxProps = {\n  id: string;\n  disabled?: boolean;\n  isChecked?: boolean;\n  labelText: string;\n  className?: string;\n  keyName: string;\n  labelPosition?: 'left' | 'right';\n  [key: string]: unknown;\n  onChange: any\n};\n\nconst CheckBox: React.FC<CheckBoxProps> = ({\n  className,\n  isChecked,\n  labelText,\n  keyName,\n  id,\n  labelPosition = 'right',\n  disabled = false,\n  onChange,\n}) => {\n  // use toggle hooks\n\n  console.log('isChecked', isChecked, keyName)\n  return (\n    <StyledCheckBox key={keyName} className={`Mahdi Fashion__checkbox ${keyName}`.trim()}>\n      <StyledCheckBoxLabel htmlFor={id} position={labelPosition}>\n        {labelText && (\n          <StyledCheckBoxLabelText position={labelPosition}>\n            {labelText}\n          </StyledCheckBoxLabelText>\n        )}\n        <Checkbox\n          className=\"checkbox-input\"\n          checked={isChecked}\n          onChange={onChange}\n          disabled={disabled}\n        />\n        <StyledCheckBoxInputIndicator />\n      </StyledCheckBoxLabel>\n    </StyledCheckBox>\n  );\n};\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}