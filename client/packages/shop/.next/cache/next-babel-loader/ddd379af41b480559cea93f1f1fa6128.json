{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport { BannerIcon, BannerText, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, LocationContent, Offer, OfferSection, Options, SubHeaderWrapper, Wrapper } from './sub-header.style';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { GiftBox } from 'assets/icons/GiftBox';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\n\nconst LocationMenu = ({\n  cityAndStateText,\n  deliveryMethodSaved,\n  isOpen\n}) => {\n  var _deliveryMethodSaved$, _deliveryMethodSaved$2;\n\n  const intl = useIntl();\n  console.log('deliveryMethodSaved:\"::', deliveryMethodSaved);\n  const defaultText = intl.formatMessage({\n    id: 'defaultDeliveryPickupText',\n    defaultMessage: 'check here'\n  });\n  return __jsx(LocationContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, isOpen ? __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleDown,\n    className: \"fas fa-chevron-down\",\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleUp,\n    className: \"fas fa-chevron-up\",\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }\n  }), __jsx(DeliveryText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, deliveryMethodSaved ? (deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.isPickUp) ? DeliveryMethodsConstants.PICKUP : DeliveryMethodsConstants.DELIVERY : defaultText), deliveryMethodSaved && __jsx(React.Fragment, null, \"|\", __jsx(BannerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: DeliveryIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  })), __jsx(BannerText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, `${deliveryMethodSaved.name} - ${deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$ = deliveryMethodSaved.details) === null || _deliveryMethodSaved$ === void 0 ? void 0 : (_deliveryMethodSaved$2 = _deliveryMethodSaved$.split('|')) === null || _deliveryMethodSaved$2 === void 0 ? void 0 : _deliveryMethodSaved$2[0]}`)));\n};\n\nconst SubHeader = (_ref) => {\n  var _deliverData$delivery;\n\n  let props = Object.assign({}, _ref);\n  const {\n    location\n  } = useLocale();\n  const mobile = useMedia('(max-width: 580px)');\n  const intl = useIntl();\n  const [deliveryMethodTypeSelected, setDeliveryMethodType] = React.useState();\n  const [deliveryMethodSaved, setDeliveryMethodSaved] = React.useState();\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(undefined);\n  const {\n    data: deliverData\n  } = useQuery(DELIVERY_METHOD);\n  const deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items;\n  const {\n    authDispatch\n  } = useContext(AuthContext);\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  useEffect(() => {\n    if (getCookie('deliveryMethodSaved') && !deliveryMethodSaved) {\n      const deliveryMethodSaved = JSON.parse(getCookie('deliveryMethodSaved'));\n      console.log('deliveryMethodSaved', deliveryMethodSaved);\n      setDeliveryMethodSaved(deliveryMethodSaved);\n    }\n  }, []);\n\n  const setDeliveryMethodd = deli => {\n    setDeliveryMethod(deli); // if (getCookie('first_visit')) {\n\n    setCookie('deliveryMethodSaved', deli); // }\n  };\n\n  console.log('deliveryMethodSaved::', getCookie('deliveryMethodSaved'));\n\n  const searchDeliveryZipCode = (e, deli) => {\n    handleOnFocus(e);\n    setZipCode(deli);\n    const deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n      return !deliveryMethod.isPickUp;\n    });\n    const methodFound = deliveryOptionsMethods.filter(method => method.details.includes(zipCode));\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : []);\n  };\n\n  const searchPickupZipCode = (e, deli) => {\n    handleOnFocus(e);\n    setZipCode(deli);\n    const pickUpOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n    const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode));\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : []);\n  };\n\n  const setDelivery = (e, deli) => {\n    e.stopPropagation();\n    setDeliveryMethodType(deli);\n  };\n\n  const handleOnFocus = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }; // deliveryMethodSelected\n\n\n  const isPickUpSelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  const hasDefaultPickUpOption = true;\n  const a = isPickUpSelected && hasDefaultPickUpOption ? 'Find the closest PickUp Location' : 'Check delivery address ZIP CODE';\n  const cityAndStateText = isPickUpSelected ? a : location ? mobile ? `${location.split(', ')[1]}, ${location.split(', ')[2]}` : `${location.split(', ')[0]}, ${location.split(', ')[1]}` : '';\n  return __jsx(SubHeaderWrapper, {\n    className: props.className,\n    id: \"layout-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverBigger, {\n    direction: \"left\",\n    className: \"user-pages-dropdown\",\n    openHandler: __jsx(LocationMenu, {\n      isOpen: false,\n      deliveryMethodSaved: deliveryMethodSaved,\n      cityAndStateText: cityAndStateText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 22\n      }\n    }),\n    closeHandler: __jsx(LocationMenu, {\n      isOpen: true,\n      deliveryMethodSaved: deliveryMethodSaved,\n      cityAndStateText: cityAndStateText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }),\n    content: __jsx(DeliveryMethods, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, __jsx(Options, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, __jsx(CardWrapper, {\n      color: isPickUpSelected ? '#0d1136' : '#e4f4fc',\n      onClick: e => setDelivery(e, DeliveryMethodsConstants.PICKUP),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, \"Pickup\"), __jsx(CardWrapper, {\n      color: isDeliverySelected ? '#0d1136' : '#e4f4fc',\n      onClick: e => setDelivery(e, DeliveryMethodsConstants.DELIVERY),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"Delivery\")), __jsx(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, __jsx(Heading, {\n      onClick: e => handleOnFocus(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, isPickUpSelected ? __jsx(FormattedMessage, {\n      id: \"pickupModalheading\",\n      defaultMessage: \"Select Your Location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }) : __jsx(FormattedMessage, {\n      id: \"deliveryModalheading\",\n      defaultMessage: \"Select Your Location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      onClick: e => handleOnFocus(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, __jsx(Input, {\n      type: \"text\",\n      name: \"name\",\n      onFocus: e => handleOnFocus(e),\n      placeholder: \"Enter zip code\",\n      value: zipCode // we have to change the onChange because the is no one for the controller name actualy\n      ,\n      onChange: e => isPickUpSelected ? searchPickupZipCode(e, e.target.value) : searchDeliveryZipCode(e, e.target.value),\n      width: \"197px\",\n      height: \"34.5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    })), (searchResult === null || searchResult === void 0 ? void 0 : searchResult.length) === 0 && zipCode.length > 4 && __jsx(DeliveryText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 20\n      }\n    }, deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP ? 'No Dittos Pickup Locations found, yet, sorry' : 'Sorry, we dont deliver there, yet..'), (searchResult === null || searchResult === void 0 ? void 0 : searchResult.length) ? searchResult.map((result, i) => {\n      // const isChecked = deliveryMethodSelected?.id === result.id;\n      return __jsx(Checkbox, {\n        keyName: `${i}-results`,\n        isChecked: (deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === result.id,\n        labelText: `${result.name} - ${result.details}`,\n        id: `result-${i}`,\n        onChange: e => {\n          setDeliveryMethod((deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === result.id ? [] : result);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 23\n        }\n      });\n    }) : ''), __jsx(OfferSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }\n    }, __jsx(GiftBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }), __jsx(Offer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"locationModalFooter\",\n      defaultMessage: \"Free Delivery For 1st Order\",\n      values: {\n        number: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SubHeader;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx"],"names":["React","useEffect","useContext","BannerIcon","BannerText","CardWrapper","Container","DeliveryMethods","DeliveryText","Heading","Input","LocationContent","Offer","OfferSection","Options","SubHeaderWrapper","Wrapper","useLocale","DeliveryIcon","useMedia","FormattedMessage","useIntl","PopoverBigger","AuthContext","FontAwesomeIcon","faChevronCircleDown","faChevronCircleUp","DeliveryMethodsConstants","useQuery","DELIVERY_METHOD","GiftBox","Checkbox","getCookie","setCookie","LocationMenu","cityAndStateText","deliveryMethodSaved","isOpen","intl","console","log","defaultText","formatMessage","id","defaultMessage","color","isPickUp","PICKUP","DELIVERY","name","details","split","SubHeader","props","location","mobile","deliveryMethodTypeSelected","setDeliveryMethodType","useState","setDeliveryMethodSaved","deliveryMethodSelected","setDeliveryMethod","undefined","data","deliverData","deliveryMethods","items","authDispatch","zipCode","setZipCode","searchResult","setSearchResult","JSON","parse","setDeliveryMethodd","deli","searchDeliveryZipCode","e","handleOnFocus","deliveryOptionsMethods","filter","deliveryMethod","methodFound","method","includes","stopPropagation","searchPickupZipCode","pickUpOptionsMethods","setDelivery","event","preventDefault","isPickUpSelected","isDeliverySelected","hasDefaultPickUpOption","a","className","target","value","length","map","result","i","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { BannerIcon, BannerText, Button, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, LocationContent, MethodOption, Offer, OfferSection, Options, SubHeaderWrapper, Wrapper } from './sub-header.style';\nimport { openModal } from '@redq/reuse-modal';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport Popover from 'components/popover/popover';\nimport { useMedia } from 'utils/use-media';\nimport { MenuItem } from 'layouts/header/menu/language-switcher/language-switcher.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport LocationModal from 'features/location-modal/location-modal';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from 'features/authentication-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faChevronCircleDown, faChevronCircleUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { GiftBox } from 'assets/icons/GiftBox';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\n\ninterface Props {\n  className: string\n}\n\n\nconst LocationMenu = ({ cityAndStateText, deliveryMethodSaved, isOpen }) => {\n  const intl = useIntl();\n  console.log('deliveryMethodSaved:\"::', deliveryMethodSaved)\n  const defaultText = intl.formatMessage({ id: 'defaultDeliveryPickupText', defaultMessage: 'check here' })\n  return (\n    <LocationContent>\n        { isOpen \n          ? (<FontAwesomeIcon icon={faChevronCircleDown} className=\"fas fa-chevron-down\" style={{ color: \"black\" }} />) \n          : (<FontAwesomeIcon icon={faChevronCircleUp} className=\"fas fa-chevron-up\" style={{ color: \"black\" }} />)\n        }\n        { \n\n        }\n        <DeliveryText>{deliveryMethodSaved ? deliveryMethodSaved?.isPickUp ? DeliveryMethodsConstants.PICKUP : DeliveryMethodsConstants.DELIVERY : defaultText}</DeliveryText>\n        { deliveryMethodSaved && (\n          <>\n              |\n            <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>\n            <BannerText>{`${deliveryMethodSaved.name} - ${deliveryMethodSaved?.details?.split('|')?.[0]}`}</BannerText>\n          </>\n        )}\n      </LocationContent>\n  );\n};\n\n\nconst SubHeader: React.FC<Props> = ({ ...props  }) => {\n  const { location } = useLocale();\n  const mobile = useMedia('(max-width: 580px)');\n  const intl = useIntl();\n  const [deliveryMethodTypeSelected, setDeliveryMethodType] = React.useState();\n  const [deliveryMethodSaved, setDeliveryMethodSaved] = React.useState();\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(undefined);\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  const { authDispatch } = useContext<any>(AuthContext);\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  \n  useEffect(() => {\n    if (getCookie('deliveryMethodSaved') && !deliveryMethodSaved) {\n      const deliveryMethodSaved = JSON.parse(getCookie('deliveryMethodSaved'));\n      console.log('deliveryMethodSaved', deliveryMethodSaved)\n      setDeliveryMethodSaved(deliveryMethodSaved)\n    }\n  }, []);\n  \n  const setDeliveryMethodd =  (deli) => {\n    setDeliveryMethod(deli)\n    // if (getCookie('first_visit')) {\n      setCookie('deliveryMethodSaved', deli);\n    // }\n  };\n  console.log('deliveryMethodSaved::', getCookie('deliveryMethodSaved'))\n  \n\n  const searchDeliveryZipCode =  (e, deli) => {\n    handleOnFocus(e)\n    setZipCode(deli)\n    const deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      return !deliveryMethod.isPickUp;\n    });\n   \n    const methodFound = deliveryOptionsMethods.filter(method => method.details.includes(zipCode));\n\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : [])\n  };\n  \n  const searchPickupZipCode =  (e, deli) => {\n    handleOnFocus(e)\n    setZipCode(deli)\n    const pickUpOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n\n    const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode));\n\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : [])\n  };\n\n  const setDelivery =  (e, deli: DeliveryMethodsConstants) => {\n    e.stopPropagation();\n    setDeliveryMethodType(deli)\n  };\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  // deliveryMethodSelected\n  const isPickUpSelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  const hasDefaultPickUpOption = true;\n  const a = (isPickUpSelected && hasDefaultPickUpOption) ? 'Find the closest PickUp Location' : 'Check delivery address ZIP CODE';\n  const cityAndStateText = isPickUpSelected ? a : location ? mobile ?\n    `${location.split(', ')[1]}, ${location.split(', ')[2]}`\n    : `${location.split(', ')[0]}, ${location.split(', ')[1]}`\n    : '';\n\n\n  return (\n    <SubHeaderWrapper className={props.className} id=\"layout-header\">\n      <PopoverBigger\n        direction=\"left\"\n        className=\"user-pages-dropdown\"\n        openHandler={<LocationMenu\n          isOpen={false} deliveryMethodSaved={deliveryMethodSaved} cityAndStateText={cityAndStateText} />\n        }\n        closeHandler={<LocationMenu\n          isOpen={true} deliveryMethodSaved={deliveryMethodSaved} cityAndStateText={cityAndStateText}/>\n        }\n        content={\n          <DeliveryMethods>\n      \n            <Options>\n              <CardWrapper color={isPickUpSelected ? '#0d1136' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.PICKUP)}>Pickup</CardWrapper> \n              <CardWrapper color={isDeliverySelected ? '#0d1136' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.DELIVERY)}>Delivery</CardWrapper> \n            </Options>\n            <Wrapper>\n              <Container>\n                <Heading  onClick={(e) => handleOnFocus(e)}>\n                  { isPickUpSelected ? (\n                    <FormattedMessage\n                      id=\"pickupModalheading\"\n                      defaultMessage=\"Select Your Location\"\n                    />\n                  ) : (\n                    <FormattedMessage\n                      id=\"deliveryModalheading\"\n                      defaultMessage=\"Select Your Location\"\n                    />\n                  )}\n                </Heading>\n                {/* <SubHeading>\n                  <FormattedMessage\n                    id=\"locationModalSubHeading\"\n                    defaultMessage=\"You have to select your location for deliver service perpous\"\n                  />\n                </SubHeading> */}\n                <div onClick={(e) => handleOnFocus(e)}>\n                <Input\n                    type='text'\n                    name='name'\n                    onFocus={(e) => handleOnFocus(e)}\n                    placeholder='Enter zip code'\n                    value={zipCode}\n                    // we have to change the onChange because the is no one for the controller name actualy\n                    onChange={(e) => isPickUpSelected ? searchPickupZipCode(e, e.target.value) : searchDeliveryZipCode(e, e.target.value)}\n                    width='197px'\n                    height='34.5px'\n                  />\n                </div>\n                { searchResult?.length === 0 && zipCode.length > 4 && (\n                   <DeliveryText>{deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP ? 'No Dittos Pickup Locations found, yet, sorry' : 'Sorry, we dont deliver there, yet..'}</DeliveryText>\n                )}\n                {searchResult?.length ? searchResult.map((result, i) => {\n                  // const isChecked = deliveryMethodSelected?.id === result.id;\n                  return (\n                      <Checkbox\n                        keyName={`${i}-results`}\n                        isChecked={deliveryMethodSelected?.id === result.id}\n                        labelText={`${result.name} - ${result.details}`}\n                        id={`result-${i}`}\n                        onChange={e => {\n                          setDeliveryMethod(deliveryMethodSelected?.id === result.id ? [] : result)\n                        }}\n\n                      />\n                    )}\n                  ) : ('')\n                }\n              </Container>\n              {/* <Button\n                  fullwidth\n                  radius={100}\n                  onClick={null}\n                >\n                  <FormattedMessage id='con' defaultMessage='Save' />\n                </Button> */}\n              <OfferSection>\n                <GiftBox />\n                <Offer>\n                  <FormattedMessage\n                    id=\"locationModalFooter\"\n                    defaultMessage=\"Free Delivery For 1st Order\"\n                    values={{ number: 1 }}\n                  />\n                </Offer>\n              </OfferSection>\n            </Wrapper>\n        </DeliveryMethods>\n        }\n      />\n  </SubHeaderWrapper>\n  );\n\n};\n\nexport default SubHeader;\n"]},"metadata":{},"sourceType":"module"}