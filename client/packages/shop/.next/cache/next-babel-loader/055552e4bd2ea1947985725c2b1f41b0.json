{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/user-profile/settings/settings.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Col } from 'react-styled-flexboxgrid';\nimport { openModal } from '@redq/reuse-modal';\nimport Router from 'next/router';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport RadioCard from 'components/radio-card/radio-card';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { DELETE_ADDRESS, SETPRIMARY_ADDRESS } from 'graphql/mutation/address';\nimport { UPDATE_USER } from 'graphql/mutation/user';\nimport { CHANGE_PASSWORD } from 'graphql/mutation/changePassword';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_PHONENUMBER, SETPRIMARY_PHONENUMBER } from 'graphql/mutation/phone';\nimport { SettingsForm, SettingsFormContent, HeadingSection, Title, Row, ButtonGroup, Input, SuccessMsg, InputUpper } from './settings.style';\nimport RadioGroupTwo from 'components/radio-group/radio-group-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport UpdateAddressTwo from 'components/address-card/address-card-two';\nimport UpdateContact from 'components/contact-card/contact-card';\nimport { Button } from 'components/button/button';\nimport { UPDATE_ME } from 'graphql/mutation/me';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Label } from 'components/forms/label';\n\nconst SettingsContent = ({\n  deviceType\n}) => {\n  var _state$oldPassword, _state$newPassword, _state$confirmPasswor;\n\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const {\n    0: userinfoMsg,\n    1: setUserinfoMsg\n  } = useState('');\n  const {\n    0: passwordChangeMsg,\n    1: setPasswordChangeMsg\n  } = useState('');\n  const {\n    authState: {\n      isAuthenticated\n    },\n    authDispatch\n  } = React.useContext(AuthContext);\n  const [updateMeMutation] = useMutation(UPDATE_ME);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n  const [updateUserMutation] = useMutation(UPDATE_USER);\n  const [changePasswordMutation] = useMutation(CHANGE_PASSWORD);\n  const [deletePhoneNumberMutation] = useMutation(DELETE_PHONENUMBER);\n  const [setprimaryPhoneNumberMutation] = useMutation(SETPRIMARY_PHONENUMBER);\n  const [setprimaryAddressMutation] = useMutation(SETPRIMARY_ADDRESS);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const intl = useIntl();\n  const passwordEmptyFields = intl.formatMessage({\n    id: 'passwordEmptyFields',\n    defaultMessage: 'passwordEmptyFields'\n  });\n  const {\n    delivery_address,\n    card,\n    name,\n    email,\n    id,\n    phones,\n    plants\n  } = state;\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    dispatch({\n      type: 'HANDLE_ON_INPUT_CHANGE',\n      payload: {\n        value,\n        field: name\n      }\n    });\n  }; // Add or edit modal\n\n\n  const handleModal = (modalComponent, modalProps = {}, className = 'add-address-modal') => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  const handleEditDelete = async (item, index, type, name) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddressTwo : UpdateContact;\n      handleModal(modalComponent, {\n        item,\n        id\n      });\n    } else {\n      switch (name) {\n        case 'payment':\n          dispatch({\n            type: 'DELETE_CARD',\n            payload: item.id\n          });\n          return await deletePaymentCardMutation({\n            variables: {\n              cardId: JSON.stringify(item.id)\n            }\n          });\n\n        case 'contact':\n          if (phones.length > 1) {\n            dispatch({\n              type: 'DELETE_CONTACT',\n              payload: item.id\n            });\n            return await deletePhoneNumberMutation({\n              variables: {\n                id,\n                phoneId: item.id\n              }\n            });\n          } else {\n            return null;\n          }\n\n        case 'address':\n          if (delivery_address.length > 1) {\n            dispatch({\n              type: 'DELETE_ADDRESS',\n              payload: item.id\n            });\n            return await deleteAddressMutation({\n              variables: {\n                id,\n                addressId: item.id\n              }\n            });\n          } else {\n            return null;\n          }\n\n        default:\n          return false;\n      }\n    }\n  };\n\n  const handlePrimary = async (item, name) => {\n    switch (name) {\n      case 'contact':\n        dispatch({\n          type: 'SET_PRIMARY_CONTACT',\n          payload: item.id\n        });\n        return await setprimaryPhoneNumberMutation({\n          variables: {\n            id,\n            phoneId: item.id\n          }\n        });\n\n      case 'address':\n        dispatch({\n          type: 'SET_PRIMARY_ADDRESS',\n          payload: item.id\n        });\n        return await setprimaryAddressMutation({\n          variables: {\n            id,\n            addressId: item.id\n          }\n        });\n\n      default:\n        return false;\n    }\n  };\n\n  const handleSave = async () => {\n    const {\n      name,\n      email\n    } = state;\n    await updateUserMutation({\n      variables: {\n        id,\n        name,\n        email\n      }\n    });\n    const {\n      0: userinfoMsg,\n      1: setUserinfoMsg\n    } = useState('');\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000);\n  };\n\n  const handleSavePassord = async () => {\n    const {\n      oldPassword,\n      newPassword,\n      confirmPassword\n    } = state;\n    const hasEmptyFields = !oldPassword || !newPassword || !confirmPassword;\n\n    if (hasEmptyFields) {\n      setPasswordChangeMsg(passwordEmptyFields);\n      return;\n    } else {\n      setPasswordChangeMsg('');\n    }\n\n    await changePasswordMutation({\n      variables: {\n        id,\n        old_password: oldPassword,\n        new_password: newPassword,\n        confirm_password: confirmPassword\n      }\n    });\n\n    if (false) {\n      localStorage.removeItem('access_token');\n      authDispatch({\n        type: 'SIGN_OUT'\n      });\n      Router.push('/');\n    }\n\n    setPasswordChangeMsg('Loadding...');\n  };\n\n  const hasEmptyFields = ((_state$oldPassword = state.oldPassword) === null || _state$oldPassword === void 0 ? void 0 : _state$oldPassword.length) === 0 || ((_state$newPassword = state.newPassword) === null || _state$newPassword === void 0 ? void 0 : _state$newPassword.length) === 0 || ((_state$confirmPasswor = state.confirmPassword) === null || _state$confirmPasswor === void 0 ? void 0 : _state$confirmPasswor.length) === 0;\n  return __jsx(SettingsForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, __jsx(HeadingSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profilePageTitle\",\n    defaultMessage: \"Your Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }))), __jsx(Row, {\n    style: {\n      alignItems: 'flex-end',\n      marginBottom: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileNameField\",\n    defaultMessage: \"Your Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  })), __jsx(InputUpper, {\n    type: \"text\",\n    label: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: handleChange,\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    marginBottom: \"10px\" // intlInputLabelId=\"profileNameField\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileEmailField\",\n    defaultMessage: \"Your Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  })), __jsx(Input, {\n    type: \"email\",\n    name: \"email\",\n    label: \"Email Address\",\n    value: email,\n    onChange: handleChange,\n    backgroundColor: \"#F7F7F7\",\n    marginBottom: \"10px\" // intlInputLabelId=\"profileEmailField\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 2,\n    md: 2,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"big\",\n    style: {\n      width: '100%',\n      marginBottom: '10px'\n    },\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileSaveBtn\",\n    defaultMessage: \"Save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }))), userinfoMsg && __jsx(SuccessMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"userInfoSuccess\",\n    defaultMessage: userinfoMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, __jsx(HeadingSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"contactNumberTItle\",\n    defaultMessage: \"Contact Numbers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 19\n    }\n  }))), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, __jsx(RadioGroupThree, {\n    items: phones,\n    component: (item, index) => __jsx(RadioCard, {\n      id: index,\n      key: index,\n      title: item.is_primary ? intl.formatMessage({\n        id: 'primaryId',\n        defaultMessage: 'Primary'\n      }) : intl.formatMessage({\n        id: 'secundaryId',\n        defaultMessage: 'Secondary'\n      }),\n      content: item.number,\n      checked: item.is_primary === true,\n      onChange: () => handlePrimary(item, 'contact'),\n      name: \"contact\",\n      onEdit: () => handleEditDelete(item, index, 'edit', 'contact'),\n      onDelete: () => handleEditDelete(item, index, 'delete', 'contact'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }\n    }),\n    secondaryComponent: __jsx(Button, {\n      size: \"big\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: () => handleModal(UpdateContact, {\n        item: {},\n        id\n      }, 'add-contact-modal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addContactBtn\",\n      defaultMessage: \"Add Contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 23\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, __jsx(HeadingSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"deliveryAddresTitle\",\n    defaultMessage: \"Delivery Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 19\n    }\n  }))), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  }, __jsx(RadioGroupTwo, {\n    items: delivery_address,\n    component: (item, index) => __jsx(RadioCardTWO, {\n      id: index,\n      key: index,\n      address: item.address,\n      instructions: item.instructions,\n      location: item.location,\n      title: item.title,\n      name: \"address\",\n      isChecked: item.is_primary === true,\n      onChange: () => handlePrimary(item, 'address'),\n      onEdit: () => handleEditDelete(item, index, 'edit', 'address'),\n      onDelete: () => handleEditDelete(item, index, 'delete', 'address'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }\n    }),\n    secondaryComponent: __jsx(Button, {\n      size: \"big\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: () => handleModal(UpdateAddressTwo, {\n        item: {},\n        id\n      }, 'add-address-modal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: (delivery_address === null || delivery_address === void 0 ? void 0 : delivery_address.length) === 3 ? \"fullDeliveryAddressesMsg\" : \"addAddressBtn\",\n      defaultMessage: \"Add Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 23\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }))))), __jsx(Row, {\n    style: {\n      alignItems: 'flex-end',\n      marginBottom: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  }, __jsx(HeadingSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"changePasswordTitle\",\n    defaultMessage: \"Change Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 19\n    }\n  }))))), __jsx(Col, {\n    xs: 12,\n    sm: 2,\n    md: 2,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"password\"\n    /* label='Old Password' */\n    ,\n    placeholder: intl.formatMessage({\n      id: 'oldPasswordId',\n      defaultMessage: 'Old password'\n    }),\n    name: \"oldPassword\",\n    value: state.oldPassword || '',\n    onChange: handleChange,\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    marginBottom: \"10px\"\n    /* intlInputLabelId=\"profileNameField\" */\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 2,\n    md: 2,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"password\",\n    label: \"New Password\",\n    placeholder: intl.formatMessage({\n      id: 'newPasswordId',\n      defaultMessage: 'New password'\n    }),\n    name: \"newPassword\",\n    value: state.newPassword || '',\n    onChange: handleChange,\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    marginBottom: \"10px\" // intlInputLabelId=\"profileNameField\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 2,\n    md: 2,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    placeholder: intl.formatMessage({\n      id: 'confirmPasswordId',\n      defaultMessage: 'Confirm password'\n    }),\n    value: state.confirmPassword || '',\n    onChange: handleChange,\n    backgroundColor: \"#F7F7F7\",\n    marginBottom: \"10px\" // intlInputLabelId=\"profileEmailField\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 2,\n    md: 2,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 11\n    }\n  }, passwordChangeMsg === passwordEmptyFields && __jsx(SuccessMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"passwordEmptyFields\",\n    defaultMessage: passwordEmptyFields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 19\n    }\n  })), !passwordChangeMsg && __jsx(Button, {\n    size: \"big\",\n    style: {\n      width: '100%',\n      marginBottom: '10px'\n    },\n    onClick: handleSavePassord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileSaveBtn\",\n    defaultMessage: \"Save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 17\n    }\n  })), passwordChangeMsg && __jsx(Button, {\n    size: \"big\",\n    style: {\n      width: '100%'\n    },\n    onClick: handleSavePassord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileSaveBtn\",\n    defaultMessage: \"Loading..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default SettingsContent;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/user-profile/settings/settings.tsx"],"names":["React","useContext","useState","useMutation","Col","openModal","Router","RadioCardTWO","RadioCard","ProfileContext","AuthContext","DELETE_ADDRESS","SETPRIMARY_ADDRESS","UPDATE_USER","CHANGE_PASSWORD","DELETE_CARD","DELETE_PHONENUMBER","SETPRIMARY_PHONENUMBER","SettingsForm","SettingsFormContent","HeadingSection","Title","Row","ButtonGroup","Input","SuccessMsg","InputUpper","RadioGroupTwo","RadioGroupThree","UpdateAddressTwo","UpdateContact","Button","UPDATE_ME","FormattedMessage","useIntl","Label","SettingsContent","deviceType","state","dispatch","userinfoMsg","setUserinfoMsg","passwordChangeMsg","setPasswordChangeMsg","authState","isAuthenticated","authDispatch","updateMeMutation","deletePaymentCardMutation","updateUserMutation","changePasswordMutation","deletePhoneNumberMutation","setprimaryPhoneNumberMutation","setprimaryAddressMutation","deleteAddressMutation","intl","passwordEmptyFields","formatMessage","id","defaultMessage","delivery_address","card","name","email","phones","plants","handleChange","e","value","target","type","payload","field","handleModal","modalComponent","modalProps","className","show","config","width","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","handleEditDelete","index","variables","cardId","JSON","stringify","length","phoneId","addressId","handlePrimary","handleSave","setTimeout","handleSavePassord","oldPassword","newPassword","confirmPassword","hasEmptyFields","old_password","new_password","confirm_password","localStorage","removeItem","push","alignItems","marginBottom","is_primary","number","position","address","instructions","location","title"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Col } from 'react-styled-flexboxgrid';\nimport { openModal } from '@redq/reuse-modal';\nimport Router, { useRouter } from 'next/router';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport RadioCard from 'components/radio-card/radio-card';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { DELETE_ADDRESS, SETPRIMARY_ADDRESS } from 'graphql/mutation/address';\nimport { UPDATE_USER } from 'graphql/mutation/user';\nimport { CHANGE_PASSWORD } from 'graphql/mutation/changePassword';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_PHONENUMBER, SETPRIMARY_PHONENUMBER } from 'graphql/mutation/phone';\nimport StripePaymentForm from 'features/payment/stripe-form';\nimport {\n  SettingsForm,\n  SettingsFormContent,\n  HeadingSection,\n  Title,\n  Row,\n  ButtonGroup,\n  Input,\n  SuccessMsg,\n  ErrorMsg,\n  InputUpper\n} from './settings.style';\nimport RadioGroupTwo from 'components/radio-group/radio-group-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\n\nimport PaymentGroup from 'components/payment-group/payment-group';\nimport UpdateAddressTwo from 'components/address-card/address-card-two';\nimport UpdateContact from 'components/contact-card/contact-card';\nimport { Button } from 'components/button/button';\nimport { UPDATE_ME } from 'graphql/mutation/me';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Label } from 'components/forms/label';\nimport { ItemCount } from 'components/cart-popup/cart-popup.style';\n\ntype SettingsContentProps = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst SettingsContent: React.FC<SettingsContentProps> = ({ deviceType }) => {\n  const { state, dispatch } = useContext(ProfileContext);\n  const [userinfoMsg, setUserinfoMsg] = useState('');\n  const [passwordChangeMsg, setPasswordChangeMsg] = useState('');\n  const {\n    authState: { isAuthenticated },\n    authDispatch,\n  } = React.useContext<any>(AuthContext);\n  const [updateMeMutation] = useMutation(UPDATE_ME);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n\n  const [updateUserMutation] = useMutation(UPDATE_USER);\n  const [changePasswordMutation] = useMutation(CHANGE_PASSWORD);\n  const [deletePhoneNumberMutation] = useMutation(DELETE_PHONENUMBER);\n  const [setprimaryPhoneNumberMutation] = useMutation(SETPRIMARY_PHONENUMBER);\n  const [setprimaryAddressMutation] = useMutation(SETPRIMARY_ADDRESS);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const intl = useIntl();\n  const passwordEmptyFields = intl.formatMessage({ id: 'passwordEmptyFields', defaultMessage: 'passwordEmptyFields' })\n\n  const { \n    delivery_address, \n    card,\n    name,\n    email,\n    id,\n    phones,\n    plants\n  } = state;\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    dispatch({\n      type: 'HANDLE_ON_INPUT_CHANGE',\n      payload: { value, field: name },\n    });\n  };\n  // Add or edit modal\n  const handleModal = (\n    modalComponent: any,\n    modalProps = {},\n    className: string = 'add-address-modal'\n  ) => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className,\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: { item: modalProps },\n    });\n  };\n\n  const handleEditDelete = async (item: any, index: any, type: string, name: string) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddressTwo : UpdateContact;\n      handleModal(modalComponent,{\n        item,\n        id\n      });\n    } else {\n      switch (name) {\n        case 'payment':\n          dispatch({ type: 'DELETE_CARD', payload: item.id });\n          return await deletePaymentCardMutation({\n            variables: { cardId: JSON.stringify(item.id) },\n          });\n        case 'contact':\n          if(phones.length > 1){\n            dispatch({ type: 'DELETE_CONTACT', payload: item.id });\n            return await deletePhoneNumberMutation({\n              variables: { \n                id,\n                phoneId: item.id\n              },\n            });\n          }else{\n            return null\n          }\n        case 'address':\n          if(delivery_address.length > 1){\n          dispatch({ type: 'DELETE_ADDRESS', payload: item.id });\n            return await deleteAddressMutation({\n              variables: { \n                id,\n                addressId: item.id\n              },\n            });\n          }else{\n            return null\n          }\n        default:\n          return false;\n      }\n    }\n  };\n\n  const handlePrimary = async (item: any, name: string) => {\n      switch (name) {\n        case 'contact':\n          dispatch({ type: 'SET_PRIMARY_CONTACT', payload: item.id });\n          return await setprimaryPhoneNumberMutation({\n            variables: { \n              id,\n              phoneId: item.id\n            },\n          });\n        case 'address':\n          dispatch({ type: 'SET_PRIMARY_ADDRESS', payload: item.id });\n            return await setprimaryAddressMutation({\n              variables: { \n                id,\n                addressId: item.id\n              },\n            });\n        default:\n          return false;\n      }\n  };\n\n  const handleSave = async () => {\n    const { name, email } = state;\n    await updateUserMutation({\n      variables: {\n         id,\n         name,\n         email\n        }\n    });\n    const [userinfoMsg, setUserinfoMsg] = useState('');\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000)\n  };\n\n  const handleSavePassord = async () => {\n    const { oldPassword , newPassword, confirmPassword } = state;\n\n    const hasEmptyFields = !oldPassword || !newPassword || !confirmPassword; \n\n    if (hasEmptyFields) {\n      setPasswordChangeMsg(passwordEmptyFields)\n      return;\n    } else {\n      setPasswordChangeMsg('')\n    }\n      await changePasswordMutation({\n        variables: {\n          id,\n          old_password: oldPassword,\n          new_password: newPassword,\n          confirm_password: confirmPassword\n          }\n      });\n      if (typeof window !== 'undefined') {\n        localStorage.removeItem('access_token');\n        authDispatch({ type: 'SIGN_OUT' });\n        Router.push('/');\n      }\n      setPasswordChangeMsg('Loadding...')\n  };\n\n  const hasEmptyFields = state.oldPassword?.length === 0 || state.newPassword?.length === 0 || state.confirmPassword?.length === 0;\n\n  return (\n    <SettingsForm>\n      <SettingsFormContent>\n        <HeadingSection>\n          <Title>\n            <FormattedMessage\n              id='profilePageTitle'\n              defaultMessage='Your Profile'\n            />\n          </Title>\n        </HeadingSection>\n        <Row style={{ alignItems: 'flex-end', marginBottom: '50px' }}>\n          <Col xs={12} sm={5} md={5} lg={5}>\n            <Label>\n              <FormattedMessage\n                id='profileNameField'\n                defaultMessage='Your Name'\n              />\n            </Label>\n            <InputUpper\n              type='text'\n              label='Name'\n              name='name'\n              value={name}\n              onChange={handleChange}\n              backgroundColor='#F7F7F7'\n              height='48px'\n              marginBottom='10px'\n              // intlInputLabelId=\"profileNameField\"\n            />\n          </Col>\n\n          <Col xs={12} sm={5} md={5} lg={5}>\n            <Label>\n              <FormattedMessage\n                id='profileEmailField'\n                defaultMessage='Your Email'\n              />\n            </Label>\n            <Input\n              type='email'\n              name='email'\n              label='Email Address'\n              value={email}\n              onChange={handleChange}\n              backgroundColor='#F7F7F7'\n              marginBottom='10px'\n              // intlInputLabelId=\"profileEmailField\"\n            />\n          </Col>\n\n          <Col xs={12} sm={2} md={2} lg={2}>\n            <Button size='big' style={{ width: '100%', marginBottom: '10px' }} onClick={handleSave}>\n              <FormattedMessage id='profileSaveBtn' defaultMessage='Save' />\n            </Button>\n          </Col>\n          {userinfoMsg && (\n              <SuccessMsg>\n                <FormattedMessage\n                  id='userInfoSuccess'\n                  defaultMessage={userinfoMsg}\n                />\n              </SuccessMsg>\n          )}\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='contactNumberTItle'\n                    defaultMessage='Contact Numbers'\n                  />\n                </Title>\n              </HeadingSection>\n              <ButtonGroup>\n                <RadioGroupThree\n                  items={phones}\n                  component={(item: any, index: any) => (\n                    <RadioCard\n                      id={index}\n                      key={index}\n                      title={item.is_primary ? intl.formatMessage({ id: 'primaryId', defaultMessage: 'Primary' }) : intl.formatMessage({ id: 'secundaryId', defaultMessage: 'Secondary' })}\n                      content={item.number}\n                      checked={item.is_primary === true}\n                      onChange={() => handlePrimary(item, 'contact')}\n                      name='contact'\n                      onEdit={() => handleEditDelete(item, index, 'edit', 'contact')}\n                      onDelete={() =>\n                        handleEditDelete(item, index, 'delete', 'contact')\n                      }\n                    />\n                  )}\n                  secondaryComponent={\n                    <Button\n                      size='big'\n                      variant='outlined'\n                      type='button'\n                      className='add-button'\n                      onClick={() =>handleModal(\n                         UpdateContact, \n                         {\n                          item:{},\n                          id\n                        }, \n                        'add-contact-modal'\n                        )\n                      }\n                    >\n                      <FormattedMessage\n                        id='addContactBtn'\n                        defaultMessage='Add Contact'\n                      />\n                    </Button>\n                  }\n                />\n              </ButtonGroup>\n            </SettingsFormContent>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12} style={{ position: 'relative' }}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='deliveryAddresTitle'\n                    defaultMessage='Delivery Address'\n                  />\n                </Title>\n              </HeadingSection>\n              <ButtonGroup>\n                <RadioGroupTwo\n                  items={delivery_address}\n                  component={(item: any, index: any) => (\n                    <RadioCardTWO \n                      id={index}\n                      key={index}\n                      address={item.address}\n                      instructions={item.instructions}\n                      location={item.location}\n                      title={item.title}\n                      name='address'\n                      isChecked={item.is_primary === true}\n                      onChange={() =>handlePrimary(item, 'address')}\n                      onEdit={() => handleEditDelete(item, index, 'edit', 'address')}\n                      onDelete={() =>\n                        handleEditDelete(item, index, 'delete', 'address')\n                      }\n                    />\n                  )}\n                  \n                  secondaryComponent={\n                    <Button\n                      size='big'\n                      variant='outlined'\n                      type='button'\n                      className='add-button'\n                      onClick={() =>handleModal(\n                          UpdateAddressTwo, \n                          {\n                            item:{},\n                            id\n                          },\n                          'add-address-modal')\n                      }\n                    >\n                      <FormattedMessage\n                        id={delivery_address?.length === 3 ? \"fullDeliveryAddressesMsg\" : \"addAddressBtn\"}\n                        defaultMessage='Add Address' \n                      />\n                    </Button>\n                  }\n                />\n              </ButtonGroup>\n            </SettingsFormContent>\n          </Col>\n        </Row>\n        <Row style={{ alignItems: 'flex-end', marginBottom: '50px' }}>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='changePasswordTitle'\n                    defaultMessage='Change Password'\n                  />\n                </Title>\n              </HeadingSection>\n            </SettingsFormContent>\n          </Col>\n          <Col xs={12} sm={2} md={2} lg={3}>\n            <Input\n              type='password'\n              /* label='Old Password' */\n              placeholder={intl.formatMessage({ id: 'oldPasswordId', defaultMessage: 'Old password' })}\n              name='oldPassword'\n              value={ state.oldPassword || '' }\n              onChange={handleChange}\n              backgroundColor='#F7F7F7'\n              height='48px'\n              marginBottom='10px'\n              /* intlInputLabelId=\"profileNameField\" */\n            />\n          </Col>\n          <Col xs={12} sm={2} md={2} lg={3}>\n            <Input\n              type='password'\n              label='New Password'\n              placeholder={intl.formatMessage({ id: 'newPasswordId', defaultMessage: 'New password' })}\n              name='newPassword'\n              value={ state.newPassword || '' }\n              onChange={handleChange}\n              backgroundColor='#F7F7F7'\n              height='48px'\n              marginBottom='10px'\n              // intlInputLabelId=\"profileNameField\"\n            />\n          </Col>\n          <Col xs={12} sm={2} md={2} lg={3}>\n            <Input\n              type='password'\n              name='confirmPassword'\n              placeholder={intl.formatMessage({ id: 'confirmPasswordId', defaultMessage: 'Confirm password' })}\n              value={ state.confirmPassword || '' }\n              onChange={handleChange}\n              backgroundColor='#F7F7F7'\n              marginBottom='10px'\n              // intlInputLabelId=\"profileEmailField\"\n            />\n          </Col>\n          <Col xs={12} sm={2} md={2} lg={3}>\n            {passwordChangeMsg === passwordEmptyFields && (\n                <SuccessMsg>\n                  <FormattedMessage\n                    id='passwordEmptyFields'\n                    defaultMessage={passwordEmptyFields}\n                  />\n                </SuccessMsg>\n            )}\n            {!passwordChangeMsg &&\n              <Button size='big' style={{ width: '100%', marginBottom: '10px' }} onClick={handleSavePassord}>\n                <FormattedMessage id='profileSaveBtn' defaultMessage='Save' />\n              </Button>\n            }\n            {passwordChangeMsg &&\n              <Button size='big' style={{ width: '100%' }} onClick={handleSavePassord}>\n                <FormattedMessage id='profileSaveBtn' defaultMessage='Loading..' />\n              </Button>\n            }\n          </Col>\n        </Row>\n        {/*<Row>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='paymentCardTitle'\n                    defaultMessage='Payments Card'\n                  />\n                </Title>\n              </HeadingSection>\n              <PaymentGroup\n                name='payment'\n                deviceType={deviceType}\n                items={card}\n                onEditDeleteField={(item: any, type: string) =>\n                  handleEditDelete(item, type, 'payment')\n                }\n                onChange={(item: any) =>\n                  dispatch({\n                    type: 'SET_PRIMARY_CARD',\n                    payload: item.id.toString(),\n                  })\n                }\n                handleAddNewCard={() => {\n                  handleModal(\n                    StripePaymentForm,\n                    { buttonText: 'Add Card' },\n                    'add-address-modal stripe-modal'\n                  );\n                }}\n              />\n            </SettingsFormContent>\n          </Col>\n        </Row>*/}\n      </SettingsFormContent>\n    </SettingsForm>\n  );\n};\n\nexport default SettingsContent;\n"]},"metadata":{},"sourceType":"module"}