{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/contexts/language/language.provider.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { InjectRTL } from 'assets/styles/global.style';\nimport Cookie from 'js-cookie';\nimport { isRTL, isLocale } from './language.utils';\nimport { StyleSheetManager } from 'styled-components';\nvar LanguageContext = React.createContext({});\nexport var LanguageProvider = function LanguageProvider(_ref) {\n  _s();\n\n  var children = _ref.children,\n      messages = _ref.messages;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      locale = _React$useState2[0],\n      setLocale = _React$useState2[1];\n\n  var changeLanguage = function changeLanguage(newLocale) {\n    setLocale(newLocale);\n    document.documentElement.lang = newLocale;\n    Cookie.set('locale', newLocale);\n  };\n\n  React.useEffect(function () {\n    console.log(locale, location);\n    setLocateBasedOnLocation();\n  }, [locale, location]);\n\n  var setLocateBasedOnLocation = function setLocateBasedOnLocation() {\n    console.log('setLocateBasedOnLocationsetLocateBasedOnLocation');\n    if (!location) return;\n    var isUs = location.toLowerCase().includes('united states');\n    var isAr = location.toLowerCase().includes('argentina');\n\n    if (isUs && locale !== Locales.EN) {\n      changeLanguage(Locales.EN);\n    } else if (isAr && locale !== Locales.ES) {\n      changeLanguage(Locales.ES);\n    }\n  };\n\n  React.useEffect(function () {\n    var localSetting = Cookie.get('locale');\n\n    if (localSetting && isLocale(localSetting)) {\n      document.documentElement.lang = localSetting;\n      setLocale(localSetting);\n    }\n  }, [locale]);\n  var isRtl = isRTL(locale);\n  return __jsx(LanguageContext.Provider, {\n    value: {\n      locale: locale,\n      changeLanguage: changeLanguage,\n      isRtl: isRtl,\n      location: location\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(IntlProvider, {\n    locale: locale,\n    messages: messages[locale],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(InjectRTL, {\n    lang: locale,\n    dir: isRtl ? 'rtl' : 'ltr',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(StyleSheetManager, {\n    stylisPlugins: [],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, children))));\n};\n\n_s(LanguageProvider, \"T5FV8Do6sFvPTBMO1+MGvybilVg=\");\n\n_c = LanguageProvider;\nexport var useLocale = function useLocale() {\n  _s2();\n\n  return React.useContext(LanguageContext);\n};\n\n_s2(useLocale, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/contexts/language/language.provider.tsx"],"names":["React","IntlProvider","InjectRTL","Cookie","isRTL","isLocale","StyleSheetManager","LanguageContext","createContext","LanguageProvider","children","messages","useState","locale","setLocale","changeLanguage","newLocale","document","documentElement","lang","set","useEffect","console","log","location","setLocateBasedOnLocation","isUs","toLowerCase","includes","isAr","Locales","EN","ES","localSetting","get","isRtl","useLocale","useContext"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { IntlProvider } from 'react-intl';\nimport { InjectRTL } from 'assets/styles/global.style';\nimport Cookie from 'js-cookie';\nimport { isRTL, isLocale } from './language.utils';\nimport { StyleSheetManager } from 'styled-components';\nimport RTLPlugin from 'stylis-plugin-rtl';\n\nconst LanguageContext = React.createContext({} as any);\n\nexport const LanguageProvider = ({ children, messages }) => {\n  const [locale, setLocale] = React.useState('');\n  const changeLanguage = (newLocale): void => {\n    setLocale(newLocale);\n    document.documentElement.lang = newLocale;\n    Cookie.set('locale', newLocale);\n  };\n\n\n  React.useEffect(() => {\n    console.log(locale, location)\n    setLocateBasedOnLocation()\n  }, [locale, location]);\n\n  const setLocateBasedOnLocation = () => {\n    console.log('setLocateBasedOnLocationsetLocateBasedOnLocation')\n    if (!location) return;\n    const isUs = location.toLowerCase().includes('united states')\n    const isAr = location.toLowerCase().includes('argentina')\n\n    if (isUs && locale !== Locales.EN) {\n      changeLanguage(Locales.EN)\n    } else if (isAr && locale !== Locales.ES) {\n      changeLanguage(Locales.ES)\n    }\n  }\n\n  \n  React.useEffect(() => {\n    const localSetting = Cookie.get('locale');\n    if (localSetting && isLocale(localSetting)) {\n      document.documentElement.lang = localSetting;\n      setLocale(localSetting);\n    }\n  }, [locale]);\n  let isRtl = isRTL(locale);\n\n  return (\n    <LanguageContext.Provider value={{ locale, changeLanguage, isRtl, location }}>\n      <IntlProvider locale={locale} messages={messages[locale]}>\n        <InjectRTL lang={locale} dir={isRtl ? 'rtl' : 'ltr'}>\n          <StyleSheetManager stylisPlugins={[]}>\n            {children}\n          </StyleSheetManager>\n        </InjectRTL>\n      </IntlProvider>\n    </LanguageContext.Provider>\n  );\n};\n\nexport const useLocale = () => React.useContext(LanguageContext);\n"]},"metadata":{},"sourceType":"module"}