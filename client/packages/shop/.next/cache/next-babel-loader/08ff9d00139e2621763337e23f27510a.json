{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/sensor-readings/HumidityReading.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Text } from '../../your-plants.style';\n\nvar HumidityReading = function HumidityReading(_ref) {\n  var _data, _data$getUser, _data$getUser$plants, _data2, _data2$getUser$plants, _data2$getUser$plants2, _data3, _data3$getUser$plants, _data3$getUser$plants2;\n\n  var module = _ref.module,\n      plantId = _ref.plantId,\n      latestDataFetched = _ref.latestDataFetched;\n  var plantIndex = (_data = data) === null || _data === void 0 ? void 0 : (_data$getUser = _data.getUser) === null || _data$getUser === void 0 ? void 0 : (_data$getUser$plants = _data$getUser.plants) === null || _data$getUser$plants === void 0 ? void 0 : _data$getUser$plants.findIndex(function (plant) {\n    return plant.plantId === plantId;\n  });\n  var sensorIndex = (_data2 = data) === null || _data2 === void 0 ? void 0 : (_data2$getUser$plants = _data2.getUser.plants[plantIndex]) === null || _data2$getUser$plants === void 0 ? void 0 : (_data2$getUser$plants2 = _data2$getUser$plants.sensors) === null || _data2$getUser$plants2 === void 0 ? void 0 : _data2$getUser$plants2.findIndex(function (sensor) {\n    return sensor.settingType === module.settingType;\n  });\n  var reading = (_data3 = data) === null || _data3 === void 0 ? void 0 : (_data3$getUser$plants = _data3.getUser.plants[plantIndex]) === null || _data3$getUser$plants === void 0 ? void 0 : (_data3$getUser$plants2 = _data3$getUser$plants.sensors[sensorIndex]) === null || _data3$getUser$plants2 === void 0 ? void 0 : _data3$getUser$plants2.reading; // console.log('data?.getUser.plants[plantIndex]?.sensor', data?.getUser.plants[plantIndex].sensors, module.settingType)\n  // console.log('plantIndex', plantIndex)\n  // console.log('reading', reading)\n  // if (reading > -5 && reading <= 0) reading = 0;\n  // if (reading >= 100 && reading < 110) reading = 100;\n\n  return __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"\".concat(reading, \" % \\uD83D\\uDCA7\"));\n};\n\n_c = HumidityReading;\nexport default HumidityReading;\n\nvar _c;\n\n$RefreshReg$(_c, \"HumidityReading\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/sensor-readings/HumidityReading.tsx"],"names":["React","Text","HumidityReading","module","plantId","latestDataFetched","plantIndex","data","getUser","plants","findIndex","plant","sensorIndex","sensors","sensor","settingType","reading"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,yBAArB;;AAQA,IAAMC,eAAgC,GAAG,SAAnCA,eAAmC,OAA6C;AAAA;;AAAA,MAA1CC,MAA0C,QAA1CA,MAA0C;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,iBAAyB,QAAzBA,iBAAyB;AAClF,MAAMC,UAAU,YAAGC,IAAH,2DAAG,MAAMC,OAAT,0EAAG,cAAeC,MAAlB,yDAAG,qBAAuBC,SAAvB,CAAiC,UAACC,KAAD;AAAA,WAAgBA,KAAK,CAACP,OAAN,KAAkBA,OAAlC;AAAA,GAAjC,CAAnB;AACA,MAAMQ,WAAW,aAAGL,IAAH,oEAAG,OAAMC,OAAN,CAAcC,MAAd,CAAqBH,UAArB,CAAH,oFAAG,sBAAkCO,OAArC,2DAAG,uBAA2CH,SAA3C,CAAqD,UAACI,MAAD;AAAA,WAAiBA,MAAM,CAACC,WAAP,KAAuBZ,MAAM,CAACY,WAA/C;AAAA,GAArD,CAApB;AACA,MAAIC,OAAO,aAAGT,IAAH,oEAAG,OAAMC,OAAN,CAAcC,MAAd,CAAqBH,UAArB,CAAH,oFAAG,sBAAkCO,OAAlC,CAA0CD,WAA1C,CAAH,2DAAG,uBAAwDI,OAAtE,CAHkF,CAIlF;AACA;AACA;AAEA;AACA;;AAEA,SACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAeA,OAAf,qBADJ;AAGH,CAdD;;KAAMd,e;AAgBN,eAAeA,eAAf","sourcesContent":["import React from 'react';\nimport { Text } from '../../your-plants.style';\n\ninterface Props {\n  module: any;\n  plantId: any;\n  latestDataFetched: any;\n}\n\nconst HumidityReading: React.FC<Props> = ({ module, plantId, latestDataFetched  }) => {\n    const plantIndex = data?.getUser?.plants?.findIndex((plant: any) => plant.plantId === plantId);\n    const sensorIndex = data?.getUser.plants[plantIndex]?.sensors?.findIndex((sensor: any) => sensor.settingType === module.settingType);            \n    let reading = data?.getUser.plants[plantIndex]?.sensors[sensorIndex]?.reading;\n    // console.log('data?.getUser.plants[plantIndex]?.sensor', data?.getUser.plants[plantIndex].sensors, module.settingType)\n    // console.log('plantIndex', plantIndex)\n    // console.log('reading', reading)\n    \n    // if (reading > -5 && reading <= 0) reading = 0;\n    // if (reading >= 100 && reading < 110) reading = 100;\n\n    return (\n        <Text bold>{`${reading} % ğŸ’§`}</Text>\n    );\n};\n\nexport default HumidityReading;\n"]},"metadata":{},"sourceType":"module"}