{"ast":null,"code":"var _jsxFileName = \"/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/authentication-form/login.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { Button, Wrapper, Container, Heading, SubHeading, Offer // Input,\n} from './authentication-form.style';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { closeModal } from '@redq/reuse-modal';\nimport { SIGNIN_MUTATION } from 'graphql/mutation/signin';\nimport Router, { useRouter } from 'next/router';\nimport PhoneInput from 'react-phone-input-2';\n// import us from 'react-phone-input-2/lang/es.json'\nimport ar from 'react-phone-input-2/lang/es.json';\nimport { currentLng } from 'utils/constant';\nexport default function SignInModal() {\n  const router = useRouter();\n  const intl = useIntl();\n  const {\n    authDispatch\n  } = useContext(AuthContext);\n  const [phone, setPhone] = React.useState('');\n  const [password, setPassword] = React.useState('123456');\n  const [errorMessage, setErrorMessage] = React.useState(null);\n\n  const toggleSignUpForm = () => {\n    authDispatch({\n      type: 'SIGNUP'\n    });\n  };\n\n  const toggleForgotPassForm = () => {\n    authDispatch({\n      type: 'FORGOTPASS'\n    });\n  };\n\n  const togglePhoneVerificationForm = () => {\n    authDispatch({\n      type: 'PHONE_VERIFICATION'\n    });\n  };\n\n  const [signinMeMutation, {\n    loading,\n    error,\n    data\n  }] = useMutation(SIGNIN_MUTATION, {\n    onCompleted: data => {\n      const {\n        access_token,\n        user\n      } = data.login;\n\n      if (false) {\n        localStorage.setItem('access_token', `${access_token}`);\n        authDispatch({\n          type: 'SIGNIN_SUCCESS',\n          user\n        });\n        closeModal();\n        Router.push('/[type]', router.asPath);\n      }\n    },\n    onError: error => {\n      setPhone('');\n      setPassword('');\n      if ((error === null || error === void 0 ? void 0 : error.toString()) && (error === null || error === void 0 ? void 0 : error.toString().includes('User does not exits'))) setErrorMessage(intl.formatMessage({\n        id: 'userNotFound',\n        defaultMessage: 'Usuario inexistente'\n      }));else if ((error === null || error === void 0 ? void 0 : error.toString()) && (error === null || error === void 0 ? void 0 : error.toString().includes('Incorrect length'))) setErrorMessage(intl.formatMessage({\n        id: 'atLeast6Char',\n        defaultMessage: 'Mínimo 6 caracteres'\n      }));else if ((error === null || error === void 0 ? void 0 : error.toString()) && (error === null || error === void 0 ? void 0 : error.toString().includes('Anteponer el número 54'))) setErrorMessage(intl.formatMessage({\n        id: 'a',\n        defaultMessage: 'Anteponer el número 54'\n      }));else if ((error === null || error === void 0 ? void 0 : error.toString()) && (error === null || error === void 0 ? void 0 : error.toString().includes('Todos los campos son requeridos'))) setErrorMessage(intl.formatMessage({\n        id: 'a',\n        defaultMessage: 'Todos los campos son requeridos'\n      }));else setErrorMessage(error === null || error === void 0 ? void 0 : error.toString());\n    }\n  });\n\n  const handlePhoneChange = (value, data, event, formattedValue) => {\n    setPhone(value);\n  }; // {authError && <p style={{\n  //   marginTop: \"15px\", fontSize: '16px'\n  // }}> {intl.formatMessage({ id: 'userNotFound', defaultMessage: 'Invalid user/password' })}</p>}\n\n\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"welcomeBack\",\n    defaultMessage: \"Welcome Back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), __jsx(SubHeading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"loginText\",\n    defaultMessage: \"Login with your phone number & password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), __jsx(\"form\", {\n    onSubmit: async e => {\n      e.preventDefault();\n      await signinMeMutation({\n        variables: {\n          phone,\n          password\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(PhoneInput, {\n    inputProps: {\n      name: 'phone',\n      required: true,\n      autoFocus: false\n    },\n    containerStyle: {\n      textAlign: \"left\"\n    },\n    inputStyle: {\n      backgroundColor: \"#F7F7F7\",\n      height: \"48px\",\n      marginBottom: \"10px\",\n      width: \"100%\"\n    },\n    onlyCountries: [currentLng],\n    localization: ar,\n    country: currentLng,\n    masks: {\n      ar: '(...) ...-....'\n    },\n    value: phone,\n    onChange: handlePhoneChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    variant: \"primary\",\n    size: \"big\",\n    disable: loading,\n    style: {\n      width: '100%'\n    },\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, !loading ? __jsx(FormattedMessage, {\n    id: \"continueBtn\",\n    defaultMessage: \"Continue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }) : __jsx(FormattedMessage, {\n    id: \"loading\",\n    defaultMessage: \"Cargando...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }))), errorMessage && __jsx(\"p\", {\n    style: {\n      marginTop: \"15px\",\n      fontSize: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, \" \", errorMessage), __jsx(Offer, {\n    style: {\n      padding: '20px 0',\n      fontSize: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"dontHaveAccount\",\n    defaultMessage: \"Don't have an account?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }), ' ', __jsx(Button, {\n    variant: \"primary\",\n    size: \"big\",\n    disable: loading,\n    style: {\n      width: '100%'\n    },\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 12\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"signUpBtnText\",\n    defaultMessage: \"Continue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/authentication-form/login.tsx"],"names":["React","useContext","Button","Wrapper","Container","Heading","SubHeading","Offer","useMutation","AuthContext","FormattedMessage","useIntl","closeModal","SIGNIN_MUTATION","Router","useRouter","PhoneInput","ar","currentLng","SignInModal","router","intl","authDispatch","phone","setPhone","useState","password","setPassword","errorMessage","setErrorMessage","toggleSignUpForm","type","toggleForgotPassForm","togglePhoneVerificationForm","signinMeMutation","loading","error","data","onCompleted","access_token","user","login","localStorage","setItem","push","asPath","onError","toString","includes","formatMessage","id","defaultMessage","handlePhoneChange","value","event","formattedValue","e","preventDefault","variables","name","required","autoFocus","textAlign","backgroundColor","height","marginBottom","width","marginTop","fontSize","padding"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport {\n  LinkButton,\n  Button,\n  IconWrapper,\n  Wrapper,\n  Container,\n  LogoWrapper,\n  Heading,\n  SubHeading,\n  OfferSection,\n  Offer,\n  // Input,\n  Divider,\n} from './authentication-form.style';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { closeModal } from '@redq/reuse-modal';\nimport { Input } from 'components/forms/input';\nimport { SIGNIN_MUTATION } from 'graphql/mutation/signin';\nimport Router, { useRouter } from 'next/router';\nimport PhoneInput from 'react-phone-input-2'\nimport startsWith from 'lodash.startswith';\n// import us from 'react-phone-input-2/lang/es.json'\nimport ar from 'react-phone-input-2/lang/es.json'\nimport { currentLng } from 'utils/constant';\n\nexport default function SignInModal() {\n  const router = useRouter();\n  const intl = useIntl();\n  const { authDispatch } = useContext<any>(AuthContext);\n  const [phone, setPhone] = React.useState('');\n  const [password, setPassword] = React.useState('123456');\n  const [errorMessage, setErrorMessage] = React.useState(null);\n\n  const toggleSignUpForm = () => {\n    authDispatch({\n      type: 'SIGNUP',\n    });\n  };\n\n  const toggleForgotPassForm = () => {\n    authDispatch({\n      type: 'FORGOTPASS',\n    });\n  };\n\n  const togglePhoneVerificationForm = () => {\n    authDispatch({\n      type: 'PHONE_VERIFICATION',\n    });\n  };\n\n  const [\n    signinMeMutation,\n    { \n      loading,\n      error,\n      data\n    }\n  ] = useMutation(SIGNIN_MUTATION,{\n    onCompleted: (data) => {\n      const { access_token, user } = data.login;\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('access_token', `${access_token}`);\n        authDispatch({ \n          type: 'SIGNIN_SUCCESS',\n          user\n        });\n        closeModal();\n        Router.push('/[type]', router.asPath);\n      }\n    },\n    onError: (error) => {\n      setPhone('');\n      setPassword('');\n      if (error?.toString() && error?.toString().includes('User does not exits')) setErrorMessage(intl.formatMessage({ id: 'userNotFound', defaultMessage: 'Usuario inexistente' }))\n      else if (error?.toString() && error?.toString().includes('Incorrect length')) setErrorMessage(intl.formatMessage({ id: 'atLeast6Char', defaultMessage: 'Mínimo 6 caracteres' }))\n      else if (error?.toString() && error?.toString().includes('Anteponer el número 54')) setErrorMessage(intl.formatMessage({ id: 'a', defaultMessage: 'Anteponer el número 54' }))\n      else if (error?.toString() && error?.toString().includes('Todos los campos son requeridos')) setErrorMessage(intl.formatMessage({ id: 'a', defaultMessage: 'Todos los campos son requeridos' }))\n      else setErrorMessage(error?.toString())\n    }\n  });\n\n  const handlePhoneChange = (value, data, event, formattedValue) => {\n    setPhone(value)\n  }\n\n    // {authError && <p style={{\n    //   marginTop: \"15px\", fontSize: '16px'\n    // }}> {intl.formatMessage({ id: 'userNotFound', defaultMessage: 'Invalid user/password' })}</p>}\n    \n  return (\n    <Wrapper>\n      <Container>\n        <Heading>\n          <FormattedMessage id='welcomeBack' defaultMessage='Welcome Back' />\n        </Heading>\n\n        <SubHeading>\n          <FormattedMessage\n            id='loginText'\n            defaultMessage='Login with your phone number &amp; password'\n          />\n        </SubHeading>\n        <form onSubmit={\n            async (e) => {\n                e.preventDefault();\n                await signinMeMutation({\n                  variables: {phone, password}\n                });\n              }\n          }\n        >\n          <PhoneInput\n              inputProps={{\n                name: 'phone',\n                required: true,\n                autoFocus: false\n              }}\n              containerStyle={{textAlign: \"left\"}}\n              inputStyle={{backgroundColor: \"#F7F7F7\", height: \"48px\", marginBottom: \"10px\", width: \"100%\"}}\n              onlyCountries={[currentLng]}\n              localization={ar}\n              country={currentLng}\n              masks={{ar: '(...) ...-....'}}\n              value={phone}\n              onChange={handlePhoneChange}\n          />\n\n          {/* <Input\n            type='password'\n            placeholder={intl.formatMessage({\n              id: 'passwordPlaceholder',\n              defaultMessage: 'Password',\n            })}\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            height='48px'\n            backgroundColor='#F7F7F7'\n            width='100%'\n            mb='10px'\n          /> */}\n\n          <Button\n            variant='primary'\n            size='big'\n            disable={loading}\n            style={{ width: '100%' }}\n            type='submit'\n          >\n            { !loading ? (\n              <FormattedMessage id='continueBtn' defaultMessage='Continue' />\n            ) : (\n              <FormattedMessage id='loading' defaultMessage='Cargando...' />\n            )}\n          </Button>\n        </form>\n        \n        {errorMessage &&<p style={{\n          marginTop: \"15px\", fontSize: '16px'\n        }}> {errorMessage}</p>}\n      \n        <Offer style={{ padding: '20px 0', fontSize: '20px' }}>\n          <FormattedMessage\n            id='dontHaveAccount'\n            defaultMessage=\"Don't have an account?\"\n          />{' '}\n           <Button\n            variant='primary'\n            size='big'\n            disable={loading}\n            style={{ width: '100%' }}\n            type='submit'\n          >\n              <FormattedMessage id='signUpBtnText' defaultMessage='Continue' />\n          </Button>\n          {/* <LinkButton onClick={toggleSignUpForm}>\n            <FormattedMessage id='signUpBtnText' defaultMessage='Sign Up' />\n          </LinkButton> */}\n        </Offer>\n      </Container>\n  \n  {/*   <OfferSection>\n        <Offer>\n          <FormattedMessage\n            id='phoneVerifyText'\n            defaultMessage='Phone number not verified?'\n          />{' '}\n          <LinkButton onClick={togglePhoneVerificationForm}>\n            <FormattedMessage id='verifyNowText' defaultMessage='Verify Now' />\n          </LinkButton>\n        </Offer>\n      </OfferSection> */}\n\n      {/*<OfferSection>\n        <Offer>\n          <FormattedMessage\n            id='forgotPasswordText'\n            defaultMessage='Forgot your password?'\n          />{' '}\n          <LinkButton onClick={toggleForgotPassForm}>\n            <FormattedMessage id='resetText' defaultMessage='Reset It' />\n          </LinkButton>\n        </Offer>\n      </OfferSection>*/}\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}