{"ast":null,"code":"var _jsxFileName = \"/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/components/product-grid/product-list-two/product-list-two.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport FoodCard from 'components/product-card/product-card-four/product-card-four';\nimport { ProductsRow, ProductsCol, LoaderWrapper, LoaderItem, ProductCardWrapper } from '../product-list/product-list.style';\nimport { useQuery } from '@apollo/react-hooks';\nimport Placeholder from 'components/placeholder/placeholder';\nimport Fade from 'react-reveal/Fade';\nimport NoResultFound from 'components/no-result/no-result';\nimport { customerDistance } from 'utils/customerDistance';\nimport { formatTime } from 'utils/formatTime';\nimport { GET_VENDORS } from 'graphql/query/vendors.query';\nexport const Products = ({\n  deviceType,\n  type,\n  fetchLimit = 26,\n  loadMore = true\n}) => {\n  var _data$vendors;\n\n  const router = useRouter();\n  const {\n    0: loadingMore,\n    1: toggleLoading\n  } = useState(false);\n  const {\n    data,\n    error,\n    loading,\n    fetchMore\n  } = useQuery(GET_VENDORS, {\n    variables: {\n      type: type,\n      text: router.query.text,\n      category: router.query.category,\n      offset: 0,\n      limit: fetchLimit\n    }\n  });\n\n  if (loading) {\n    return __jsx(LoaderWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, __jsx(LoaderItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      uniqueKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    })), __jsx(LoaderItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      uniqueKey: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })), __jsx(LoaderItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      uniqueKey: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, error.message);\n\n  if (!data || !data.vendors || data.vendors.items.length === 0) {\n    return __jsx(NoResultFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const handleLoadMore = () => {\n    toggleLoading(true);\n    fetchMore({\n      variables: {\n        offset: Number(data.vendors.items.length),\n        limit: fetchLimit\n      },\n      updateQuery: (prev, {\n        fetchMoreResult\n      }) => {\n        toggleLoading(false);\n\n        if (!fetchMoreResult) {\n          return prev;\n        }\n\n        return {\n          vendors: {\n            __typename: prev.vendors.__typename,\n            items: [...prev.vendors.items, ...fetchMoreResult.vendors.items],\n            totalCount: fetchMoreResult.vendors.totalCount,\n            hasMore: fetchMoreResult.vendors.hasMore\n          }\n        };\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ProductsRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$vendors = data.vendors) === null || _data$vendors === void 0 ? void 0 : _data$vendors.items.map((item, index) => __jsx(ProductsCol, {\n    key: index,\n    className: \"food-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, __jsx(ProductCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(Fade, {\n    duration: 800,\n    delay: index * 10,\n    style: {\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, __jsx(FoodCard, {\n    name: item.name,\n    image: item.thumbnailUrl,\n    restaurantType: item === null || item === void 0 ? void 0 : item.categories.join(', '),\n    duration: formatTime(customerDistance()),\n    delivery: item.deliveryDetails.charge,\n    isFree: item.deliveryDetails.isFree,\n    discountInPercent: item.promotion,\n    data: item,\n    onClick: () => router.push('/restaurant/[slug]', `/restaurant/${item.slug}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  })))))));\n};\nexport default Products;","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/components/product-grid/product-list-two/product-list-two.tsx"],"names":["React","useState","useRouter","FoodCard","ProductsRow","ProductsCol","LoaderWrapper","LoaderItem","ProductCardWrapper","useQuery","Placeholder","Fade","NoResultFound","customerDistance","formatTime","GET_VENDORS","Products","deviceType","type","fetchLimit","loadMore","router","loadingMore","toggleLoading","data","error","loading","fetchMore","variables","text","query","category","offset","limit","message","vendors","items","length","handleLoadMore","Number","updateQuery","prev","fetchMoreResult","__typename","totalCount","hasMore","map","item","index","height","name","thumbnailUrl","categories","join","deliveryDetails","charge","isFree","promotion","push","slug"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport FoodCard from 'components/product-card/product-card-four/product-card-four';\nimport {\n  ProductsRow,\n  ProductsCol,\n  ButtonWrapper,\n  LoaderWrapper,\n  LoaderItem,\n  ProductCardWrapper,\n} from '../product-list/product-list.style';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Button } from 'components/button/button';\nimport Placeholder from 'components/placeholder/placeholder';\nimport Fade from 'react-reveal/Fade';\nimport NoResultFound from 'components/no-result/no-result';\n\nimport { customerDistance } from 'utils/customerDistance';\nimport { formatTime } from 'utils/formatTime';\nimport { FormattedMessage } from 'react-intl';\nimport { GET_VENDORS } from 'graphql/query/vendors.query';\n\ntype ProductsProps = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n  type: string;\n  fetchLimit?: number;\n  loadMore?: boolean;\n};\nexport const Products: React.FC<ProductsProps> = ({\n  deviceType,\n  type,\n  fetchLimit = 26,\n  loadMore = true,\n}) => {\n  const router = useRouter();\n  const [loadingMore, toggleLoading] = useState(false);\n  const { data, error, loading, fetchMore } = useQuery(GET_VENDORS, {\n    variables: {\n      type: type,\n      text: router.query.text,\n      category: router.query.category,\n      offset: 0,\n      limit: fetchLimit,\n    },\n  });\n\n  if (loading) {\n    return (\n      <LoaderWrapper>\n        <LoaderItem>\n          <Placeholder uniqueKey=\"1\" />\n        </LoaderItem>\n        <LoaderItem>\n          <Placeholder uniqueKey=\"2\" />\n        </LoaderItem>\n        <LoaderItem>\n          <Placeholder uniqueKey=\"3\" />\n        </LoaderItem>\n      </LoaderWrapper>\n    );\n  }\n\n  if (error) return <div>{error.message}</div>;\n  if (!data || !data.vendors || data.vendors.items.length === 0) {\n    return <NoResultFound />;\n  }\n  const handleLoadMore = () => {\n    toggleLoading(true);\n    fetchMore({\n      variables: {\n        offset: Number(data.vendors.items.length),\n        limit: fetchLimit,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        toggleLoading(false);\n        if (!fetchMoreResult) {\n          return prev;\n        }\n        return {\n          vendors: {\n            __typename: prev.vendors.__typename,\n            items: [...prev.vendors.items, ...fetchMoreResult.vendors.items],\n            totalCount: fetchMoreResult.vendors.totalCount,\n            hasMore: fetchMoreResult.vendors.hasMore,\n          },\n        };\n      },\n    });\n  };\n\n  return (\n    <>\n      <ProductsRow>\n        {data?.vendors?.items.map((item: any, index: number) => (\n          <ProductsCol key={index} className=\"food-col\">\n            <ProductCardWrapper>\n              <Fade\n                duration={800}\n                delay={index * 10}\n                style={{ height: '100%' }}\n              >\n                <FoodCard\n                  name={item.name}\n                  image={item.thumbnailUrl}\n                  restaurantType={item?.categories.join(', ')}\n                  duration={formatTime(customerDistance())}\n                  delivery={item.deliveryDetails.charge}\n                  isFree={item.deliveryDetails.isFree}\n                  discountInPercent={item.promotion}\n                  data={item}\n                  onClick={() =>\n                    router.push(\n                      '/restaurant/[slug]',\n                      `/restaurant/${item.slug}`\n                    )\n                  }\n                />\n              </Fade>\n            </ProductCardWrapper>\n          </ProductsCol>\n        ))}\n      </ProductsRow>\n      {/* {loadMore && data.vendors.hasMore && (\n        <ButtonWrapper>\n          <Button\n            onClick={handleLoadMore}\n            loading={loadingMore}\n            variant=\"secondary\"\n            // title=\"Load More\"\n            // intlButtonId=\"loadMoreBtn\"\n            // size=\"small\"\n            // isLoading={loadingMore}\n            // loader={<Loader color=\"#009E7F\" />}\n            // style={{\n            //   minWidth: 135,\n            //   backgroundColor: '#ffffff',\n            border=\"1px solid #f1f1f1\"\n            //   color: '#009E7F',\n            // }}\n          >\n            <FormattedMessage id=\"loadMoreButton\" defaultMessage=\"Load More\" />\n          </Button>\n        </ButtonWrapper>\n      )} */}\n    </>\n  );\n};\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}