{"ast":null,"code":"var _jsxFileName = \"/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two-sections/delivery-selection.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { Button, ButtonGroup, CardWrapper, DeliveryMethods, Options } from './delivery-selection.style';\nimport { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { Plus } from 'assets/icons/PlusMinus';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport { IconWrapper } from '../checkout-two/checkout-two.style';\n\nconst DeliverySelection = (_ref) => {\n  let props = Object.assign({}, _ref);\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const {\n    0: deliveryAddressAutocomplete,\n    1: setDeliveryAddressAutocomplete\n  } = useState(\"\");\n  const {\n    0: notInsideDeliveryAreas,\n    1: setNotInsideDeliveryAreas\n  } = useState(false); // const setDeliveryMethod =  (deliveryOrPickupMethodSelected) => {\n  //   const deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : {...deliveryOrPickupMethodSelected, deliveryAddressAutocomplete};\n  //   setDeliveryMethodSelected(deliveryMethod)\n  //   props.setDeliveryAddress(deliveryMethod, false)\n  //   // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n  //   // }\n  // };\n\n  function inside(point, vs) {\n    var x = point[0],\n        y = point[1];\n    var inside = false;\n\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0],\n          yi = vs[i][1];\n      var xj = vs[j][0],\n          yj = vs[j][1];\n      var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  ;\n\n  const searchPickupZipCode = e => {\n    var _props$deliveryMethod;\n\n    const zipCode = e.target.value;\n    handleOnFocus(e);\n    setZipCode(zipCode);\n    const pickUpOptionsMethods = (_props$deliveryMethod = props.deliveryMethods) === null || _props$deliveryMethod === void 0 ? void 0 : _props$deliveryMethod.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    }); // const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode)\n\n    const methodsFound = zipCode === resistenciaZipCode ? pickUpOptionsMethods : []; // e.stopPropagation();\n\n    props.setDeliveryMethodsSelected(methodsFound.length > 0 ? methodsFound : null);\n  };\n\n  const setDelivery = (e, deli) => {\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    props.setDeliveryMethodType(deli);\n    props.setDeliveryMethodsSelected(null);\n    setZipCode('');\n  };\n\n  const deleteDeliveryAddress = () => {\n    props.setDeliveryMethodsSelected(null);\n    props.setDeliveryAddress(null, true);\n    setDeliveryAddressAutocomplete('');\n    setNotInsideDeliveryAreas(false);\n    props.setDeliveryMethodType(null);\n    setZipCode('');\n  };\n\n  const handleOnFocus = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }; // deliveryMethodSelected\n\n\n  const isPickUpSelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  const intl = useIntl();\n\n  const handleSelect = async (address, addressAlreadyAdded) => {\n    const results = await geocodeByAddress(address);\n    console.log('results', results, address);\n    const latLng = await getLatLng(results[0]);\n    setNotInsideDeliveryAreas(false);\n    let deliveryOptionsMethods = [];\n\n    if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n      var _props$deliveryMethod2;\n\n      deliveryOptionsMethods = (_props$deliveryMethod2 = props.deliveryMethods) === null || _props$deliveryMethod2 === void 0 ? void 0 : _props$deliveryMethod2.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n      var _props$deliveryMethod3;\n\n      deliveryOptionsMethods = (_props$deliveryMethod3 = props.deliveryMethods) === null || _props$deliveryMethod3 === void 0 ? void 0 : _props$deliveryMethod3.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n      var _props$deliveryMethod4;\n\n      deliveryOptionsMethods = (_props$deliveryMethod4 = props.deliveryMethods) === null || _props$deliveryMethod4 === void 0 ? void 0 : _props$deliveryMethod4.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n      var _props$deliveryMethod5;\n\n      deliveryOptionsMethods = (_props$deliveryMethod5 = props.deliveryMethods) === null || _props$deliveryMethod5 === void 0 ? void 0 : _props$deliveryMethod5.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else {\n      setNotInsideDeliveryAreas(true);\n      console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n    }\n\n    if (!notInsideDeliveryAreas) {\n      var _results$;\n\n      props.setDeliveryMethodsSelected(deliveryOptionsMethods);\n      props.setDeliveryAddress((_results$ = results[0]) === null || _results$ === void 0 ? void 0 : _results$.formatted_address, addressAlreadyAdded);\n    }\n  };\n\n  console.log('props.userSavedAddresses', props.userSavedAddresses);\n  return __jsx(React.Fragment, null, __jsx(DeliveryMethods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, __jsx(Options, {\n    style: {\n      justifyContent: !props.deliveryMethodsSelected ? 'space-between' : 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, __jsx(CardWrapper, {\n    color: isPickUpSelected ? '#009E7F' : '#e4f4fc',\n    onClick: e => setDelivery(e, DeliveryMethodsConstants.PICKUP),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"pickUpId\",\n    defaultMessage: \"notFoundId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 142\n    }\n  })), __jsx(CardWrapper, {\n    color: isDeliverySelected ? '#009E7F' : '#e4f4fc',\n    onClick: e => setDelivery(e, DeliveryMethodsConstants.DELIVERY),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"deliveryId\",\n    defaultMessage: \"notFoundId2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 146\n    }\n  })))), !!props.userSavedAddresses.length && props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY && __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, __jsx(RadioGroupThree, {\n    items: props.userSavedAddresses,\n    component: (item, index) => __jsx(RadioCardTWO, {\n      id: index,\n      key: index,\n      address: item.address,\n      location: item.location,\n      instructions: item.instructions,\n      title: item.title,\n      name: \"address\",\n      isChecked: item.is_primary === true,\n      onChange: () => props.handlePrimary(item, 'address'),\n      onClick: () => {\n        var _item$address, _item$address2;\n\n        handleSelect(`${(_item$address = item.address) === null || _item$address === void 0 ? void 0 : _item$address.split(\",\")[0]} ${(_item$address2 = item.address) === null || _item$address2 === void 0 ? void 0 : _item$address2.split(\",\")[1]}, ${item.location}, ${item.instructions}`, true);\n      },\n      hasEdit: false // onEdit={() => props.handleEditDelete(item, index, 'edit', 'address')}\n      ,\n      onDelete: () => props.handleEditDelete(item, index, 'delete', 'address'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }),\n    secondaryComponent: props.deliveryMethodsSelected ? null : __jsx(Button, {\n      className: \"addButton\",\n      variant: \"text\",\n      type: \"button\",\n      onClick: () => deleteDeliveryAddress(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 18\n      }\n    }, __jsx(IconWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, __jsx(Plus, {\n      width: \"10px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 23\n      }\n    })), __jsx(FormattedMessage, {\n      id: \"changeAddress\",\n      defaultMessage: \"Add New\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default DeliverySelection;","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two-sections/delivery-selection.tsx"],"names":["React","useState","FormattedMessage","useIntl","DeliveryMethodsConstants","plazaBelgranoPolygon","plazaEspañaPolygon","plazaNueveDeJulioPolygon","plazadoceDeOctubrePolygon","resistenciaZipCode","Button","ButtonGroup","CardWrapper","DeliveryMethods","Options","geocodeByAddress","getLatLng","Plus","RadioCardTWO","RadioGroupThree","IconWrapper","DeliverySelection","props","zipCode","setZipCode","searchResult","setSearchResult","deliveryAddressAutocomplete","setDeliveryAddressAutocomplete","notInsideDeliveryAreas","setNotInsideDeliveryAreas","inside","point","vs","x","y","i","j","length","xi","yi","xj","yj","intersect","searchPickupZipCode","e","target","value","handleOnFocus","pickUpOptionsMethods","deliveryMethods","filter","deliveryMethod","isPickUp","methodsFound","setDeliveryMethodsSelected","setDelivery","deli","stopPropagation","setDeliveryMethodType","deleteDeliveryAddress","setDeliveryAddress","event","preventDefault","isPickUpSelected","deliveryMethodTypeSelected","PICKUP","isDeliverySelected","DELIVERY","intl","handleSelect","address","addressAlreadyAdded","results","console","log","latLng","deliveryOptionsMethods","lat","lng","details","includes","name","formatted_address","userSavedAddresses","justifyContent","deliveryMethodsSelected","item","index","location","instructions","title","is_primary","handlePrimary","split","handleEditDelete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, deliveryMethodCookieKeyName, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport { ActionButton, ActionsButtons, BannerIcon, Button, ButtonGroup, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Offer, OfferSection, Options, PickUpOptions, Wrapper } from './delivery-selection.style';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { alignContent, borderRadius, display, flexDirection, justifyContent, textAlign, width } from 'styled-system';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { ADD_ADDRESS } from 'graphql/mutation/address';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { Plus } from 'assets/icons/PlusMinus';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport RadioGroupTwo from 'components/radio-group/radio-group-two';\nimport { IconWrapper } from '../checkout-two/checkout-two.style';\n\n\ninterface Props {\n  deliveryMethodSelected: any\n  setDeliveryAddress: any\n  deliveryMethodTypeSelected: any\n  setDeliveryMethodsSelected: any\n  deliveryMethodsSelected: any\n  setDeliveryMethodType: any\n  deliveryMethods: any\n  setSubmitResult: (result: any) => void\n  submitResult: any\n  cartProduct: any // Added this line\n  handleEditDelete?: (item: any, index: number, action: string, type: string) => void // Added this line\n  userSavedAddresses?: any[] // Added this line\n  handlePrimary?: (item: any, type: string) => void // Added this line\n}\n\nconst DeliverySelection: React.FC<Props> = ({ ...props  }) => {\n\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddressAutocomplete, setDeliveryAddressAutocomplete] = useState(\"\");\n  const [notInsideDeliveryAreas, setNotInsideDeliveryAreas] = useState(false);\n\n  // const setDeliveryMethod =  (deliveryOrPickupMethodSelected) => {\n  //   const deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : {...deliveryOrPickupMethodSelected, deliveryAddressAutocomplete};\n  //   setDeliveryMethodSelected(deliveryMethod)\n  //   props.setDeliveryAddress(deliveryMethod, false)\n\n  //   // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n  //   // }\n  // };\n\n  function inside(point, vs) {\n    var x = point[0], y = point[1];\n    \n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0], yi = vs[i][1];\n        var xj = vs[j][0], yj = vs[j][1];\n        \n        var intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    \n    return inside;\n};\n\n  const searchPickupZipCode =  (e) => {\n    const zipCode = e.target.value;\n    handleOnFocus(e)\n    setZipCode(zipCode)\n    const pickUpOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n\n    // const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode)\n    const methodsFound = zipCode === resistenciaZipCode ? pickUpOptionsMethods : [];\n\n    // e.stopPropagation();\n\n    props.setDeliveryMethodsSelected(methodsFound.length > 0 ? methodsFound : null)\n\n  };\n\n  const setDelivery =  (e, deli: DeliveryMethodsConstants) => {\n    e?.stopPropagation();\n    props.setDeliveryMethodType(deli)\n    props.setDeliveryMethodsSelected(null)\n    setZipCode('')\n  };\n\n  const deleteDeliveryAddress =  () => {\n\n\n    props.setDeliveryMethodsSelected(null)\n    props.setDeliveryAddress(null, true);\n    setDeliveryAddressAutocomplete('')\n    setNotInsideDeliveryAreas(false)\n    props.setDeliveryMethodType(null)\n    setZipCode('')\n  };\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  // deliveryMethodSelected\n  const isPickUpSelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  const intl = useIntl();\n\n  const handleSelect = async (address, addressAlreadyAdded: false) => {\n\n    const results = await geocodeByAddress(address);\n    console.log('results',results, address);\n    const latLng = await getLatLng(results[0]);\n    setNotInsideDeliveryAreas(false);\n    let deliveryOptionsMethods = [];\n\n    if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n      deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n      deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n        deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n          if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) { deliveryMethod.name = 'GRATIS'; return true;}\n          return !deliveryMethod.isPickUp;\n        });\n    } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n      deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else {\n      setNotInsideDeliveryAreas(true);\n      console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n    }\n    if (!notInsideDeliveryAreas) {\n      props.setDeliveryMethodsSelected(deliveryOptionsMethods)\n      props.setDeliveryAddress(results[0]?.formatted_address, addressAlreadyAdded) \n    }\n  };\nconsole.log('props.userSavedAddresses', props.userSavedAddresses)\n  return (\n      <>\n        <DeliveryMethods>\n          <Options style={{justifyContent: !props.deliveryMethodsSelected ? 'space-between' : 'space-between'}}>\n              <CardWrapper color={isPickUpSelected ? '#009E7F' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.PICKUP)}><FormattedMessage id=\"pickUpId\" defaultMessage=\"notFoundId\" /></CardWrapper>\n              <CardWrapper color={isDeliverySelected ? '#009E7F' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.DELIVERY)}><FormattedMessage id=\"deliveryId\" defaultMessage=\"notFoundId2\" /></CardWrapper>\n          </Options>\n        </DeliveryMethods>\n        \n        { !!props.userSavedAddresses.length && props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY && (\n          <ButtonGroup>\n            <RadioGroupThree\n              items={props.userSavedAddresses}\n                component={(item: any, index: any) => (\n                <RadioCardTWO\n                    id={index}\n                    key={index}\n                    address={item.address}\n                    location={item.location}\n                    instructions={item.instructions}\n                    title={item.title}\n                    name='address'\n                    isChecked={item.is_primary === true}\n                    onChange={() => props.handlePrimary(item, 'address')}\n                    onClick={() => { \n                      handleSelect(`${item.address?.split(\",\")[0]} ${item.address?.split(\",\")[1]}, ${item.location}, ${item.instructions}`, true);\n                    }}\n                    hasEdit={false}\n                    // onEdit={() => props.handleEditDelete(item, index, 'edit', 'address')}\n                    onDelete={() =>\n                      props.handleEditDelete(item, index, 'delete', 'address')\n                    }\n                  />\n                )}\n              secondaryComponent={ props.deliveryMethodsSelected ? null :\n                (<Button\n                    className='addButton'\n                    variant='text'\n                    type='button'\n                    onClick={() => deleteDeliveryAddress()}\n                  >\n                    <IconWrapper>\n                      <Plus width='10px' />\n                    </IconWrapper>\n                    <FormattedMessage id='changeAddress' defaultMessage='Add New' />\n                  </Button>)\n                  }\n                />\n              </ButtonGroup>\n            )}\n        \n      </>\n    );\n\n};\n\nexport default DeliverySelection;\n\n"]},"metadata":{},"sourceType":"module"}