{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/add-time-schedule/add-schedule-card.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/react-hooks';\nimport { UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { ButtonsContainer, Heading, ListDes, ListItem, ListTitle, PlantsSensorContainer, Text } from './add-schedule-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Loader from 'components/loader/loader';\nimport TimePicker from 'react-time-picker'; // Shape of form values\n\n// Wrap our form with the using withFormik HoC\nvar FormEnhancer = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      id: props.item.id || null,\n      name: props.item.name || '',\n      info: props.item.info || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Required!'),\n    info: Yup.string().required('Required')\n  }),\n  handleSubmit: function handleSubmit(values) {// do submitting things\n  }\n});\n\nvar AddTimeSchedule = function AddTimeSchedule(props) {\n  _s();\n\n  var isValid = props.isValid,\n      item = props.item,\n      values = props.values,\n      touched = props.touched,\n      errors = props.errors,\n      dirty = props.dirty,\n      handleChange = props.handleChange,\n      handleBlur = props.handleBlur,\n      handleReset = props.handleReset,\n      isSubmitting = props.isSubmitting;\n  var addressValue = {\n    id: values.id,\n    type: 'secondary',\n    name: values.name,\n    info: values.info\n  };\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(''),\n      startTime = _useState2[0],\n      startTimeChange = _useState2[1];\n\n  var _useState3 = useState('10:00'),\n      endTime = _useState3[0],\n      endTimeChange = _useState3[1];\n\n  var _useMutation = useMutation(UPDATE_ADDRESS),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addressMutation = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  var intl = useIntl();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var addressData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!isValid) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 3;\n              return addressMutation({\n                variables: {\n                  addressInput: JSON.stringify(addressValue)\n                }\n              });\n\n            case 3:\n              addressData = _context.sent;\n              setLoading(true);\n              dispatch({\n                type: 'ADD_OR_UPDATE_ADDRESS',\n                payload: addressValue\n              });\n              closeModal();\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onOpeningsChange = function onOpeningsChange(e) {\n    setOpenings(e);\n    console.log('openings::::::', e);\n  }; // const weekDays = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\n  // const lightSchedule = {\n  //     daysToRepeat: [weekDays[0], weekDays[2], weekDays[3]],\n  //     startTime: '00:00',\n  //     endTime: '23:59',\n  //     enabled: true,\n  //     smartLight: false\n  // }\n  // const b = {\n  //     daysToRepeat: [weekDays[0], weekDays[2], weekDays[3]]\n  // }\n  // const onTimes = [a, b]\n  //set notification schedule\n  // [mon] tue wed thu ...\n  // 00:00 --- 07:15\n  // 15:15 ----- 23:59\n  // Add time Schedule (button)\n  // (when pressing the button you see this pop up)\n  // Add time Schedule\n  //start time: 00:00\n  //end time: 23:59\n  // repeat: (touch and you can see all days of the week to select/deselect) press ok, and original view is seeing the selected days\n  // also the smart option for when is no light and there should be light\n\n\n  return (// <Form style={{ height: '100px' }}>\n    __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }\n    }, __jsx(Heading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, __jsx(Heading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, intl.formatMessage({\n      id: 'addTimeScheduleId',\n      defaultMessage: 'addTimeScheduleId'\n    }))), __jsx(PlantsSensorContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"startTimeId\",\n      defaultMessage: \"startTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, __jsx(TimePicker, {\n      onChange: startTimeChange(startTime),\n      value: startTime,\n      disableClock: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"endTimeId\",\n      defaultMessage: \"endTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, __jsx(TimePicker, {\n      onChange: endTimeChange(endTime),\n      value: endTime,\n      disableClock: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    })))), __jsx(ButtonsContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      onClick: handleSubmit,\n      type: \"submit\" // style={{ width: '100%', height: '44px', marginTop: '200px' }}\n      ,\n      loader: __jsx(Loader, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }\n      }),\n      isDisabled: loading,\n      isLoading: loading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addTimeFrameId\",\n      defaultMessage: \"addTimeFrameId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    })), __jsx(Button, {\n      onClick: handleSubmit,\n      type: \"submit\",\n      style: {\n        marginLeft: '20px'\n      },\n      loader: __jsx(Loader, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 19\n        }\n      }),\n      isDisabled: loading,\n      isLoading: loading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"cancelTimeFrameId\",\n      defaultMessage: \"cancelTimeFrameId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }))))\n  );\n};\n\n_s(AddTimeSchedule, \"t+D5cWPdLWJXxdnBCSO8YReNeus=\", false, function () {\n  return [useMutation, useIntl];\n});\n\n_c = AddTimeSchedule;\nexport default _c2 = FormEnhancer(AddTimeSchedule);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddTimeSchedule\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/add-time-schedule/add-schedule-card.tsx"],"names":["React","useContext","useState","Yup","withFormik","Form","closeModal","Button","useMutation","UPDATE_ADDRESS","ButtonsContainer","Heading","ListDes","ListItem","ListTitle","PlantsSensorContainer","Text","ProfileContext","FormattedMessage","useIntl","Loader","TimePicker","FormEnhancer","mapPropsToValues","props","id","item","name","info","validationSchema","object","shape","string","required","handleSubmit","values","AddTimeSchedule","isValid","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","addressValue","type","state","dispatch","loading","setLoading","startTime","startTimeChange","endTime","endTimeChange","addressMutation","data","intl","variables","addressInput","JSON","stringify","addressData","payload","onOpeningsChange","e","setOpenings","console","log","formatMessage","defaultMessage","marginLeft"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, FormikProps, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/react-hooks';\nimport { UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { ButtonsContainer, FieldWrapper, Heading, ListDes, ListItem, ListTitle, PlantsSensorContainer, Text } from './add-schedule-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Loader from 'components/loader/loader';\n\nimport TimePicker from 'react-time-picker'\n\n\n// Shape of form values\ninterface FormValues {\n  id?: number | null;\n  name?: string;\n  info?: string;\n}\n\n// The type of props MyForm receives\ninterface MyFormProps {\n  item?: any | null;\n}\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik<MyFormProps, FormValues>({\n  \n  // Transform outer props into form values\n  mapPropsToValues: (props) => {\n    return {\n      id: props.item.id || null,\n      name: props.item.name || '',\n      info: props.item.info || '',\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Required!'),\n    info: Yup.string().required('Required'),\n  }),\n  handleSubmit: (values) => {\n    // do submitting things\n  },\n});\n\nconst AddTimeSchedule = (props: FormikProps<FormValues> & MyFormProps) => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n\n    handleReset,\n    isSubmitting,\n  } = props;\n  const addressValue = {\n    id: values.id,\n    type: 'secondary',\n    name: values.name,\n    info: values.info,\n  };\n  const { state, dispatch } = useContext(ProfileContext);\n  const [loading, setLoading] = useState(false);\n  const [startTime, startTimeChange] = useState('');\n  const [endTime, endTimeChange] = useState('10:00');\n  const [addressMutation, { data }] = useMutation(UPDATE_ADDRESS);\n  const intl = useIntl();\n\n  const handleSubmit = async () => {\n    if (isValid) {\n      const addressData = await addressMutation({\n        variables: { addressInput: JSON.stringify(addressValue) },\n      });\n      \n      setLoading(true);\n      dispatch({ type: 'ADD_OR_UPDATE_ADDRESS', payload: addressValue });\n      closeModal();\n      setLoading(false);\n    }\n  };\n\n  const onOpeningsChange = (e: any) => {\n    setOpenings(e);\n    console.log('openings::::::', e)\n  };\n\n    // const weekDays = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\n\n    // const lightSchedule = {\n    //     daysToRepeat: [weekDays[0], weekDays[2], weekDays[3]],\n    //     startTime: '00:00',\n    //     endTime: '23:59',\n    //     enabled: true,\n    //     smartLight: false\n    // }\n\n    // const b = {\n    //     daysToRepeat: [weekDays[0], weekDays[2], weekDays[3]]\n    // }\n    // const onTimes = [a, b]\n\n\n    //set notification schedule\n    // [mon] tue wed thu ...\n    // 00:00 --- 07:15\n    // 15:15 ----- 23:59\n    // Add time Schedule (button)\n\n    // (when pressing the button you see this pop up)\n    // Add time Schedule\n    //start time: 00:00\n    //end time: 23:59\n\n    // repeat: (touch and you can see all days of the week to select/deselect) press ok, and original view is seeing the selected days\n\n\n    // also the smart option for when is no light and there should be light\n  return (\n    // <Form style={{ height: '100px' }}>\n    <Form>\n      <Heading>{<Heading>{intl.formatMessage({ id: 'addTimeScheduleId', defaultMessage: 'addTimeScheduleId' })}</Heading>}</Heading>\n      \n      <PlantsSensorContainer>\n        <ListItem>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"startTimeId\"\n                defaultMessage=\"startTimeId\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <TimePicker\n              onChange={startTimeChange(startTime)}\n              value={startTime}\n              disableClock={true}\n            />\n          </ListDes>\n        </ListItem>\n\n        <ListItem>\n          <ListTitle>\n            <Text bold>\n              <FormattedMessage\n                id=\"endTimeId\"\n                defaultMessage=\"endTimeId\"\n              />\n            </Text>\n          </ListTitle>\n          <ListDes>\n            <TimePicker\n              onChange={endTimeChange(endTime)}\n              value={endTime}\n              disableClock={true}\n            />\n          </ListDes>\n        </ListItem>\n      </PlantsSensorContainer>\n      \n      <ButtonsContainer>\n        <Button\n          onClick={handleSubmit}\n          type=\"submit\"\n          // style={{ width: '100%', height: '44px', marginTop: '200px' }}\n          loader={<Loader />}\n          isDisabled={loading}\n          isLoading={loading}\n        >\n          <FormattedMessage id=\"addTimeFrameId\" defaultMessage=\"addTimeFrameId\" />\n        </Button>\n        <Button\n          onClick={handleSubmit}\n          type=\"submit\"\n          style={{ marginLeft: '20px' }}\n          loader={<Loader />}\n          isDisabled={loading}\n          isLoading={loading}\n        >\n          <FormattedMessage id=\"cancelTimeFrameId\" defaultMessage=\"cancelTimeFrameId\" />\n        </Button>\n      </ButtonsContainer>\n\n    </Form>\n  );\n};\n\nexport default FormEnhancer(AddTimeSchedule);\n"]},"metadata":{},"sourceType":"module"}