{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/DistanceSensor.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { Formik, Form } from 'formik';\nimport { HumiditySensorMode, WeekDays, fourRelaysOptions, manualModeOptions, DistanceMode, distanceModeOptions } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, InputUpper, WeekContainer, DayContainer, ScheduleTime, TextSpaced, CardButtons, ActionButton, Text, Status, Type } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';\nimport { getRelayNameText, getSettingTypeText } from 'utils/sensorUtils';\nimport { CheckMark } from 'assets/icons/CheckMark';\nvar WarningsValidationSchema = Yup.object().shape({\n  number: Yup.number().integer().min(0).max(100).required('Number is required')\n});\n\nvar DistanceSensor = function DistanceSensor(_ref) {\n  _s();\n\n  var plant = _ref.plant,\n      settingType = _ref.settingType,\n      handleSettingsChange = _ref.handleSettingsChange,\n      onDeleteSchedule = _ref.onDeleteSchedule,\n      data = _ref.data,\n      openTab = _ref.openTab,\n      setOpenTab = _ref.setOpenTab,\n      handleDeleteSensor = _ref.handleDeleteSensor;\n  var setting = plant.sensors.find(function (sensor) {\n    return sensor.settingType === settingType;\n  });\n  var intl = useIntl();\n\n  var _useState = useState(''),\n      daySelected = _useState[0],\n      setDay = _useState[1];\n\n  var _useState2 = useState(false),\n      editIsOn = _useState2[0],\n      setEditIsOn = _useState2[1];\n\n  var selectedMode = distanceModeOptions.find(function (option) {\n    return option.value === setting.mode;\n  });\n  var selectedManualState = manualModeOptions.find(function (option) {\n    return option.value === setting.relayOneWorking;\n  });\n  var relayOneSelected = fourRelaysOptions.find(function (option) {\n    return option.value === setting.relayOneIdRelated;\n  });\n  var relayTwoSelected = fourRelaysOptions.find(function (option) {\n    return option.value === setting.relayTwoIdRelated;\n  });\n  var selectStyle = {\n    control: function control(styles) {\n      return _objectSpread(_objectSpread({}, styles), {}, {\n        width: '160px',\n        textAlign: 'left'\n      });\n    }\n  }; // const tabIsOpen = openTab === settingType;\n\n  var tabIsOpen = true;\n\n  var handleModal = function handleModal(modalComponent) {\n    var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'add-time-schedule-modal';\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  var initialValues = {\n    id: ContactItem.id || null,\n    type: ContactItem.type || 'secondary',\n    number: ContactItem.number || ''\n  };\n  return __jsx(Formik, {\n    initialValues: true,\n    onSubmit: handleSubmit,\n    validationSchema: WarningsValidationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var _setting$scheduledOnT, _setting$relayOneIdRe, _setting$relayOneIdRe2, _setting$logs;\n\n    var values = _ref2.values,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, __jsx(PlantsSensorContainer, {\n      style: {\n        height: tabIsOpen ? '100%' : '82px'\n      },\n      onClick: function onClick() {\n        return setOpenTab(tabIsOpen ? '' : settingType);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, __jsx(Type, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, getSettingTypeText(setting === null || setting === void 0 ? void 0 : setting.settingType))), __jsx(ListDes, {\n      style: {\n        marginLeft: '-10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, __jsx(CardButtons, {\n      className: \"button-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, editIsOn ? __jsx(ActionButton, {\n      onClick: function onClick() {\n        return setEditIsOn(!editIsOn);\n      },\n      className: \"edit-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, __jsx(CheckMark, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    })) : __jsx(ActionButton, {\n      onClick: function onClick() {\n        return setEditIsOn(!editIsOn);\n      },\n      className: \"edit-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, __jsx(PencilIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    })), __jsx(ActionButton, {\n      onClick: function onClick() {\n        return handleDeleteSensor(plant, settingType);\n      },\n      className: \"delete-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, __jsx(CloseIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }))))), (setting === null || setting === void 0 ? void 0 : setting.mode) === DistanceMode.NONE && !!openTab && __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, __jsx(Status, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"modoRequiredWarningText\",\n      defaultMessage: \"modoRequiredWarningText\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"distanceId\",\n      defaultMessage: \"distanceId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, (setting === null || setting === void 0 ? void 0 : setting.reading) > 0 && (setting === null || setting === void 0 ? void 0 : setting.reading) < 100 ? (setting === null || setting === void 0 ? void 0 : setting.reading) + 'cm.' : '-', \" \"))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"plantName\",\n      defaultMessage: \"plantName\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, editIsOn ? __jsx(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: setting.name,\n      placeholder: intl.formatMessage({\n        id: 'plantNameRequiredNameId',\n        defaultMessage: 'plantNameRequiredNameId'\n      }),\n      onChange: function onChange(e) {\n        return handleSettingsChange(plant, 'name', e.target.value, settingType);\n      },\n      backgroundColor: \"#F7F7F7\",\n      height: \"34.5px\" // intlInputLabelId=\"profileEmailField\"\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }) : __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }, setting === null || setting === void 0 ? void 0 : setting.name))), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"distanceModeId\",\n      defaultMessage: \"distanceModeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, editIsOn ? __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleSettingsChange(plant, 'mode', e.value, settingType);\n      },\n      value: selectedMode // placeholder={'asdsad'}\n      ,\n      options: distanceModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }) : __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }, selectedMode.label))), (setting === null || setting === void 0 ? void 0 : setting.mode) !== DistanceMode.NONE && __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"notifyChangesId\",\n      defaultMessage: \"notifyChangesId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, __jsx(Switch, {\n      disabled: false,\n      checked: setting.whatsappWarningsOn,\n      labelPosition: 'right' // className,\n      ,\n      onUpdate: function onUpdate() {\n        return handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }))), setting.mode === DistanceMode.ASSOCIATED_MIN_MAX && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"maxDistanceId\",\n      defaultMessage: \"maxDistanceId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, editIsOn ? __jsx(Input, {\n      type: \"number\",\n      name: \"maxWarning\",\n      value: setting.maxWarning,\n      onChange: function onChange(e) {\n        return handleSettingsChange(plant, 'maxWarning', e.target.value, settingType);\n      },\n      backgroundColor: \"#F7F7F7\",\n      height: \"34.5px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    }) : __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 29\n      }\n    }, setting.maxWarning))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"minDistanceId\",\n      defaultMessage: \"minDistanceId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }, editIsOn ? __jsx(InputUpper, {\n      type: \"number\",\n      name: \"minWarning\",\n      value: setting.minWarning,\n      onChange: function onChange(e) {\n        return handleSettingsChange(plant, 'minWarning', e.target.value, settingType);\n      },\n      backgroundColor: \"#F7F7F7\",\n      height: \"34.5px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 29\n      }\n    }) : __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 29\n      }\n    }, setting.minWarning))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"asociateRelayOneId\",\n      defaultMessage: \"asociateRelayOneId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }, editIsOn ? __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType);\n      },\n      value: relayOneSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 29\n      }\n    }) : __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 29\n      }\n    }, (setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated) : '-'))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"asociateRelayTwoId\",\n      defaultMessage: \"asociateRelayTwoId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }\n    }, editIsOn ? __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleSettingsChange(plant, 'relayTwoIdRelated', e.value, settingType);\n      },\n      value: relayTwoSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 25\n      }\n    }) : __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 25\n      }\n    }, (setting === null || setting === void 0 ? void 0 : setting.relayTwoIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayTwoIdRelated) : '-')))), setting.mode === HumiditySensorMode.SCHEDULE && __jsx(React.Fragment, null, __jsx(WeekContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }\n    }, Object.keys(WeekDays).map(function (day, i) {\n      return __jsx(DayContainer, {\n        key: i + '-day--humidity-1container',\n        style: {\n          backgroundColor: daySelected === day ? '#c2b0b0' : 'transparent'\n        },\n        onClick: function onClick() {\n          return setDay(day);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 25\n        }\n      }, day.substring(0, 3));\n    })), setting === null || setting === void 0 ? void 0 : (_setting$scheduledOnT = setting.scheduledOnTimes) === null || _setting$scheduledOnT === void 0 ? void 0 : _setting$scheduledOnT.map(function (schedule, i) {\n      return __jsx(WeekContainer, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 25\n        }\n      }, schedule.daysToRepeat.includes(daySelected) ? __jsx(ScheduleTime, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 33\n        }\n      }, __jsx(TextSpaced, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 33\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"startTimeId\",\n        defaultMessage: \"startTimeId\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 45\n        }\n      })), \" \", __jsx(TextSpaced, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 125\n        }\n      }, schedule.startTime), __jsx(TextSpaced, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 33\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"endTimeId\",\n        defaultMessage: \"endTimeId\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 45\n        }\n      })), \" \", __jsx(TextSpaced, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 121\n        }\n      }, schedule.endTime), __jsx(CardButtons, {\n        className: \"button-wrapper\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 33\n        }\n      }, __jsx(ActionButton, {\n        onClick: function onClick() {\n          var _data$getUser;\n\n          return handleModal(AddTimeSchedule, {\n            settingType: settingType,\n            plant: plant,\n            id: data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : _data$getUser.id\n          });\n        },\n        className: \"edit-btn\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 37\n        }\n      }, __jsx(PencilIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 37\n        }\n      })), __jsx(ActionButton, {\n        onClick: function onClick() {\n          return onDeleteSchedule(plant, settingType, i);\n        },\n        className: \"delete-btn\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 37\n        }\n      }, __jsx(CloseIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 37\n        }\n      })))) : __jsx(ScheduleTime, {\n        style: {\n          border: '0px',\n          height: '42px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 33\n        }\n      }));\n    }), __jsx(ListItem, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"notifyChangesId\",\n      defaultMessage: \"notifyChangesId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }, __jsx(Switch, {\n      disabled: false,\n      checked: setting.whatsappWarningsOn,\n      labelPosition: 'right' // className,\n      ,\n      onUpdate: function onUpdate() {\n        return handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }\n    }))), __jsx(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: function onClick() {\n        var _data$getUser2;\n\n        return handleModal(AddTimeSchedule, {\n          name: 'add-humidity-1-schedule',\n          plant: plant,\n          id: data === null || data === void 0 ? void 0 : (_data$getUser2 = data.getUser) === null || _data$getUser2 === void 0 ? void 0 : _data$getUser2.id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addTimeScheduleId\",\n      defaultMessage: \"addTimeScheduleId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }\n    }))), setting.mode === HumiditySensorMode.MANUAL && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"manualModeStateId\",\n      defaultMessage: \"manualModeStateId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleSettingsChange(plant, 'relayOneWorking', e.value, settingType);\n      },\n      value: selectedManualState,\n      options: manualModeOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 25\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: ((_setting$relayOneIdRe = setting.relayOneIdRelated) === null || _setting$relayOneIdRe === void 0 ? void 0 : _setting$relayOneIdRe.length) ? 'asociateRelayId' : 'asociatedRelayId',\n      defaultMessage: ((_setting$relayOneIdRe2 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe2 === void 0 ? void 0 : _setting$relayOneIdRe2.length) ? 'asociateRelayId' : 'asociatedRelayId',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 21\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType);\n      },\n      value: relayOneSelected,\n      options: fourRelaysOptions,\n      styles: selectStyle,\n      menuPosition: 'fixed',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 25\n      }\n    })))), setting.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"irrigationTimeId\",\n      defaultMessage: \"irrigationTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 21\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }\n    }, __jsx(Input, {\n      type: \"number\",\n      name: \"relayOneAutomatedTimeToRun\",\n      value: setting.relayOneAutomatedTimeToRun,\n      onChange: function onChange(e) {\n        return handleSettingsChange(plant, 'relayOneAutomatedTimeToRun', e.target.value, settingType);\n      },\n      backgroundColor: \"#F7F7F7\",\n      height: \"34.5px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 21\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"irrigationEvacuationTimeId\",\n      defaultMessage: \"irrigationEvacuationTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 21\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }\n    }, __jsx(Input, {\n      type: \"number\",\n      name: \"relayTwoAutomatedTimeToRun\",\n      value: setting.relayTwoAutomatedTimeToRun,\n      onChange: function onChange(e) {\n        return handleSettingsChange(plant, 'relayTwoAutomatedTimeToRun', e.target.value, settingType);\n      },\n      backgroundColor: \"#F7F7F7\",\n      height: \"34.5px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 21\n      }\n    })))), (setting === null || setting === void 0 ? void 0 : (_setting$logs = setting.logs) === null || _setting$logs === void 0 ? void 0 : _setting$logs.length) > 0 && __jsx(HumidityLogsGraph, {\n      data: setting.logs,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }\n    })));\n  });\n};\n\n_s(DistanceSensor, \"027o7eGty4cJ5pm9+3zN6SQR4dk=\", false, function () {\n  return [useIntl];\n});\n\n_c = DistanceSensor;\n{\n  /* );\n  }; */\n}\nexport default DistanceSensor;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistanceSensor\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/DistanceSensor.tsx"],"names":["React","useState","Yup","CloseIcon","PencilIcon","Button","Switch","FormattedMessage","useIntl","Select","Input","Formik","Form","HumiditySensorMode","WeekDays","fourRelaysOptions","manualModeOptions","DistanceMode","distanceModeOptions","HumidityLogsGraph","PlantsSensorContainer","ListItem","ListTitle","ListDes","InputUpper","WeekContainer","DayContainer","ScheduleTime","TextSpaced","CardButtons","ActionButton","Text","Status","Type","openModal","AddTimeSchedule","getRelayNameText","getSettingTypeText","CheckMark","WarningsValidationSchema","object","shape","number","integer","min","max","required","DistanceSensor","plant","settingType","handleSettingsChange","onDeleteSchedule","data","openTab","setOpenTab","handleDeleteSensor","setting","sensors","find","sensor","intl","daySelected","setDay","editIsOn","setEditIsOn","selectedMode","option","value","mode","selectedManualState","relayOneWorking","relayOneSelected","relayOneIdRelated","relayTwoSelected","relayTwoIdRelated","selectStyle","control","styles","width","textAlign","tabIsOpen","handleModal","modalComponent","modalProps","className","show","config","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","initialValues","id","ContactItem","type","handleSubmit","values","handleChange","handleBlur","justifyContent","marginLeft","NONE","reading","name","formatMessage","defaultMessage","e","target","label","whatsappWarningsOn","ASSOCIATED_MIN_MAX","maxWarning","minWarning","length","SCHEDULE","Object","keys","map","day","i","backgroundColor","substring","scheduledOnTimes","schedule","daysToRepeat","includes","startTime","endTime","getUser","border","MANUAL","SEEDS_POOL_IRRIGATION","relayOneAutomatedTimeToRun","relayTwoAutomatedTimeToRun","logs"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { FormikProps, ErrorMessage, Formik, Form } from 'formik';\nimport { HumiditySensorMode, WeekDays, fourRelaysOptions, humidityModeOptions, manualModeOptions, SensorsTypes, DistanceMode, distanceModeOptions } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, InputUpper, WeekContainer, DayContainer, ScheduleTime, TextSpaced, CardButtons, ActionButton, Text, Status, ButtonText, Type, Row } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';  \nimport { ISetting } from 'utils/types';\nimport { getRelayNameText, getSettingTypeText } from 'utils/sensorUtils';\nimport { CheckMark } from 'assets/icons/CheckMark';\n\ninterface Props {\n  data?: any;\n  plant: any;\n  openTab: string;\n  setOpenTab: (settingType: string) => void;\n  handleDeleteSensor: (plant: any, settingType: string) => void;\n  settingType: SensorsTypes;\n  handleSettingsChange: (plant: any, field: string, value: string | boolean, settingType: SensorsTypes) => void;\n  onDeleteSchedule: (plant: any, settingType: SensorsTypes, position: number) => void;\n}\n\ntype FormValues = {\n  id?: any | null;\n  type?: string;\n  number?: string;\n};\n\nconst WarningsValidationSchema = Yup.object().shape({\n    number: Yup.number()\n    .integer()\n    .min(0).max(100).required('Number is required'),\n  });\n\nconst DistanceSensor: React.FC<Props> = ({ plant, settingType, handleSettingsChange, onDeleteSchedule, data, openTab, setOpenTab, handleDeleteSensor  }) => {\n    const setting = plant.sensors.find((sensor: ISetting) => sensor.settingType === settingType);\n    const intl = useIntl();\n    const [daySelected, setDay] = useState('');\n    const [editIsOn, setEditIsOn] = useState(false);\n    const selectedMode = distanceModeOptions.find((option) => option.value === setting.mode);\n    const selectedManualState = manualModeOptions.find((option) => option.value === setting.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === setting.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find((option) => option.value === setting.relayTwoIdRelated);\n    const selectStyle = { control: styles => ({ ...styles, width: '160px', textAlign: 'left' }) };\n    // const tabIsOpen = openTab === settingType;\n    const tabIsOpen = true;\n    \n    const handleModal = (\n        modalComponent: any,\n        modalProps = {},\n        className: string = 'add-time-schedule-modal'\n        ) => {\n        openModal({\n            show: true,\n            config: {\n            width: 360,\n            height: 'auto',\n            enableResizing: false,\n            disableDragging: true,\n            className: className,\n            },\n            closeOnClickOutside: true,\n            component: modalComponent,\n            componentProps: { item: modalProps },\n        });\n    };\n\n    const initialValues = {\n        id: ContactItem.id || null,\n        type: ContactItem.type || 'secondary',\n        number: ContactItem.number || '',\n      };\n\n    return (\n        <Formik\n            initialValues\n            onSubmit={handleSubmit}\n            validationSchema={WarningsValidationSchema}\n            >\n            {({\n                values,\n                handleChange,\n                handleBlur\n            }: FormikProps<FormValues>) => (\n                <Form>\n            \n        <PlantsSensorContainer style={{ height: tabIsOpen ? '100%' : '82px' }} onClick={() => setOpenTab(tabIsOpen ? '' : settingType)}>\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Type bold>{getSettingTypeText(setting?.settingType)}</Type>\n                </ListTitle>\n                <ListDes style={{ marginLeft: '-10px' }}>\n                    <CardButtons className='button-wrapper'>\n                        { editIsOn ? (\n                            <ActionButton onClick={() => setEditIsOn(!editIsOn)} className='edit-btn'>\n                                <CheckMark />\n                            </ActionButton>\n                        ) : (\n                            <ActionButton onClick={() => setEditIsOn(!editIsOn)} className='edit-btn'>\n                                <PencilIcon />\n                            </ActionButton>\n                        )}\n                        <ActionButton onClick={() => handleDeleteSensor(plant, settingType)} className='delete-btn'>\n                            <CloseIcon />\n                        </ActionButton>\n                    </CardButtons>\n                </ListDes>\n            \n            </ListItem>\n\n            { (setting?.mode === DistanceMode.NONE && !!openTab) && (\n                <ListItem>\n                    <Status>\n                        <FormattedMessage id=\"modoRequiredWarningText\" defaultMessage=\"modoRequiredWarningText\" />\n                    </Status>\n                </ListItem>\n            )}\n\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Text>\n                        <FormattedMessage\n                        id=\"distanceId\"\n                        defaultMessage=\"distanceId\"\n                        />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    <Text bold>{(setting?.reading > 0 && setting?.reading < 100) ? setting?.reading + 'cm.'  : '-' } </Text>\n                </ListDes>\n            \n            </ListItem>\n\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Text>\n                    <FormattedMessage\n                        id=\"plantName\"\n                        defaultMessage=\"plantName\"\n                    />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    { editIsOn ? (\n                        <Input\n                            type='text'\n                            name='name'\n                            value={setting.name}\n                            placeholder={intl.formatMessage({ id: 'plantNameRequiredNameId', defaultMessage: 'plantNameRequiredNameId' })}\n                            onChange={(e: any) => handleSettingsChange(plant, 'name', e.target.value, settingType)}\n                            backgroundColor='#F7F7F7'\n                            height='34.5px'\n                            // intlInputLabelId=\"profileEmailField\"\n                        />\n                    ) : (\n                        <Text  bold>{setting?.name}</Text>\n                    )}\n                </ListDes>\n            </ListItem>\n        \n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Text>\n                        <FormattedMessage\n                        id=\"distanceModeId\"\n                        defaultMessage=\"distanceModeId\"\n                        />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                { editIsOn ? (\n                    <Select \n                        onChange={(e: any) => handleSettingsChange(plant, 'mode', e.value, settingType)}\n                        value={selectedMode}\n                        // placeholder={'asdsad'}\n                        options={distanceModeOptions}\n                        styles={selectStyle}\n                        menuPosition={'fixed'}\n                    />\n                    ) : (\n                        <Text bold>{selectedMode.label}</Text>\n                    )}\n                </ListDes>\n            </ListItem>\n         \n            { setting?.mode !== DistanceMode.NONE && (\n                <ListItem style={{ justifyContent: 'flex-start' }}>\n                    <ListTitle>\n                    <Text bold>\n                        <FormattedMessage\n                        id=\"notifyChangesId\"\n                        defaultMessage=\"notifyChangesId\"\n                        />\n                    </Text>\n                    </ListTitle>\n                    <ListDes>\n                    <Switch \n                        disabled={false}\n                        checked={setting.whatsappWarningsOn}\n                        labelPosition={'right'}\n                        // className,\n                        onUpdate={() => handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType)}\n                    />\n                    </ListDes>\n                </ListItem>\n            )}\n            { setting.mode === DistanceMode.ASSOCIATED_MIN_MAX && (\n            <>\n                <ListItem>\n                    <ListTitle>\n                        <Text>\n                        <FormattedMessage\n                            id='maxDistanceId'\n                            defaultMessage='maxDistanceId'\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                        { editIsOn ? (\n                            <Input\n                                type='number'\n                                name='maxWarning'\n                                value={setting.maxWarning}\n                                onChange={(e: any) => handleSettingsChange(plant, 'maxWarning', e.target.value, settingType)}\n                                backgroundColor='#F7F7F7'\n                                height='34.5px'\n                            />\n                        ) : (\n                            <Text bold>{setting.maxWarning}</Text>\n                        )}\n                    </ListDes>\n                </ListItem>\n\n                <ListItem>\n                    <ListTitle>\n                        <Text>\n                        <FormattedMessage\n                            id='minDistanceId'\n                            defaultMessage='minDistanceId'\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                        { editIsOn ? (\n                            <InputUpper\n                                type='number'\n                                name='minWarning'\n                                value={setting.minWarning}\n                                onChange={(e: any) => handleSettingsChange(plant, 'minWarning', e.target.value, settingType)}\n                                backgroundColor='#F7F7F7'\n                                height='34.5px'\n                                />\n                        ) : (\n                            <Text bold>{setting.minWarning}</Text>\n                        )}\n                    </ListDes>\n                </ListItem>\n\n                <ListItem>\n                    <ListTitle>\n                        <Text>\n                        <FormattedMessage\n                            id='asociateRelayOneId'\n                            defaultMessage='asociateRelayOneId'\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                        { editIsOn ? (\n                            <Select \n                                onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                                value={relayOneSelected}\n                                options={fourRelaysOptions}\n                                styles={selectStyle}\n                                menuPosition={'fixed'}\n                            />\n                        ) : (\n                            <Text bold>{setting?.relayOneIdRelated.length > 1 ? getRelayNameText(setting?.relayOneIdRelated) : '-'}</Text>\n                        )}\n                    </ListDes>\n                </ListItem>\n                \n                <ListItem>\n                    <ListTitle>\n                        <Text>\n                        <FormattedMessage\n                            id='asociateRelayTwoId'\n                            defaultMessage='asociateRelayTwoId'\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                    { editIsOn ? (\n                        <Select \n                            onChange={(e: any) => handleSettingsChange(plant, 'relayTwoIdRelated', e.value, settingType)}\n                            value={relayTwoSelected}\n                            options={fourRelaysOptions}\n                            styles={selectStyle}\n                            menuPosition={'fixed'}\n                        />\n                    ) : (\n                        <Text bold>{setting?.relayTwoIdRelated.length > 1 ? getRelayNameText(setting?.relayTwoIdRelated) : '-'}</Text>\n                    )}\n                    </ListDes>\n                </ListItem>\n\n            </>\n            )}\n\n            { setting.mode === HumiditySensorMode.SCHEDULE && (\n            <>\n                <WeekContainer>\n                {Object.keys(WeekDays).map((day, i: number) => {\n                    return (\n                        <DayContainer\n                            key={i + '-day--humidity-1container'}\n                            style={{ backgroundColor: daySelected === day ? '#c2b0b0' : 'transparent' }}\n                            onClick={() => setDay(day)}\n                        >\n                            {day.substring(0,3)}\n                        </DayContainer>\n                        )\n                    })\n                }\n                </WeekContainer>\n\n                { setting?.scheduledOnTimes?.map((schedule: any, i: number) => {\n                    return (\n                        <WeekContainer>\n                            { schedule.daysToRepeat.includes(daySelected) ? (\n                                <ScheduleTime>\n                                <TextSpaced><FormattedMessage id='startTimeId' defaultMessage='startTimeId' /></TextSpaced> <TextSpaced>{schedule.startTime}</TextSpaced>\n                                <TextSpaced><FormattedMessage id='endTimeId' defaultMessage='endTimeId' /></TextSpaced> <TextSpaced>{schedule.endTime}</TextSpaced>\n                                <CardButtons className='button-wrapper'>\n                                    <ActionButton onClick={() => handleModal( AddTimeSchedule, { settingType: settingType, plant, id: data?.getUser?.id } )} className='edit-btn'>\n                                    <PencilIcon />\n                                    </ActionButton>\n\n                                    <ActionButton onClick={() => onDeleteSchedule(plant, settingType, i)} className='delete-btn'>\n                                    <CloseIcon />\n                                    </ActionButton>\n                                </CardButtons>\n                                </ScheduleTime>\n                            ) : <ScheduleTime style={{ border: '0px', height: '42px' }}></ScheduleTime>}\n                        </WeekContainer>\n                    )\n                })}\n\n                <ListItem style={{ justifyContent: 'flex-start' }}>\n                    <ListTitle>\n                    <Text bold>\n                        <FormattedMessage\n                        id=\"notifyChangesId\"\n                        defaultMessage=\"notifyChangesId\"\n                        />\n                    </Text>\n                    </ListTitle>\n                    <ListDes>\n                    <Switch \n                        disabled={false}\n                        checked={setting.whatsappWarningsOn}\n                        labelPosition={'right'}\n                        // className,\n                        onUpdate={() => handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType)}\n                    />\n                    </ListDes>\n                </ListItem>\n\n\n                <Button\n                    size='small'\n                    variant='outlined'\n                    type='button'\n                    className='add-button'\n                    onClick={() => handleModal(\n                        AddTimeSchedule, \n                        {\n                            name: 'add-humidity-1-schedule',\n                            plant,\n                            id: data?.getUser?.id\n                        }\n                        )\n                    }\n                >\n                <FormattedMessage\n                    id='addTimeScheduleId'\n                    defaultMessage='addTimeScheduleId' \n                />\n                </Button>\n            </>\n            )}\n            \n            { setting.mode === HumiditySensorMode.MANUAL && (\n            <>\n                <ListItem>\n                    <ListTitle>\n                        <Text bold>\n                        <FormattedMessage\n                            id='manualModeStateId'\n                            defaultMessage='manualModeStateId'\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                        <Select \n                        onChange={(e: any) => handleSettingsChange(plant, 'relayOneWorking', e.value, settingType)}\n                        value={selectedManualState}\n                        options={manualModeOptions}\n                        styles={selectStyle}\n                        menuPosition={'fixed'}\n                        />\n                    </ListDes>\n                </ListItem>\n\n                <ListItem>\n                    <ListTitle>\n                        <Text bold>\n                        <FormattedMessage\n                            id={setting.relayOneIdRelated?.length ? 'asociateRelayId' :'asociatedRelayId' }\n                            defaultMessage={setting.relayOneIdRelated?.length ? 'asociateRelayId' :'asociatedRelayId'}\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                        <Select \n                        onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                        value={relayOneSelected}\n                        options={fourRelaysOptions}\n                        styles={selectStyle}\n                        menuPosition={'fixed'}\n                        />\n                    </ListDes>\n                </ListItem>\n            </>\n            )}\n\n            { setting.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION && (\n            <>\n                <ListItem>\n                <ListTitle>\n                    <Text bold>\n                    <FormattedMessage\n                        id='irrigationTimeId'\n                        defaultMessage='irrigationTimeId'\n                    />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    <Input\n                    type='number'\n                    name='relayOneAutomatedTimeToRun'\n                    value={setting.relayOneAutomatedTimeToRun}\n                    onChange={(e: any) => handleSettingsChange(plant, 'relayOneAutomatedTimeToRun', e.target.value, settingType)}\n                    backgroundColor='#F7F7F7'\n                    height='34.5px'\n                    />\n                </ListDes>\n                </ListItem>\n\n                <ListItem>\n                <ListTitle>\n                    <Text bold>\n                    <FormattedMessage\n                        id='irrigationEvacuationTimeId'\n                        defaultMessage='irrigationEvacuationTimeId'\n                    />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    <Input\n                    type='number'\n                    name='relayTwoAutomatedTimeToRun'\n                    value={setting.relayTwoAutomatedTimeToRun}\n                    onChange={(e: any) => handleSettingsChange(plant, 'relayTwoAutomatedTimeToRun', e.target.value, settingType)}\n                    backgroundColor='#F7F7F7'\n                    height='34.5px'\n                    />\n                </ListDes>\n                </ListItem>\n            </>\n            )}\n            \n            { setting?.logs?.length > 0 && (\n                <HumidityLogsGraph\n                    data={setting.logs}\n                />\n            )}\n{/*         \n            <CardButtons className='button-wrapper'>\n                <ActionButton onClick={() => setEditIsOn(!editIsOn)} className='edit-btn'>\n                    <PencilIcon />\n                </ActionButton>\n                <ActionButton onClick={() => handleDeleteSensor(plant, settingType)} className='delete-btn'>\n                    <CloseIcon />\n                </ActionButton>\n            </CardButtons> */}\n        </PlantsSensorContainer>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\n    {/* );\n}; */}\n\nexport default DistanceSensor;\n"]},"metadata":{},"sourceType":"module"}