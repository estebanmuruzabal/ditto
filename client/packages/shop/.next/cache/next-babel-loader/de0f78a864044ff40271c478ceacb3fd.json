{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport { useIntl } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport DeliverySelection from 'features/delivery-selection/delivery-selection';\nimport { BannerIcon, BannerText, DeliveryText, LocationContent, SubHeaderWrapper } from './sub-header.style';\n\nvar LocationMenu = function LocationMenu(_ref) {\n  _s();\n\n  var _deliveryMethodSelect, _deliveryMethodSelect2, _deliveryMethodSelect3, _deliveryMethodSelect4, _deliveryMethodSelect5, _deliveryMethodSelect6, _deliveryMethodSelect7, _deliveryMethodSelect8, _deliveryMethodSelect9;\n\n  var deliveryMethodSelected = _ref.deliveryMethodSelected,\n      isOpen = _ref.isOpen;\n  var mobile = useMedia('(max-width: 580px)');\n  var address = mobile ? deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : (_deliveryMethodSelect = deliveryMethodSelected.details) === null || _deliveryMethodSelect === void 0 ? void 0 : (_deliveryMethodSelect2 = _deliveryMethodSelect.split('|')) === null || _deliveryMethodSelect2 === void 0 ? void 0 : _deliveryMethodSelect2[0].substring(0, deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : (_deliveryMethodSelect3 = deliveryMethodSelected.details) === null || _deliveryMethodSelect3 === void 0 ? void 0 : (_deliveryMethodSelect4 = _deliveryMethodSelect3.split('|')) === null || _deliveryMethodSelect4 === void 0 ? void 0 : (_deliveryMethodSelect5 = _deliveryMethodSelect4[0]) === null || _deliveryMethodSelect5 === void 0 ? void 0 : _deliveryMethodSelect5.lengtha) : deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : (_deliveryMethodSelect6 = deliveryMethodSelected.details) === null || _deliveryMethodSelect6 === void 0 ? void 0 : (_deliveryMethodSelect7 = _deliveryMethodSelect6.split('|')) === null || _deliveryMethodSelect7 === void 0 ? void 0 : _deliveryMethodSelect7[0];\n  var time = deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : (_deliveryMethodSelect8 = deliveryMethodSelected.details) === null || _deliveryMethodSelect8 === void 0 ? void 0 : (_deliveryMethodSelect9 = _deliveryMethodSelect8.split('|')) === null || _deliveryMethodSelect9 === void 0 ? void 0 : _deliveryMethodSelect9[1];\n  var intl = useIntl();\n  var defaultText = intl.formatMessage({\n    id: 'defaultDeliveryPickupText',\n    defaultMessage: 'check here'\n  });\n  return __jsx(LocationContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, isOpen ? __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleDown,\n    className: \"fas fa-chevron-down\",\n    style: {\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleUp,\n    className: \"fas fa-chevron-up\",\n    style: {\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }\n  }), __jsx(DeliveryText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, deliveryMethodSelected ? (deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.isPickUp) ? DeliveryMethodsConstants.PICKUP : DeliveryMethodsConstants.DELIVERY : defaultText), (deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.name) && address && __jsx(React.Fragment, null, \"|\", __jsx(BannerIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: DeliveryIcon,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  })), __jsx(BannerText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"\".concat(deliveryMethodSelected.name, \" - \").concat(address))));\n};\n\n_s(LocationMenu, \"k8fZ0goWa3ys2FoQVG00wM7JIiY=\", false, function () {\n  return [useMedia, useIntl];\n});\n\n_c = LocationMenu;\n\nvar SubHeader = function SubHeader(_ref2) {\n  _s2();\n\n  var props = _extends({}, _ref2);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      deliveryMethodSelected = _React$useState2[0],\n      setDeliveryMethodSaved = _React$useState2[1]; // useEffect(() => {\n  //   // if (getCookie(deliveryMethodCookieKeyName) && !deliveryMethodSelected) {\n  //   //   const deliveryMethodSelected = JSON.parse(getCookie(deliveryMethodCookieKeyName));\n  //   //   setDeliveryMethodSaved(deliveryMethodSelected)\n  //   // }\n  //   console.log('window.location.href.split(\"?\").pop()',window.location.href.split(\"?\").pop())\n  //   if (window.location.href.split(\"?\").pop()) {\n  //     handlePhoneChange(window.location.href.split(\"?\").pop())\n  //   }\n  // }, []);\n\n\n  return __jsx(SubHeaderWrapper, {\n    className: props.className,\n    id: \"layout-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverBigger, {\n    direction: \"left\",\n    className: \"user-pages-dropdown\",\n    openHandler: __jsx(LocationMenu, {\n      isOpen: false,\n      deliveryMethodSelected: deliveryMethodSelected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 22\n      }\n    }),\n    closeHandler: __jsx(LocationMenu, {\n      isOpen: true,\n      deliveryMethodSelected: deliveryMethodSelected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    }),\n    content: __jsx(DeliverySelection, {\n      deliveryMethodSelected: deliveryMethodSelected,\n      setDeliveryMethodSaved: setDeliveryMethodSaved,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 18\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s2(SubHeader, \"gLlhs28N14FVPsN4ZkUpMZYs7Kg=\");\n\n_c2 = SubHeader;\nexport default SubHeader;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LocationMenu\");\n$RefreshReg$(_c2, \"SubHeader\");","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx"],"names":["React","DeliveryIcon","useMedia","useIntl","PopoverBigger","FontAwesomeIcon","faChevronCircleDown","faChevronCircleUp","DeliveryMethodsConstants","DeliverySelection","BannerIcon","BannerText","DeliveryText","LocationContent","SubHeaderWrapper","LocationMenu","deliveryMethodSelected","isOpen","mobile","address","details","split","substring","lengtha","time","intl","defaultText","formatMessage","id","defaultMessage","color","isPickUp","PICKUP","DELIVERY","name","SubHeader","props","useState","setDeliveryMethodSaved","className"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAA+D,OAA/D;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAA2BC,OAA3B,QAA0C,YAA1C;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAgE,mCAAhE;AACA,SAASC,wBAAT,QAAsE,gBAAtE;AAEA,OAAOC,iBAAP,MAA8B,gDAA9B;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,YAAjC,EAA+CC,eAA/C,EAAgEC,gBAAhE,QAAwF,oBAAxF;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAwC;AAAA;;AAAA;;AAAA,MAArCC,sBAAqC,QAArCA,sBAAqC;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC3D,MAAMC,MAAM,GAAGhB,QAAQ,CAAC,oBAAD,CAAvB;AACA,MAAMiB,OAAO,GAAGD,MAAM,GAClBF,sBADkB,aAClBA,sBADkB,gDAClBA,sBAAsB,CAAEI,OADN,oFAClB,sBAAiCC,KAAjC,CAAuC,GAAvC,CADkB,2DAClB,uBAA8C,CAA9C,EAAiDC,SAAjD,CAA2D,CAA3D,EAA8DN,sBAA9D,aAA8DA,sBAA9D,iDAA8DA,sBAAsB,CAAEI,OAAtF,qFAA8D,uBAAiCC,KAAjC,CAAuC,GAAvC,CAA9D,qFAA8D,uBAA8C,CAA9C,CAA9D,2DAA8D,uBAAkDE,OAAhH,CADkB,GAElBP,sBAFkB,aAElBA,sBAFkB,iDAElBA,sBAAsB,CAAEI,OAFN,qFAElB,uBAAiCC,KAAjC,CAAuC,GAAvC,CAFkB,2DAElB,uBAA8C,CAA9C,CAFJ;AAGA,MAAMG,IAAI,GAAGR,sBAAH,aAAGA,sBAAH,iDAAGA,sBAAsB,CAAEI,OAA3B,qFAAG,uBAAiCC,KAAjC,CAAuC,GAAvC,CAAH,2DAAG,uBAA8C,CAA9C,CAAb;AAEA,MAAMI,IAAI,GAAGtB,OAAO,EAApB;AAEA,MAAMuB,WAAW,GAAGD,IAAI,CAACE,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE,2BAAN;AAAmCC,IAAAA,cAAc,EAAE;AAAnD,GAAnB,CAApB;AACA,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMZ,MAAM,GACH,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEX,mBAAvB;AAA4C,IAAA,SAAS,EAAC,qBAAtD;AAA4E,IAAA,KAAK,EAAE;AAAEwB,MAAAA,KAAK,EAAE;AAAT,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAEH,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEvB,iBAAvB;AAA0C,IAAA,SAAS,EAAC,mBAApD;AAAwE,IAAA,KAAK,EAAE;AAAEuB,MAAAA,KAAK,EAAE;AAAT,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHT,EAQI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAed,sBAAsB,GAAG,CAAAA,sBAAsB,SAAtB,IAAAA,sBAAsB,WAAtB,YAAAA,sBAAsB,CAAEe,QAAxB,IAAmCvB,wBAAwB,CAACwB,MAA5D,GAAqExB,wBAAwB,CAACyB,QAAjG,GAA4GP,WAAjJ,CARJ,EASM,CAAAV,sBAAsB,SAAtB,IAAAA,sBAAsB,WAAtB,YAAAA,sBAAsB,CAAEkB,IAAxB,KAAgCf,OAAhC,IACA,iCAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY;AAAK,IAAA,GAAG,EAAElB,YAAV;AAAwB,IAAA,GAAG,EAAC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,CAFF,EAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgBe,sBAAsB,CAACkB,IAAvC,gBAAiDf,OAAjD,EAHF,CAVN,CADF;AAmBD,CA7BD;;GAAMJ,Y;UACWb,Q,EAMFC,O;;;KAPTY,Y;;AAgCN,IAAMoB,SAA0B,GAAG,SAA7BA,SAA6B,QAAmB;AAAA;;AAAA,MAAbC,KAAa;;AAAA,wBACKpC,KAAK,CAACqC,QAAN,EADL;AAAA;AAAA,MAC7CrB,sBAD6C;AAAA,MACrBsB,sBADqB,wBAGpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SACE,MAAC,gBAAD;AAAkB,IAAA,SAAS,EAAEF,KAAK,CAACG,SAAnC;AAA8C,IAAA,EAAE,EAAC,eAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAGE,IAAA,WAAW,EAAE,MAAC,YAAD;AACX,MAAA,MAAM,EAAE,KADG;AACI,MAAA,sBAAsB,EAAEvB,sBAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHf;AAME,IAAA,YAAY,EAAE,MAAC,YAAD;AACZ,MAAA,MAAM,EAAE,IADI;AACE,MAAA,sBAAsB,EAAEA,sBAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANhB;AASE,IAAA,OAAO,EAAE,MAAC,iBAAD;AAAmB,MAAA,sBAAsB,EAAEA,sBAA3C;AAAmE,MAAA,sBAAsB,EAAEsB,sBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAgBD,CA/BD;;IAAMH,S;;MAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants, deliveryMethodCookieKeyName } from 'utils/constant';\nimport { getCookie, setCookie } from 'utils/session';\nimport DeliverySelection from 'features/delivery-selection/delivery-selection';\nimport { BannerIcon, BannerText, DeliveryText, LocationContent, SubHeaderWrapper } from './sub-header.style';\n\ninterface Props {\n  className: string\n}\n\n\nconst LocationMenu = ({ deliveryMethodSelected, isOpen }) => {\n  const mobile = useMedia('(max-width: 580px)');\n  const address = mobile \n    ? deliveryMethodSelected?.details?.split('|')?.[0].substring(0, deliveryMethodSelected?.details?.split('|')?.[0]?.lengtha)\n    : deliveryMethodSelected?.details?.split('|')?.[0]\n  const time = deliveryMethodSelected?.details?.split('|')?.[1]\n\n  const intl = useIntl();\n\n  const defaultText = intl.formatMessage({ id: 'defaultDeliveryPickupText', defaultMessage: 'check here' })\n  return (\n    <LocationContent>\n        { isOpen \n          ? (<FontAwesomeIcon icon={faChevronCircleDown} className=\"fas fa-chevron-down\" style={{ color: \"black\" }} />) \n          : (<FontAwesomeIcon icon={faChevronCircleUp} className=\"fas fa-chevron-up\" style={{ color: \"black\" }} />)\n        }\n        { \n\n        }\n        <DeliveryText>{deliveryMethodSelected ? deliveryMethodSelected?.isPickUp ? DeliveryMethodsConstants.PICKUP : DeliveryMethodsConstants.DELIVERY : defaultText}</DeliveryText>\n        { deliveryMethodSelected?.name && address && (\n          <>\n              |\n            <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>\n            <BannerText>{`${deliveryMethodSelected.name} - ${address}`}</BannerText>\n          </>\n        )}\n      </LocationContent>\n  );\n};\n\n\nconst SubHeader: React.FC<Props> = ({ ...props  }) => {\n  const [deliveryMethodSelected, setDeliveryMethodSaved] = React.useState();\n\n  // useEffect(() => {\n  //   // if (getCookie(deliveryMethodCookieKeyName) && !deliveryMethodSelected) {\n  //   //   const deliveryMethodSelected = JSON.parse(getCookie(deliveryMethodCookieKeyName));\n  //   //   setDeliveryMethodSaved(deliveryMethodSelected)\n  //   // }\n  //   console.log('window.location.href.split(\"?\").pop()',window.location.href.split(\"?\").pop())\n  //   if (window.location.href.split(\"?\").pop()) {\n  //     handlePhoneChange(window.location.href.split(\"?\").pop())\n  //   }\n  // }, []);\n\n\n  return (\n    <SubHeaderWrapper className={props.className} id=\"layout-header\">\n      <PopoverBigger\n        direction=\"left\"\n        className=\"user-pages-dropdown\"\n        openHandler={<LocationMenu\n          isOpen={false} deliveryMethodSelected={deliveryMethodSelected} />\n        }\n        closeHandler={<LocationMenu\n          isOpen={true} deliveryMethodSelected={deliveryMethodSelected}/>\n        }\n        content={<DeliverySelection deliveryMethodSelected={deliveryMethodSelected} setDeliveryMethodSaved={setDeliveryMethodSaved} />}\n      />\n    </SubHeaderWrapper>\n  );\n\n};\n\nexport default SubHeader;\n"]},"metadata":{},"sourceType":"module"}