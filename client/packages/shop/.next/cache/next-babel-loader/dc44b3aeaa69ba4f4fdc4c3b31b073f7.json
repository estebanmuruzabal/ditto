{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  searchTerm: '',\n  isSticky: false,\n  isSidebarSticky: true,\n  isDrawerOpen: false\n};\nexport function appReducer(state, action) {\n  switch (action.type) {\n    case 'SET_SEARCH_TERM':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchTerm: action.payload\n      });\n\n    case 'SET_STICKY':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isSticky: true\n      });\n\n    case 'REMOVE_STICKY':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isSticky: false\n      });\n\n    case 'SET_SIDEBAR_STICKY':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isSidebarSticky: true\n      });\n\n    case 'REMOVE_SIDEBAR_STICKY':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isSidebarSticky: false\n      });\n\n    case 'TOGGLE_DRAWER':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDrawerOpen: !state.isDrawerOpen\n      });\n\n    default:\n      {\n        throw new Error(`Unsupported action type at App Reducer`);\n      }\n  }\n}","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/contexts/app/app.reducer.ts"],"names":["initialState","searchTerm","isSticky","isSidebarSticky","isDrawerOpen","appReducer","state","action","type","payload","Error"],"mappings":";;;;;;AACA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,EADc;AAE1BC,EAAAA,QAAQ,EAAE,KAFgB;AAG1BC,EAAAA,eAAe,EAAE,IAHS;AAI1BC,EAAAA,YAAY,EAAE;AAJY,CAArB;AAiBP,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAAsCC,MAAtC,EAAqE;AAG1E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,6CACKF,KADL;AAEEL,QAAAA,UAAU,EAAEM,MAAM,CAACE;AAFrB;;AAIF,SAAK,YAAL;AACE,6CACKH,KADL;AAEEJ,QAAAA,QAAQ,EAAE;AAFZ;;AAIF,SAAK,eAAL;AACE,6CACKI,KADL;AAEEJ,QAAAA,QAAQ,EAAE;AAFZ;;AAIF,SAAK,oBAAL;AACE,6CACKI,KADL;AAEEH,QAAAA,eAAe,EAAE;AAFnB;;AAIF,SAAK,uBAAL;AACE,6CACKG,KADL;AAEEH,QAAAA,eAAe,EAAE;AAFnB;;AAIF,SAAK,eAAL;AACE,6CACKG,KADL;AAEEF,QAAAA,YAAY,EAAE,CAACE,KAAK,CAACF;AAFvB;;AAIF;AAAS;AACP,cAAM,IAAIM,KAAJ,CAAW,wCAAX,CAAN;AACD;AAjCH;AAmCD","sourcesContent":["\nexport const initialState = {\n  searchTerm: '',\n  isSticky: false,\n  isSidebarSticky: true,\n  isDrawerOpen: false,\n};\n\ntype ActionType =\n  | { type: 'SET_SEARCH_TERM'; payload: string }\n  | { type: 'SET_STICKY' }\n  | { type: 'REMOVE_STICKY' }\n  | { type: 'SET_SIDEBAR_STICKY' }\n  | { type: 'REMOVE_SIDEBAR_STICKY' }\n  | { type: 'TOGGLE_DRAWER' };\n\ntype StateType = typeof initialState;\n\nexport function appReducer(state: StateType, action: ActionType): StateType {\n  \n\n  switch (action.type) {\n    case 'SET_SEARCH_TERM':\n      return {\n        ...state,\n        searchTerm: action.payload,\n      };\n    case 'SET_STICKY':\n      return {\n        ...state,\n        isSticky: true,\n      };\n    case 'REMOVE_STICKY':\n      return {\n        ...state,\n        isSticky: false,\n      };\n    case 'SET_SIDEBAR_STICKY':\n      return {\n        ...state,\n        isSidebarSticky: true,\n      };\n    case 'REMOVE_SIDEBAR_STICKY':\n      return {\n        ...state,\n        isSidebarSticky: false,\n      };\n    case 'TOGGLE_DRAWER':\n      return {\n        ...state,\n        isDrawerOpen: !state.isDrawerOpen,\n      };\n    default: {\n      throw new Error(`Unsupported action type at App Reducer`);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}