{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { Button, Wrapper, Heading, SubHeading } from './authentication-form.style';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { closeModal } from '@redq/reuse-modal';\nimport { PHONE_VERIFICATION_CHECK_MUTATION } from 'graphql/mutation/signup';\nimport Router, { useRouter } from 'next/router';\nimport styled from \"styled-components\";\nexport const Container = styled.div.withConfig({\n  displayName: \"otpForm__Container\",\n  componentId: \"riqlfd-0\"\n})([\"padding:40px 60px;@media (max-width:768px){padding:40px 30px;}\"]);\nexport default function OtpModal() {\n  const router = useRouter();\n  const intl = useIntl();\n  const {\n    authDispatch\n  } = useContext(AuthContext);\n  const [otp, setOtp] = React.useState('');\n  const [signinMeMutation, {\n    loading,\n    error,\n    data\n  }] = useMutation(PHONE_VERIFICATION_CHECK_MUTATION, {\n    onCompleted: data => {\n      const {\n        access_token,\n        user\n      } = data.phoneVerificationCheck;\n\n      if (false) {\n        localStorage.removeItem('phone_number');\n        localStorage.setItem('access_token', `${access_token}`);\n        authDispatch({\n          type: 'SIGNIN_SUCCESS',\n          user\n        });\n        closeModal(); // Router.push('/[type]', router.asPath);\n        // currently sending to profile instead of really checking otp\n        // Router.push('/checkout', router.asPath);\n\n        if (router.asPath === '/checkout') {\n          Router.push({\n            pathname: '/checkout',\n            query: {\n              shouldRefresh: true\n            }\n          });\n        } else {\n          Router.push({\n            pathname: '/home'\n          });\n        }\n      }\n    },\n    onError: error => {\n      setOtp('');\n    }\n  });\n\n  const submitForm = async e => {\n    e.preventDefault();\n    await signinMeMutation({\n      variables: {\n        verification_code: otp,\n        phone: localStorage.getItem('phone_number')\n      }\n    });\n  };\n\n  return __jsx(Wrapper, null, __jsx(Container, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"otpForm\",\n    defaultMessage: \"Verify Phone Number\"\n  })), __jsx(SubHeading, null, __jsx(FormattedMessage, {\n    id: \"otpSubText\",\n    defaultMessage: \"Login with your phone number & password\"\n  })), __jsx(\"form\", {\n    onSubmit: submitForm\n  }, __jsx(Button, {\n    variant: \"primary\",\n    size: \"big\",\n    style: {\n      width: '100%'\n    },\n    type: \"submit\"\n  }, __jsx(FormattedMessage, {\n    id: \"continueBtn\",\n    defaultMessage: \"Continuar\"\n  }))), loading && __jsx(\"p\", {\n    style: {\n      marginTop: \"15px\"\n    }\n  }, intl.formatMessage({\n    id: 'loading',\n    defaultMessage: 'Cargando...'\n  })), error && __jsx(\"p\", {\n    style: {\n      marginTop: \"15px\",\n      color: \"red\"\n    }\n  }, \" \", error.message)));\n}","map":null,"metadata":{},"sourceType":"module"}