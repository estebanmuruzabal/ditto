{"ast":null,"code":"var _jsxFileName = \"/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two/checkout-two-sections/delivery-selection.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { ActionButton, ActionsButtons, BannerIcon, Button, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Options, PickUpOptions, Wrapper } from './delivery-selection.style';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { Plus } from 'assets/icons/PlusMinus';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport RadioGroupTwo from 'components/radio-group/radio-group-two';\nimport { InformationBox, DeliveryAddressSection, ButtonGroup, IconWrapper, SectionNumber } from '../checkout-two.style';\n\nconst DeliverySelection = (_ref) => {\n  let props = Object.assign({}, _ref);\n  const [deliveryMethodSelected, setDeliveryMethodSelected] = React.useState(undefined);\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const {\n    0: deliveryAddress,\n    1: setDeliveryAddress\n  } = useState(\"\");\n  const {\n    0: notInsideDeliveryAreas,\n    1: setNotInsideDeliveryAreas\n  } = useState(false);\n\n  const setDeliveryMethodAndSaveCookie = deliveryOrPickupMethodSelected => {\n    const deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : _objectSpread(_objectSpread({}, deliveryOrPickupMethodSelected), {}, {\n      deliveryAddress\n    });\n    setDeliveryMethodSelected(deliveryMethod);\n    props.setDeliveryAddress(deliveryMethod, false); // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n    // }\n  };\n\n  function inside(point, vs) {\n    var x = point[0],\n        y = point[1];\n    var inside = false;\n\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0],\n          yi = vs[i][1];\n      var xj = vs[j][0],\n          yj = vs[j][1];\n      var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  ;\n\n  const searchPickupZipCode = e => {\n    var _props$deliveryMethod;\n\n    const zipCode = e.target.value;\n    handleOnFocus(e);\n    setZipCode(zipCode);\n    const pickUpOptionsMethods = (_props$deliveryMethod = props.deliveryMethods) === null || _props$deliveryMethod === void 0 ? void 0 : _props$deliveryMethod.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    }); // const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode)\n\n    const methodFound = zipCode === resistenciaZipCode ? pickUpOptionsMethods : []; // e.stopPropagation();\n\n    setSearchResult(methodFound.length > 0 ? methodFound : null); // setSearchResult(pickUpOptionsMethods)\n  };\n\n  const setDelivery = (e, deli) => {\n    // if (deli === DeliveryMethodsConstants.DELIVERY) {\n    //   setDeliveryMethodType(deli)\n    //   props.setDeliveryAddress(DeliveryMethodsConstants.DELIVERY)\n    //   return;  \n    // }\n    e.stopPropagation();\n    props.setDeliveryMethodType(deli);\n    setSearchResult(null);\n    setZipCode('');\n  };\n\n  const deleteDeliveryAddress = () => {\n    setSearchResult(null);\n    setDeliveryAddress('');\n    setNotInsideDeliveryAreas(false);\n  };\n\n  const handleOnFocus = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }; // deliveryMethodSelected\n\n\n  const isPickUpSelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  const intl = useIntl();\n\n  const handleSelect = async address => {\n    setDeliveryAddress(address);\n    const results = await geocodeByAddress(address);\n    const latLng = await getLatLng(results[0]);\n    setNotInsideDeliveryAreas(false);\n    let deliveryOptionsMethods = [];\n\n    if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n      var _props$deliveryMethod2;\n\n      deliveryOptionsMethods = (_props$deliveryMethod2 = props.deliveryMethods) === null || _props$deliveryMethod2 === void 0 ? void 0 : _props$deliveryMethod2.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n      var _props$deliveryMethod3;\n\n      deliveryOptionsMethods = (_props$deliveryMethod3 = props.deliveryMethods) === null || _props$deliveryMethod3 === void 0 ? void 0 : _props$deliveryMethod3.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n      var _props$deliveryMethod4;\n\n      deliveryOptionsMethods = (_props$deliveryMethod4 = props.deliveryMethods) === null || _props$deliveryMethod4 === void 0 ? void 0 : _props$deliveryMethod4.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n      var _props$deliveryMethod5;\n\n      deliveryOptionsMethods = (_props$deliveryMethod5 = props.deliveryMethods) === null || _props$deliveryMethod5 === void 0 ? void 0 : _props$deliveryMethod5.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) {\n          deliveryMethod.name = 'GRATIS';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else {\n      setNotInsideDeliveryAreas(true);\n      console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n    }\n\n    setSearchResult(deliveryOptionsMethods);\n  };\n\n  const selectedAddress = props.submitResult.delivery_address && props.submitResult.delivery_address.find(item => item.is_primary === true);\n  return __jsx(InformationBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"contactNumberText\",\n    defaultMessage: \"Select Your Contact Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }), __jsx(SectionNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  })), __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: props.deliveryMethodSaved ? 'selectDeliveryMethodSelected' : 'selectDeliveryMethod',\n    defaultMessage: \"Select Your Delivery Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }), __jsx(SectionNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  })), __jsx(DeliveryAddressSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, props.deliveryMethodSaved ? __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 20\n    }\n  }, __jsx(RadioGroupThree, {\n    items: [props.deliveryMethodSaved],\n    component: (item, index) => {\n      var _props$deliveryMethod6;\n\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: ((_props$deliveryMethod6 = props.deliveryMethodSaved) === null || _props$deliveryMethod6 === void 0 ? void 0 : _props$deliveryMethod6.isPickUp) ? `PICKUP ${item.name}` : `DELIVERY` //  ${item.name} ${props.deliveryMethodSaved?.deliveryAddress?.split(\",\")[0]}\n        // title={item.name}\n        ,\n        details: item.details,\n        link: item.isPickUp && item.pickUpAddress ? item.pickUpAddress : null,\n        name: \"schedule\",\n        checked: true,\n        withActionButtons: false,\n        onClick: () => props.setSubmitResult(_objectSpread(_objectSpread({}, props.submitResult), {}, {\n          delivery_method_id: item.id,\n          products: props.cartProduct\n        })),\n        onChange: () => {\n          return props.dispatch({\n            type: 'SET_PRIMARY_SCHEDULE',\n            payload: item.id.toString()\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      });\n    },\n    secondaryComponent: props.deliveryMethodSaved ? __jsx(Button, {\n      className: \"changeButton\",\n      variant: \"text\",\n      type: \"button\",\n      onClick: props.setDeliveryAddress(null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 23\n      }\n    }, __jsx(IconWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, __jsx(Plus, {\n      width: \"10px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    })), __jsx(FormattedMessage, {\n      id: \"changeDeliveryMethod\",\n      defaultMessage: \"changeDeliveryMethod\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    })) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 20\n    }\n  })) : __jsx(DeliveryMethods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, __jsx(Options, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, __jsx(CardWrapper, {\n    color: isPickUpSelected ? '#009E7F' : '#e4f4fc',\n    onClick: e => setDelivery(e, DeliveryMethodsConstants.PICKUP),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 23\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"pickUpId\",\n    defaultMessage: \"notFoundId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 150\n    }\n  })), __jsx(CardWrapper, {\n    color: isDeliverySelected ? '#009E7F' : '#e4f4fc',\n    onClick: e => setDelivery(e, DeliveryMethodsConstants.DELIVERY),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 23\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"deliveryId\",\n    defaultMessage: \"notFoundId2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 154\n    }\n  }))), __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  }, !!props.deliveryMethodTypeSelected && __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  }, __jsx(Heading, {\n    onClick: e => handleOnFocus(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 27\n    }\n  }, isPickUpSelected ? __jsx(FormattedMessage, {\n    id: \"pickupModalheading\",\n    defaultMessage: \"pickupModalheading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 31\n    }\n  }) : __jsx(FormattedMessage, {\n    id: \"deliveryModalheading\",\n    defaultMessage: \"deliveryModalheading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 31\n    }\n  })), isPickUpSelected ? __jsx(\"div\", {\n    onClick: e => handleOnFocus(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 31\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    onFocus: e => handleOnFocus(e) // placeholder='Código postal'\n    ,\n    value: zipCode,\n    autoComplete: \"off\" // we have to change the onChange because the is no one for the controller name actualy\n    ,\n    onChange: e => searchPickupZipCode(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  })) : __jsx(PlacesAutocomplete, {\n    value: deliveryAddress,\n    onChange: e => setDeliveryAddress(e),\n    onSelect: handleSelect,\n    searchOptions: {\n      types: [],\n      componentRestrictions: {\n        country: \"ar\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 31\n    }\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => __jsx(\"div\", {\n    onClick: e => handleOnFocus(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 35\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center',\n      padding: '0px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 37\n    }\n  }, __jsx(\"input\", _extends({}, getInputProps({\n    placeholder: \"Calle, altura, localidad\",\n    className: \"location-search-input\",\n    style: {\n      width: '220px',\n      padding: '0px 8px',\n      appearance: 'none',\n      fontFamily: `'Lato', sans-serif`,\n      fontSize: '15',\n      lineHeight: 'inherit',\n      border: '1px solid',\n      borderColor: '#f7f7f7',\n      borderRadius: '6px',\n      backgroundColor: '#f7f7f7',\n      color: '#0D1136',\n      height: '48px',\n      transition: 'all 0.25s ease',\n      // mb: 3,\n      '&:hover,&:focus': {\n        outline: 0,\n        borderColor: '#009e7f'\n      }\n    }\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 39\n    }\n  })), (deliveryAddress === null || deliveryAddress === void 0 ? void 0 : deliveryAddress.length) ? __jsx(ActionsButtons, {\n    className: \"button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 41\n    }\n  }, __jsx(ActionButton, {\n    onClick: () => deleteDeliveryAddress(),\n    className: \"delete-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 45\n    }\n  }, __jsx(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 49\n    }\n  }))) : ''), __jsx(\"div\", {\n    className: \"autocomplete-dropdown-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 37\n    }\n  }, loading && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 51\n    }\n  }, \"Loading...\"), suggestions.map(suggestion => {\n    var _suggestion$descripti, _suggestion$descripti2;\n\n    const style = suggestion.active ? {\n      backgroundColor: \"#fafafa\",\n      cursor: \"pointer\",\n      borderBottom: \"1px solid gray\",\n      justifyContent: \"flex-start\",\n      display: 'flex',\n      maxWidth: '320px'\n    } : {\n      backgroundColor: \"#ffffff\",\n      cursor: \"pointer\",\n      borderBottom: \"1px solid gray\",\n      justifyContent: \"flex-start\",\n      display: 'flex',\n      maxWidth: '320px',\n      alignItems: \"center\"\n    };\n    return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n      style\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 43\n      }\n    }), __jsx(BannerIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 45\n      }\n    }, __jsx(\"img\", {\n      src: DeliveryIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 57\n      }\n    })), (_suggestion$descripti = suggestion.description) === null || _suggestion$descripti === void 0 ? void 0 : _suggestion$descripti.split(\",\")[0], (_suggestion$descripti2 = suggestion.description) === null || _suggestion$descripti2 === void 0 ? void 0 : _suggestion$descripti2.split(\",\")[1]);\n  })))), __jsx(\"div\", {\n    style: {\n      paddingTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 31\n    }\n  }, (searchResult === null || searchResult === void 0 ? void 0 : searchResult.length) ? searchResult.map((deliveryMethod, i) => {\n    return __jsx(PickUpOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 37\n      }\n    }, __jsx(Checkbox, {\n      keyName: `${i}-deliveryMethods`,\n      isChecked: (deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === deliveryMethod.id,\n      labelText: `${deliveryMethod.name} - ${deliveryMethod.details} `,\n      id: `deliveryMethod-${i}`,\n      onChange: e => {\n        setDeliveryMethodAndSaveCookie((deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === deliveryMethod.id ? null : deliveryMethod);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 39\n      }\n    }));\n  }) : ''), !searchResult && zipCode.length >= 4 && props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP && __jsx(DeliveryText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 31\n    }\n  }, intl.formatMessage({\n    id: 'noDittoPickUpLocations',\n    defaultMessage: 'noDittoPickUpLocations'\n  })), notInsideDeliveryAreas && __jsx(DeliveryText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 31\n    }\n  }, intl.formatMessage({\n    id: 'noDeliveryThereYet',\n    defaultMessage: 'noDeliveryThereYet'\n  }))))), selectedAddress && props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY && __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 19\n    }\n  }, \"o selecciona una direccion\", __jsx(RadioGroupTwo, {\n    items: props.submitResult.delivery_address,\n    component: (item, index) => {\n      var _props$deliveryMethod7;\n\n      return __jsx(RadioCardTWO, {\n        id: index,\n        key: index,\n        address: item.address,\n        location: item.location,\n        instructions: item.instructions,\n        title: item.title,\n        name: \"address\",\n        isChecked: item.id === ((_props$deliveryMethod7 = props.deliveryMethodSaved) === null || _props$deliveryMethod7 === void 0 ? void 0 : _props$deliveryMethod7.id),\n        onClick: () => {\n          var _item$address, _item$address2;\n\n          props.setSubmitResult(_objectSpread(_objectSpread({}, props.submitResult), {}, {\n            delivery_address: `${item.title} -\n                              ${(_item$address = item.address) === null || _item$address === void 0 ? void 0 : _item$address.split(\",\")[0]} ${(_item$address2 = item.address) === null || _item$address2 === void 0 ? void 0 : _item$address2.split(\",\")[1]}, ${item.location}, ${item.instructions}\n                              `,\n            products: props.cartProduct\n          }));\n          props.setDeliveryAddress(item, false);\n        } // onEdit={() => handleEditDelete(item, index, 'edit', 'address')}\n        // onDelete={() =>\n        //   handleEditDelete(item, index, 'delete', 'address')\n        // }\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 27\n        }\n      });\n    },\n    secondaryComponent: selectedAddress ? null : __jsx(Button, {\n      className: \"addButton\",\n      variant: \"text\",\n      type: \"button\",\n      onClick: () => props.setDeliveryAddress(null) // onClick={() =>\n      //   handleModal(UpdateAddressTwo,\n      //     {\n      //       item:{ address: props.deliveryMethodSaved?.deliveryAddress },\n      //       id\n      //     },\n      //     'add-address-modal')\n      // }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 26\n      }\n    }, __jsx(IconWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 25\n      }\n    }, __jsx(Plus, {\n      width: \"10px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 27\n      }\n    })), __jsx(FormattedMessage, {\n      id: \"completeAddress\",\n      defaultMessage: \"Add New\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 25\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default DeliverySelection;","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two/checkout-two-sections/delivery-selection.tsx"],"names":["React","useState","FormattedMessage","useIntl","DeliveryMethodsConstants","plazaBelgranoPolygon","plazaEspañaPolygon","plazaNueveDeJulioPolygon","plazadoceDeOctubrePolygon","resistenciaZipCode","CloseIcon","Checkbox","ActionButton","ActionsButtons","BannerIcon","Button","CardWrapper","Container","DeliveryMethods","DeliveryText","Heading","Input","Options","PickUpOptions","Wrapper","PlacesAutocomplete","geocodeByAddress","getLatLng","DeliveryIcon","Plus","RadioCard","RadioCardTWO","RadioGroupThree","RadioGroupTwo","InformationBox","DeliveryAddressSection","ButtonGroup","IconWrapper","SectionNumber","DeliverySelection","props","deliveryMethodSelected","setDeliveryMethodSelected","undefined","zipCode","setZipCode","searchResult","setSearchResult","deliveryAddress","setDeliveryAddress","notInsideDeliveryAreas","setNotInsideDeliveryAreas","setDeliveryMethodAndSaveCookie","deliveryOrPickupMethodSelected","deliveryMethod","isPickUpSelected","inside","point","vs","x","y","i","j","length","xi","yi","xj","yj","intersect","searchPickupZipCode","e","target","value","handleOnFocus","pickUpOptionsMethods","deliveryMethods","filter","isPickUp","methodFound","setDelivery","deli","stopPropagation","setDeliveryMethodType","deleteDeliveryAddress","event","preventDefault","deliveryMethodTypeSelected","PICKUP","isDeliverySelected","DELIVERY","intl","handleSelect","address","results","latLng","deliveryOptionsMethods","lat","lng","details","includes","name","console","log","selectedAddress","submitResult","delivery_address","find","item","is_primary","deliveryMethodSaved","index","id","pickUpAddress","setSubmitResult","delivery_method_id","products","cartProduct","dispatch","type","payload","toString","types","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","loading","width","display","justifyContent","flexDirection","alignItems","padding","placeholder","className","style","appearance","fontFamily","fontSize","lineHeight","border","borderColor","borderRadius","backgroundColor","color","height","transition","outline","map","suggestion","active","cursor","borderBottom","maxWidth","description","split","paddingTop","formatMessage","defaultMessage","location","instructions","title"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+D,OAA/D;AACA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,YAA1C;AACA,SAASC,wBAAT,EAAgEC,oBAAhE,EAAsFC,kBAAtF,EAA0GC,wBAA1G,EAAoIC,yBAApI,EAA+JC,kBAA/J,QAAyL,gBAAzL;AAGA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,UAAvC,EAAmDC,MAAnD,EAA2DC,WAA3D,EAAwEC,SAAxE,EAAmFC,eAAnF,EAAoGC,YAApG,EAAkHC,OAAlH,EAA2HC,KAA3H,EAAuJC,OAAvJ,EAAgKC,aAAhK,EAA+KC,OAA/K,QAA8L,4BAA9L;AACA,OAAOC,kBAAP,IAA6BC,gBAA7B,EAA+CC,SAA/C,QAAgE,2BAAhE;AAIA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,cAAT,EAAyBC,sBAAzB,EAAiDC,WAAjD,EAA8DC,WAA9D,EAA2EC,aAA3E,QAAgG,uBAAhG;;AAaA,MAAMC,iBAAkC,GAAG,UAAmB;AAAA,MAAbC,KAAa;AAE5D,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsD1C,KAAK,CAACC,QAAN,CAAe0C,SAAf,CAA5D;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB7C,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAAC6C,YAAD,EAAeC,eAAf,IAAkC/C,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxC;AACA,QAAM;AAAA,OAAC+C,eAAD;AAAA,OAAkBC;AAAlB,MAAwChD,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM;AAAA,OAACiD,sBAAD;AAAA,OAAyBC;AAAzB,MAAsDlD,QAAQ,CAAC,KAAD,CAApE;;AAEA,QAAMmD,8BAA8B,GAAKC,8BAAD,IAAoC;AAC1E,UAAMC,cAAc,GAAGC,gBAAgB,GAAGF,8BAAH,mCAAwCA,8BAAxC;AAAwEL,MAAAA;AAAxE,MAAvC;AACAN,IAAAA,yBAAyB,CAACY,cAAD,CAAzB;AACAd,IAAAA,KAAK,CAACS,kBAAN,CAAyBK,cAAzB,EAAyC,KAAzC,EAH0E,CAK1E;AACA;AACD,GAPD;;AASA,WAASE,MAAT,CAAgBC,KAAhB,EAAuBC,EAAvB,EAA2B;AACzB,QAAIC,CAAC,GAAGF,KAAK,CAAC,CAAD,CAAb;AAAA,QAAkBG,CAAC,GAAGH,KAAK,CAAC,CAAD,CAA3B;AAEA,QAAID,MAAM,GAAG,KAAb;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGJ,EAAE,CAACK,MAAH,GAAY,CAAhC,EAAmCF,CAAC,GAAGH,EAAE,CAACK,MAA1C,EAAkDD,CAAC,GAAGD,CAAC,EAAvD,EAA2D;AACvD,UAAIG,EAAE,GAAGN,EAAE,CAACG,CAAD,CAAF,CAAM,CAAN,CAAT;AAAA,UAAmBI,EAAE,GAAGP,EAAE,CAACG,CAAD,CAAF,CAAM,CAAN,CAAxB;AACA,UAAIK,EAAE,GAAGR,EAAE,CAACI,CAAD,CAAF,CAAM,CAAN,CAAT;AAAA,UAAmBK,EAAE,GAAGT,EAAE,CAACI,CAAD,CAAF,CAAM,CAAN,CAAxB;AAEA,UAAIM,SAAS,GAAKH,EAAE,GAAGL,CAAN,IAAaO,EAAE,GAAGP,CAAnB,IACRD,CAAC,GAAG,CAACO,EAAE,GAAGF,EAAN,KAAaJ,CAAC,GAAGK,EAAjB,KAAwBE,EAAE,GAAGF,EAA7B,IAAmCD,EAD/C;AAEA,UAAII,SAAJ,EAAeZ,MAAM,GAAG,CAACA,MAAV;AAClB;;AAED,WAAOA,MAAP;AACH;;AAAA;;AAEC,QAAMa,mBAAmB,GAAKC,CAAD,IAAO;AAAA;;AAClC,UAAM1B,OAAO,GAAG0B,CAAC,CAACC,MAAF,CAASC,KAAzB;AACAC,IAAAA,aAAa,CAACH,CAAD,CAAb;AACAzB,IAAAA,UAAU,CAACD,OAAD,CAAV;AACA,UAAM8B,oBAAoB,4BAAGlC,KAAK,CAACmC,eAAT,0DAAG,sBAAuBC,MAAvB,CAA8BtB,cAAc,IAAI;AAC3E,aAAOA,cAAc,CAACuB,QAAf,KAA4B,IAAnC;AACD,KAF4B,CAA7B,CAJkC,CAQlC;;AACA,UAAMC,WAAW,GAAGlC,OAAO,KAAKnC,kBAAZ,GAAiCiE,oBAAjC,GAAwD,EAA5E,CATkC,CAWlC;;AACA3B,IAAAA,eAAe,CAAC+B,WAAW,CAACf,MAAZ,GAAqB,CAArB,GAAyBe,WAAzB,GAAuC,IAAxC,CAAf,CAZkC,CAclC;AACD,GAfD;;AAiBA,QAAMC,WAAW,GAAI,CAACT,CAAD,EAAIU,IAAJ,KAAuC;AAC1D;AACA;AACA;AACA;AACA;AACAV,IAAAA,CAAC,CAACW,eAAF;AACAzC,IAAAA,KAAK,CAAC0C,qBAAN,CAA4BF,IAA5B;AACAjC,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAVD;;AAYA,QAAMsC,qBAAqB,GAAI,MAAM;AACnCpC,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAE,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACD,GAJD;;AAMA,QAAMsB,aAAa,GAAKW,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACH,eAAN;AACD,GAHD,CApE4D,CAyE5D;;;AACA,QAAM1B,gBAAgB,GAAGf,KAAK,CAAC8C,0BAAN,KAAqClF,wBAAwB,CAACmF,MAAvF;AACA,QAAMC,kBAAkB,GAAGhD,KAAK,CAAC8C,0BAAN,KAAqClF,wBAAwB,CAACqF,QAAzF;AACA,QAAMC,IAAI,GAAGvF,OAAO,EAApB;;AAEA,QAAMwF,YAAY,GAAG,MAAOC,OAAP,IAAmB;AACtC3C,IAAAA,kBAAkB,CAAC2C,OAAD,CAAlB;AACA,UAAMC,OAAO,GAAG,MAAMnE,gBAAgB,CAACkE,OAAD,CAAtC;AACA,UAAME,MAAM,GAAG,MAAMnE,SAAS,CAACkE,OAAO,CAAC,CAAD,CAAR,CAA9B;AACA1C,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACA,QAAI4C,sBAAsB,GAAG,EAA7B;;AAEA,QAAIvC,MAAM,CAAC,CAACsC,MAAM,CAACE,GAAR,EAAaF,MAAM,CAACG,GAApB,CAAD,EAA2BzF,yBAA3B,CAAV,EAAiE;AAAA;;AAC/DuF,MAAAA,sBAAsB,6BAAGvD,KAAK,CAACmC,eAAT,2DAAG,uBAAuBC,MAAvB,CAA8BtB,cAAc,IAAI;AACvE,YAAI,CAACA,cAAc,CAACuB,QAAhB,IAA4BvB,cAAc,CAAC4C,OAAf,CAAuBC,QAAvB,CAAgC,OAAhC,CAAhC,EAA0E;AAAE7C,UAAAA,cAAc,CAAC8C,IAAf,GAAsB,QAAtB;AAAgC,iBAAO,IAAP;AAAa;;AACzH,eAAO,CAAC9C,cAAc,CAACuB,QAAvB;AACD,OAHwB,CAAzB;AAID,KALD,MAKO,IAAIrB,MAAM,CAAC,CAACsC,MAAM,CAACE,GAAR,EAAaF,MAAM,CAACG,GAApB,CAAD,EAA2B5F,oBAA3B,CAAV,EAA4D;AAAA;;AACjE0F,MAAAA,sBAAsB,6BAAGvD,KAAK,CAACmC,eAAT,2DAAG,uBAAuBC,MAAvB,CAA8BtB,cAAc,IAAI;AACvE,YAAI,CAACA,cAAc,CAACuB,QAAhB,IAA4BvB,cAAc,CAAC4C,OAAf,CAAuBC,QAAvB,CAAgC,QAAhC,CAAhC,EAA2E;AAAE7C,UAAAA,cAAc,CAAC8C,IAAf,GAAsB,QAAtB;AAAgC,iBAAO,IAAP;AAAa;;AAC1H,eAAO,CAAC9C,cAAc,CAACuB,QAAvB;AACD,OAHwB,CAAzB;AAID,KALM,MAKA,IAAIrB,MAAM,CAAC,CAACsC,MAAM,CAACE,GAAR,EAAaF,MAAM,CAACG,GAApB,CAAD,EAA2B1F,wBAA3B,CAAV,EAAgE;AAAA;;AACnEwF,MAAAA,sBAAsB,6BAAGvD,KAAK,CAACmC,eAAT,2DAAG,uBAAuBC,MAAvB,CAA8BtB,cAAc,IAAI;AACvE,YAAI,CAACA,cAAc,CAACuB,QAAhB,IAA4BvB,cAAc,CAAC4C,OAAf,CAAuBC,QAAvB,CAAgC,WAAhC,CAAhC,EAA8E;AAAE7C,UAAAA,cAAc,CAAC8C,IAAf,GAAsB,QAAtB;AAAgC,iBAAO,IAAP;AAAa;;AAC7H,eAAO,CAAC9C,cAAc,CAACuB,QAAvB;AACD,OAHwB,CAAzB;AAIH,KALM,MAKA,IAAIrB,MAAM,CAAC,CAACsC,MAAM,CAACE,GAAR,EAAaF,MAAM,CAACG,GAApB,CAAD,EAA2B3F,kBAA3B,CAAV,EAA0D;AAAA;;AAC/DyF,MAAAA,sBAAsB,6BAAGvD,KAAK,CAACmC,eAAT,2DAAG,uBAAuBC,MAAvB,CAA8BtB,cAAc,IAAI;AACvE,YAAI,CAACA,cAAc,CAACuB,QAAhB,IAA4BvB,cAAc,CAAC4C,OAAf,CAAuBC,QAAvB,CAAgC,QAAhC,CAAhC,EAA2E;AAAE7C,UAAAA,cAAc,CAAC8C,IAAf,GAAsB,QAAtB;AAAgC,iBAAO,IAAP;AAAa;;AAC1H,eAAO,CAAC9C,cAAc,CAACuB,QAAvB;AACD,OAHwB,CAAzB;AAID,KALM,MAKA;AACL1B,MAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACAkD,MAAAA,OAAO,CAACC,GAAR,CAAY9C,MAAM,CAAC,CAACsC,MAAM,CAACE,GAAR,EAAaF,MAAM,CAACG,GAApB,CAAD,EAA2B1F,wBAA3B,CAAlB;AACD;;AACDwC,IAAAA,eAAe,CAACgD,sBAAD,CAAf;AACD,GAhCD;;AAkCA,QAAMQ,eAAe,GAAG/D,KAAK,CAACgE,YAAN,CAAmBC,gBAAnB,IAAuCjE,KAAK,CAACgE,YAAN,CAAmBC,gBAAnB,CAAoCC,IAApC,CAC5DC,IAAD,IAAUA,IAAI,CAACC,UAAL,KAAoB,IAD+B,CAA/D;AAIA,SACQ,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACY,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,mBADL;AAEE,IAAA,cAAc,EAAC,4BAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAKY,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALZ,CADN,EAQE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AACG,IAAA,EAAE,EAAGpE,KAAK,CAACqE,mBAAP,GAA8B,8BAA9B,GAA+D,sBADtE;AAEG,IAAA,cAAc,EAAC,2BAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CARF,EAeI,MAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIrE,KAAK,CAACqE,mBAAN,GACC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,eAAD;AACG,IAAA,KAAK,EAAE,CAACrE,KAAK,CAACqE,mBAAP,CADV;AAEG,IAAA,SAAS,EAAE,CAACF,IAAD,EAAYG,KAAZ;AAAA;;AAAA,aACT,MAAC,SAAD;AACE,QAAA,EAAE,EAAEH,IAAI,CAACI,EADX;AAEE,QAAA,GAAG,EAAEJ,IAAI,CAACI,EAFZ;AAGE,QAAA,KAAK,EAAE,2BAAAvE,KAAK,CAACqE,mBAAN,kFAA2BhC,QAA3B,IAAuC,UAAS8B,IAAI,CAACP,IAAK,EAA1D,GAA+D,UAHxE,CAGmF;AACjF;AAJF;AAKE,QAAA,OAAO,EAAEO,IAAI,CAACT,OALhB;AAME,QAAA,IAAI,EAAES,IAAI,CAAC9B,QAAL,IAAiB8B,IAAI,CAACK,aAAtB,GAAsCL,IAAI,CAACK,aAA3C,GAA2D,IANnE;AAOE,QAAA,IAAI,EAAC,UAPP;AAQE,QAAA,OAAO,EAAE,IARX;AASE,QAAA,iBAAiB,EAAE,KATrB;AAUE,QAAA,OAAO,EAAE,MAAMxE,KAAK,CAACyE,eAAN,iCACVzE,KAAK,CAACgE,YADI;AAEbU,UAAAA,kBAAkB,EAAEP,IAAI,CAACI,EAFZ;AAGbI,UAAAA,QAAQ,EAAE3E,KAAK,CAAC4E;AAHH,WAVjB;AAeE,QAAA,QAAQ,EAAE,MAAK;AACb,iBAAO5E,KAAK,CAAC6E,QAAN,CAAe;AACpBC,YAAAA,IAAI,EAAE,sBADc;AAEpBC,YAAAA,OAAO,EAAEZ,IAAI,CAACI,EAAL,CAAQS,QAAR;AAFW,WAAf,CAAP;AAIC,SApBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADS;AAAA,KAFd;AA2BE,IAAA,kBAAkB,EAAGhF,KAAK,CAACqE,mBAAN,GACpB,MAAC,MAAD;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,OAAO,EAAC,MAFV;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,OAAO,EAAErE,KAAK,CAACS,kBAAN,CAAyB,IAAzB,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANF,EASE,MAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,sBAArB;AAA4C,MAAA,cAAc,EAAC,sBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADoB,GAYhB,IAvCP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADD,GA8CA,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEM,gBAAgB,GAAG,SAAH,GAAe,SAAnD;AAA8D,IAAA,OAAO,EAAGe,CAAD,IAAOS,WAAW,CAACT,CAAD,EAAIlE,wBAAwB,CAACmF,MAA7B,CAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+H,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,UAArB;AAAgC,IAAA,cAAc,EAAC,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/H,CADJ,EAEI,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEC,kBAAkB,GAAG,SAAH,GAAe,SAArD;AAAgE,IAAA,OAAO,EAAGlB,CAAD,IAAOS,WAAW,CAACT,CAAD,EAAIlE,wBAAwB,CAACqF,QAA7B,CAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,YAArB;AAAkC,IAAA,cAAc,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnI,CAFJ,CADA,EAKA,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEM,CAAC,CAACjD,KAAK,CAAC8C,0BAAR,IACA,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAU,IAAA,OAAO,EAAGhB,CAAD,IAAOG,aAAa,CAACH,CAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMf,gBAAgB,GAClB,MAAC,gBAAD;AACI,IAAA,EAAE,EAAC,oBADP;AAEI,IAAA,cAAc,EAAC,oBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkB,GAMlB,MAAC,gBAAD;AACI,IAAA,EAAE,EAAC,sBADP;AAEI,IAAA,cAAc,EAAC,sBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADF,EAcMA,gBAAgB,GAChB;AAAK,IAAA,OAAO,EAAGe,CAAD,IAAOG,aAAa,CAACH,CAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,OAAO,EAAGA,CAAD,IAAOG,aAAa,CAACH,CAAD,CAHjC,CAII;AAJJ;AAKI,IAAA,KAAK,EAAE1B,OALX;AAMI,IAAA,YAAY,EAAC,KANjB,CAOI;AAPJ;AAQI,IAAA,QAAQ,EAAG0B,CAAD,IAAOD,mBAAmB,CAACC,CAAD,CARxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADgB,GAchB,MAAC,kBAAD;AACE,IAAA,KAAK,EAAEtB,eADT;AAEE,IAAA,QAAQ,EAAGsB,CAAD,IAAOrB,kBAAkB,CAACqB,CAAD,CAFrC;AAGE,IAAA,QAAQ,EAAEqB,YAHZ;AAIE,IAAA,aAAa,EAAE;AACb8B,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,qBAAqB,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAFV,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASG,CAAC;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,WAAjB;AAA8BC,IAAAA,sBAA9B;AAAsDC,IAAAA;AAAtD,GAAD,KACC;AAAK,IAAA,OAAO,EAAGzD,CAAD,IAAOG,aAAa,CAACH,CAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAE0D,MAAAA,KAAK,EAAE,MAAT;AACVC,MAAAA,OAAO,EAAE,MADC;AAEVC,MAAAA,cAAc,EAAE,QAFN;AAGVC,MAAAA,aAAa,EAAE,KAHL;AAIVC,MAAAA,UAAU,EAAE,QAJF;AAKVC,MAAAA,OAAO,EAAE;AALC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,4BACMT,aAAa,CAAC;AAChBU,IAAAA,WAAW,EAAE,0BADG;AAEhBC,IAAAA,SAAS,EAAE,uBAFK;AAGhBC,IAAAA,KAAK,EAAE;AACLR,MAAAA,KAAK,EAAE,OADF;AAELK,MAAAA,OAAO,EAAC,SAFH;AAGLI,MAAAA,UAAU,EAAE,MAHP;AAILC,MAAAA,UAAU,EAAG,oBAJR;AAKLC,MAAAA,QAAQ,EAAE,IALL;AAMLC,MAAAA,UAAU,EAAE,SANP;AAOLC,MAAAA,MAAM,EAAE,WAPH;AAQLC,MAAAA,WAAW,EAAE,SARR;AASLC,MAAAA,YAAY,EAAE,KATT;AAULC,MAAAA,eAAe,EAAE,SAVZ;AAWLC,MAAAA,KAAK,EAAE,SAXF;AAYLC,MAAAA,MAAM,EAAE,MAZH;AAaLC,MAAAA,UAAU,EAAE,gBAbP;AAcL;AACA,yBAAmB;AACjBC,QAAAA,OAAO,EAAE,CADQ;AAEjBN,QAAAA,WAAW,EAAE;AAFI;AAfd;AAHS,GAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANF,EA+BM,CAAA9F,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEe,MAAjB,IACF,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMoB,qBAAqB,EAAlD;AAAsD,IAAA,SAAS,EAAC,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADE,GAMD,EArCL,CADF,EAwCE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG4C,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADd,EAEGF,WAAW,CAACwB,GAAZ,CAAiBC,UAAD,IAAgB;AAAA;;AAC/B,UAAMd,KAAK,GAAGc,UAAU,CAACC,MAAX,GACV;AAAEP,MAAAA,eAAe,EAAE,SAAnB;AAA8BQ,MAAAA,MAAM,EAAE,SAAtC;AAAiDC,MAAAA,YAAY,EAAE,gBAA/D;AAAgFvB,MAAAA,cAAc,EAAE,YAAhG;AAA8GD,MAAAA,OAAO,EAAE,MAAvH;AAA+HyB,MAAAA,QAAQ,EAAE;AAAzI,KADU,GAEV;AAAEV,MAAAA,eAAe,EAAE,SAAnB;AAA8BQ,MAAAA,MAAM,EAAE,SAAtC;AAAiDC,MAAAA,YAAY,EAAE,gBAA/D;AAAgFvB,MAAAA,cAAc,EAAE,YAAhG;AAA8GD,MAAAA,OAAO,EAAE,MAAvH;AAA+HyB,MAAAA,QAAQ,EAAE,OAAzI;AAAkJtB,MAAAA,UAAU,EAAE;AAA9J,KAFJ;AAGA,WACE,0BAASN,sBAAsB,CAACwB,UAAD,EAAa;AAAEd,MAAAA;AAAF,KAAb,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY;AAAK,MAAA,GAAG,EAAE5G,YAAV;AAAwB,MAAA,GAAG,EAAC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,CADF,2BAC6D0H,UAAU,CAACK,WADxE,0DAC6D,sBAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAD7D,4BACoGN,UAAU,CAACK,WAD/G,2DACoG,uBAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CADpG,CADF;AAKD,GATA,CAFH,CAxCF,CAVJ,CA5BN,EA+FM;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAA/G,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEiB,MAAd,IAAuBjB,YAAY,CAACuG,GAAb,CAAiB,CAAC/F,cAAD,EAAiBO,CAAjB,KAAuB;AAC9D,WACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AACI,MAAA,OAAO,EAAG,GAAEA,CAAE,kBADlB;AAEI,MAAA,SAAS,EAAE,CAAApB,sBAAsB,SAAtB,IAAAA,sBAAsB,WAAtB,YAAAA,sBAAsB,CAAEsE,EAAxB,MAA+BzD,cAAc,CAACyD,EAF7D;AAGI,MAAA,SAAS,EAAG,GAAEzD,cAAc,CAAC8C,IAAK,MAAK9C,cAAc,CAAC4C,OAAQ,GAHlE;AAII,MAAA,EAAE,EAAG,kBAAiBrC,CAAE,EAJ5B;AAKI,MAAA,QAAQ,EAAES,CAAC,IAAI;AACXlB,QAAAA,8BAA8B,CAAC,CAAAX,sBAAsB,SAAtB,IAAAA,sBAAsB,WAAtB,YAAAA,sBAAsB,CAAEsE,EAAxB,MAA+BzD,cAAc,CAACyD,EAA9C,GAAmD,IAAnD,GAA0DzD,cAA3D,CAA9B;AACH,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAYE,GAboB,CAAvB,GAaQ,EAdX,CA/FN,EAgHM,CAACR,YAAD,IAAiBF,OAAO,CAACmB,MAAR,IAAkB,CAAnC,IAAwCvB,KAAK,CAAC8C,0BAAN,KAAqClF,wBAAwB,CAACmF,MAAtG,IACA,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeG,IAAI,CAACoE,aAAL,CAAmB;AAAE/C,IAAAA,EAAE,EAAE,wBAAN;AAAgCgD,IAAAA,cAAc,EAAE;AAAhD,GAAnB,CAAf,CAjHN,EAmHK7G,sBAAsB,IACrB,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAewC,IAAI,CAACoE,aAAL,CAAmB;AAAE/C,IAAAA,EAAE,EAAE,oBAAN;AAA4BgD,IAAAA,cAAc,EAAE;AAA5C,GAAnB,CAAf,CApHN,CAHN,CALA,CA/CJ,EA8LIxD,eAAe,IAAI/D,KAAK,CAAC8C,0BAAN,KAAqClF,wBAAwB,CAACqF,QAAjF,IACA,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,4BADH,EAEE,MAAC,aAAD;AACE,IAAA,KAAK,EAAEjD,KAAK,CAACgE,YAAN,CAAmBC,gBAD5B;AAEI,IAAA,SAAS,EAAE,CAACE,IAAD,EAAYG,KAAZ;AAAA;;AAAA,aACT,MAAC,YAAD;AACE,QAAA,EAAE,EAAEA,KADN;AAEE,QAAA,GAAG,EAAEA,KAFP;AAGE,QAAA,OAAO,EAAEH,IAAI,CAACf,OAHhB;AAIE,QAAA,QAAQ,EAAEe,IAAI,CAACqD,QAJjB;AAKE,QAAA,YAAY,EAAErD,IAAI,CAACsD,YALrB;AAME,QAAA,KAAK,EAAEtD,IAAI,CAACuD,KANd;AAOE,QAAA,IAAI,EAAC,SAPP;AAQE,QAAA,SAAS,EAAEvD,IAAI,CAACI,EAAL,gCAAYvE,KAAK,CAACqE,mBAAlB,2DAAY,uBAA2BE,EAAvC,CARb;AASE,QAAA,OAAO,EAAE,MAAM;AAAA;;AAACvE,UAAAA,KAAK,CAACyE,eAAN,iCACXzE,KAAK,CAACgE,YADK;AAEdC,YAAAA,gBAAgB,EAAI,GAAEE,IAAI,CAACuD,KAAM;gCAAd,iBACjBvD,IAAI,CAACf,OADY,kDACjB,cAAcgE,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAA4B,IADX,kBACcjD,IAAI,CAACf,OADnB,mDACc,eAAcgE,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAA4B,KAAIjD,IAAI,CAACqD,QAAS,KAAIrD,IAAI,CAACsD,YAAa;+BAHvF;AAKd9C,YAAAA,QAAQ,EAAE3E,KAAK,CAAC4E;AALF;AAMZ5E,UAAAA,KAAK,CAACS,kBAAN,CAAyB0D,IAAzB,EAA+B,KAA/B;AAAuC,SAf7C,CAgBE;AACA;AACA;AACA;AAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADS;AAAA,KAFf;AAyBE,IAAA,kBAAkB,EAAGJ,eAAe,GAAG,IAAH,GACjC,MAAC,MAAD;AACD,MAAA,SAAS,EAAC,WADT;AAED,MAAA,OAAO,EAAC,MAFP;AAGD,MAAA,IAAI,EAAC,QAHJ;AAID,MAAA,OAAO,EAAE,MAAM/D,KAAK,CAACS,kBAAN,CAAyB,IAAzB,CAJd,CAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcD,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAdC,EAiBD,MAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,iBAArB;AAAuC,MAAA,cAAc,EAAC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBC,CA1BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA/LJ,CAfJ,CADR;AAuQD,CA3XD;;AA6XA,eAAeV,iBAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, deliveryMethodCookieKeyName, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport { ActionButton, ActionsButtons, BannerIcon, Button, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Offer, OfferSection, Options, PickUpOptions, Wrapper } from './delivery-selection.style';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { alignContent, borderRadius, display, flexDirection, justifyContent, textAlign, width } from 'styled-system';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { ADD_ADDRESS } from 'graphql/mutation/address';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { Plus } from 'assets/icons/PlusMinus';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport RadioGroupTwo from 'components/radio-group/radio-group-two';\nimport { InformationBox, DeliveryAddressSection, ButtonGroup, IconWrapper, SectionNumber } from '../checkout-two.style';\n\ninterface Props {\n  deliveryMethodSaved: any\n  setDeliveryAddress: any\n  deliveryMethodTypeSelected: any\n  setDeliveryMethodType: any\n  deliveryMethods: any\n  setSubmitResult: (result: any) => void\n  submitResult: any\n  cartProduct: any // Added this line\n}\n\nconst DeliverySelection: React.FC<Props> = ({ ...props  }) => {\n\n  const [deliveryMethodSelected, setDeliveryMethodSelected] = React.useState(undefined);\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n  const [notInsideDeliveryAreas, setNotInsideDeliveryAreas] = useState(false);\n\n  const setDeliveryMethodAndSaveCookie =  (deliveryOrPickupMethodSelected) => {\n    const deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : {...deliveryOrPickupMethodSelected, deliveryAddress};\n    setDeliveryMethodSelected(deliveryMethod)\n    props.setDeliveryAddress(deliveryMethod, false)\n\n    // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n    // }\n  };\n\n  function inside(point, vs) {\n    var x = point[0], y = point[1];\n    \n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0], yi = vs[i][1];\n        var xj = vs[j][0], yj = vs[j][1];\n        \n        var intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    \n    return inside;\n};\n\n  const searchPickupZipCode =  (e) => {\n    const zipCode = e.target.value;\n    handleOnFocus(e)\n    setZipCode(zipCode)\n    const pickUpOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n\n    // const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode)\n    const methodFound = zipCode === resistenciaZipCode ? pickUpOptionsMethods : [];\n\n    // e.stopPropagation();\n    setSearchResult(methodFound.length > 0 ? methodFound : null)\n    \n    // setSearchResult(pickUpOptionsMethods)\n  };\n\n  const setDelivery =  (e, deli: DeliveryMethodsConstants) => {\n    // if (deli === DeliveryMethodsConstants.DELIVERY) {\n    //   setDeliveryMethodType(deli)\n    //   props.setDeliveryAddress(DeliveryMethodsConstants.DELIVERY)\n    //   return;  \n    // }\n    e.stopPropagation();\n    props.setDeliveryMethodType(deli)\n    setSearchResult(null)\n    setZipCode('')\n  };\n\n  const deleteDeliveryAddress =  () => {\n    setSearchResult(null)\n    setDeliveryAddress('')\n    setNotInsideDeliveryAreas(false)\n  };\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  // deliveryMethodSelected\n  const isPickUpSelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  const intl = useIntl();\n\n  const handleSelect = async (address) => {\n    setDeliveryAddress(address);\n    const results = await geocodeByAddress(address);\n    const latLng = await getLatLng(results[0]);\n    setNotInsideDeliveryAreas(false);\n    let deliveryOptionsMethods = [];\n\n    if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n      deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n      deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n        deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n          if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) { deliveryMethod.name = 'GRATIS'; return true;}\n          return !deliveryMethod.isPickUp;\n        });\n    } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n      deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else {\n      setNotInsideDeliveryAreas(true);\n      console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n    }\n    setSearchResult(deliveryOptionsMethods)\n  };\n    \n  const selectedAddress = props.submitResult.delivery_address && props.submitResult.delivery_address.find(\n    (item) => item.is_primary === true\n  );\n  \n  return (\n          <InformationBox>\n                <Heading>\n                            <FormattedMessage\n                              id='contactNumberText'\n                              defaultMessage='Select Your Contact Number'\n                            />\n                            <SectionNumber />\n                          </Heading>\n            <Heading>\n                <FormattedMessage\n                   id={(props.deliveryMethodSaved) ? 'selectDeliveryMethodSelected' : 'selectDeliveryMethod'}\n                   defaultMessage='Select Your Delivery Type'\n                />\n                <SectionNumber />\n              </Heading>\n              <DeliveryAddressSection>\n                { props.deliveryMethodSaved ? (\n                   <ButtonGroup>\n                   <RadioGroupThree\n                      items={[props.deliveryMethodSaved]}\n                      component={(item: any, index: any) => (\n                        <RadioCard\n                          id={item.id}\n                          key={item.id}\n                          title={props.deliveryMethodSaved?.isPickUp ? `PICKUP ${item.name}` : `DELIVERY`} //  ${item.name} ${props.deliveryMethodSaved?.deliveryAddress?.split(\",\")[0]}\n                          // title={item.name}\n                          details={item.details}\n                          link={item.isPickUp && item.pickUpAddress ? item.pickUpAddress : null}\n                          name='schedule'\n                          checked={true}\n                          withActionButtons={false}\n                          onClick={() => props.setSubmitResult({\n                            ...props.submitResult,\n                            delivery_method_id: item.id, \n                            products: props.cartProduct\n                          })}\n                          onChange={() =>{\n                            return(props.dispatch({\n                              type: 'SET_PRIMARY_SCHEDULE',\n                              payload: item.id.toString(),\n                            }))\n                            }\n                          }\n                        />\n                      )}\n                     secondaryComponent={ props.deliveryMethodSaved ? (\n                      <Button\n                        className='changeButton'\n                        variant='text'\n                        type='button'\n                        onClick={props.setDeliveryAddress(null)}\n                      >\n                        <IconWrapper>\n                            <Plus width='10px' />\n                          </IconWrapper>\n                        <FormattedMessage id='changeDeliveryMethod' defaultMessage='changeDeliveryMethod' />\n                      </Button>\n                     ) : (null)\n                     }\n                   />\n                 </ButtonGroup>\n                ) : (\n                  <DeliveryMethods>\n                  <Options>\n                      <CardWrapper color={isPickUpSelected ? '#009E7F' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.PICKUP)}><FormattedMessage id=\"pickUpId\" defaultMessage=\"notFoundId\" /></CardWrapper> \n                      <CardWrapper color={isDeliverySelected ? '#009E7F' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.DELIVERY)}><FormattedMessage id=\"deliveryId\" defaultMessage=\"notFoundId2\" /></CardWrapper> \n                  </Options>\n                  <Wrapper>\n                  \n                      { !!props.deliveryMethodTypeSelected && (\n                        <Container>\n                          <Heading  onClick={(e) => handleOnFocus(e)}>\n                              { isPickUpSelected ? (\n                              <FormattedMessage\n                                  id=\"pickupModalheading\"\n                                  defaultMessage=\"pickupModalheading\"\n                              />\n                              ) : (\n                              <FormattedMessage\n                                  id=\"deliveryModalheading\"\n                                  defaultMessage=\"deliveryModalheading\"\n                              />\n                              )}\n                            </Heading>\n                            { isPickUpSelected ? (\n                              <div onClick={(e) => handleOnFocus(e)}>\n                                <Input\n                                    type='text'\n                                    name='name'\n                                    onFocus={(e) => handleOnFocus(e)}\n                                    // placeholder='Código postal'\n                                    value={zipCode}\n                                    autoComplete=\"off\"\n                                    // we have to change the onChange because the is no one for the controller name actualy\n                                    onChange={(e) => searchPickupZipCode(e)}\n                                />\n                              </div>\n                              ) : (\n                              <PlacesAutocomplete\n                                value={deliveryAddress}\n                                onChange={(e) => setDeliveryAddress(e)}\n                                onSelect={handleSelect}\n                                searchOptions={{\n                                  types: [],\n                                  componentRestrictions: { country: \"ar\" },\n                                }}\n                              >\n                                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                                  <div onClick={(e) => handleOnFocus(e)} >\n                                    <div style={{ width: '100%',\n                                      display: 'flex',\n                                      justifyContent: 'center',\n                                      flexDirection: 'row',\n                                      alignItems: 'center',\n                                      padding: '0px 0px',}}>\n                                      <input\n                                        {...getInputProps({\n                                          placeholder: \"Calle, altura, localidad\",\n                                          className: \"location-search-input\",\n                                          style: {\n                                            width: '220px',\n                                            padding:'0px 8px',\n                                            appearance: 'none',\n                                            fontFamily: `'Lato', sans-serif`,\n                                            fontSize: '15',\n                                            lineHeight: 'inherit',\n                                            border: '1px solid',\n                                            borderColor: '#f7f7f7',\n                                            borderRadius: '6px',\n                                            backgroundColor: '#f7f7f7',\n                                            color: '#0D1136',\n                                            height: '48px',\n                                            transition: 'all 0.25s ease',\n                                            // mb: 3,\n                                            '&:hover,&:focus': {\n                                              outline: 0,\n                                              borderColor: '#009e7f',\n                                            },\n                                          },\n                                        })}\n                                      />{ deliveryAddress?.length ? (\n                                        <ActionsButtons className='button-wrapper'>\n                                            <ActionButton onClick={() => deleteDeliveryAddress()} className='delete-btn'>\n                                                <CloseIcon />\n                                            </ActionButton>\n                                        </ActionsButtons>\n                                      ): ''}\n                                    </div>\n                                    <div className=\"autocomplete-dropdown-container\">\n                                      {loading && <div>Loading...</div>}\n                                      {suggestions.map((suggestion) => {\n                                        const style = suggestion.active\n                                          ? { backgroundColor: \"#fafafa\", cursor: \"pointer\", borderBottom: \"1px solid gray\",justifyContent: \"flex-start\", display: 'flex', maxWidth: '320px' }\n                                          : { backgroundColor: \"#ffffff\", cursor: \"pointer\", borderBottom: \"1px solid gray\",justifyContent: \"flex-start\", display: 'flex', maxWidth: '320px', alignItems: \"center\" };\n                                        return (\n                                          <div {...getSuggestionItemProps(suggestion, { style })}>\n                                            <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>{suggestion.description?.split(\",\")[0]}{suggestion.description?.split(\",\")[1]}\n                                          </div>\n                                        );\n                                      })}\n                                    </div>\n                                  </div>\n                                )}\n                              </PlacesAutocomplete>\n                              )}\n                              <div style={{ paddingTop: '20px'}}>\n                                {searchResult?.length ? searchResult.map((deliveryMethod, i) => {\n                                  return (\n                                    <PickUpOptions>\n                                      <Checkbox\n                                          keyName={`${i}-deliveryMethods`}\n                                          isChecked={deliveryMethodSelected?.id === deliveryMethod.id}\n                                          labelText={`${deliveryMethod.name} - ${deliveryMethod.details} `}\n                                          id={`deliveryMethod-${i}`}\n                                          onChange={e => {\n                                              setDeliveryMethodAndSaveCookie(deliveryMethodSelected?.id === deliveryMethod.id ? null : deliveryMethod)\n                                          }}\n                                      />\n                                    </PickUpOptions>\n                                  )}) : ('')\n                                }\n                              </div>\n                            { !searchResult && zipCode.length >= 4 && props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP && (\n                              <DeliveryText>{intl.formatMessage({ id: 'noDittoPickUpLocations', defaultMessage: 'noDittoPickUpLocations' })}</DeliveryText>\n                            )}\n                            {notInsideDeliveryAreas && (\n                              <DeliveryText>{intl.formatMessage({ id: 'noDeliveryThereYet', defaultMessage: 'noDeliveryThereYet' })}</DeliveryText>\n                            )}\n                        </Container>\n                      )}\n                      {/* <OfferSection>\n                      <GiftBox />\n                      <Offer>\n                          <FormattedMessage\n                          id=\"locationModalFooter\"\n                          defaultMessage=\"Free Delivery For 1st Order\"\n                          values={{ number: 1 }}\n                          />\n                      </Offer>\n                      </OfferSection> */}\n                  </Wrapper>\n              </DeliveryMethods>\n      \n                )}\n            \n                { selectedAddress && props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY && (\n                  <ButtonGroup>\n                    {\"o selecciona una direccion\"}\n                    <RadioGroupTwo\n                      items={props.submitResult.delivery_address}\n                        component={(item: any, index: any) => (\n                          <RadioCardTWO \n                            id={index}\n                            key={index}\n                            address={item.address}\n                            location={item.location}\n                            instructions={item.instructions}\n                            title={item.title}\n                            name='address'\n                            isChecked={item.id === props.deliveryMethodSaved?.id}\n                            onClick={() => {props.setSubmitResult({\n                              ...props.submitResult,\n                              delivery_address:  `${item.title} -\n                              ${item.address?.split(\",\")[0]} ${item.address?.split(\",\")[1]}, ${item.location}, ${item.instructions}\n                              `,\n                              products: props.cartProduct\n                            }); props.setDeliveryAddress(item, false);}}\n                            // onEdit={() => handleEditDelete(item, index, 'edit', 'address')}\n                            // onDelete={() =>\n                            //   handleEditDelete(item, index, 'delete', 'address')\n                            // }\n                          />\n                        )}\n                      secondaryComponent={ selectedAddress ? null :\n                        (<Button\n                        className='addButton'\n                        variant='text'\n                        type='button'\n                        onClick={() => props.setDeliveryAddress(null)}\n                        // onClick={() =>\n                        //   handleModal(UpdateAddressTwo,\n                        //     {\n                        //       item:{ address: props.deliveryMethodSaved?.deliveryAddress },\n                        //       id\n                        //     },\n                        //     'add-address-modal')\n                        // }\n                      >\n                        <IconWrapper>\n                          <Plus width='10px' />\n                        </IconWrapper>\n                        <FormattedMessage id='completeAddress' defaultMessage='Add New' />\n                      </Button>)\n                      }\n                    />\n                  </ButtonGroup>\n                )}\n                \n              </DeliveryAddressSection>\n            </InformationBox>\n    );\n\n};\n\nexport default DeliverySelection;\n\n"]},"metadata":{},"sourceType":"module"}