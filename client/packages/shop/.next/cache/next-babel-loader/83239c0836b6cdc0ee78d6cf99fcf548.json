{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/layouts/app-layout.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport Sticky from 'react-stickynode';\nimport { useAppState } from 'contexts/app/app.provider';\nimport Header from './header/header';\nimport { LayoutWrapper } from './layout.style';\nimport { GET_TYPE } from 'graphql/query/type.query';\nimport ErrorMessage from 'components/error-message/error-message';\nvar MobileHeader = dynamic(_c = function _c() {\n  return import('./header/mobile-header');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./header/mobile-header')];\n    },\n    modules: ['./header/mobile-header']\n  }\n});\n_c2 = MobileHeader;\n\nvar Layout = function Layout(_ref) {\n  _s();\n\n  var className = _ref.className,\n      children = _ref.children,\n      token = _ref.token;\n  var isSticky = useAppState('isSticky');\n\n  var _useRouter = useRouter(),\n      pathname = _useRouter.pathname,\n      query = _useRouter.query;\n\n  var type = pathname === '/restaurant' ? 'restaurant' : query.type;\n  var newTypeArry = [];\n\n  var _useQuery = useQuery(GET_TYPE, {\n    variables: {\n      searchText: ''\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Loading...',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    });\n  }\n\n  ;\n\n  var isHomeHandler = function isHomeHandler(typedata, type) {\n    /*     if(typedata){\n          console.log(\"HEREEEE\", typedata.types)\n          typedata.types.items.map((item: any, index: any) => {\n            newTypeArry.push(item.slug)\n          })\n          if(newTypeArry.includes(`${type}`)){\n            return true;\n          }else{\n            return false;\n          }  \n        } else{\n          return;\n        } */\n    return true;\n  };\n\n  return __jsx(LayoutWrapper, {\n    className: \"layoutWrapper \".concat(className),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(Sticky, {\n    enabled: isSticky,\n    innerZ: 1001,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(MobileHeader, {\n    className: \"\".concat(isSticky ? 'sticky' : 'unSticky', \" \").concat(isHomeHandler(data, type) ? 'home' : '', \" desktop\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), __jsx(Header, {\n    className: \"\".concat(isSticky && isHomeHandler(data, type) ? 'sticky' : 'unSticky', \" \").concat(isHomeHandler(data, type) ? 'home' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), children);\n};\n\n_s(Layout, \"/Mom4/62dqPFsOi4yAvavecLuO0=\", false, function () {\n  return [useAppState, useRouter, useQuery];\n});\n\n_c3 = Layout;\nexport default Layout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MobileHeader$dynamic\");\n$RefreshReg$(_c2, \"MobileHeader\");\n$RefreshReg$(_c3, \"Layout\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/layouts/app-layout.tsx"],"names":["React","dynamic","useRouter","useQuery","Sticky","useAppState","Header","LayoutWrapper","GET_TYPE","ErrorMessage","MobileHeader","ssr","Layout","className","children","token","isSticky","pathname","query","type","newTypeArry","variables","searchText","data","error","loading","message","isHomeHandler","typedata"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport Sticky from 'react-stickynode';\nimport { useAppState } from 'contexts/app/app.provider';\nimport Header from './header/header';\nimport { LayoutWrapper } from './layout.style';\nimport { isCategoryPage } from './is-home-page';\nimport { GET_TYPE } from 'graphql/query/type.query';\nimport ErrorMessage from 'components/error-message/error-message';\nconst MobileHeader = dynamic(() => import('./header/mobile-header'), {\n  ssr: false,\n});\n\ntype LayoutProps = {\n  className?: string;\n  token?: string;\n};\n\nconst Layout: React.FunctionComponent<LayoutProps> = ({\n  className,\n  children,\n  // deviceType: { mobile, tablet, desktop },\n  token,\n}) => {\n\n  const isSticky = useAppState('isSticky');\n  const { pathname, query } = useRouter();\n  const type = pathname === '/restaurant' ? 'restaurant' : query.type;\n\n  const newTypeArry = [];\n  const { data, error, loading } = useQuery(\n    GET_TYPE,\n    {\n      variables: {\n        searchText: ''\n      }\n    }\n  );\n\n\n  if (loading) {\n    return <ErrorMessage message={'Loading...'} />\n  };\n\n  if (error) {\n    return (\n      <ErrorMessage message={error.message} />\n    );\n  };\n\n\n  const isHomeHandler = (typedata: any, type: any) =>{\n/*     if(typedata){\n      console.log(\"HEREEEE\", typedata.types)\n      typedata.types.items.map((item: any, index: any) => {\n        newTypeArry.push(item.slug)\n      })\n      if(newTypeArry.includes(`${type}`)){\n        return true;\n      }else{\n        return false;\n      }  \n    } else{\n      return;\n    } */\n    return true;\n  }\n\n \n  return (\n    <LayoutWrapper className={`layoutWrapper ${className}`}>\n      <Sticky enabled={isSticky} innerZ={1001}>\n        <MobileHeader\n          className={`${isSticky ? 'sticky' : 'unSticky'} ${\n            isHomeHandler(data,type) ? 'home' : ''\n          } desktop`}\n        />\n\n        <Header\n          className={`${isSticky && isHomeHandler(data,type) ? 'sticky' : 'unSticky'} ${\n            isHomeHandler(data,type) ? 'home' : ''\n          }`}\n        />\n      </Sticky>\n      {children}\n    </LayoutWrapper>\n  );\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}