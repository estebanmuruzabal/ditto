{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\nquery GetUser{\\n  getUser{\\n    id\\n    name\\n    plants {\\n      plantId\\n      sensors {\\n        reading\\n      }\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery GetUser{\\n  getUser{\\n    id\\n    name\\n    email\\n    created_at\\n    role\\n    plants {\\n      plantId\\n      name\\n      soil_humidity_1\\n      soil_humidity_2\\n      light\\n      airHumidity\\n      tempeture\\n      isRelayOneOn\\n      isRelayTwoOn\\n      isRelayThirdOn\\n      isRelayFourthOn\\n      timestamp\\n      timeZone\\n      alarm\\n      alarm_timestamp\\n      sensors {\\n        reading\\n        name\\n        whatsappWarningsOn\\n        minWarning\\n        maxWarning\\n        reading\\n        mode\\n        relayOneAutomatedStartedTime\\n        relayOneAutomatedTimeToRun\\n        relayTwoAutomatedStartedTime\\n        relayTwoAutomatedTimeToRun\\n        relayOneIdRelated\\n        relayOneWorking\\n        relayTwoIdRelated\\n        relayTwoWorking\\n        settingType\\n        logs {\\n          timestamp\\n          reading\\n          started\\n          finished\\n        }\\n        scheduledOnTimes {\\n          daysToRepeat\\n          startTime\\n          endTime\\n          enabled\\n          smartLight\\n        }\\n      }\\n    }\\n    delivery_address{\\n      id\\n      title\\n      address\\n      location\\n      instructions\\n      is_primary\\n    }\\n    phones{\\n      number\\n      id\\n      is_primary\\n    }\\n    workInfo{\\n        stoppedWorkTime\\n        startedWorkTime\\n        ratePerHour\\n        totalWorkingMinutesPerWeek\\n        totalSalaryToPayWeekly\\n        advancedSalaryPaid\\n        isWorking\\n        taskRelated\\n    }\\n    tasks{\\n      taskId\\n      startDate\\n      finishDate\\n      plannedDate\\n      isRepetitived\\n      completationTimes\\n      isDone\\n      description\\n      workedHours\\n    }\\n    logs{\\n      timestamp\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nexport var GET_LOGGED_IN_USER = gql(_templateObject());\nexport var GET_LOGGED_IN_USER_SETTINGS = gql(_templateObject2());","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/graphql/query/customer.query.ts"],"names":["gql","GET_LOGGED_IN_USER","GET_LOGGED_IN_USER_SETTINGS"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,IAAMC,kBAAkB,GAAGD,GAAH,mBAAxB;AAiGP,OAAO,IAAME,2BAA2B,GAAGF,GAAH,oBAAjC","sourcesContent":["import gql from 'graphql-tag';\n\nexport const GET_LOGGED_IN_USER = gql`\nquery GetUser{\n  getUser{\n    id\n    name\n    email\n    created_at\n    role\n    plants {\n      plantId\n      name\n      soil_humidity_1\n      soil_humidity_2\n      light\n      airHumidity\n      tempeture\n      isRelayOneOn\n      isRelayTwoOn\n      isRelayThirdOn\n      isRelayFourthOn\n      timestamp\n      timeZone\n      alarm\n      alarm_timestamp\n      sensors {\n        reading\n        name\n        whatsappWarningsOn\n        minWarning\n        maxWarning\n        reading\n        mode\n        relayOneAutomatedStartedTime\n        relayOneAutomatedTimeToRun\n        relayTwoAutomatedStartedTime\n        relayTwoAutomatedTimeToRun\n        relayOneIdRelated\n        relayOneWorking\n        relayTwoIdRelated\n        relayTwoWorking\n        settingType\n        logs {\n          timestamp\n          reading\n          started\n          finished\n        }\n        scheduledOnTimes {\n          daysToRepeat\n          startTime\n          endTime\n          enabled\n          smartLight\n        }\n      }\n    }\n    delivery_address{\n      id\n      title\n      address\n      location\n      instructions\n      is_primary\n    }\n    phones{\n      number\n      id\n      is_primary\n    }\n    workInfo{\n        stoppedWorkTime\n        startedWorkTime\n        ratePerHour\n        totalWorkingMinutesPerWeek\n        totalSalaryToPayWeekly\n        advancedSalaryPaid\n        isWorking\n        taskRelated\n    }\n    tasks{\n      taskId\n      startDate\n      finishDate\n      plannedDate\n      isRepetitived\n      completationTimes\n      isDone\n      description\n      workedHours\n    }\n    logs{\n      timestamp\n    }\n  }\n}\n`;\n\nexport const GET_LOGGED_IN_USER_SETTINGS = gql`\nquery GetUser{\n  getUser{\n    id\n    name\n    plants {\n      plantId\n      sensors {\n        reading\n      }\n    }\n  }\n}\n`;\n\n"]},"metadata":{},"sourceType":"module"}