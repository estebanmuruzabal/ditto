{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/ditto-market/ditto-market.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { PlantsPageContainer, PlantPageWrapper } from './ditto-market.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { AuthContext } from 'contexts/auth/auth.context'; // import ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\n// import { GeolocateControl } from \"mapbox-gl\";\n\nimport Map, { GeolocateControl } from 'react-map-gl';\n\nvar DittoMarket = function DittoMarket(_ref) {\n  _s();\n\n  var deviceType = _ref.deviceType,\n      userRefetch = _ref.userRefetch;\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useContext2 = useContext(AuthContext),\n      authDispatch = _useContext2.authDispatch;\n\n  var _useQuery = useQuery(GET_LOGGED_IN_USER, {\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: \"network-only\" // pollInterval: 5000,\n\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      _useQuery$data = _useQuery.data,\n      data = _useQuery$data === void 0 ? {} : _useQuery$data;\n\n  var _useState = useState({\n    height: \"100%\",\n    width: \"100%\"\n  }),\n      viewport = _useState[0],\n      setViewport = _useState[1];\n\n  var intl = useIntl();\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Cargando...',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    });\n  }\n\n  ;\n  return __jsx(PlantPageWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(PlantsPageContainer, {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"asdsad\", __jsx(Link, {\n    href: \"/profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: \"home-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"backProfileBtn\",\n    defaultMessage: \"Back to Profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }))), \"asdsad\", __jsx(Map, {\n    mapboxAccessToken: \"pk.eyJ1IjoiZXN0ZWJhbm11cnV6YWJhbCIsImEiOiJjbG4ybGZzYmcwMWQwMmlvMDVrbHhheno3In0.EZPhoOcmHwM3BFhGkrQ2-A\",\n    initialViewState: {\n      longitude: -100,\n      latitude: 40,\n      zoom: 3.5\n    },\n    mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(GeolocateControl, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(DittoMarket, \"TIl8vxqUegat/nE6+yXzHZTyt1w=\", false, function () {\n  return [useQuery, useIntl];\n});\n\n_c = DittoMarket;\nexport default DittoMarket;\n\nvar _c;\n\n$RefreshReg$(_c, \"DittoMarket\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/ditto-market/ditto-market.tsx"],"names":["React","useState","useContext","Link","useQuery","ErrorMessage","PlantsPageContainer","PlantPageWrapper","FormattedMessage","useIntl","GET_LOGGED_IN_USER","ProfileContext","AuthContext","Map","GeolocateControl","DittoMarket","deviceType","userRefetch","state","dispatch","authDispatch","notifyOnNetworkStatusChange","fetchPolicy","loading","error","data","height","width","viewport","setViewport","intl","message","longitude","latitude","zoom"],"mappings":"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","sourcesContent":["import React,  { useState, useEffect, useContext } from 'react';\nimport Link from 'next/link';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport ErrorMessage from 'components/error-message/error-message';\n\nimport {\n  PlantsPageContainer,\n  PlantPageWrapper,\n} from './ditto-market.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER, GET_LOGGED_IN_USER_SETTINGS } from 'graphql/query/customer.query';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\n// import ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\n// import { GeolocateControl } from \"mapbox-gl\";\nimport Map, {GeolocateControl} from 'react-map-gl';\ntype DittoMarketProps = {\n  data?: any;\n  userRefetch: any;\n  index?: Number;\n  Router?: any;\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst DittoMarket: React.FC<DittoMarketProps> = ({ deviceType, userRefetch }) => {\n  const { state, dispatch } = useContext(ProfileContext);\n  const {authDispatch} = useContext<any>(AuthContext);\n\n  const { loading, error, data = {} } = useQuery(GET_LOGGED_IN_USER, {\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: \"network-only\",\n    // pollInterval: 5000,\n  });\n\n  const [viewport, setViewport] = useState({\n    height: \"100%\",\n    width: \"100%\"\n  });\n\n  const intl = useIntl();\n\n  if (loading) {\n    return <ErrorMessage message={'Cargando...'} />\n  };\n\n  if (error) {\n    return (\n      <ErrorMessage message={error.message} />\n    );\n  };\n\n  return (\n    <PlantPageWrapper>\n      <PlantsPageContainer style={{ width: '100%' }}>\n        asdsad\n        <Link href=\"/profile\">\n          <a className=\"home-btn\">\n            <FormattedMessage id=\"backProfileBtn\" defaultMessage=\"Back to Profile\" />\n          </a>\n        </Link>\n        asdsad\n        <Map\n          mapboxAccessToken=\"pk.eyJ1IjoiZXN0ZWJhbm11cnV6YWJhbCIsImEiOiJjbG4ybGZzYmcwMWQwMmlvMDVrbHhheno3In0.EZPhoOcmHwM3BFhGkrQ2-A\"\n          initialViewState={{\n            longitude: -100,\n            latitude: 40,\n            zoom: 3.5\n          }}\n          mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n        >\n          <GeolocateControl />\n        </Map>\n      </PlantsPageContainer>\n    </PlantPageWrapper>\n  );\n};\n\nexport default DittoMarket;\n"]},"metadata":{},"sourceType":"module"}