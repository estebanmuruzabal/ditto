{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/address-card/address-card-two.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { ADD_ADDRESS, UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { getCookie } from 'utils/session';\nimport { deliveryMethodCookieKeyName } from 'utils/constant'; // Shape of form values\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: props => {\n    const ID = props.item.id;\n    const addressItem = props.item.item;\n    return {\n      id: ID || null,\n      addressId: addressItem.id || null,\n      title: addressItem.title || '',\n      address: addressItem.address || '',\n      instructions: addressItem.instructions || '',\n      location: addressItem.location || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required('Required!'),\n    address: Yup.string().required('Required'),\n    location: Yup.string().required('Required')\n  }),\n  handleSubmit: values => {// do submitting things\n  }\n});\n\nconst UpdateAddressTwo = props => {\n  var _deliverData$delivery;\n\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n    handleReset,\n    isSubmitting\n  } = props;\n  const ID = item.id;\n  let newAddressid = null;\n  const addressItem = item.item;\n  const addressValue = {\n    id: ID,\n    addressId: addressItem.id,\n    title: values.title,\n    address: values.address,\n    location: values.location,\n    instructions: values.instructions,\n    is_primary: true\n  };\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const intl = useIntl();\n  const [updateAddressMutation] = useMutation(UPDATE_ADDRESS);\n  const [addAddressMutation] = useMutation(ADD_ADDRESS);\n  const {\n    data: deliverData\n  } = useQuery(DELIVERY_METHOD);\n  const deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items;\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddress, setDeliveryAddress] = React.useState(\"\");\n  const [notInsideDeliveryAreas, setNotInsideDeliveryAreas] = React.useState(false);\n  useEffect(() => {\n    const savedDeliveryMethod = getCookie(deliveryMethodCookieKeyName);\n\n    if (savedDeliveryMethod) {\n      const deliveryMethodSaved = JSON.parse(savedDeliveryMethod);\n      console.log(deliveryMethodSaved);\n      setDeliveryAddress(deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.deliveryAddress);\n    }\n  }, []);\n\n  const handleSubmit = async () => {\n    if (isValid) {\n      const {\n        id,\n        addressId,\n        title,\n        address,\n        location,\n        instructions\n      } = addressValue;\n\n      if (Object.keys(addressItem).length === 0) {\n        const {\n          data\n        } = await addAddressMutation({\n          variables: {\n            id,\n            title,\n            address,\n            location,\n            instructions\n          }\n        });\n        newAddressid = data.addDeliveryAddress.id;\n        addressValue.id = data.addDeliveryAddress.id;\n        dispatch({\n          type: 'ADD_ADDRESS',\n          payload: addressValue\n        });\n        closeModal();\n      } else {\n        const updateAddressData = await updateAddressMutation({\n          variables: {\n            id,\n            addressId,\n            title,\n            address,\n            location,\n            instructions\n          }\n        });\n        dispatch({\n          type: 'UPDATE_ADDRESS',\n          payload: {\n            value: addressValue,\n            id: addressItem.id\n          }\n        });\n        closeModal();\n      }\n    }\n  };\n\n  function inside(point, vs) {\n    var x = point[0],\n        y = point[1];\n    var inside = false;\n\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0],\n          yi = vs[i][1];\n      var xj = vs[j][0],\n          yj = vs[j][1];\n      var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  ;\n\n  const handleSelect = async address => {\n    setDeliveryAddress(address);\n    const results = await geocodeByAddress(address);\n    const latLng = await getLatLng(results[0]);\n    setNotInsideDeliveryAreas(false);\n    let deliveryOptionsMethods = [];\n\n    if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n      deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) {\n          deliveryMethod.name = 'Delivery Gratis';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n      deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) {\n          deliveryMethod.name = 'Delivery Gratis';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n      deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) {\n          deliveryMethod.name = 'Delivery Gratis';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaEspaÃ±aPolygon)) {\n      deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) {\n          deliveryMethod.name = 'Delivery Gratis';\n          return true;\n        }\n\n        return !deliveryMethod.isPickUp;\n      });\n    } else {\n      setNotInsideDeliveryAreas(true);\n      console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n    }\n\n    setSearchResult(deliveryOptionsMethods);\n  };\n\n  return __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, intl.formatMessage({\n    id: (addressItem === null || addressItem === void 0 ? void 0 : addressItem.id) ? 'editAddressId' : 'addNewAddressId',\n    defaultMessage: 'Address name'\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"title\",\n    type: \"text\",\n    width: \"100%\",\n    placeholder: intl.formatMessage({\n      id: 'addressRefId',\n      defaultMessage: 'Address name'\n    }),\n    error: touched.title && errors.title,\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, deliveryAddress ? {\n    /* <TextField\n    id=\"address\"\n    type=\"text\"\n    width='100%'\n    placeholder={intl.formatMessage({ id: 'addressId', defaultMessage: 'Address' })}\n    error={touched.address && errors.address}\n    value={values.address}\n    onChange={handleChange}\n    onBlur={handleBlur}\n    /> */\n  } : __jsx(TextField, {\n    id: \"address\",\n    type: \"text\",\n    width: \"100%\",\n    placeholder: intl.formatMessage({\n      id: 'addressId',\n      defaultMessage: 'Address'\n    }),\n    error: touched.address && errors.address,\n    value: values.address,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"location\",\n    type: \"text\",\n    placeholder: intl.formatMessage({\n      id: 'locationId',\n      defaultMessage: 'Localidad'\n    }),\n    width: \"100%\",\n    error: touched.location && errors.location,\n    value: values.location,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"instructions\",\n    as: \"textarea\",\n    width: \"100%\",\n    placeholder: intl.formatMessage({\n      id: 'instructionsId',\n      defaultMessage: 'Delivery instructions'\n    }),\n    error: touched.instructions && errors.instructions,\n    value: values.instructions,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  })), __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"submit\",\n    style: {\n      width: '100%',\n      height: '44px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"savedAddressId\",\n    defaultMessage: \"Save Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default FormEnhancer(UpdateAddressTwo);","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/address-card/address-card-two.tsx"],"names":["React","useContext","useEffect","Yup","withFormik","Form","closeModal","TextField","Button","useMutation","useQuery","ADD_ADDRESS","UPDATE_ADDRESS","FieldWrapper","Heading","ProfileContext","FormattedMessage","useIntl","geocodeByAddress","getLatLng","DELIVERY_METHOD","getCookie","deliveryMethodCookieKeyName","FormEnhancer","mapPropsToValues","props","ID","item","id","addressItem","addressId","title","address","instructions","location","validationSchema","object","shape","string","required","handleSubmit","values","UpdateAddressTwo","isValid","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","newAddressid","addressValue","is_primary","state","dispatch","intl","updateAddressMutation","addAddressMutation","data","deliverData","deliveryMethods","items","searchResult","setSearchResult","useState","deliveryAddress","setDeliveryAddress","notInsideDeliveryAreas","setNotInsideDeliveryAreas","savedDeliveryMethod","deliveryMethodSaved","JSON","parse","console","log","Object","keys","length","variables","addDeliveryAddress","type","payload","updateAddressData","value","inside","point","vs","x","y","i","j","xi","yi","xj","yj","intersect","handleSelect","results","latLng","deliveryOptionsMethods","lat","lng","plazadoceDeOctubrePolygon","filter","deliveryMethod","isPickUp","details","includes","name","plazaBelgranoPolygon","plazaNueveDeJulioPolygon","plazaEspaÃ±aPolygon","formatMessage","defaultMessage","width","height"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, FormikProps, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { ADD_ADDRESS, UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { getCookie } from 'utils/session';\nimport { deliveryMethodCookieKeyName } from 'utils/constant';\n\n// Shape of form values\ninterface FormValues {\n  id: any | null;\n  addressId: any | null,\n  title: string;\n  address: string;\n  location?: string;\n  instructions?: string;\n}\n\n// The type of props MyForm receives\ninterface MyFormProps {\n  item?: any | null;\n  id?: any | null;\n}\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik<MyFormProps, FormValues>({\n  // Transform outer props into form values\n  mapPropsToValues: (props) => {\n    const ID = props.item.id;\n    const addressItem = props.item.item;\n    return {\n      id: ID || null,\n      addressId: addressItem.id || null,\n      title: addressItem.title || '',\n      address: addressItem.address || '',\n      instructions: addressItem.instructions || '',\n      location: addressItem.location || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required('Required!'),\n    address: Yup.string().required('Required'),\n    location: Yup.string().required('Required'),\n  }),\n  handleSubmit: (values) => {\n    // do submitting things\n  },\n});\n\nconst UpdateAddressTwo = (props: FormikProps<FormValues> & MyFormProps) => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n\n    handleReset,\n    isSubmitting,\n  } = props;\n  const ID = item.id;\n  let newAddressid = null;\n  const addressItem = item.item;\n  const addressValue = {\n    id: ID,\n    addressId: addressItem.id, \n    title: values.title,\n    address: values.address,\n    location: values.location,\n    instructions: values.instructions,\n    is_primary: true\n  };\n  const { state, dispatch } = useContext(ProfileContext);\n  const intl = useIntl();\n\n  const [updateAddressMutation] = useMutation(UPDATE_ADDRESS);\n  const [addAddressMutation] = useMutation(ADD_ADDRESS);\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  \n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddress, setDeliveryAddress] = React.useState(\"\");\n  const [notInsideDeliveryAreas, setNotInsideDeliveryAreas] = React.useState(false);\n\n  useEffect(() => {\n    const savedDeliveryMethod = getCookie(deliveryMethodCookieKeyName);\n    if (savedDeliveryMethod) {\n      const deliveryMethodSaved = JSON.parse(savedDeliveryMethod);\n      console.log(deliveryMethodSaved)\n      setDeliveryAddress(deliveryMethodSaved?.deliveryAddress)\n    }\n  }, []);\n\n  const handleSubmit = async () => {\n    if (isValid) {\n      const {id, addressId, title, address, location, instructions} = addressValue;\n      if (Object.keys(addressItem).length === 0) {\n        const {data}  = await addAddressMutation({\n          variables: { \n            id,\n            title,\n            address, \n            location,\n            instructions\n           },\n        });\n        newAddressid = data.addDeliveryAddress.id;\n        addressValue.id = data.addDeliveryAddress.id;\n        dispatch({\n          type: 'ADD_ADDRESS',\n          payload: addressValue \n        });\n        closeModal();\n      }else{\n        const updateAddressData = await updateAddressMutation({\n          variables: { \n            id,\n            addressId,\n            title,\n            address, \n            location,\n            instructions\n           }\n        });\n        dispatch({\n          type: 'UPDATE_ADDRESS',\n          payload: { value: addressValue, id: addressItem.id }\n\n        });\n        closeModal();\n      }\n    }\n  };\n\n  function inside(point, vs) {\n    var x = point[0], y = point[1];\n    \n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0], yi = vs[i][1];\n        var xj = vs[j][0], yj = vs[j][1];\n        \n        var intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    \n    return inside;\n};\n\nconst handleSelect = async (address) => {\n  setDeliveryAddress(address);\n  const results = await geocodeByAddress(address);\n  const latLng = await getLatLng(results[0]);\n  setNotInsideDeliveryAreas(false);\n  let deliveryOptionsMethods = [];\n\n  if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n    deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n      return !deliveryMethod.isPickUp;\n    });\n  } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n    deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n      return !deliveryMethod.isPickUp;\n    });\n  } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n      deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n  } else if (inside([latLng.lat, latLng.lng], plazaEspaÃ±aPolygon)) {\n    deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n      return !deliveryMethod.isPickUp;\n    });\n  } else {\n    setNotInsideDeliveryAreas(true);\n    console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n  }\n  setSearchResult(deliveryOptionsMethods)\n};\n\n  return (\n    <Form>\n      <Heading>{intl.formatMessage({ id: addressItem?.id ? 'editAddressId' : 'addNewAddressId', defaultMessage: 'Address name' })}</Heading>\n      <FieldWrapper>\n        <TextField\n          id=\"title\"\n          type=\"text\"\n          width='100%'\n          placeholder={intl.formatMessage({ id: 'addressRefId', defaultMessage: 'Address name' })}\n          error={touched.title && errors.title}\n          value={values.title}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        { deliveryAddress ? (\n          {/* <TextField\n          id=\"address\"\n          type=\"text\"\n          width='100%'\n          placeholder={intl.formatMessage({ id: 'addressId', defaultMessage: 'Address' })}\n          error={touched.address && errors.address}\n          value={values.address}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        /> */}\n        ) : (\n          <TextField\n            id=\"address\"\n            type=\"text\"\n            width='100%'\n            placeholder={intl.formatMessage({ id: 'addressId', defaultMessage: 'Address' })}\n            error={touched.address && errors.address}\n            value={values.address}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n        )}\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"location\"\n          type=\"text\"\n          placeholder={intl.formatMessage({ id: 'locationId', defaultMessage: 'Localidad' })}\n          width='100%'\n          error={touched.location && errors.location}\n          value={values.location}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"instructions\"\n          as=\"textarea\"\n          width='100%'\n          placeholder={intl.formatMessage({ id: 'instructionsId', defaultMessage: 'Delivery instructions' })}\n          error={touched.instructions && errors.instructions}\n          value={values.instructions}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n\n      <Button\n        onClick={handleSubmit}\n        type=\"submit\"\n        style={{ width: '100%', height: '44px' }}\n      >\n        <FormattedMessage id=\"savedAddressId\" defaultMessage=\"Save Address\" />\n      </Button>\n    </Form>\n  );\n};\n\nexport default FormEnhancer(UpdateAddressTwo);\n"]},"metadata":{},"sourceType":"module"}