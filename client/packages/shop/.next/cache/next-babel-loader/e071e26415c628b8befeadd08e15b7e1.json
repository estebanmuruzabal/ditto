{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { Button, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, LocationContent, Offer, OfferSection, Options, SubHeaderWrapper, Wrapper } from './sub-header.style';\nimport { useLocale } from 'contexts/language/language.provider';\nimport { useMedia } from 'utils/use-media';\nimport { FormattedMessage } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { GiftBox } from 'assets/icons/GiftBox';\n\nvar LocationMenu = function LocationMenu(_ref) {\n  var cityAndStateText = _ref.cityAndStateText,\n      deliveryMethodTypeSelected = _ref.deliveryMethodTypeSelected,\n      isOpen = _ref.isOpen;\n  var noOptionSelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP || deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  return __jsx(LocationContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, isOpen ? __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleDown,\n    className: \"fas fa-chevron-down\",\n    style: {\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleUp,\n    className: \"fas fa-chevron-up\",\n    style: {\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }\n  }), __jsx(DeliveryText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, deliveryMethodTypeSelected));\n};\n\n_c = LocationMenu;\n\nvar SubHeader = function SubHeader(_ref2) {\n  _s();\n\n  var _deliverData$delivery;\n\n  var props = _extends({}, _ref2);\n\n  var _useLocale = useLocale(),\n      location = _useLocale.location;\n\n  var mobile = useMedia('(max-width: 580px)');\n\n  var _React$useState = React.useState('How you want your items?'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      deliveryMethodTypeSelected = _React$useState2[0],\n      setDeliveryMethodType = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      deliveryMethodSelected = _React$useState4[0],\n      setDeliveryMethod = _React$useState4[1];\n\n  var _useQuery = useQuery(DELIVERY_METHOD),\n      deliverData = _useQuery.data;\n\n  var _useContext = useContext(AuthContext),\n      authDispatch = _useContext.authDispatch;\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      zipCode = _React$useState6[0],\n      setZipCode = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      searchResult = _React$useState8[0],\n      setSearchResult = _React$useState8[1];\n\n  var setZipCodeAddress = function setZipCodeAddress(e, deli) {\n    // e.stopPropagation();\n    setZipCode(deli);\n    searchZipCode(e, deli);\n  };\n\n  var searchZipCode = function searchZipCode(e, deli) {\n    var pickUpOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n      return deliveryMethod.isPickUp === true;\n    });\n    var methodFound = pickUpOptionsMethods.filter(function (method) {\n      return method.details.includes(zipCode);\n    });\n    console.log(deli);\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : []);\n  };\n\n  console.log('deliveryMethodSelected', deliveryMethodSelected);\n\n  var setDelivery = function setDelivery(e, deli) {\n    e.stopPropagation();\n    setDeliveryMethodType(deli);\n  };\n\n  var handleOnFocus = function handleOnFocus(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  var deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items; // const orderDeliveryMethod = deliveryMethods?.filter(method => method.id === myOrder?.delivery_method_id)[0];\n  // const deliveryDateAndTime = `${myOrder?.delivery_pickup_date} ${getDeliverySchedule(orderDeliveryMethod?.details, intl.locale)}`;\n\n  console.log('deliveryMethods', deliveryMethods); // deliveryMethodSelected\n\n  var isPickUp = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  var hasDefaultPickUpOption = true;\n  var a = isPickUp && hasDefaultPickUpOption ? 'Find the closest PickUp Location' : 'Check delivery address ZIP CODE';\n  var cityAndStateText = isPickUp ? a : location ? mobile ? \"\".concat(location.split(', ')[1], \", \").concat(location.split(', ')[2]) : \"\".concat(location.split(', ')[0], \", \").concat(location.split(', ')[1]) : '';\n  return __jsx(SubHeaderWrapper, {\n    className: props.className,\n    id: \"layout-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverBigger, {\n    direction: \"left\",\n    className: \"user-pages-dropdown\",\n    openHandler: __jsx(LocationMenu, {\n      isOpen: false,\n      deliveryMethodTypeSelected: deliveryMethodTypeSelected,\n      cityAndStateText: cityAndStateText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 22\n      }\n    }),\n    closeHandler: __jsx(LocationMenu, {\n      isOpen: true,\n      deliveryMethodTypeSelected: deliveryMethodTypeSelected,\n      cityAndStateText: cityAndStateText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 23\n      }\n    }),\n    content: __jsx(DeliveryMethods, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, __jsx(Options, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, __jsx(CardWrapper, {\n      onClick: function onClick(e) {\n        return setDelivery(e, DeliveryMethodsConstants.PICKUP);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, \"Pickup\"), __jsx(CardWrapper, {\n      onClick: function onClick(e) {\n        return setDelivery(e, DeliveryMethodsConstants.DELIVERY);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"Delivery\")), __jsx(Wrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, __jsx(Container, {\n      onClick: function onClick(e) {\n        return handleOnFocus(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, __jsx(Heading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, isPickUp ? __jsx(FormattedMessage, {\n      id: \"pickupModalheading\",\n      defaultMessage: \"Select Your Location\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }) : __jsx(FormattedMessage, {\n      id: \"deliveryModalheading\",\n      defaultMessage: \"Select Your Location\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    })), __jsx(Input, {\n      type: \"text\",\n      name: \"name\",\n      onFocus: function onFocus(e) {\n        return handleOnFocus(e);\n      },\n      placeholder: \"Enter zip code\",\n      value: zipCode // we have to change the onChange because the is no one for the controller name actualy\n      ,\n      onChange: function onChange(e) {\n        return setZipCodeAddress(e, e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      width: \"197px\",\n      height: \"34.5px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 18\n      }\n    }), (searchResult === null || searchResult === void 0 ? void 0 : searchResult.length) ? searchResult.map(function (result, i) {\n      // const isChecked = deliveryMethodSelected?.id === result.id;\n      return __jsx(\"input\", {\n        checked: (deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === result.id,\n        className: \"switch\",\n        key: \"\".concat(i, \"-results\"),\n        id: \"\".concat(i, \"-results\"),\n        type: \"checkbox\" // disabled={disabled}\n        ,\n        onChange: function onChange(e) {\n          setDeliveryMethod((deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === result.id ? [] : result);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }) // <Checkbox\n      //   keyName={`${i}-results`}\n      //   isChecked={deliveryMethodSelected?.id === result.id}\n      //   labelText={`${result.name} - ${result.details}`}\n      //   id={`result-${i}`}\n      //   onChange={e => {\n      //     setDeliveryMethod(deliveryMethodSelected?.id === result.id ? [] : result)\n      //   }}\n      // />\n      ;\n    }) : ''), __jsx(Button, {\n      fullwidth: true,\n      radius: 100,\n      onClick: null,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"con\",\n      defaultMessage: \"Save\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    })), __jsx(OfferSection, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, __jsx(GiftBox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }), __jsx(Offer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"locationModalFooter\",\n      defaultMessage: \"Free Delivery For 1st Order\",\n      values: {\n        number: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }))))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(SubHeader, \"JhuYxn2Urct/KRoA7S4wRmMKEzU=\", false, function () {\n  return [useLocale, useMedia, useQuery];\n});\n\n_c2 = SubHeader;\nexport default SubHeader;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LocationMenu\");\n$RefreshReg$(_c2, \"SubHeader\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx"],"names":["React","useContext","Button","CardWrapper","Container","DeliveryMethods","DeliveryText","Heading","Input","LocationContent","Offer","OfferSection","Options","SubHeaderWrapper","Wrapper","useLocale","useMedia","FormattedMessage","PopoverBigger","AuthContext","FontAwesomeIcon","faChevronCircleDown","faChevronCircleUp","DeliveryMethodsConstants","useQuery","DELIVERY_METHOD","GiftBox","LocationMenu","cityAndStateText","deliveryMethodTypeSelected","isOpen","noOptionSelected","PICKUP","DELIVERY","color","SubHeader","props","location","mobile","useState","setDeliveryMethodType","deliveryMethodSelected","setDeliveryMethod","deliverData","data","authDispatch","zipCode","setZipCode","searchResult","setSearchResult","setZipCodeAddress","e","deli","searchZipCode","pickUpOptionsMethods","deliveryMethods","filter","deliveryMethod","isPickUp","methodFound","method","details","includes","console","log","stopPropagation","setDelivery","handleOnFocus","event","preventDefault","items","hasDefaultPickUpOption","a","split","className","target","value","length","map","result","i","id","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { BannerIcon, BannerText, Button, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, LocationContent, MethodOption, Offer, OfferSection, Options, SubHeaderWrapper, Wrapper } from './sub-header.style';\nimport { openModal } from '@redq/reuse-modal';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport Popover from 'components/popover/popover';\nimport { useMedia } from 'utils/use-media';\nimport { MenuItem } from 'layouts/header/menu/language-switcher/language-switcher.style';\nimport { FormattedMessage } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport LocationModal from 'features/location-modal/location-modal';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from 'features/authentication-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faChevronCircleDown, faChevronCircleUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { GiftBox } from 'assets/icons/GiftBox';\nimport Checkbox from 'components/checkbox/checkbox';\n\ninterface Props {\n  className: string\n}\n\n\nconst LocationMenu = ({ cityAndStateText, deliveryMethodTypeSelected, isOpen }) => {\n  const noOptionSelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP || deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  return (\n    <LocationContent>\n        { isOpen \n          ? (<FontAwesomeIcon icon={faChevronCircleDown} className=\"fas fa-chevron-down\" style={{ color: \"black\" }} />) \n          : (<FontAwesomeIcon icon={faChevronCircleUp} className=\"fas fa-chevron-up\" style={{ color: \"black\" }} />)\n        }\n        <DeliveryText>{deliveryMethodTypeSelected}</DeliveryText>\n        {/* { noOptionSelected && (\n          <>\n              |\n            <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>\n            <BannerText>{cityAndStateText && cityAndStateText}</BannerText>\n          </>\n        )} */}\n      </LocationContent>\n  );\n};\n\n\nconst SubHeader: React.FC<Props> = ({ ...props  }) => {\n  const { location } = useLocale();\n  const mobile = useMedia('(max-width: 580px)');\n  const [deliveryMethodTypeSelected, setDeliveryMethodType] = React.useState('How you want your items?');\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState();\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  const { authDispatch } = useContext<any>(AuthContext);\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n\n  const setZipCodeAddress =  (e, deli) => {\n    // e.stopPropagation();\n    setZipCode(deli)\n\n    searchZipCode(e, deli);\n  };\n\n  const searchZipCode =  (e, deli) => {\n    const pickUpOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n   \n    const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode));\n    console.log(deli)\n\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : [])\n  };\n  console.log('deliveryMethodSelected',deliveryMethodSelected)\n  const setDelivery =  (e, deli) => {\n    e.stopPropagation();\n    setDeliveryMethodType(deli)\n  };\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  // const orderDeliveryMethod = deliveryMethods?.filter(method => method.id === myOrder?.delivery_method_id)[0];\n  // const deliveryDateAndTime = `${myOrder?.delivery_pickup_date} ${getDeliverySchedule(orderDeliveryMethod?.details, intl.locale)}`;\n  console.log('deliveryMethods', deliveryMethods)\n\n\n  // deliveryMethodSelected\n  const isPickUp = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const hasDefaultPickUpOption = true;\n  const a = (isPickUp && hasDefaultPickUpOption) ? 'Find the closest PickUp Location' : 'Check delivery address ZIP CODE';\n  const cityAndStateText = isPickUp ? a : location ? mobile ?\n    `${location.split(', ')[1]}, ${location.split(', ')[2]}`\n    : `${location.split(', ')[0]}, ${location.split(', ')[1]}`\n    : '';\n\n  return (\n    <SubHeaderWrapper className={props.className} id=\"layout-header\">\n      <PopoverBigger\n        direction=\"left\"\n        className=\"user-pages-dropdown\"\n        openHandler={<LocationMenu\n          isOpen={false} deliveryMethodTypeSelected={deliveryMethodTypeSelected} cityAndStateText={cityAndStateText} />\n        }\n        closeHandler={<LocationMenu\n          isOpen={true} deliveryMethodTypeSelected={deliveryMethodTypeSelected} cityAndStateText={cityAndStateText}/>\n        }\n        content={\n          <DeliveryMethods>\n      \n            <Options>\n              <CardWrapper onClick={(e) => setDelivery(e, DeliveryMethodsConstants.PICKUP)}>Pickup</CardWrapper> \n              <CardWrapper onClick={(e) => setDelivery(e, DeliveryMethodsConstants.DELIVERY)}>Delivery</CardWrapper> \n            </Options>\n            <Wrapper>\n              <Container onClick={(e) => handleOnFocus(e)}>\n                <Heading>\n                  { isPickUp ? (\n                    <FormattedMessage\n                      id=\"pickupModalheading\"\n                      defaultMessage=\"Select Your Location\"\n                    />\n                  ) : (\n                    <FormattedMessage\n                      id=\"deliveryModalheading\"\n                      defaultMessage=\"Select Your Location\"\n                    />\n                  )}\n                </Heading>\n                {/* <SubHeading>\n                  <FormattedMessage\n                    id=\"locationModalSubHeading\"\n                    defaultMessage=\"You have to select your location for deliver service perpous\"\n                  />\n                </SubHeading> */}\n                 <Input\n                    type='text'\n                    name='name'\n                    onFocus={(e) => handleOnFocus(e)}\n                    placeholder='Enter zip code'\n                    value={zipCode}\n                    // we have to change the onChange because the is no one for the controller name actualy\n                    onChange={(e) => setZipCodeAddress(e, e.target.value)}\n                    backgroundColor='#F7F7F7'\n                    width='197px'\n                    height='34.5px'\n                  />\n                {searchResult?.length ? searchResult.map((result, i) => {\n                  // const isChecked = deliveryMethodSelected?.id === result.id;\n                  return (\n                    <input\n                      checked={deliveryMethodSelected?.id === result.id}\n                      className=\"switch\"\n                      key={`${i}-results`}\n                      id={`${i}-results`}\n                      type=\"checkbox\"\n                      // disabled={disabled}\n                      onChange={e => {\n                        setDeliveryMethod(deliveryMethodSelected?.id === result.id ? [] : result)\n                      }}\n                    />\n                      // <Checkbox\n                      //   keyName={`${i}-results`}\n                      //   isChecked={deliveryMethodSelected?.id === result.id}\n                      //   labelText={`${result.name} - ${result.details}`}\n                      //   id={`result-${i}`}\n                      //   onChange={e => {\n                      //     setDeliveryMethod(deliveryMethodSelected?.id === result.id ? [] : result)\n                      //   }}\n\n                      // />\n                    )}\n                  ) : ('')\n                }\n              </Container>\n              <Button\n                  fullwidth\n                  radius={100}\n                  onClick={null}\n                >\n                  <FormattedMessage id='con' defaultMessage='Save' />\n                </Button>\n              <OfferSection>\n                <GiftBox />\n                <Offer>\n                  <FormattedMessage\n                    id=\"locationModalFooter\"\n                    defaultMessage=\"Free Delivery For 1st Order\"\n                    values={{ number: 1 }}\n                  />\n                </Offer>\n              </OfferSection>\n            </Wrapper>\n        </DeliveryMethods>\n        }\n      />\n  </SubHeaderWrapper>\n  );\n\n};\n\nexport default SubHeader;\n"]},"metadata":{},"sourceType":"module"}