{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { BannerIcon, BannerText, DeliveryMethods, LocationContent, MethodOption, SubHeaderWrapper } from './sub-header.style';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { AuthContext } from 'contexts/auth/auth.context';\n\nvar LocationMenu = function LocationMenu(_ref) {\n  var cityAndStateText = _ref.cityAndStateText,\n      onClick = _ref.onClick,\n      deliveryMethodSelected = _ref.deliveryMethodSelected;\n  return __jsx(LocationContent, {\n    onClick: onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"i\", {\n    \"class\": \"ld ld-ChevronUp ml2 dn db-m\",\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), deliveryMethodSelected, \"|\", __jsx(BannerIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: DeliveryIcon,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  })), __jsx(BannerText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, cityAndStateText && cityAndStateText));\n};\n\n_c = LocationMenu;\n\nvar DeliveryMethodsView = function DeliveryMethodsView(_ref2) {\n  var cityAndStateText = _ref2.cityAndStateText,\n      _onClick = _ref2.onClick;\n  return __jsx(DeliveryMethods, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, \"Find the closest DittoFarm\"), __jsx(MethodOption, {\n    onClick: function onClick() {\n      return _onClick('Pickup');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Pickup\"), __jsx(MethodOption, {\n    onClick: function onClick() {\n      return _onClick('Delivery');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Delivery\"));\n};\n\n_c2 = DeliveryMethodsView;\n\nvar SubHeader = function SubHeader(_ref3) {\n  _s();\n\n  var props = _extends({}, _ref3);\n\n  var _useLocale = useLocale(),\n      location = _useLocale.location;\n\n  var mobile = useMedia('(max-width: 580px)');\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      deliveryMethodSelected = _React$useState2[0],\n      setDeliveryMethod = _React$useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      authDispatch = _useContext.authDispatch;\n\n  var cityAndStateText = location ? mobile ? \"\".concat(location.split(', ')[1], \", \").concat(location.split(', ')[2]) : \"\".concat(location.split(', ')[0], \", \").concat(location.split(', ')[1]) : '';\n\n  var toggleOtpForm = function toggleOtpForm() {\n    authDispatch({\n      type: 'OTP_VERIFICATION'\n    });\n  };\n\n  console.log('location', location);\n  return __jsx(SubHeaderWrapper, {\n    className: props.className,\n    id: \"layout-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverBigger, {\n    direction: \"left\",\n    className: \"user-pages-dropdown\",\n    handler: __jsx(LocationMenu, {\n      onClick: function onClick() {\n        return null;\n      },\n      deliveryMethodSelected: deliveryMethodSelected,\n      cityAndStateText: cityAndStateText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }\n    }),\n    content: __jsx(DeliveryMethodsView, {\n      onClick: setDeliveryMethod,\n      cityAndStateText: cityAndStateText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 18\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(SubHeader, \"pEmhSbTtTzru+nV5g5MFrniOmEA=\", false, function () {\n  return [useLocale, useMedia];\n});\n\n_c3 = SubHeader;\nexport default SubHeader;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LocationMenu\");\n$RefreshReg$(_c2, \"DeliveryMethodsView\");\n$RefreshReg$(_c3, \"SubHeader\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx"],"names":["React","useContext","BannerIcon","BannerText","DeliveryMethods","LocationContent","MethodOption","SubHeaderWrapper","useLocale","DeliveryIcon","useMedia","PopoverBigger","AuthContext","LocationMenu","cityAndStateText","onClick","deliveryMethodSelected","DeliveryMethodsView","SubHeader","props","location","mobile","useState","setDeliveryMethod","authDispatch","split","toggleOtpForm","type","console","log","className"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,eAAjC,EAAkDC,eAAlD,EAAmEC,YAAnE,EAAiFC,gBAAjF,QAAyG,oBAAzG;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AAGA,OAAOC,aAAP,MAA0B,0CAA1B;AAEA,SAASC,WAAT,QAA4B,4BAA5B;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA2D;AAAA,MAAxDC,gBAAwD,QAAxDA,gBAAwD;AAAA,MAAtCC,OAAsC,QAAtCA,OAAsC;AAAA,MAA7BC,sBAA6B,QAA7BA,sBAA6B;AAE9E,SACE,MAAC,eAAD;AAAiB,IAAA,OAAO,EAAED,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,aAAM,6BAAT;AAAuC,mBAAY,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKC,sBAFL,OAII,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY;AAAK,IAAA,GAAG,EAAEP,YAAV;AAAwB,IAAA,GAAG,EAAC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,CAJJ,EAKI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaK,gBAAgB,IAAIA,gBAAjC,CALJ,CADF;AASD,CAXD;;KAAMD,Y;;AAaN,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,QAAmC;AAAA,MAAhCH,gBAAgC,SAAhCA,gBAAgC;AAAA,MAAdC,QAAc,SAAdA,OAAc;AAC7D,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,yDADF,EAEE,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE;AAAA,aAAMA,QAAO,CAAC,QAAD,CAAb;AAAA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE;AAAA,aAAMA,QAAO,CAAC,UAAD,CAAb;AAAA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF;AAOD,CARD;;MAAME,mB;;AAUN,IAAMC,SAA0B,GAAG,SAA7BA,SAA6B,QAAmB;AAAA;;AAAA,MAAbC,KAAa;;AAAA,mBAC/BX,SAAS,EADsB;AAAA,MAC5CY,QAD4C,cAC5CA,QAD4C;;AAEpD,MAAMC,MAAM,GAAGX,QAAQ,CAAC,oBAAD,CAAvB;;AAFoD,wBAGAV,KAAK,CAACsB,QAAN,CAAe,EAAf,CAHA;AAAA;AAAA,MAG7CN,sBAH6C;AAAA,MAGrBO,iBAHqB;;AAAA,oBAI3BtB,UAAU,CAAMW,WAAN,CAJiB;AAAA,MAI5CY,YAJ4C,eAI5CA,YAJ4C;;AAMpD,MAAMV,gBAAgB,GAAGM,QAAQ,GAAGC,MAAM,aACrCD,QAAQ,CAACK,KAAT,CAAe,IAAf,EAAqB,CAArB,CADqC,eACTL,QAAQ,CAACK,KAAT,CAAe,IAAf,EAAqB,CAArB,CADS,cAEnCL,QAAQ,CAACK,KAAT,CAAe,IAAf,EAAqB,CAArB,CAFmC,eAEPL,QAAQ,CAACK,KAAT,CAAe,IAAf,EAAqB,CAArB,CAFO,CAAT,GAG7B,EAHJ;;AAKA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BF,IAAAA,YAAY,CAAC;AACXG,MAAAA,IAAI,EAAE;AADK,KAAD,CAAZ;AAGD,GAJD;;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBT,QAAvB;AACA,SACE,MAAC,gBAAD;AAAkB,IAAA,SAAS,EAAED,KAAK,CAACW,SAAnC;AAA8C,IAAA,EAAE,EAAC,eAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAGE,IAAA,OAAO,EAAE,MAAC,YAAD;AAAc,MAAA,OAAO,EAAE;AAAA,eAAK,IAAL;AAAA,OAAvB;AAAkC,MAAA,sBAAsB,EAAEd,sBAA1D;AAAkF,MAAA,gBAAgB,EAAEF,gBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHX;AAIE,IAAA,OAAO,EAAE,MAAC,mBAAD;AAAqB,MAAA,OAAO,EAAES,iBAA9B;AAAiD,MAAA,gBAAgB,EAAET,gBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD,CA7BD;;GAAMI,S;UACiBV,S,EACNE,Q;;;MAFXQ,S;AA+BN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { BannerIcon, BannerText, DeliveryMethods, LocationContent, MethodOption, SubHeaderWrapper } from './sub-header.style';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport Popover from 'components/popover/popover';\nimport { useMedia } from 'utils/use-media';\nimport { MenuItem } from 'layouts/header/menu/language-switcher/language-switcher.style';\nimport { FormattedMessage } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport LocationModal from 'features/location-modal/location-modal';\nimport { AuthContext } from 'contexts/auth/auth.context';\ninterface Props {\n  className: string\n}\n\n\nconst LocationMenu = ({ cityAndStateText, onClick, deliveryMethodSelected }) => {\n  \n  return (\n    <LocationContent onClick={onClick}>\n        <i class=\"ld ld-ChevronUp ml2 dn db-m\" aria-hidden=\"true\"></i>\n        {deliveryMethodSelected}\n        |\n        <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>\n        <BannerText>{cityAndStateText && cityAndStateText}</BannerText>\n      </LocationContent>\n  );\n};\n\nconst DeliveryMethodsView = ({ cityAndStateText, onClick }) => {\n  return (\n    <DeliveryMethods>\n      <>Find the closest DittoFarm</>\n      <MethodOption onClick={() => onClick('Pickup')}>Pickup</MethodOption> \n      <MethodOption onClick={() => onClick('Delivery')}>Delivery</MethodOption> \n    </DeliveryMethods>\n  );\n};\n\nconst SubHeader: React.FC<Props> = ({ ...props  }) => {\n  const { location } = useLocale();\n  const mobile = useMedia('(max-width: 580px)');\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState('');\n  const { authDispatch } = useContext<any>(AuthContext);\n\n  const cityAndStateText = location ? mobile ?\n    `${location.split(', ')[1]}, ${location.split(', ')[2]}`\n    : `${location.split(', ')[0]}, ${location.split(', ')[1]}`\n    : '';\n\n  const toggleOtpForm = () => {\n    authDispatch({\n      type: 'OTP_VERIFICATION',\n    });\n  };\n\n  console.log('location',location)\n  return (\n    <SubHeaderWrapper className={props.className} id=\"layout-header\">\n      <PopoverBigger\n        direction=\"left\"\n        className=\"user-pages-dropdown\"\n        handler={<LocationMenu onClick={()=> null} deliveryMethodSelected={deliveryMethodSelected} cityAndStateText={cityAndStateText} />}\n        content={<DeliveryMethodsView onClick={setDeliveryMethod} cityAndStateText={cityAndStateText} />}\n      />\n  </SubHeaderWrapper>\n  );\n\n};\n\nexport default SubHeader;\n"]},"metadata":{},"sourceType":"module"}