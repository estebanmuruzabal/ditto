{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/layouts/header/mobile-drawer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { openModal } from '@redq/reuse-modal';\nimport Router from 'next/router';\nimport { FormattedMessage } from 'react-intl';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Drawer from 'components/drawer/drawer';\nimport { Button } from 'components/button/button';\nimport NavLink from 'components/nav-link/nav-link';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from 'features/authentication-form';\nimport { HamburgerIcon, DrawerContentWrapper, DrawerClose, DrawerProfile, LogoutView, LoginView, UserAvatar, UserDetails, DrawerMenu, DrawerMenuItem, UserOptionMenu } from './header.style';\nimport UserImage from 'assets/images/user.png';\nimport { GROWER_MENU_ITEMS, MOBILE_DRAWER_MENU } from 'site-settings/site-navigation';\nimport { useAppState, useAppDispatch } from 'contexts/app/app.provider';\nimport { ProfileContext } from 'contexts/profile/profile.context';\n\nconst MobileDrawer = () => {\n  const isDrawerOpen = useAppState('isDrawerOpen');\n  const dispatch = useAppDispatch();\n  const {\n    authState: {\n      isAuthenticated,\n      isStaff,\n      isGrower\n    },\n    authDispatch\n  } = useContext(AuthContext);\n  const {\n    state\n  } = useContext(ProfileContext);\n\n  if (state) {\n    const {\n      name,\n      phone\n    } = state;\n  } // Toggle drawer\n\n\n  const toggleHandler = React.useCallback(() => {\n    dispatch({\n      type: 'TOGGLE_DRAWER'\n    });\n  }, [dispatch]);\n\n  const handleLogout = () => {\n    if (false) {\n      localStorage.removeItem('access_token');\n      authDispatch({\n        type: 'SIGN_OUT'\n      });\n      Router.push('/');\n    }\n  };\n\n  const signInOutForm = () => {\n    dispatch({\n      type: 'TOGGLE_DRAWER'\n    });\n    authDispatch({\n      type: 'SIGNIN'\n    });\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto'\n      }\n    });\n  };\n\n  const menuItems = GROWER_MENU_ITEMS;\n  return __jsx(Drawer, {\n    width: \"316px\",\n    drawerHandler: __jsx(HamburgerIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    })),\n    open: isDrawerOpen,\n    toggleHandler: toggleHandler,\n    closeButton: __jsx(DrawerClose, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, __jsx(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(Scrollbars, {\n    autoHide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(DrawerContentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, __jsx(DrawerProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, isAuthenticated ? __jsx(LoginView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, __jsx(UserAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: UserImage,\n    alt: \"user_avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  })), __jsx(UserDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })) : __jsx(LogoutView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: signInOutForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"mobileSignInButtonText\",\n    defaultMessage: \"join\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  })))), __jsx(DrawerMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, MOBILE_DRAWER_MENU.map(item => __jsx(DrawerMenuItem, {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, __jsx(NavLink, {\n    onClick: toggleHandler,\n    href: item.href,\n    label: item.defaultMessage,\n    intlId: item.id,\n    className: \"drawer_menu_item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }))), menuItems.map((item, idx) => __jsx(DrawerMenuItem, {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, __jsx(NavLink, {\n    onClick: toggleHandler,\n    href: item.href,\n    label: item.defaultMessage,\n    intlId: item.id,\n    className: \"drawer_menu_item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  })))), isAuthenticated && __jsx(UserOptionMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, __jsx(DrawerMenuItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    onClick: handleLogout,\n    className: \"drawer_menu_item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"logoutBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"navlinkLogout\",\n    defaultMessage: \"Logout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }))))))));\n};\n\nexport default MobileDrawer;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/layouts/header/mobile-drawer.tsx"],"names":["React","useContext","openModal","Router","FormattedMessage","Scrollbars","Drawer","Button","NavLink","CloseIcon","AuthContext","AuthenticationForm","HamburgerIcon","DrawerContentWrapper","DrawerClose","DrawerProfile","LogoutView","LoginView","UserAvatar","UserDetails","DrawerMenu","DrawerMenuItem","UserOptionMenu","UserImage","GROWER_MENU_ITEMS","MOBILE_DRAWER_MENU","useAppState","useAppDispatch","ProfileContext","MobileDrawer","isDrawerOpen","dispatch","authState","isAuthenticated","isStaff","isGrower","authDispatch","state","name","phone","toggleHandler","useCallback","type","handleLogout","localStorage","removeItem","push","signInOutForm","show","overlayClassName","closeOnClickOutside","component","closeComponent","config","enableResizing","disableDragging","className","width","height","menuItems","map","item","id","href","defaultMessage","idx"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { openModal } from '@redq/reuse-modal';\nimport Router from 'next/router';\nimport { FormattedMessage } from 'react-intl';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Drawer from 'components/drawer/drawer';\nimport { Button } from 'components/button/button';\nimport NavLink from 'components/nav-link/nav-link';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from 'features/authentication-form';\nimport {\n  HamburgerIcon,\n  DrawerContentWrapper,\n  DrawerClose,\n  DrawerProfile,\n  LogoutView,\n  LoginView,\n  UserAvatar,\n  UserDetails,\n  DrawerMenu,\n  DrawerMenuItem,\n  UserOptionMenu,\n} from './header.style';\nimport UserImage from 'assets/images/user.png';\nimport {\n  AUTHORIZED_MENU_ITEMS,\n  GROWER_MENU_ITEMS,\n  MOBILE_DRAWER_MENU,\n  PROFILE_PAGE,\n  STAFF_MENU_ITEMS,\n} from 'site-settings/site-navigation';\nimport { useAppState, useAppDispatch } from 'contexts/app/app.provider';\nimport { ProfileContext } from 'contexts/profile/profile.context';\n\nconst MobileDrawer: React.FunctionComponent = () => {\n  const isDrawerOpen = useAppState('isDrawerOpen');\n  const dispatch = useAppDispatch();\n  const { authState: { isAuthenticated, isStaff, isGrower }, authDispatch,  } = useContext<any>(AuthContext);\n  const { state } = useContext(ProfileContext);\n\n  if (state) {\n    const { name, phone } = state;\n  }  \n  \n  // Toggle drawer\n  const toggleHandler = React.useCallback(() => {\n    dispatch({\n      type: 'TOGGLE_DRAWER',\n    });\n  }, [dispatch]);\n\n  const handleLogout = () => {\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('access_token');\n      authDispatch({ type: 'SIGN_OUT' });\n      Router.push('/');\n    }\n  };\n\n  const signInOutForm = () => {\n    dispatch({\n      type: 'TOGGLE_DRAWER',\n    });\n\n    authDispatch({\n      type: 'SIGNIN',\n    });\n\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto',\n      },\n    });\n  };\n\n  const menuItems = GROWER_MENU_ITEMS; \n  return (\n    <Drawer\n      width=\"316px\"\n      drawerHandler={\n        <HamburgerIcon>\n          <span />\n          <span />\n          <span />\n        </HamburgerIcon>\n      }\n      open={isDrawerOpen}\n      toggleHandler={toggleHandler}\n      closeButton={\n        <DrawerClose>\n          <CloseIcon />\n        </DrawerClose>\n      }\n    >\n      <Scrollbars autoHide>\n        <DrawerContentWrapper>\n          <DrawerProfile>\n            {isAuthenticated ? (\n              <LoginView>\n                <UserAvatar>\n                  <img src={UserImage} alt=\"user_avatar\" />\n                </UserAvatar>\n                <UserDetails>\n                  \n                </UserDetails>\n              </LoginView>\n            ) : (\n              <LogoutView>\n                <Button variant=\"primary\" onClick={signInOutForm}>\n                  <FormattedMessage\n                    id=\"mobileSignInButtonText\"\n                    defaultMessage=\"join\"\n                  />\n                </Button>\n              </LogoutView>\n            )}\n          </DrawerProfile>\n\n          <DrawerMenu>\n            {MOBILE_DRAWER_MENU.map((item) => (\n              <DrawerMenuItem key={item.id}>\n                <NavLink\n                  onClick={toggleHandler}\n                  href={item.href}\n                  label={item.defaultMessage}\n                  intlId={item.id}\n                  className=\"drawer_menu_item\"\n                />\n              </DrawerMenuItem>\n            ))}\n            {menuItems.map((item, idx) => (\n              <DrawerMenuItem key={item.id}>\n              <NavLink\n              onClick={toggleHandler}\n              href={item.href}\n              label={item.defaultMessage}\n              intlId={item.id}\n              className=\"drawer_menu_item\"\n              />\n              </DrawerMenuItem>\n            ))}\n          </DrawerMenu>\n\n          {isAuthenticated && (\n            <UserOptionMenu>\n              <DrawerMenuItem>\n                <div onClick={handleLogout} className=\"drawer_menu_item\">\n                  <span className=\"logoutBtn\">\n                    <FormattedMessage\n                      id=\"navlinkLogout\"\n                      defaultMessage=\"Logout\"\n                    />\n                  </span>\n                </div>\n              </DrawerMenuItem>\n            </UserOptionMenu>\n          )}\n        </DrawerContentWrapper>\n      </Scrollbars>\n    </Drawer>\n  );\n};\n\nexport default MobileDrawer;\n"]},"metadata":{},"sourceType":"module"}