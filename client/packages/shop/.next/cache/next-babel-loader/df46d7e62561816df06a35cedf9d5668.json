{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/user-profile/order/order-card/order-card-mobile.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Collapse, { Panel } from 'rc-collapse';\nimport { useIntl } from 'react-intl';\nimport { OrderListHeader, TrackID, Status, OrderMeta, Meta, CardWrapper, OrderDetail, DeliveryInfo, DeliveryAddress, Address, Contact, CostCalculation, PriceRow, Price, OrderTable } from './order-card.style';\nimport { CURRENCY } from 'utils/constant';\nimport moment from 'moment';\nconst components = {\n  table: OrderTable\n};\n\nconst OrderCard = ({\n  onClick,\n  className,\n  columns,\n  progressData,\n  orders\n}) => {\n  //   const displayDetail = className === 'active' ? '100%' : '0';\n  const addAllClasses = ['accordion'];\n\n  const getDeliverySchedule = details => {\n    const word = 'Horario';\n    const index = details.indexOf(word); // 8\n\n    const length = word.length; // 7\n\n    return details.slice(index + length);\n  };\n\n  const intl = useIntl();\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  console.log(\"orderrs:L\", orders);\n  return __jsx(React.Fragment, null, __jsx(Collapse, {\n    accordion: true,\n    className: addAllClasses.join(' '),\n    defaultActiveKey: \"active\",\n    expandIcon: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, orders.map(order => {\n    var _order$locatidelivery, _order$locatidelivery2, _order$locatidelivery3;\n\n    return __jsx(Panel, {\n      header: __jsx(CardWrapper, {\n        onClick: onClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, __jsx(OrderListHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, __jsx(TrackID, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      }, intl.formatMessage({\n        id: 'order',\n        defaultMessage: 'Order'\n      }), \" \", __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 82\n        }\n      }, \"#\", order.id)), __jsx(Status, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }\n      }, progressData[order.status - 1])), __jsx(OrderMeta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, __jsx(Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      }, intl.formatMessage({\n        id: 'locatidelivery_methodTitle',\n        defaultMessage: 'Delivery Method'\n      }), \" \", __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 119\n        }\n      }, order === null || order === void 0 ? void 0 : (_order$locatidelivery = order.locatidelivery_method) === null || _order$locatidelivery === void 0 ? void 0 : _order$locatidelivery.name)), (order === null || order === void 0 ? void 0 : (_order$locatidelivery2 = order.locatidelivery_method) === null || _order$locatidelivery2 === void 0 ? void 0 : _order$locatidelivery2.isPickUp) ? __jsx(React.Fragment, null, __jsx(Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 23\n        }\n      }, intl.formatMessage({\n        id: 'pickUpDateTitle',\n        defaultMessage: 'Pickup Date:'\n      }), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 108\n        }\n      }, order.delivery_date)), __jsx(Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 23\n        }\n      }, intl.formatMessage({\n        id: 'deliveryAddressTitle',\n        defaultMessage: 'Delivery Address:'\n      }), \" \", __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 119\n        }\n      }, order === null || order === void 0 ? void 0 : order.delivery_address))) : __jsx(React.Fragment, null, __jsx(Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 23\n        }\n      }, intl.formatMessage({\n        id: 'deliveryDateTitle',\n        defaultMessage: 'Delivery Date:'\n      }), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 112\n        }\n      }, `${getDeliverySchedule(order === null || order === void 0 ? void 0 : (_order$locatidelivery3 = order.locatidelivery_method) === null || _order$locatidelivery3 === void 0 ? void 0 : _order$locatidelivery3.details)} - ${moment(order === null || order === void 0 ? void 0 : order.deliveryDate).format('DD MMM')}` || '-')), __jsx(Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 23\n        }\n      }, intl.formatMessage({\n        id: 'deliveryAddressTitle',\n        defaultMessage: 'Delivery Address:'\n      }), \" \", __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 119\n        }\n      }, order === null || order === void 0 ? void 0 : order.delivery_address))), __jsx(Meta, {\n        className: \"price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }, intl.formatMessage({\n        id: 'totalPrice',\n        defaultMessage: 'Total Price:'\n      }), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, CURRENCY, order.total)))),\n      headerClass: \"accordion-title\",\n      key: order.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, __jsx(OrderDetail, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, __jsx(DeliveryInfo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, __jsx(DeliveryAddress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, intl.formatMessage({\n      id: 'contactNumber',\n      defaultMessage: 'Contact Number'\n    })), __jsx(Contact, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, order.contact_number)), __jsx(DeliveryAddress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, intl.formatMessage({\n      id: 'deliveryAddress',\n      defaultMessage: 'Delivery Address'\n    })), __jsx(Address, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, order.delivery_address)), __jsx(CostCalculation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, __jsx(PriceRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, \"Subtotal\", __jsx(Price, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, CURRENCY, order.sub_total)), __jsx(PriceRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, intl.formatMessage({\n      id: 'discount',\n      defaultMessage: 'Discount'\n    }), __jsx(Price, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, CURRENCY, order.discount || '0')), __jsx(PriceRow, {\n      className: \"grandTotal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, \"Total\", __jsx(Price, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, CURRENCY, order.total))))));\n  })));\n};\n\nexport default OrderCard;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/user-profile/order/order-card/order-card-mobile.tsx"],"names":["React","Collapse","Panel","useIntl","OrderListHeader","TrackID","Status","OrderMeta","Meta","CardWrapper","OrderDetail","DeliveryInfo","DeliveryAddress","Address","Contact","CostCalculation","PriceRow","Price","OrderTable","CURRENCY","moment","components","table","OrderCard","onClick","className","columns","progressData","orders","addAllClasses","getDeliverySchedule","details","word","index","indexOf","length","slice","intl","push","console","log","join","map","order","formatMessage","id","defaultMessage","status","locatidelivery_method","name","isPickUp","delivery_date","delivery_address","deliveryDate","format","total","contact_number","sub_total","discount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from 'rc-table';\nimport Collapse, { Panel } from 'rc-collapse';\nimport ReactToPrint from \"react-to-print\";\nimport Progress from 'components/progress-box/progress-box';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport {\n  OrderListHeader,\n  TrackID,\n  Status,\n  OrderMeta,\n  Meta,\n  CardWrapper,\n  OrderDetail,\n  DeliveryInfo,\n  DeliveryAddress,\n  Address,\n  Contact,\n  CostCalculation,\n  PriceRow,\n  Price,\n  ProgressWrapper,\n  OrderTable,\n  OrderTableMobile,\n} from './order-card.style';\n\nimport { CURRENCY } from 'utils/constant';\nimport moment from 'moment';\nimport { date } from 'yup';\n\ntype MobileOrderCardProps = {\n  orderId?: any;\n  onClick?: (e: any) => void;\n  className?: any;\n  status?: any;\n  date?: any;\n  deliveryTime?: any;\n  amount?: number;\n  tableData?: any;\n  columns?: any;\n  progressData?: any;\n  progressStatus?: any;\n  address?: string;\n  subtotal?: number;\n  discount?: number;\n  deliveryFee?: number;\n  grandTotal?: number;\n  orders?: any;\n};\n\nconst components = {\n  table: OrderTable,\n};\n\nconst OrderCard: React.FC<MobileOrderCardProps> = ({\n  onClick,\n  className,\n  columns,\n  progressData,\n  orders,\n}) => {\n  //   const displayDetail = className === 'active' ? '100%' : '0';\n  const addAllClasses: string[] = ['accordion'];\n  const getDeliverySchedule = (details) => {\n    const word = 'Horario';\n\n    const index = details.indexOf(word);   // 8\n    const length = word.length;\t\t\t// 7\n\n    return details.slice(index + length);\n  }\n  const intl = useIntl();\n  if (className) {\n    addAllClasses.push(className);\n  }\n  console.log(\"orderrs:L\", orders)\n\n  return (\n    <>\n      <Collapse\n        accordion={true}\n        className={addAllClasses.join(' ')}\n        defaultActiveKey=\"active\"\n        expandIcon={() => {}}\n      >\n        {orders.map((order: any) => (\n          <Panel\n            header={\n              <CardWrapper onClick={onClick}>\n                <OrderListHeader>\n                  <TrackID>\n                  {intl.formatMessage({ id: 'order', defaultMessage: 'Order' })} <span>#{order.id}</span>\n                  </TrackID>\n                  <Status>{progressData[order.status - 1]}</Status>\n                </OrderListHeader>\n\n\n                <OrderMeta>\n                  <Meta>{intl.formatMessage({ id: 'locatidelivery_methodTitle', defaultMessage: 'Delivery Method' })} <span>{order?.locatidelivery_method?.name}</span></Meta>\n                  {/* <Meta>{intl.formatMessage({ id: 'deliveryTime', defaultMessage: 'Delivery Time:' })}<span>18hs a 21hs {order.delivery_date}</span></Meta> */}\n                  { order?.locatidelivery_method?.isPickUp ? (\n                    <>\n                      <Meta>{intl.formatMessage({ id: 'pickUpDateTitle', defaultMessage: 'Pickup Date:' })}<span>{order.delivery_date}</span></Meta>\n                      <Meta>{intl.formatMessage({ id: 'deliveryAddressTitle', defaultMessage: 'Delivery Address:' })} <span>{order?.delivery_address}</span></Meta>\n                    </>\n                  ) : (\n                    <>\n                      <Meta>{intl.formatMessage({ id: 'deliveryDateTitle', defaultMessage: 'Delivery Date:' })}<span>{`${getDeliverySchedule(order?.locatidelivery_method?.details)} - ${moment(order?.deliveryDate).format('DD MMM')}` || '-'}</span></Meta>\n                      <Meta>{intl.formatMessage({ id: 'deliveryAddressTitle', defaultMessage: 'Delivery Address:' })} <span>{order?.delivery_address}</span></Meta>\n                    </>\n                  )}\n\n                  <Meta className=\"price\">\n                    {intl.formatMessage({ id: 'totalPrice', defaultMessage: 'Total Price:' })}\n                    <span>\n                      {CURRENCY}\n                      {order.total}\n                    </span>\n                  </Meta>\n                </OrderMeta>\n              </CardWrapper>\n            }\n            headerClass=\"accordion-title\"\n            key={order.id}\n          >\n            <OrderDetail>\n              <DeliveryInfo>\n                <DeliveryAddress>\n                  <h3>{intl.formatMessage({ id: 'contactNumber', defaultMessage: 'Contact Number' })}</h3>\n                  <Contact>{order.contact_number}</Contact>\n                </DeliveryAddress>\n                <DeliveryAddress>\n                  <h3>{intl.formatMessage({ id: 'deliveryAddress', defaultMessage: 'Delivery Address' })}</h3>\n                  <Address>{order.delivery_address}</Address>\n                </DeliveryAddress>\n                <CostCalculation>\n                  <PriceRow>\n                    Subtotal\n                    <Price>\n                      {CURRENCY}\n                      {order.sub_total}\n                    </Price>\n                  </PriceRow>\n                  <PriceRow>\n                    {intl.formatMessage({ id: 'discount', defaultMessage: 'Discount' })}\n                    <Price>\n                      {CURRENCY}\n                      {order.discount || '0'}\n                    </Price>\n                  </PriceRow>\n                  <PriceRow className=\"grandTotal\">\n                    Total\n                    <Price>\n                      {CURRENCY}\n                      {order.total}\n                    </Price>\n                  </PriceRow>\n                </CostCalculation>\n              </DeliveryInfo>\n\n              {/*<ProgressWrapper>\n                <Progress data={progressData} status={order.status} />\n              </ProgressWrapper>\n\n              <OrderTableMobile>\n                <Table\n                  columns={columns}\n                  data={order.products}\n                  rowKey={(record) => record.id}\n                  components={components}\n                  scroll={{ x: 450 }}\n                  // scroll={{ y: 250 }}\n                />\n              </OrderTableMobile>*/}\n            </OrderDetail>\n          </Panel>\n        ))}\n      </Collapse>\n    </>\n  );\n};\n\nexport default OrderCard;\n"]},"metadata":{},"sourceType":"module"}