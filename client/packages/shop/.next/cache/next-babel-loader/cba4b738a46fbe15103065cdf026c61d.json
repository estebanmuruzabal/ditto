{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two/checkout-two-sections/delivery-schedule.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { Heading } from './delivery-selection.style';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport { ButtonGroup } from '../../checkout-one/checkout-one.style';\nimport { InformationBox, DeliveryTypesOptions } from '../checkout-two.style';\n\nvar DeliverySchedule = function DeliverySchedule(_ref) {\n  _s();\n\n  var _deliverData$delivery;\n\n  var props = _extends({}, _ref);\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      deliveryMethodSelected = _React$useState2[0],\n      setDeliveryMethodSelected = _React$useState2[1];\n\n  var _useQuery = useQuery(DELIVERY_METHOD),\n      deliverData = _useQuery.data;\n\n  var deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items;\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      zipCode = _React$useState4[0],\n      setZipCode = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      searchResult = _React$useState6[0],\n      setSearchResult = _React$useState6[1];\n\n  var _useState = useState(\"\"),\n      deliveryAddress = _useState[0],\n      setDeliveryAddress = _useState[1];\n\n  var _useState2 = useState(false),\n      notInsideDeliveryAreas = _useState2[0],\n      setNotInsideDeliveryAreas = _useState2[1];\n\n  var scheduleOptions = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n    return deliveryMethod.isPickUp === true;\n  });\n\n  var setDeliveryMethodAndSaveCookie = function setDeliveryMethodAndSaveCookie(deliveryOrPickupMethodSelected) {\n    var deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : _objectSpread(_objectSpread({}, deliveryOrPickupMethodSelected), {}, {\n      deliveryAddress: deliveryAddress\n    });\n    setDeliveryMethodSelected(deliveryMethod);\n    props.setDeliveryMethod(deliveryMethod, false); // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n    // }\n  };\n\n  var handleOnFocus = function handleOnFocus(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  var intl = useIntl();\n  return __jsx(InformationBox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, __jsx(DeliveryTypesOptions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), __jsx(FormattedMessage, {\n    id: \"deliveryDateId\",\n    defaultMessage: \"deliveryDateId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })), __jsx(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, __jsx(RadioGroupThree, {\n    items: props.schedulesOfDeliveryMethodSelected,\n    component: function component(item, index) {\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: item.label,\n        details: item.details,\n        link: item.isPickUp && item.pickUpAddress ? item.pickUpAddress : null,\n        name: \"schedule\",\n        checked: true,\n        withActionButtons: false,\n        onChange: function onChange() {\n          return props.setDeliverySchedule(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 20\n    }\n  }))) // <div style={{ paddingTop: '20px'}}>\n  //   {searchResult?.length ? searchResult.map((deliveryMethod, i) => {\n  //     return (\n  //       <PickUpOptions>\n  //         <Checkbox\n  //             keyName={`${i}-deliveryMethods`}\n  //             isChecked={deliveryMethodSelected?.id === deliveryMethod.id}\n  //             labelText={`${deliveryMethod.name} - ${deliveryMethod.details} `}\n  //             id={`deliveryMethod-${i}`}\n  //             onChange={e => {\n  //                 setDeliveryMethodAndSaveCookie(deliveryMethodSelected?.id === deliveryMethod.id ? null : deliveryMethod)\n  //             }}\n  //         />\n  //       </PickUpOptions>\n  //     )}) : ('')\n  //   }\n  // </div>\n  ;\n};\n\n_s(DeliverySchedule, \"2yNAnXBPxFi/1CH/KUZayWN5ldk=\", false, function () {\n  return [useQuery, useIntl];\n});\n\n_c = DeliverySchedule;\nexport default DeliverySchedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliverySchedule\");","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two/checkout-two-sections/delivery-schedule.tsx"],"names":["React","useState","FormattedMessage","useIntl","useQuery","DELIVERY_METHOD","Heading","RadioCard","RadioGroupThree","ButtonGroup","InformationBox","DeliveryTypesOptions","DeliverySchedule","props","undefined","deliveryMethodSelected","setDeliveryMethodSelected","deliverData","data","deliveryMethods","items","zipCode","setZipCode","searchResult","setSearchResult","deliveryAddress","setDeliveryAddress","notInsideDeliveryAreas","setNotInsideDeliveryAreas","scheduleOptions","filter","deliveryMethod","isPickUp","setDeliveryMethodAndSaveCookie","deliveryOrPickupMethodSelected","isPickUpSelected","setDeliveryMethod","handleOnFocus","event","preventDefault","stopPropagation","intl","schedulesOfDeliveryMethodSelected","item","index","id","label","details","pickUpAddress","setDeliverySchedule"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, deliveryCarrySelectOptions, deliveryMethodCookieKeyName, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport { ActionButton, ActionsButtons, BannerIcon, Button, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Offer, OfferSection, Options, PickUpOptions, Wrapper } from './delivery-selection.style';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { alignContent, borderRadius, display, flexDirection, justifyContent, textAlign, width } from 'styled-system';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { ADD_ADDRESS } from 'graphql/mutation/address';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { Plus } from 'assets/icons/PlusMinus';\nimport { IconWrapper } from 'components/payment-group/payment-group.style';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport { ButtonGroup } from '../../checkout-one/checkout-one.style';\nimport { InformationBox, DeliveryTypesOptions } from '../checkout-two.style';\n\ninterface Props {\n  setDeliverySchedule: any\n  schedulesOfDeliveryMethodSelected: any\n}\n\nconst DeliverySchedule: React.FC<Props> = ({ ...props  }) => {\n\n  const [deliveryMethodSelected, setDeliveryMethodSelected] = React.useState(undefined);\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n  const [notInsideDeliveryAreas, setNotInsideDeliveryAreas] = useState(false);\n\n  const scheduleOptions = deliveryMethods?.filter(deliveryMethod => {\n    return deliveryMethod.isPickUp === true;\n  });\n  \n  const setDeliveryMethodAndSaveCookie =  (deliveryOrPickupMethodSelected) => {\n    const deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : {...deliveryOrPickupMethodSelected, deliveryAddress};\n    setDeliveryMethodSelected(deliveryMethod)\n    props.setDeliveryMethod(deliveryMethod, false)\n\n    // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n    // }\n  };\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  const intl = useIntl();\n\n  \n  return (\n    <InformationBox>\n              <Heading>\n                <DeliveryTypesOptions />\n                <FormattedMessage\n                  id='deliveryDateId'\n                  defaultMessage='deliveryDateId'\n                />\n              </Heading>\n              <ButtonGroup>\n                   <RadioGroupThree\n                      items={props.schedulesOfDeliveryMethodSelected}\n                      component={(item: any, index: any) => (\n                        <RadioCard\n                          id={item.id}\n                          key={item.id}\n                          title={item.label}\n                          details={item.details}\n                          link={item.isPickUp && item.pickUpAddress ? item.pickUpAddress : null}\n                          name='schedule'\n                          checked={true}\n                          withActionButtons={false}\n                          onChange={() => props.setDeliverySchedule(item)}\n                        />\n                      )}\n                   />\n                 </ButtonGroup>\n            </InformationBox>\n\n                      \n                        // <div style={{ paddingTop: '20px'}}>\n                        //   {searchResult?.length ? searchResult.map((deliveryMethod, i) => {\n                        //     return (\n                        //       <PickUpOptions>\n                        //         <Checkbox\n                        //             keyName={`${i}-deliveryMethods`}\n                        //             isChecked={deliveryMethodSelected?.id === deliveryMethod.id}\n                        //             labelText={`${deliveryMethod.name} - ${deliveryMethod.details} `}\n                        //             id={`deliveryMethod-${i}`}\n                        //             onChange={e => {\n                        //                 setDeliveryMethodAndSaveCookie(deliveryMethodSelected?.id === deliveryMethod.id ? null : deliveryMethod)\n                        //             }}\n                        //         />\n                        //       </PickUpOptions>\n                        //     )}) : ('')\n                        //   }\n                        // </div>\n        \n  );\n};\n\nexport default DeliverySchedule;\n\n"]},"metadata":{},"sourceType":"module"}