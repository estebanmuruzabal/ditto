{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ORDERS } from 'graphql/query/order.query';\nimport { CURRENCY } from 'utils/constant';\nimport ErrorMessage from 'components/error-message/error-message';\nimport OrderReceivedWrapper, { OrderReceivedContainer, OrderInfo, OrderDetails, TotalAmount, BlockTitle, Text, InfoBlockWrapper, InfoBlock, ListItem, ListTitle, ListDes, OrderTable } from './order-received.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { getDeliveryFee } from 'utils/shop-helper';\n\nconst OrderReceived = props => {\n  var _deliverData$delivery, _orderDeliveryMethod$, _orderDeliveryMethod$2;\n\n  const router = useRouter();\n  const intl = useIntl();\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_ORDERS);\n  const {\n    data: deliverData,\n    error: deliveryError,\n    loading: deliveryLoading,\n    refetch: deliveryRefetch\n  } = useQuery(DELIVERY_METHOD);\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: intl.formatMessage({\n        id: 'loading',\n        defaultMessage: 'Cargando...'\n      })\n    });\n  }\n\n  ;\n  const components = {\n    table: OrderTable\n  };\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message\n    });\n  }\n\n  ;\n  const ids = data.getUserOrders.map(el => el.id);\n  const index = ids.indexOf(router.query.itemId); // if we dont get an itemId we suppose that the latest order is the one to show!\n\n  const myOrder = data.getUserOrders[index >= 0 ? index : 0];\n\n  const printHandler = () => {\n    if (false) {\n      window.print();\n    }\n  };\n\n  const dateAndTime = `${moment(myOrder === null || myOrder === void 0 ? void 0 : myOrder.datetime).format('MM/DD/YY')}, ${moment(myOrder === null || myOrder === void 0 ? void 0 : myOrder.datetime).format('hh:mm A')}`;\n  const deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items;\n  const orderDeliveryMethod = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(method => method.id === (myOrder === null || myOrder === void 0 ? void 0 : myOrder.delivery_method_id))[0]; // const deliveryDateAndTime = `${myOrder?.delivery_pickup_date}`;\n\n  console.log(myOrder, orderDeliveryMethod);\n  return __jsx(OrderReceivedWrapper, null, __jsx(OrderReceivedContainer, null, __jsx(Link, {\n    href: \"/profile\"\n  }, __jsx(\"a\", {\n    className: \"home-btn\"\n  }, __jsx(FormattedMessage, {\n    id: \"backProfileBtn\",\n    defaultMessage: \"Back to Profile\"\n  }))), __jsx(\"span\", {\n    onClick: printHandler,\n    className: \"print-btn\"\n  }, __jsx(FormattedMessage, {\n    id: \"printInvoiceBtn\",\n    defaultMessage: \"Print Invoice\"\n  })), __jsx(OrderInfo, null, __jsx(BlockTitle, null, __jsx(FormattedMessage, {\n    id: \"orderReceivedSuccess\",\n    defaultMessage: \"Order\"\n  })), __jsx(InfoBlockWrapper, null, __jsx(InfoBlock, null, __jsx(Text, {\n    bold: true,\n    className: \"title\"\n  }, __jsx(FormattedMessage, {\n    id: \"orderNumberText\",\n    defaultMessage: \"Order Number\"\n  })), __jsx(Text, null, myOrder === null || myOrder === void 0 ? void 0 : myOrder.order_code)), __jsx(InfoBlock, null, __jsx(Text, {\n    bold: true,\n    className: \"title\"\n  }, __jsx(FormattedMessage, {\n    id: \"orderDateText\",\n    defaultMessage: \"Date\"\n  })), __jsx(Text, null, dateAndTime)), __jsx(InfoBlock, null, __jsx(Text, {\n    bold: true,\n    className: \"title\"\n  }, __jsx(FormattedMessage, {\n    id: \"totalText\",\n    defaultMessage: \"Total\"\n  })), __jsx(Text, null, CURRENCY, myOrder === null || myOrder === void 0 ? void 0 : myOrder.total)), __jsx(InfoBlock, null, __jsx(Text, {\n    bold: true,\n    className: \"title\"\n  }, __jsx(FormattedMessage, {\n    id: \"paymenMethodText\",\n    defaultMessage: \"Payment Method\"\n  })), __jsx(Text, null, myOrder === null || myOrder === void 0 ? void 0 : myOrder.payment_method)))), __jsx(OrderDetails, null, __jsx(BlockTitle, null, __jsx(FormattedMessage, {\n    id: (orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.isPickUp) ? \"pickupDetailsText\" : \"deliveryDetailsText\",\n    defaultMessage: \"Order Details\"\n  })), __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, null, (orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.isPickUp) ? __jsx(FormattedMessage, {\n    id: \"pickUpMethodTitle\",\n    defaultMessage: \"Order Method\"\n  }) : __jsx(FormattedMessage, {\n    id: \"deliveryMethodNotPickupTitle\",\n    defaultMessage: \"Order Method\"\n  }))), __jsx(ListDes, null, __jsx(Text, {\n    bold: true\n  }, (orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.isPickUp) ? `${orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.name} - ${orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : (_orderDeliveryMethod$ = orderDeliveryMethod.details) === null || _orderDeliveryMethod$ === void 0 ? void 0 : _orderDeliveryMethod$.split('|')[0]}` : orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.name))), (orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.isPickUp) ? __jsx(React.Fragment, null) : __jsx(React.Fragment, null, __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, null, __jsx(FormattedMessage, {\n    id: \"deliveryDateTitle\",\n    defaultMessage: \"Delivery Date\"\n  }))), __jsx(ListDes, null, __jsx(Text, {\n    bold: true\n  }, `${orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : (_orderDeliveryMethod$2 = orderDeliveryMethod.details) === null || _orderDeliveryMethod$2 === void 0 ? void 0 : _orderDeliveryMethod$2.split('|')}`))), __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, null, __jsx(FormattedMessage, {\n    id: \"deliveryAddress\",\n    defaultMessage: \"Delivery Address\"\n  }))), __jsx(ListDes, null, __jsx(Text, {\n    bold: true\n  }, myOrder === null || myOrder === void 0 ? void 0 : myOrder.delivery_address)))), __jsx(ListTitle, null, __jsx(Text, {\n    bold: true\n  }, __jsx(FormattedMessage, {\n    id: (orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.isPickUp) ? \"timepickupOfConvinience\" : \"timedeliOfConvinience\",\n    defaultMessage: \"timepickupOfConvinience\"\n  })))), __jsx(TotalAmount, null, __jsx(BlockTitle, null, __jsx(FormattedMessage, {\n    id: \"totalAmountText\",\n    defaultMessage: \"Total Amount\"\n  })), __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, {\n    bold: true\n  }, __jsx(FormattedMessage, {\n    id: \"paymenMethodText\",\n    defaultMessage: \"Payment Method\"\n  }))), __jsx(ListDes, null, __jsx(Text, null, myOrder === null || myOrder === void 0 ? void 0 : myOrder.payment_method))), __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, {\n    bold: true\n  }, __jsx(FormattedMessage, {\n    id: \"subTotal\",\n    defaultMessage: \"Sub total\"\n  }))), __jsx(ListDes, null, __jsx(Text, null, CURRENCY, myOrder === null || myOrder === void 0 ? void 0 : myOrder.sub_total))), !(orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.isPickUp) && __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, {\n    bold: true\n  }, __jsx(FormattedMessage, {\n    id: \"deliveryFee\",\n    defaultMessage: \"Delivery Fee\"\n  }))), __jsx(ListDes, null, __jsx(Text, null, CURRENCY, getDeliveryFee(orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.name)))), __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, {\n    bold: true\n  }, __jsx(FormattedMessage, {\n    id: \"totalText\",\n    defaultMessage: \"Total\"\n  }))), __jsx(ListDes, null, __jsx(Text, null, CURRENCY, myOrder === null || myOrder === void 0 ? void 0 : myOrder.total))))));\n};\n\nexport default OrderReceived;","map":null,"metadata":{},"sourceType":"module"}