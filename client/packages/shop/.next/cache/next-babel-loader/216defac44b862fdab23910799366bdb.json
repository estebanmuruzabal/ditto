{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/user-profile/order/order-card/order-card-mobile.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Collapse, { Panel } from 'rc-collapse';\nimport { OrderListHeader, TrackID, Status, OrderMeta, Meta, CardWrapper, OrderDetail, DeliveryInfo, DeliveryAddress, Address, Contact, CostCalculation, PriceRow, Price, OrderTable } from './order-card.style';\nimport { CURRENCY } from 'utils/constant';\nimport moment from 'moment';\nvar components = {\n  table: OrderTable\n};\n\nvar OrderCard = function OrderCard(_ref) {\n  var onClick = _ref.onClick,\n      className = _ref.className,\n      columns = _ref.columns,\n      progressData = _ref.progressData,\n      orders = _ref.orders;\n  //   const displayDetail = className === 'active' ? '100%' : '0';\n  var addAllClasses = ['accordion'];\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  console.log(\"orderrs:L\", orders);\n\n  var getDeliveryDate = function getDeliveryDate(orderDate) {\n    var orderDatee = moment(orderDate, 'MM/D/YYYY');\n    var orderDay = moment(orderDate, 'MM/D/YYYY').day();\n    var orderHour = moment(orderDate, 'MM/D/YYYY').hour();\n    var orderMinute = moment(orderDate, 'MM/D/YYYY').minutes();\n    var lastOrderHour = 14;\n    var lastOrderMinute = 0;\n    var lunes = 1;\n    var martes = 2;\n    var miercoles = 3;\n    var jueves = 4;\n    var viernes = 5;\n    var sabado = 6;\n    var domingo = 7; // case between jueves 14:00 and martes 13:59\n\n    if (orderDay >= jueves && orderHour > 13 && orderDay <= martes && orderHour < 14) {\n      var day = moment(orderDate, 'MM/D/YYYY').day();\n      var deliveryDate = moment(orderDate, 'MM/D/YYYY');\n      var days = 7 - day.getDay() + 4;\n\n      while (day === martes) {\n        day = day === domingo ? day = 1 : day++;\n        deliveryDate.add(1, 'days');\n      }\n\n      return deliveryDate;\n    } // case between martes 14:01 and jueves 13:59\n\n\n    if (orderDay >= martes && orderHour > 13 && orderDay <= jueves && orderHour < 14) {\n      var _day = moment(orderDate, 'MM/D/YYYY').day();\n\n      var _deliveryDate = moment(orderDate, 'MM/D/YYYY');\n\n      while (_day === jueves) {\n        _day++;\n\n        _deliveryDate.add(1, 'days');\n      }\n\n      return _deliveryDate;\n    } // order.delivery_address ? order.deliveryTime\n\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Collapse, {\n    accordion: true,\n    className: addAllClasses.join(' '),\n    defaultActiveKey: \"active\",\n    expandIcon: function expandIcon() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, orders.map(function (order) {\n    return __jsx(Panel, {\n      header: __jsx(CardWrapper, {\n        onClick: onClick,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, __jsx(OrderListHeader, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, __jsx(TrackID, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      }, \"Order \", __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 27\n        }\n      }, \"#\", order.id)), __jsx(Status, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }, progressData[order.status - 1])), __jsx(OrderMeta, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, __jsx(Meta, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }\n      }, \"Order Date: \", __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }\n      }, moment(order.datetime).format('hh:mm A - DD MMM'))), __jsx(Meta, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }\n      }, \"Delivery Time: \", __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 36\n        }\n      }, getDeliveryDate(order.datetime))), __jsx(Meta, {\n        className: \"price\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }\n      }, \"Total Price:\", __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, CURRENCY, order.total)))),\n      headerClass: \"accordion-title\",\n      key: order.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, __jsx(OrderDetail, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, __jsx(DeliveryInfo, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, __jsx(DeliveryAddress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, __jsx(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, \"Contact Number\"), __jsx(Contact, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, order.contact_number)), __jsx(DeliveryAddress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, __jsx(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, \"Delivery Address\"), __jsx(Address, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, order.delivery_address)), __jsx(CostCalculation, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, __jsx(PriceRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, \"Subtotal\", __jsx(Price, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, CURRENCY, order.sub_total)), __jsx(PriceRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, \"Discount\", __jsx(Price, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, CURRENCY, order.discount)), __jsx(PriceRow, {\n      className: \"grandTotal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, \"Total\", __jsx(Price, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, CURRENCY, order.total))))));\n  })));\n};\n\n_c = OrderCard;\nexport default OrderCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderCard\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/user-profile/order/order-card/order-card-mobile.tsx"],"names":["React","Collapse","Panel","OrderListHeader","TrackID","Status","OrderMeta","Meta","CardWrapper","OrderDetail","DeliveryInfo","DeliveryAddress","Address","Contact","CostCalculation","PriceRow","Price","OrderTable","CURRENCY","moment","components","table","OrderCard","onClick","className","columns","progressData","orders","addAllClasses","push","console","log","getDeliveryDate","orderDate","orderDatee","orderDay","day","orderHour","hour","orderMinute","minutes","lastOrderHour","lastOrderMinute","lunes","martes","miercoles","jueves","viernes","sabado","domingo","deliveryDate","days","getDay","add","join","map","order","id","status","datetime","format","total","contact_number","delivery_address","sub_total","discount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from 'rc-table';\nimport Collapse, { Panel } from 'rc-collapse';\nimport ReactToPrint from \"react-to-print\";\nimport Progress from 'components/progress-box/progress-box';\n\nimport {\n  OrderListHeader,\n  TrackID,\n  Status,\n  OrderMeta,\n  Meta,\n  CardWrapper,\n  OrderDetail,\n  DeliveryInfo,\n  DeliveryAddress,\n  Address,\n  Contact,\n  CostCalculation,\n  PriceRow,\n  Price,\n  ProgressWrapper,\n  OrderTable,\n  OrderTableMobile,\n} from './order-card.style';\n\nimport { CURRENCY } from 'utils/constant';\nimport moment from 'moment';\nimport { date } from 'yup';\n\ntype MobileOrderCardProps = {\n  orderId?: any;\n  onClick?: (e: any) => void;\n  className?: any;\n  status?: any;\n  date?: any;\n  deliveryTime?: any;\n  amount?: number;\n  tableData?: any;\n  columns?: any;\n  progressData?: any;\n  progressStatus?: any;\n  address?: string;\n  subtotal?: number;\n  discount?: number;\n  deliveryFee?: number;\n  grandTotal?: number;\n  orders?: any;\n};\n\nconst components = {\n  table: OrderTable,\n};\n\nconst OrderCard: React.FC<MobileOrderCardProps> = ({\n  onClick,\n  className,\n  columns,\n  progressData,\n  orders,\n}) => {\n  //   const displayDetail = className === 'active' ? '100%' : '0';\n  const addAllClasses: string[] = ['accordion'];\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n  console.log(\"orderrs:L\", orders)\n\n  const getDeliveryDate = (orderDate: string) => {\n    const orderDatee = moment(orderDate, 'MM/D/YYYY');\n    const orderDay = moment(orderDate, 'MM/D/YYYY').day();\n    const orderHour = moment(orderDate, 'MM/D/YYYY').hour();\n    const orderMinute = moment(orderDate, 'MM/D/YYYY').minutes();\n    const lastOrderHour = 14;\n    const lastOrderMinute = 0;\n    const lunes = 1;\n    const martes = 2;\n    const miercoles = 3;\n    const jueves = 4;\n    const viernes = 5;\n    const sabado = 6;\n    const domingo = 7;\n\n    // case between jueves 14:00 and martes 13:59\n    if ((orderDay >= jueves && orderHour > 13  ) && (orderDay <= martes && orderHour < 14)) {\n      let day = moment(orderDate, 'MM/D/YYYY').day();\n      let deliveryDate = moment(orderDate, 'MM/D/YYYY');\n      \n      const days = 7 - day.getDay() + 4;\n      while (day === martes) {\n\n        day = day === domingo ? day = 1 : day++;\n        deliveryDate.add(1, 'days');\n      }\n      \n      return deliveryDate;\n    }\n    // case between martes 14:01 and jueves 13:59\n    if ((orderDay >= martes && orderHour > 13) && (orderDay <= jueves && orderHour < 14)) {\n      let day = moment(orderDate, 'MM/D/YYYY').day();\n      let deliveryDate = moment(orderDate, 'MM/D/YYYY');\n      while (day === jueves) {\n        day++;\n        deliveryDate.add(1, 'days');\n      }\n      \n      return deliveryDate;\n    }\n    // order.delivery_address ? order.deliveryTime\n  }\n\n  return (\n    <>\n      <Collapse\n        accordion={true}\n        className={addAllClasses.join(' ')}\n        defaultActiveKey=\"active\"\n        expandIcon={() => {}}\n      >\n        {orders.map((order: any) => (\n          <Panel\n            header={\n              <CardWrapper onClick={onClick}>\n                <OrderListHeader>\n                  <TrackID>\n                    Order <span>#{order.id}</span>\n                  </TrackID>\n                  <Status>{progressData[order.status - 1]}</Status>\n                </OrderListHeader>\n\n                <OrderMeta>\n                  <Meta>\n                    Order Date: <span>{moment(order.datetime).format('hh:mm A - DD MMM')}</span>\n                  </Meta>\n                  <Meta>\n                    Delivery Time: <span>{getDeliveryDate(order.datetime)}</span>\n                  </Meta>\n                  <Meta className=\"price\">\n                    Total Price:\n                    <span>\n                      {CURRENCY}\n                      {order.total}\n                    </span>\n                  </Meta>\n                </OrderMeta>\n              </CardWrapper>\n            }\n            headerClass=\"accordion-title\"\n            key={order.id}\n          >\n            <OrderDetail>\n              <DeliveryInfo>\n                <DeliveryAddress>\n                  <h3>Contact Number</h3>\n                  <Contact>{order.contact_number}</Contact>\n                </DeliveryAddress>\n                <DeliveryAddress>\n                  <h3>Delivery Address</h3>\n                  <Address>{order.delivery_address}</Address>\n                </DeliveryAddress>\n                <CostCalculation>\n                  <PriceRow>\n                    Subtotal\n                    <Price>\n                      {CURRENCY}\n                      {order.sub_total}\n                    </Price>\n                  </PriceRow>\n                  <PriceRow>\n                    Discount\n                    <Price>\n                      {CURRENCY}\n                      {order.discount}\n                    </Price>\n                  </PriceRow>\n                  <PriceRow className=\"grandTotal\">\n                    Total\n                    <Price>\n                      {CURRENCY}\n                      {order.total}\n                    </Price>\n                  </PriceRow>\n                </CostCalculation>\n              </DeliveryInfo>\n\n              {/*<ProgressWrapper>\n                <Progress data={progressData} status={order.status} />\n              </ProgressWrapper>\n\n              <OrderTableMobile>\n                <Table\n                  columns={columns}\n                  data={order.products}\n                  rowKey={(record) => record.id}\n                  components={components}\n                  scroll={{ x: 450 }}\n                  // scroll={{ y: 250 }}\n                />\n              </OrderTableMobile>*/}\n            </OrderDetail>\n          </Panel>\n        ))}\n      </Collapse>\n    </>\n  );\n};\n\nexport default OrderCard;\n"]},"metadata":{},"sourceType":"module"}