{"ast":null,"code":"var _jsxFileName = \"/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two/checkout-two-sections/delivery-schedule.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { Heading } from './delivery-selection.style';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport { ButtonGroup } from '../../checkout-one/checkout-one.style';\nimport { InformationBox, SectionNumber } from '../checkout-two.style';\n\nconst DeliverySchedule = (_ref) => {\n  var _deliverData$delivery;\n\n  let props = Object.assign({}, _ref);\n  const [deliveryMethodSelected, setDeliveryMethodSelected] = React.useState(undefined);\n  const {\n    data: deliverData\n  } = useQuery(DELIVERY_METHOD);\n  const deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items;\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const {\n    0: deliveryAddress,\n    1: setDeliveryAddress\n  } = useState(\"\");\n  const {\n    0: notInsideDeliveryAreas,\n    1: setNotInsideDeliveryAreas\n  } = useState(false);\n  const scheduleOptions = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n    return deliveryMethod.isPickUp === true;\n  });\n\n  const handleOnFocus = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const intl = useIntl();\n  return __jsx(InformationBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, __jsx(SectionNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), __jsx(FormattedMessage, {\n    id: \"deliveryDateId\",\n    defaultMessage: \"deliveryDateId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, __jsx(RadioGroupThree, {\n    items: props.schedulesOfDeliveryMethodSelected,\n    component: (item, index) => __jsx(RadioCard, {\n      id: item.id,\n      key: item.id,\n      title: item.label,\n      details: item.details,\n      link: item.isPickUp && item.pickUpAddress ? item.pickUpAddress : null,\n      name: \"schedule\",\n      checked: true,\n      withActionButtons: false,\n      onChange: () => props.setDeliverySchedule(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }\n  }))) // <div style={{ paddingTop: '20px'}}>\n  //   {searchResult?.length ? searchResult.map((deliveryMethod, i) => {\n  //     return (\n  //       <PickUpOptions>\n  //         <Checkbox\n  //             keyName={`${i}-deliveryMethods`}\n  //             isChecked={deliveryMethodSelected?.id === deliveryMethod.id}\n  //             labelText={`${deliveryMethod.name} - ${deliveryMethod.details} `}\n  //             id={`deliveryMethod-${i}`}\n  //             onChange={e => {\n  //                 setDeliveryMethodAndSaveCookie(deliveryMethodSelected?.id === deliveryMethod.id ? null : deliveryMethod)\n  //             }}\n  //         />\n  //       </PickUpOptions>\n  //     )}) : ('')\n  //   }\n  // </div>\n  ;\n};\n\nexport default DeliverySchedule;","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two/checkout-two-sections/delivery-schedule.tsx"],"names":["React","useState","FormattedMessage","useIntl","useQuery","DELIVERY_METHOD","Heading","RadioCard","RadioGroupThree","ButtonGroup","InformationBox","SectionNumber","DeliverySchedule","props","deliveryMethodSelected","setDeliveryMethodSelected","undefined","data","deliverData","deliveryMethods","items","zipCode","setZipCode","searchResult","setSearchResult","deliveryAddress","setDeliveryAddress","notInsideDeliveryAreas","setNotInsideDeliveryAreas","scheduleOptions","filter","deliveryMethod","isPickUp","handleOnFocus","event","preventDefault","stopPropagation","intl","schedulesOfDeliveryMethodSelected","item","index","id","label","details","pickUpAddress","setDeliverySchedule"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, deliveryCarrySelectOptions, deliveryMethodCookieKeyName, plazaBelgranoPolygon, plazaEspa√±aPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport { ActionButton, ActionsButtons, BannerIcon, Button, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Offer, OfferSection, Options, PickUpOptions, Wrapper } from './delivery-selection.style';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { alignContent, borderRadius, display, flexDirection, justifyContent, textAlign, width } from 'styled-system';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { ADD_ADDRESS } from 'graphql/mutation/address';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { Plus } from 'assets/icons/PlusMinus';\nimport { IconWrapper } from 'components/payment-group/payment-group.style';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport { ButtonGroup } from '../../checkout-one/checkout-one.style';\nimport { InformationBox, SectionNumber } from '../checkout-two.style';\n\ninterface Props {\n  setDeliverySchedule: any\n  schedulesOfDeliveryMethodSelected: any\n}\n\nconst DeliverySchedule: React.FC<Props> = ({ ...props  }) => {\n\n  const [deliveryMethodSelected, setDeliveryMethodSelected] = React.useState(undefined);\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n  const [notInsideDeliveryAreas, setNotInsideDeliveryAreas] = useState(false);\n\n  const scheduleOptions = deliveryMethods?.filter(deliveryMethod => {\n    return deliveryMethod.isPickUp === true;\n  });\n  \n\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  const intl = useIntl();\n\n  \n  return (\n    <InformationBox>\n              <Heading>\n                <SectionNumber />\n                <FormattedMessage\n                  id='deliveryDateId'\n                  defaultMessage='deliveryDateId'\n                />\n              </Heading>\n              <ButtonGroup>\n                   <RadioGroupThree\n                      items={props.schedulesOfDeliveryMethodSelected}\n                      component={(item: any, index: any) => (\n                        <RadioCard\n                          id={item.id}\n                          key={item.id}\n                          title={item.label}\n                          details={item.details}\n                          link={item.isPickUp && item.pickUpAddress ? item.pickUpAddress : null}\n                          name='schedule'\n                          checked={true}\n                          withActionButtons={false}\n                          onChange={() => props.setDeliverySchedule(item)}\n                        />\n                      )}\n                   />\n                 </ButtonGroup>\n            </InformationBox>\n\n                      \n                        // <div style={{ paddingTop: '20px'}}>\n                        //   {searchResult?.length ? searchResult.map((deliveryMethod, i) => {\n                        //     return (\n                        //       <PickUpOptions>\n                        //         <Checkbox\n                        //             keyName={`${i}-deliveryMethods`}\n                        //             isChecked={deliveryMethodSelected?.id === deliveryMethod.id}\n                        //             labelText={`${deliveryMethod.name} - ${deliveryMethod.details} `}\n                        //             id={`deliveryMethod-${i}`}\n                        //             onChange={e => {\n                        //                 setDeliveryMethodAndSaveCookie(deliveryMethodSelected?.id === deliveryMethod.id ? null : deliveryMethod)\n                        //             }}\n                        //         />\n                        //       </PickUpOptions>\n                        //     )}) : ('')\n                        //   }\n                        // </div>\n        \n  );\n};\n\nexport default DeliverySchedule;\n\n"]},"metadata":{},"sourceType":"module"}