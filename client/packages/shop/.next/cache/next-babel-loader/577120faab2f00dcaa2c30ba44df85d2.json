{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/LightSensor.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport { FormattedMessage } from 'react-intl';\nimport Select from 'react-select';\nimport { SettingsNames, WeekDays, fourRelaysOptions, manualModeOptions, lightModeOptions, LightSensorModes } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, WeekContainer, DayContainer, ScheduleTime, TextSpaced, CardButtons, ActionButton, Text } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';\n\nvar LightSensor = function LightSensor(_ref) {\n  _s();\n\n  var _setting$relayOneIdRe, _setting$relayOneIdRe2, _setting$scheduledOnT, _setting$logs;\n\n  var plant = _ref.plant,\n      settingName = _ref.settingName,\n      handleSettingsChange = _ref.handleSettingsChange,\n      onDeleteSchedule = _ref.onDeleteSchedule,\n      data = _ref.data,\n      openTab = _ref.openTab,\n      setOpenTab = _ref.setOpenTab;\n  var setting = plant[settingName];\n\n  var _useState = useState(''),\n      daySelected = _useState[0],\n      setDay = _useState[1];\n\n  var selectedMode = lightModeOptions.find(function (option) {\n    return option.value === setting.mode;\n  });\n  var selectedManualState = manualModeOptions.find(function (option) {\n    return option.value === setting.relayOneWorking;\n  });\n  var relayOneSelected = fourRelaysOptions.find(function (option) {\n    return option.value === setting.relayOneIdRelated;\n  });\n  var relayTwoSelected = fourRelaysOptions.find(function (option) {\n    return option.value === setting.relayTwoIdRelated;\n  });\n  var selectStyle = {\n    control: function control(styles) {\n      return _objectSpread(_objectSpread({}, styles), {}, {\n        width: '197px',\n        textAlign: 'left'\n      });\n    }\n  };\n  var tabIsOpen = openTab === settingName;\n\n  var handleModal = function handleModal(modalComponent) {\n    var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'add-time-schedule-modal';\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  return __jsx(PlantsSensorContainer, {\n    style: {\n      height: tabIsOpen ? '100%' : '66px'\n    },\n    onClick: function onClick() {\n      return setOpenTab(tabIsOpen ? '' : settingName);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"lightId\",\n    defaultMessage: \"lightId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }))), __jsx(ListDes, {\n    style: {\n      marginLeft: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, plant === null || plant === void 0 ? void 0 : plant.light, \" % \", (plant === null || plant === void 0 ? void 0 : plant.light) < 40 ? '🌙' : '☀️'))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"manualModeStateId\",\n    defaultMessage: \"manualModeStateId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }))), __jsx(ListDes, {\n    style: {\n      marginLeft: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: setting.relayOneWorking ? 'manualModeStateOnId' : 'manualModeStateOffId',\n    defaultMessage: \"noDefaultOnOffMsg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"lightModeId\",\n    defaultMessage: \"lightModeId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'mode', e.value, SettingsNames.LIGHT_SETTING);\n    },\n    value: selectedMode,\n    options: lightModeOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }))), ((setting === null || setting === void 0 ? void 0 : setting.mode) === LightSensorModes.MANUAL || (setting === null || setting === void 0 ? void 0 : setting.mode) === LightSensorModes.SCHEDULE || (setting === null || setting === void 0 ? void 0 : setting.mode) === LightSensorModes.SMART_SCHEDULE) && __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: ((_setting$relayOneIdRe = setting.relayOneIdRelated) === null || _setting$relayOneIdRe === void 0 ? void 0 : _setting$relayOneIdRe.length) ? 'asociatedRelayId' : 'asociateRelayId',\n    defaultMessage: ((_setting$relayOneIdRe2 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe2 === void 0 ? void 0 : _setting$relayOneIdRe2.length) ? 'asociatedRelayId' : 'asociateRelayId',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'relayOneIdRelated', e.value, SettingsNames.LIGHT_SETTING);\n    },\n    value: relayOneSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }))), setting.mode === LightSensorModes.MANUAL && __jsx(React.Fragment, null, __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"manualModeStateId\",\n    defaultMessage: \"manualModeStateId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'relayOneWorking', e.value, SettingsNames.LIGHT_SETTING);\n    },\n    value: selectedManualState,\n    options: manualModeOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  })))), (setting.mode === LightSensorModes.SCHEDULE || setting.mode === LightSensorModes.SMART_SCHEDULE) && __jsx(React.Fragment, null, __jsx(WeekContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, Object.keys(WeekDays).map(function (day, i) {\n    return __jsx(DayContainer, {\n      key: i + '-day-container',\n      style: {\n        backgroundColor: daySelected === day ? '#E6E6E6' : 'transparent'\n      },\n      onClick: function onClick() {\n        return setDay(day);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, day.substring(0, 3));\n  })), setting === null || setting === void 0 ? void 0 : (_setting$scheduledOnT = setting.scheduledOnTimes) === null || _setting$scheduledOnT === void 0 ? void 0 : _setting$scheduledOnT.map(function (schedule, i) {\n    return __jsx(WeekContainer, {\n      key: i + '-days-to-repeat-2',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, schedule.daysToRepeat.includes(daySelected) ? __jsx(ScheduleTime, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 23\n      }\n    }, __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"startTimeId\",\n      defaultMessage: \"startTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 37\n      }\n    })), \" \", __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 117\n      }\n    }, schedule.startTime), __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"endTimeId\",\n      defaultMessage: \"endTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 37\n      }\n    })), \" \", __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 113\n      }\n    }, schedule.endTime), __jsx(CardButtons, {\n      className: \"button-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, __jsx(ActionButton, {\n      onClick: function onClick() {\n        var _data$getUser;\n\n        return handleModal(AddTimeSchedule, {\n          settingName: SettingsNames.LIGHT_SETTING,\n          plant: plant,\n          id: data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : _data$getUser.id\n        });\n      },\n      className: \"edit-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 27\n      }\n    }, __jsx(PencilIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    })), __jsx(ActionButton, {\n      onClick: function onClick() {\n        return onDeleteSchedule(plant, SettingsNames.LIGHT_SETTING, i);\n      },\n      className: \"delete-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 27\n      }\n    }, __jsx(CloseIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    })))) : __jsx(ScheduleTime, {\n      style: {\n        border: '0px',\n        height: '42px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }));\n  }), __jsx(Button, {\n    size: \"small\",\n    variant: \"outlined\",\n    type: \"button\",\n    className: \"add-button\",\n    onClick: function onClick() {\n      var _data$getUser2;\n\n      return handleModal(AddTimeSchedule, {\n        settingName: SettingsNames.LIGHT_SETTING,\n        plant: plant,\n        id: data === null || data === void 0 ? void 0 : (_data$getUser2 = data.getUser) === null || _data$getUser2 === void 0 ? void 0 : _data$getUser2.id\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"addTimeScheduleId\",\n    defaultMessage: \"addTimeScheduleId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  })), (setting === null || setting === void 0 ? void 0 : (_setting$logs = setting.logs) === null || _setting$logs === void 0 ? void 0 : _setting$logs.length) > 0 && __jsx(HumidityLogsGraph, {\n    data: setting.logs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  })));\n};\n\n_s(LightSensor, \"e71wfGq5sptKp07dS1u+xlnwiYI=\");\n\n_c = LightSensor;\nexport default LightSensor;\n\nvar _c;\n\n$RefreshReg$(_c, \"LightSensor\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/LightSensor.tsx"],"names":["React","useState","CloseIcon","PencilIcon","Button","FormattedMessage","Select","SettingsNames","WeekDays","fourRelaysOptions","manualModeOptions","lightModeOptions","LightSensorModes","HumidityLogsGraph","PlantsSensorContainer","ListItem","ListTitle","ListDes","WeekContainer","DayContainer","ScheduleTime","TextSpaced","CardButtons","ActionButton","Text","openModal","AddTimeSchedule","LightSensor","plant","settingName","handleSettingsChange","onDeleteSchedule","data","openTab","setOpenTab","setting","daySelected","setDay","selectedMode","find","option","value","mode","selectedManualState","relayOneWorking","relayOneSelected","relayOneIdRelated","relayTwoSelected","relayTwoIdRelated","selectStyle","control","styles","width","textAlign","tabIsOpen","handleModal","modalComponent","modalProps","className","show","config","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","justifyContent","marginLeft","light","e","LIGHT_SETTING","MANUAL","SCHEDULE","SMART_SCHEDULE","length","Object","keys","map","day","i","backgroundColor","substring","scheduledOnTimes","schedule","daysToRepeat","includes","startTime","endTime","id","getUser","border","logs"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { SearchBox } from 'components/search-box/search-box';\nimport Router,{ useRouter } from 'next/router';\nimport { IHumidityLogs } from 'utils/types';\nimport LineChart from 'components/line-chart/line-chart';\nimport GraphChart from 'components/graph-chart/graph-chart';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { SettingsNames, HumiditySensorMode, WeekDays, fourRelaysOptions, humidityModeOptions, manualModeOptions, lightModeOptions, LightSensorModes } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, InputUpper, WeekContainer, DayContainer, ScheduleTime, TextSpaced, CardButtons, ActionButton, Text } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';  \n\ninterface Props {\n  data?: any;\n  plant: any;\n  settingName: SettingsNames;\n  openTab: string;\n  setOpenTab: (settingName: string) => void;\n  handleSettingsChange: (e: any, plant: any, field: string, value: string | boolean, settingName: SettingsNames) => void;\n  onDeleteSchedule: (plant: any, settingName: SettingsNames, position: number) => void;\n}\n\nconst LightSensor: React.FC<Props> = ({ plant, settingName, handleSettingsChange, onDeleteSchedule, data, openTab, setOpenTab }) => {\n    const setting = plant[settingName];\n    const [daySelected, setDay] = useState('');\n\n    const selectedMode = lightModeOptions.find((option) => option.value === setting.mode);\n    const selectedManualState = manualModeOptions.find((option) => option.value === setting.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === setting.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find((option) => option.value === setting.relayTwoIdRelated);\n    const selectStyle = { control: styles => ({ ...styles, width: '197px', textAlign: 'left' }) };\n    const tabIsOpen = openTab === settingName;\n\n    const handleModal = (\n        modalComponent: any,\n        modalProps = {},\n        className: string = 'add-time-schedule-modal'\n        ) => {\n        openModal({\n            show: true,\n            config: {\n            width: 360,\n            height: 'auto',\n            enableResizing: false,\n            disableDragging: true,\n            className: className,\n            },\n            closeOnClickOutside: true,\n            component: modalComponent,\n            componentProps: { item: modalProps },\n        });\n    };\n\n    return (\n        <PlantsSensorContainer style={{ height: tabIsOpen ? '100%' : '66px' }} onClick={() => setOpenTab(tabIsOpen ? '' : settingName)}>\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"lightId\"\n                  defaultMessage=\"lightId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes style={{ marginLeft: '10px' }}>\n              <Text>{plant?.light} % {plant?.light < 40 ? '🌙' : '☀️'}</Text>\n            </ListDes>\n          </ListItem>\n  \n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"manualModeStateId\"\n                  defaultMessage=\"manualModeStateId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes style={{ marginLeft: '10px' }}>\n              <Text> \n                <FormattedMessage\n                  id={setting.relayOneWorking ? 'manualModeStateOnId' : 'manualModeStateOffId'}\n                  defaultMessage='noDefaultOnOffMsg'\n                />\n              </Text>\n            </ListDes>\n          </ListItem>\n  \n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text bold>\n                <FormattedMessage\n                  id=\"lightModeId\"\n                  defaultMessage=\"lightModeId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes>\n              <Select \n                onChange={(e: any) => handleSettingsChange(plant, 'mode', e.value, SettingsNames.LIGHT_SETTING)}\n                value={selectedMode}\n                options={lightModeOptions}\n                styles={selectStyle}\n                menuPosition={'fixed'}\n              />\n            </ListDes>\n          </ListItem>\n  \n          { (setting?.mode === LightSensorModes.MANUAL || setting?.mode === LightSensorModes.SCHEDULE || setting?.mode === LightSensorModes.SMART_SCHEDULE) && (\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n                    defaultMessage={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Select \n                  onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, SettingsNames.LIGHT_SETTING)}\n                  value={relayOneSelected}\n                  options={fourRelaysOptions}\n                  styles={selectStyle}\n                  menuPosition={'fixed'}\n                />\n              </ListDes>\n            </ListItem>\n          )}\n          \n          { setting.mode === LightSensorModes.MANUAL && (\n            <>\n              <ListItem>\n                <ListTitle>\n                  <Text bold>\n                    <FormattedMessage\n                      id='manualModeStateId'\n                      defaultMessage='manualModeStateId'\n                    />\n                  </Text>\n                </ListTitle>\n                <ListDes>\n                  <Select \n                    onChange={(e: any) => handleSettingsChange(plant, 'relayOneWorking', e.value, SettingsNames.LIGHT_SETTING)}\n                    value={selectedManualState}\n                    options={manualModeOptions}\n                    styles={selectStyle}\n                    menuPosition={'fixed'}\n                  />\n                </ListDes>\n              </ListItem>\n            </>\n          )}\n  \n          { (setting.mode === LightSensorModes.SCHEDULE || setting.mode === LightSensorModes.SMART_SCHEDULE) && (\n            <>\n              <WeekContainer>\n              {Object.keys(WeekDays).map((day, i: number) => {\n                 return (\n                    <DayContainer\n                      key={i + '-day-container'}\n                      style={{ backgroundColor: daySelected === day ? '#E6E6E6' : 'transparent' }}\n                      onClick={() => setDay(day)}\n                    >\n                      {day.substring(0,3)}\n                    </DayContainer>\n                  )\n                })\n              }\n              </WeekContainer>\n  \n              { setting?.scheduledOnTimes?.map((schedule: any, i: number) => {\n                return (\n                  <WeekContainer key={i + '-days-to-repeat-2'}>\n                    { schedule.daysToRepeat.includes(daySelected) ? (\n                      <ScheduleTime>\n                        <TextSpaced><FormattedMessage id='startTimeId' defaultMessage='startTimeId' /></TextSpaced> <TextSpaced>{schedule.startTime}</TextSpaced>\n                        <TextSpaced><FormattedMessage id='endTimeId' defaultMessage='endTimeId' /></TextSpaced> <TextSpaced>{schedule.endTime}</TextSpaced>\n                        <CardButtons className='button-wrapper'>\n                          <ActionButton onClick={() => handleModal( AddTimeSchedule, { settingName: SettingsNames.LIGHT_SETTING, plant, id: data?.getUser?.id } )} className='edit-btn'>\n                            <PencilIcon />\n                          </ActionButton>\n  \n                          <ActionButton onClick={() => onDeleteSchedule(plant, SettingsNames.LIGHT_SETTING, i)} className='delete-btn'>\n                            <CloseIcon />\n                          </ActionButton>\n                        </CardButtons>\n                      </ScheduleTime>\n                    ) : <ScheduleTime style={{ border: '0px', height: '42px' }}></ScheduleTime>}\n                  </WeekContainer>\n                )\n              }\n              )}\n              <Button\n                size='small'\n                variant='outlined'\n                type='button'\n                className='add-button'\n                onClick={() => handleModal(\n                    AddTimeSchedule, \n                    {\n                        settingName: SettingsNames.LIGHT_SETTING,\n                        plant,\n                        id: data?.getUser?.id\n                    }\n                  )\n                }\n              >\n                <FormattedMessage\n                  id='addTimeScheduleId'\n                  defaultMessage='addTimeScheduleId' \n                />\n              </Button>\n\n              { setting?.logs?.length > 0 && (\n                    <HumidityLogsGraph\n                        data={setting.logs}\n                    />\n                )}\n            </>\n          )}\n        </PlantsSensorContainer>\n      )\n};\n\nexport default LightSensor;\n"]},"metadata":{},"sourceType":"module"}