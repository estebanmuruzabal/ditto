{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/tree-menu/tree-menu.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { usePrevious, useMeasure } from 'utils/hooks';\nimport { useSpring, animated } from 'react-spring';\nimport { Frame, Title, Content, Header, IconWrapper } from './tree-menu.style';\nimport * as Icons from 'assets/icons/category-icons';\nvar Tree = React.memo(_c = _s(function (_ref) {\n  _s();\n\n  var children = _ref.children,\n      name = _ref.name,\n      icon = _ref.icon,\n      isOpen = _ref.isOpen,\n      onClick = _ref.onClick,\n      depth = _ref.depth,\n      _ref$defaultOpen = _ref.defaultOpen,\n      defaultOpen = _ref$defaultOpen === void 0 ? false : _ref$defaultOpen;\n  var previous = usePrevious(isOpen);\n\n  var _useMeasure = useMeasure(),\n      _useMeasure2 = _slicedToArray(_useMeasure, 2),\n      bind = _useMeasure2[0],\n      viewHeight = _useMeasure2[1].height;\n\n  var _useSpring = useSpring({\n    from: {\n      height: 0,\n      opacity: 0,\n      transform: 'translate3d(20px,0,0)'\n    },\n    to: {\n      height: isOpen ? viewHeight : 0,\n      opacity: isOpen ? 1 : 0,\n      transform: \"translate3d(\".concat(isOpen ? 0 : 20, \"px,0,0)\")\n    }\n  }),\n      height = _useSpring.height,\n      opacity = _useSpring.opacity,\n      transform = _useSpring.transform;\n\n  var Icon = icon ? Icons[icon] : depth === 'child' ? Icons['Minus'] : null;\n  return __jsx(Frame, {\n    depth: depth,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    open: isOpen,\n    depth: depth,\n    className: depth,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, Icon !== null && __jsx(IconWrapper, {\n    depth: depth,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  })), __jsx(Title, {\n    onClick: onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, name)), __jsx(Content, {\n    style: {\n      opacity: opacity,\n      height: isOpen && previous === isOpen ? 'auto' : height\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(animated.div, _extends({\n    style: {\n      transform: transform\n    }\n  }, bind, {\n    children: children,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))));\n}, \"KlmLo7ZSi+mFHlRWpwvUdGC6/uA=\", false, function () {\n  return [usePrevious, useMeasure, useSpring];\n}));\n_c2 = Tree;\nexport var TreeMenu = function TreeMenu(_ref2) {\n  var data = _ref2.data,\n      className = _ref2.className,\n      _onClick = _ref2.onClick,\n      active = _ref2.active;\n\n  var handler = function handler(children) {\n    return children === null || children === void 0 ? void 0 : children.map(function (subOption) {\n      if (subOption.parent_id) return;\n\n      if (!subOption.children) {\n        return __jsx(Tree, {\n          key: subOption.name,\n          name: subOption.name,\n          icon: subOption.icon,\n          depth: \"child\",\n          onClick: function onClick() {\n            return _onClick(subOption.slug);\n          },\n          isOpen: active === subOption.slug,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }\n        });\n      }\n\n      return __jsx(Tree, {\n        key: subOption.name,\n        name: subOption.name,\n        icon: subOption.icon,\n        depth: \"parent\",\n        onClick: function onClick() {\n          return subOption.children ? null : _onClick(subOption.slug);\n        },\n        isOpen: active === subOption.slug || subOption.children.some(function (item) {\n          return item.slug === active;\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, handler(subOption.children));\n    });\n  };\n\n  return __jsx(React.Fragment, null, handler(data));\n};\n_c3 = TreeMenu;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Tree$React.memo\");\n$RefreshReg$(_c2, \"Tree\");\n$RefreshReg$(_c3, \"TreeMenu\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/tree-menu/tree-menu.tsx"],"names":["React","usePrevious","useMeasure","useSpring","animated","Frame","Title","Content","Header","IconWrapper","Icons","Tree","memo","children","name","icon","isOpen","onClick","depth","defaultOpen","previous","bind","viewHeight","height","from","opacity","transform","to","Icon","TreeMenu","data","className","active","handler","map","subOption","parent_id","slug","some","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { usePrevious, useMeasure } from 'utils/hooks';\nimport { useSpring, animated } from 'react-spring';\nimport { Frame, Title, Content, Header, IconWrapper } from './tree-menu.style';\n\nimport * as Icons from 'assets/icons/category-icons';\n\nconst Tree = React.memo(\n  ({\n    children,\n    name,\n    icon,\n    isOpen,\n    onClick,\n    depth,\n    defaultOpen = false,\n  }: any) => {\n    const previous = usePrevious(isOpen);\n    const [bind, { height: viewHeight }] = useMeasure();\n    const { height, opacity, transform } = useSpring<any>({\n      from: { height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' },\n      to: {\n        height: isOpen ? viewHeight : 0,\n        opacity: isOpen ? 1 : 0,\n        transform: `translate3d(${isOpen ? 0 : 20}px,0,0)`,\n      },\n    });\n    const Icon = icon ? Icons[icon] : depth === 'child' ? Icons['Minus'] : null;\n    return (\n      <Frame depth={depth}>\n        <Header open={isOpen} depth={depth} className={depth}>\n          {Icon !== null && (\n            <IconWrapper depth={depth}>\n              <Icon />\n            </IconWrapper>\n          )}\n          <Title onClick={onClick}>{name}</Title>\n        </Header>\n        <Content\n          style={{\n            opacity,\n            height: isOpen && previous === isOpen ? 'auto' : height,\n          }}\n        >\n          <animated.div style={{ transform }} {...bind} children={children} />\n        </Content>\n      </Frame>\n    );\n  }\n);\n\ntype Props = {\n  className?: any;\n  data: any;\n  onClick: (slug: string) => void;\n  active: string | string[];\n};\nexport const TreeMenu: React.FC<Props> = ({\n  data,\n  className,\n  onClick,\n  active,\n}) => {\n  const handler = (children) => {\n      return children?.map((subOption) => {\n        if (subOption.parent_id) return;\n        if (!subOption.children) {\n          return (\n            <Tree\n              key={subOption.name}\n              name={subOption.name}\n              icon={subOption.icon}\n              depth=\"child\"\n              onClick={() => onClick(subOption.slug)}\n              isOpen={active === subOption.slug}\n            />\n          );\n        }\n        return (\n          <Tree\n            key={subOption.name}\n            name={subOption.name}\n            icon={subOption.icon}\n            depth=\"parent\"\n            onClick={() => subOption.children ? null : onClick(subOption.slug)}\n            isOpen={\n              active === subOption.slug ||\n              subOption.children.some((item) => item.slug === active)\n            }\n          >\n            {handler(subOption.children)}\n          </Tree>\n        );\n      });\n  };\n  return <>{handler(data)}</>;\n};\n"]},"metadata":{},"sourceType":"module"}