{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/request-product/request-product.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport Router from 'next/router';\nimport { Button } from 'components/button/button';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioGroup from 'components/radio-group/radio-group';\nimport { Input } from 'components/forms/input';\nimport { Label } from 'components/forms/label';\nimport Uploader from 'components/upload/upload';\nimport UpdateAddress from 'components/address-card/address-card';\nimport UpdateContact from 'components/contact-card/contact-card';\nimport { DELETE_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation } from '@apollo/react-hooks';\nimport FormWrapper, { Row, Col, Container, FormTitleWrapper, FormTitle, NoteText, Heading, DeliveryAddress, ButtonGroup, Contact, SubmitBtnWrapper } from './request-product.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl';\n\nconst Checkout = () => {\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: isValid,\n    1: setIsValid\n  } = useState(false);\n  const {\n    address,\n    contact\n  } = state;\n  const {\n    0: medicineNameOne,\n    1: setMedicineNameOne\n  } = useState('');\n  const {\n    0: quantityOne,\n    1: setQuantityOne\n  } = useState('');\n  const {\n    0: medicineNameTwo,\n    1: setMedicineNameTwo\n  } = useState('');\n  const {\n    0: quantityTwo,\n    1: setQuantityTwo\n  } = useState('');\n  const [deleteContactMutation] = useMutation(DELETE_CONTACT);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    Router.push('/medicine');\n    setLoading(false);\n  }; // Add or edit modal\n\n\n  const handleModal = (modalComponent, modalProps = {}, className = 'add-address-modal') => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  const handleEditDelete = async (item, type, name) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddress : UpdateContact;\n      handleModal(modalComponent, item);\n    } else {\n      switch (name) {\n        case 'payment':\n          dispatch({\n            type: 'DELETE_CARD',\n            payload: item.id\n          });\n          return await deletePaymentCardMutation({\n            variables: {\n              cardId: JSON.stringify(item.id)\n            }\n          });\n\n        case 'contact':\n          dispatch({\n            type: 'DELETE_CONTACT',\n            payload: item.id\n          });\n          return await deleteContactMutation({\n            variables: {\n              contactId: JSON.stringify(item.id)\n            }\n          });\n\n        case 'address':\n          dispatch({\n            type: 'DELETE_ADDRESS',\n            payload: item.id\n          });\n          return await deleteAddressMutation({\n            variables: {\n              addressId: JSON.stringify(item.id)\n            }\n          });\n\n        default:\n          return false;\n      }\n    }\n  };\n\n  return __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, __jsx(FormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(FormTitleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, __jsx(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"reqMedicine\",\n    defaultMessage: \"Request Medicine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }))), __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"noteHead\",\n    defaultMessage: \"Note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  })), __jsx(NoteText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"noteDescription\",\n    defaultMessage: \"Product availability & price will confirm over phone. Delivery Charge inside the city ${inside} & outside the city ${outside}.\",\n    values: {\n      inside: 5,\n      outside: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"rmMedicineName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  })), __jsx(Input, {\n    type: \"text\",\n    label: \"Medicine Name\",\n    name: \"medicine-Name\",\n    placeholder: \"Enter medicine name\",\n    value: medicineNameOne,\n    onChange: e => setMedicineNameOne(e.target.value),\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"rmMedicineQuantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  })), __jsx(Input, {\n    type: \"text\",\n    label: \"Quantity\",\n    name: \"quantity\",\n    placeholder: \"Enter quantity\",\n    value: quantityOne,\n    onChange: e => setQuantityOne(e.target.value),\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"rmMedicineName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  })), __jsx(Input, {\n    type: \"text\",\n    label: \"Medicine Name\",\n    name: \"medicine-Name\",\n    placeholder: \"Enter medicine name\",\n    value: medicineNameTwo,\n    onChange: e => setMedicineNameTwo(e.target.value),\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"rmMedicineQuantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  })), __jsx(Input, {\n    type: \"text\",\n    label: \"Quantity\",\n    name: \"quantity\",\n    placeholder: \"Enter quantity\",\n    value: quantityTwo,\n    onChange: e => setQuantityTwo(e.target.value),\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"rmPrescripttionUpload\",\n    defaultMessage: \"Upload your prescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }))), __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, __jsx(Uploader, {\n    onChange: \"\",\n    intlUploadText: \"rmUploadText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }))), __jsx(DeliveryAddress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"checkoutDeliveryAddress\",\n    defaultMessage: \"Select Your Delivery Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  })), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, __jsx(RadioGroup, {\n    items: address,\n    component: item => __jsx(RadioCard, {\n      id: item.id,\n      key: item.id,\n      title: item.name,\n      content: item.info,\n      name: \"address\",\n      checked: item.type === 'primary',\n      onChange: () => dispatch({\n        type: 'SET_PRIMARY_ADDRESS',\n        payload: item.id.toString()\n      }),\n      onEdit: () => handleEditDelete(item, 'edit', 'address'),\n      onDelete: () => handleEditDelete(item, 'delete', 'address'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }\n    }),\n    secondaryComponent: __jsx(Button, {\n      size: \"big\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: () => handleModal(UpdateAddress, 'add-address-modal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addAddressBtn\",\n      defaultMessage: \"Add Adderss\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }))), __jsx(Contact, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"contactNumberText\",\n    defaultMessage: \"Select Your Contact Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  })), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, __jsx(RadioGroup, {\n    items: contact,\n    component: item => __jsx(RadioCard, {\n      id: item.id,\n      key: item.id,\n      title: item.type,\n      content: item.number,\n      checked: item.type === 'primary',\n      onChange: () => dispatch({\n        type: 'SET_PRIMARY_CONTACT',\n        payload: item.id.toString()\n      }),\n      name: \"contact\",\n      onEdit: () => handleEditDelete(item, 'edit', 'contact'),\n      onDelete: () => handleEditDelete(item, 'delete', 'contact'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 19\n      }\n    }),\n    secondaryComponent: __jsx(Button, {\n      size: \"big\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: () => handleModal(UpdateContact, {}, 'add-contact-modal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addContactBtn\",\n      defaultMessage: \"Add Contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }))), __jsx(SubmitBtnWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    type: \"button\",\n    onClick: handleSubmit,\n    size: \"big\",\n    loading: loading,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"submitRequest\",\n    defaultMessage: \"Submit Request\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default Checkout;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/request-product/request-product.tsx"],"names":["React","useContext","useState","Router","Button","RadioCard","RadioGroup","Input","Label","Uploader","UpdateAddress","UpdateContact","DELETE_ADDRESS","DELETE_CARD","DELETE_CONTACT","openModal","useMutation","FormWrapper","Row","Col","Container","FormTitleWrapper","FormTitle","NoteText","Heading","DeliveryAddress","ButtonGroup","Contact","SubmitBtnWrapper","ProfileContext","FormattedMessage","Checkout","state","dispatch","loading","setLoading","isValid","setIsValid","address","contact","medicineNameOne","setMedicineNameOne","quantityOne","setQuantityOne","medicineNameTwo","setMedicineNameTwo","quantityTwo","setQuantityTwo","deleteContactMutation","deleteAddressMutation","deletePaymentCardMutation","handleSubmit","push","handleModal","modalComponent","modalProps","className","show","config","width","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","handleEditDelete","type","name","payload","id","variables","cardId","JSON","stringify","contactId","addressId","inside","outside","e","target","value","info","toString","number"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { Button } from 'components/button/button';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioGroup from 'components/radio-group/radio-group';\nimport { Input } from 'components/forms/input';\nimport { Label } from 'components/forms/label';\nimport Uploader from 'components/upload/upload';\nimport UpdateAddress from 'components/address-card/address-card';\nimport UpdateContact from 'components/contact-card/contact-card';\nimport { DELETE_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation } from '@apollo/react-hooks';\nimport FormWrapper, {\n  Row,\n  Col,\n  Container,\n  FormTitleWrapper,\n  FormTitle,\n  NoteText,\n  Heading,\n  DeliveryAddress,\n  ButtonGroup,\n  Contact,\n  SubmitBtnWrapper,\n} from './request-product.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl';\n\nconst Checkout: React.FC<any> = () => {\n  const { state, dispatch } = useContext(ProfileContext);\n  const [loading, setLoading] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n  const { address, contact } = state;\n\n  const [medicineNameOne, setMedicineNameOne] = useState('');\n  const [quantityOne, setQuantityOne] = useState('');\n  const [medicineNameTwo, setMedicineNameTwo] = useState('');\n  const [quantityTwo, setQuantityTwo] = useState('');\n\n  const [deleteContactMutation] = useMutation(DELETE_CONTACT);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    Router.push('/medicine');\n    setLoading(false);\n  };\n\n  // Add or edit modal\n  const handleModal = (\n    modalComponent: any,\n    modalProps = {},\n    className: string = 'add-address-modal'\n  ) => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className,\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: { item: modalProps },\n    });\n  };\n\n  const handleEditDelete = async (item: any, type: string, name: string) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddress : UpdateContact;\n      handleModal(modalComponent, item);\n    } else {\n      switch (name) {\n        case 'payment':\n          dispatch({ type: 'DELETE_CARD', payload: item.id });\n\n          return await deletePaymentCardMutation({\n            variables: { cardId: JSON.stringify(item.id) },\n          });\n        case 'contact':\n          dispatch({ type: 'DELETE_CONTACT', payload: item.id });\n\n          return await deleteContactMutation({\n            variables: { contactId: JSON.stringify(item.id) },\n          });\n        case 'address':\n          dispatch({ type: 'DELETE_ADDRESS', payload: item.id });\n\n          return await deleteAddressMutation({\n            variables: { addressId: JSON.stringify(item.id) },\n          });\n        default:\n          return false;\n      }\n    }\n  };\n\n  return (\n    <form>\n      <FormWrapper>\n        <Container>\n          <FormTitleWrapper>\n            <FormTitle>\n              <FormattedMessage\n                id='reqMedicine'\n                defaultMessage='Request Medicine'\n              />\n            </FormTitle>\n          </FormTitleWrapper>\n\n          <Heading>\n            <FormattedMessage id='noteHead' defaultMessage='Note' />\n          </Heading>\n\n          <NoteText>\n            <FormattedMessage\n              id='noteDescription'\n              defaultMessage='Product availability &amp; price will confirm over phone. Delivery Charge inside the city ${inside} &amp; outside the city ${outside}.'\n              values={{ inside: 5, outside: 10 }}\n            />\n          </NoteText>\n\n          <Row>\n            <Col xs={12} sm={6} md={6} lg={6}>\n              <Label>\n                <FormattedMessage id='rmMedicineName' />\n              </Label>\n\n              <Input\n                type='text'\n                label='Medicine Name'\n                name='medicine-Name'\n                placeholder='Enter medicine name'\n                value={medicineNameOne}\n                onChange={(e) => setMedicineNameOne(e.target.value)}\n                backgroundColor='#F7F7F7'\n                height='48px'\n              />\n            </Col>\n\n            <Col xs={12} sm={6} md={6} lg={6}>\n              <Label>\n                <FormattedMessage id='rmMedicineQuantity' />\n              </Label>\n\n              <Input\n                type='text'\n                label='Quantity'\n                name='quantity'\n                placeholder='Enter quantity'\n                value={quantityOne}\n                onChange={(e) => setQuantityOne(e.target.value)}\n                backgroundColor='#F7F7F7'\n                height='48px'\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={12} sm={6} md={6} lg={6}>\n              <Label>\n                <FormattedMessage id='rmMedicineName' />\n              </Label>\n\n              <Input\n                type='text'\n                label='Medicine Name'\n                name='medicine-Name'\n                placeholder='Enter medicine name'\n                value={medicineNameTwo}\n                onChange={(e) => setMedicineNameTwo(e.target.value)}\n                backgroundColor='#F7F7F7'\n                height='48px'\n              />\n            </Col>\n\n            <Col xs={12} sm={6} md={6} lg={6}>\n              <Label>\n                <FormattedMessage id='rmMedicineQuantity' />\n              </Label>\n\n              <Input\n                type='text'\n                label='Quantity'\n                name='quantity'\n                placeholder='Enter quantity'\n                value={quantityTwo}\n                onChange={(e) => setQuantityTwo(e.target.value)}\n                backgroundColor='#F7F7F7'\n                height='48px'\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={12} sm={12} md={12} lg={12}>\n              <Heading>\n                <FormattedMessage\n                  id='rmPrescripttionUpload'\n                  defaultMessage='Upload your prescription'\n                />\n              </Heading>\n            </Col>\n            <Col xs={12} sm={12} md={12} lg={12}>\n              <Uploader onChange='' intlUploadText='rmUploadText' />\n            </Col>\n          </Row>\n\n          {/* DeliveryAddress */}\n          <DeliveryAddress>\n            <Heading>\n              <FormattedMessage\n                id='checkoutDeliveryAddress'\n                defaultMessage='Select Your Delivery Address'\n              />\n            </Heading>\n            <ButtonGroup>\n              <RadioGroup\n                items={address}\n                component={(item: any) => (\n                  <RadioCard\n                    id={item.id}\n                    key={item.id}\n                    title={item.name}\n                    content={item.info}\n                    name='address'\n                    checked={item.type === 'primary'}\n                    onChange={() =>\n                      dispatch({\n                        type: 'SET_PRIMARY_ADDRESS',\n                        payload: item.id.toString(),\n                      })\n                    }\n                    onEdit={() => handleEditDelete(item, 'edit', 'address')}\n                    onDelete={() => handleEditDelete(item, 'delete', 'address')}\n                  />\n                )}\n                secondaryComponent={\n                  <Button\n                    size='big'\n                    variant='outlined'\n                    type='button'\n                    className='add-button'\n                    onClick={() =>\n                      handleModal(UpdateAddress, 'add-address-modal')\n                    }\n                  >\n                    <FormattedMessage\n                      id='addAddressBtn'\n                      defaultMessage='Add Adderss'\n                    />\n                  </Button>\n                }\n              />\n            </ButtonGroup>\n          </DeliveryAddress>\n          {/* Contact number */}\n          <Contact>\n            <Heading>\n              <FormattedMessage\n                id='contactNumberText'\n                defaultMessage='Select Your Contact Number'\n              />\n            </Heading>\n            <ButtonGroup>\n              <RadioGroup\n                items={contact}\n                component={(item: any) => (\n                  <RadioCard\n                    id={item.id}\n                    key={item.id}\n                    title={item.type}\n                    content={item.number}\n                    checked={item.type === 'primary'}\n                    onChange={() =>\n                      dispatch({\n                        type: 'SET_PRIMARY_CONTACT',\n                        payload: item.id.toString(),\n                      })\n                    }\n                    name='contact'\n                    onEdit={() => handleEditDelete(item, 'edit', 'contact')}\n                    onDelete={() => handleEditDelete(item, 'delete', 'contact')}\n                  />\n                )}\n                secondaryComponent={\n                  <Button\n                    size='big'\n                    variant='outlined'\n                    type='button'\n                    className='add-button'\n                    onClick={() =>\n                      handleModal(UpdateContact, {}, 'add-contact-modal')\n                    }\n                  >\n                    <FormattedMessage\n                      id='addContactBtn'\n                      defaultMessage='Add Contact'\n                    />\n                  </Button>\n                }\n              />\n            </ButtonGroup>\n          </Contact>\n\n          <SubmitBtnWrapper>\n            <Button\n              type='button'\n              onClick={handleSubmit}\n              size='big'\n              loading={loading}\n              style={{ width: '100%' }}\n            >\n              <FormattedMessage\n                id='submitRequest'\n                defaultMessage='Submit Request'\n              />\n            </Button>\n          </SubmitBtnWrapper>\n        </Container>\n      </FormWrapper>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}