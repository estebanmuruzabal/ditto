{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport var useWindowSize = function useWindowSize() {\n  _s();\n\n  var isClient = true && window.document && window.document.createElement;\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n\n  var _useState = useState(getSize),\n      windowSize = _useState[0],\n      setWindowSize = _useState[1];\n\n  useEffect(function () {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return function () {\n      return window.removeEventListener('resize', handleResize);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n};\n\n_s(useWindowSize, \"BavKeL6E6tNTiGKbwq7Pn4eTing=\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/utils/useWindowSize.ts"],"names":["useState","useEffect","useWindowSize","isClient","window","document","createElement","getSize","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AACjC,MAAMC,QAAQ,GACZ,QACAC,MAAM,CAACC,QADP,IAEAD,MAAM,CAACC,QAAP,CAAgBC,aAHlB;;AAKA,WAASC,OAAT,GAAmB;AACjB,WAAO;AACLC,MAAAA,KAAK,EAAEL,QAAQ,GAAGC,MAAM,CAACK,UAAV,GAAuBC,SADjC;AAELC,MAAAA,MAAM,EAAER,QAAQ,GAAGC,MAAM,CAACQ,WAAV,GAAwBF;AAFnC,KAAP;AAID;;AAXgC,kBAaGV,QAAQ,CAACO,OAAD,CAbX;AAAA,MAa1BM,UAb0B;AAAA,MAadC,aAbc;;AAejCb,EAAAA,SAAS,CAAC,YAAW;AACnB,QAAI,CAACE,QAAL,EAAe;AACb,aAAO,KAAP;AACD;;AAED,aAASY,YAAT,GAAwB;AACtBD,MAAAA,aAAa,CAACP,OAAO,EAAR,CAAb;AACD;;AAEDH,IAAAA,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO;AAAA,aAAMX,MAAM,CAACa,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAN;AAAA,KAAP;AACD,GAXQ,EAWN,EAXM,CAAT,CAfiC,CA0BzB;;AAER,SAAOF,UAAP;AACD,CA7BM;;GAAMX,a","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useWindowSize = () => {\n  const isClient =\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement;\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect((): any => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n};\n"]},"metadata":{},"sourceType":"module"}