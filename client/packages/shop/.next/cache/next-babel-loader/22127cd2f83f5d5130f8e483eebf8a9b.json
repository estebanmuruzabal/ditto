{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/humidity-logs-graph/humidity-logs-graph.tsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { SearchWrapper } from './humidity-logs-graph.style';\nimport GraphChart from 'components/graph-chart/graph-chart';\n\nconst HumidityLogsGraph = (_ref) => {\n  let {\n    data\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"data\"]);\n\n  JSON.stringify(data);\n  let humidities = [];\n  let times = [];\n  Object.keys(data).forEach(function (key, index) {\n    if (data[key].reading >= 0 || data[key].reading <= 100) {\n      humidities.push(data[key].reading);\n      times.push(data[key].timestamp);\n    } // let trimed = data[key]?.timestamp?.substring(0, data[key].timestamp.length - 6);\n\n  });\n  return __jsx(SearchWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(GraphChart // widgetTitle='Humidity history'\n  , {\n    colors: ['#6571f0'],\n    series: humidities,\n    labels: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default HumidityLogsGraph;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/humidity-logs-graph/humidity-logs-graph.tsx"],"names":["React","SearchWrapper","GraphChart","HumidityLogsGraph","data","props","JSON","stringify","humidities","times","Object","keys","forEach","key","index","reading","push","timestamp"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAmD,OAAnD;AAGA,SAAQC,aAAR,QAA8C,6BAA9C;AAGA,OAAOC,UAAP,MAAuB,oCAAvB;;AAMA,MAAMC,iBAAkC,GAAG,UAAyB;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AAAA,MAAbC,KAAa;;AAClEC,EAAAA,IAAI,CAACC,SAAL,CAAeH,IAAf;AACA,MAAII,UAAU,GAAG,EAAjB;AACA,MAAIC,KAAK,GAAG,EAAZ;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYP,IAAZ,EAAkBQ,OAAlB,CAA0B,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC9C,QAAIV,IAAI,CAACS,GAAD,CAAJ,CAAUE,OAAV,IAAqB,CAArB,IAA0BX,IAAI,CAACS,GAAD,CAAJ,CAAUE,OAAV,IAAqB,GAAnD,EAAwD;AACtDP,MAAAA,UAAU,CAACQ,IAAX,CAAgBZ,IAAI,CAACS,GAAD,CAAJ,CAAUE,OAA1B;AACAN,MAAAA,KAAK,CAACO,IAAN,CAAWZ,IAAI,CAACS,GAAD,CAAJ,CAAUI,SAArB;AACD,KAJ6C,CAK9C;;AAGH,GARC;AAUA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,CACE;AADF;AAEE,IAAA,MAAM,EAAE,CAAC,SAAD,CAFV;AAGE,IAAA,MAAM,EAAET,UAHV;AAIE,IAAA,MAAM,EAAE,EAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CAxBD;;AA0BA,eAAeL,iBAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { SearchBox } from 'components/search-box/search-box';\nimport Router,{ useRouter } from 'next/router';\nimport {SearchWrapper, SearchResultWrap} from './humidity-logs-graph.style';\nimport { ILogs } from 'utils/types';\nimport LineChart from 'components/line-chart/line-chart';\nimport GraphChart from 'components/graph-chart/graph-chart';\n\ninterface Props {\n  data?: ILogs;\n}\n\nconst HumidityLogsGraph: React.FC<Props> = ({ data, ...props  }) => {\n  JSON.stringify(data)\n  let humidities = [];\n  let times = [];\n  Object.keys(data).forEach(function (key, index) {\n    if (data[key].reading >= 0 || data[key].reading <= 100) {\n      humidities.push(data[key].reading);\n      times.push(data[key].timestamp);\n    }\n    // let trimed = data[key]?.timestamp?.substring(0, data[key].timestamp.length - 6);\n\n    \n});\n\n  return (\n    <SearchWrapper>\n      <GraphChart\n        // widgetTitle='Humidity history'\n        colors={['#6571f0']}\n        series={humidities}\n        labels={[]}\n      />\n    </SearchWrapper>\n  );\n};\n\nexport default HumidityLogsGraph;\n"]},"metadata":{},"sourceType":"module"}