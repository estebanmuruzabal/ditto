{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/AirTemperatureSensor.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { WeekDays, fourRelaysOptions, manualModeOptions, AirTemperatureSensorMode, airTemperatureSensorModeOptions } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, WeekContainer, DayContainer, TextSpaced, CardButtons, ActionButton, Text, Type, Status, ScheduleTimeContainer, ActionsButtons, Row, ErrorMsg, Porcentage } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';\nimport { getDayShortName, getRelayNameText, getSettingTypeText } from 'utils/sensorUtils';\nimport { CheckMark } from 'assets/icons/CheckMark';\nimport LightReading from './LightReading';\n\nvar AirTemperature = function AirTemperature(_ref) {\n  _s();\n\n  var _setting$relayOneIdRe, _setting$relayOneIdRe2, _setting$relayOneIdRe3, _setting$scheduledOnT, _relayOneSelected$val, _relayOneSelected$val2, _setting$logs;\n\n  var errorId = _ref.errorId,\n      plant = _ref.plant,\n      settingType = _ref.settingType,\n      handleSettingsChange = _ref.handleSettingsChange,\n      onDeleteSchedule = _ref.onDeleteSchedule,\n      data = _ref.data,\n      openTab = _ref.openTab,\n      setOpenTab = _ref.setOpenTab,\n      handleDeleteSensor = _ref.handleDeleteSensor;\n  var setting = plant.sensors.find(function (setting) {\n    return setting.settingType === settingType;\n  });\n\n  var _useState = useState(''),\n      daySelected = _useState[0],\n      setDay = _useState[1];\n\n  var _useState2 = useState(false),\n      editIsOn = _useState2[0],\n      setEditIsOn = _useState2[1];\n\n  var intl = useIntl();\n  var selectedMode = airTemperatureSensorModeOptions.find(function (option) {\n    return option.value === setting.mode;\n  });\n  var selectedManualState = manualModeOptions.find(function (option) {\n    return option.value === setting.relayOneWorking;\n  });\n  var relayOneSelected = fourRelaysOptions.find(function (option) {\n    return option.value === setting.relayOneIdRelated;\n  });\n  var relayTwoSelected = fourRelaysOptions.find(function (option) {\n    return option.value === setting.relayTwoIdRelated;\n  });\n  var selectStyle = {\n    control: function control(styles) {\n      return _objectSpread(_objectSpread({}, styles), {}, {\n        width: '120px',\n        textAlign: 'left'\n      });\n    }\n  }; // const tabIsOpen = openTab === settingType;\n\n  var tabIsOpen = true;\n  var hasRelayAsociated = ((_setting$relayOneIdRe = setting.relayOneIdRelated) === null || _setting$relayOneIdRe === void 0 ? void 0 : _setting$relayOneIdRe.length) > 0;\n\n  var handleModal = function handleModal(modalComponent) {\n    var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'add-time-schedule-modal';\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  console.log('setting', setting);\n  return __jsx(PlantsSensorContainer, {\n    style: {\n      height: tabIsOpen ? '100%' : '66px'\n    },\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      setOpenTab(tabIsOpen ? '' : settingType);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, __jsx(Type, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, getSettingTypeText(setting === null || setting === void 0 ? void 0 : setting.settingType)), !hasRelayAsociated && __jsx(Type, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 46\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"fillModeAndRelayToWork\",\n    defaultMessage: \"fillModeAndRelayToWork\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 53\n    }\n  }))), __jsx(ListDes, {\n    style: {\n      marginLeft: '-10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, __jsx(CardButtons, {\n    className: \"button-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, editIsOn ? __jsx(ActionButton, {\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      setEditIsOn(!editIsOn);\n    },\n    className: \"edit-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, __jsx(CheckMark, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  })) : __jsx(ActionButton, {\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      setEditIsOn(!editIsOn);\n    },\n    className: \"edit-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, __jsx(PencilIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  })), __jsx(ActionButton, {\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      handleDeleteSensor(plant, settingType);\n    },\n    className: \"delete-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, __jsx(CloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }))))), (setting === null || setting === void 0 ? void 0 : setting.mode) === AirTemperatureSensorMode.NONE && !!openTab && __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, __jsx(Status, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"modoRequiredWarningText\",\n    defaultMessage: \"modoRequiredWarningText\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }), \" \")), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"airTempetureId\",\n    defaultMessage: \"airTempetureId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, __jsx(LightReading, {\n    settingType: settingType,\n    plant: plant,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"plantName\",\n    defaultMessage: \"plantName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, editIsOn ? __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    value: setting.name,\n    placeholder: intl.formatMessage({\n      id: 'plantNameRequiredNameId',\n      defaultMessage: 'plantNameRequiredNameId'\n    }),\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'name', e.target.value, settingType);\n    },\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\" // intlInputLabelId=\"profileEmailField\"\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, setting === null || setting === void 0 ? void 0 : setting.name))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"modeId\",\n    defaultMessage: \"modeId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'mode', e.value, settingType);\n    },\n    value: selectedMode,\n    options: airTemperatureSensorModeOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }) : __jsx(Text, {\n    style: {\n      width: 'max-content'\n    },\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, (selectedMode === null || selectedMode === void 0 ? void 0 : selectedMode.value.length) > 1 ? selectedMode.label : '-'))), (setting === null || setting === void 0 ? void 0 : setting.mode) === AirTemperatureSensorMode.MANUAL && __jsx(React.Fragment, null, __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"manualModeStateId\",\n    defaultMessage: \"manualModeStateId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, __jsx(Switch, {\n    disabled: false,\n    checked: setting.relayOneWorking,\n    labelPosition: 'right' // className,\n    ,\n    onUpdate: function onUpdate() {\n      return handleSettingsChange(plant, 'relayOneWorking', !setting.relayOneWorking, settingType);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }))), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: ((_setting$relayOneIdRe2 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe2 === void 0 ? void 0 : _setting$relayOneIdRe2.length) ? 'asociatedRelayId' : 'asociateRelayId',\n    defaultMessage: ((_setting$relayOneIdRe3 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe3 === void 0 ? void 0 : _setting$relayOneIdRe3.length) ? 'asociatedRelayId' : 'asociateRelayId',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType);\n    },\n    value: relayOneSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 33\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated) : '-', \"  \", (setting === null || setting === void 0 ? void 0 : setting.relayOneWorking) ? '[ON]' : '[OFF]')))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"notifyChangesId\",\n    defaultMessage: \"notifyChangesId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, __jsx(Switch, {\n    disabled: false,\n    checked: setting.whatsappWarningsOn,\n    labelPosition: 'right' // className,\n    ,\n    onUpdate: function onUpdate() {\n      return handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }))), setting.mode === AirTemperatureSensorMode.SCHEDULE && hasRelayAsociated && __jsx(React.Fragment, null, __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"manualModeStateId\",\n    defaultMessage: \"manualModeStateId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: setting.relayOneWorking ? 'manualModeStateOnId' : 'manualModeStateOffId',\n    defaultMessage: \"noDefaultOnOffMsg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  })))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"notifyChangesId\",\n    defaultMessage: \"notifyChangesId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, __jsx(Switch, {\n    disabled: false,\n    checked: setting.whatsappWarningsOn,\n    labelPosition: 'right' // className,\n    ,\n    onUpdate: function onUpdate() {\n      return handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }))), setting === null || setting === void 0 ? void 0 : (_setting$scheduledOnT = setting.scheduledOnTimes) === null || _setting$scheduledOnT === void 0 ? void 0 : _setting$scheduledOnT.map(function (schedule, i) {\n    return __jsx(WeekContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 25\n      }\n    }, __jsx(ListDes, {\n      style: {\n        flexDirection: 'row',\n        display: 'flex',\n        paddingBottom: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }, WeekDays.map(function (day) {\n      return __jsx(DayContainer, {\n        key: day + '-day-airtemp-1-container',\n        style: {\n          backgroundColor: schedule.daysToRepeat.includes(day) ? '#c2b0b0' : 'transparent'\n        } // onClick={() => setDay(day)}\n        ,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 41\n        }\n      }, getDayShortName(day));\n    })), __jsx(ScheduleTimeContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    }, __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 33\n      }\n    }, \" \", __jsx(FormattedMessage, {\n      id: \"desdeId\",\n      defaultMessage: \"desdeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 46\n      }\n    }), \" \"), __jsx(TextSpaced, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 33\n      }\n    }, schedule.startTime), __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 33\n      }\n    }, \" \", __jsx(FormattedMessage, {\n      id: \"aId\",\n      defaultMessage: \"aId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 46\n      }\n    }), \" \"), __jsx(TextSpaced, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 33\n      }\n    }, schedule.endTime), __jsx(ActionsButtons, {\n      className: \"button-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }, __jsx(ActionButton, {\n      onClick: function onClick() {\n        var _data$getUser;\n\n        return handleModal(AddTimeSchedule, {\n          settingType: settingType,\n          plant: plant,\n          id: data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : _data$getUser.id,\n          schedulePosition: i\n        });\n      },\n      className: \"edit-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 37\n      }\n    }, __jsx(PencilIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 41\n      }\n    })), __jsx(ActionButton, {\n      onClick: function onClick() {\n        return onDeleteSchedule(plant, settingType, i);\n      },\n      className: \"delete-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 37\n      }\n    }, __jsx(CloseIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 41\n      }\n    }))), __jsx(TextSpaced, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 33\n      }\n    }, schedule.enabled ? '' : '⏹️'), __jsx(TextSpaced, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 33\n      }\n    }, schedule.smartLight ? '🔆' : '')));\n  }), __jsx(Button, {\n    size: \"small\",\n    variant: \"outlined\",\n    type: \"button\",\n    style: {\n      marginLeft: '10px'\n    },\n    className: \"add-button\",\n    onClick: function onClick() {\n      var _data$getUser2;\n\n      return handleModal(AddTimeSchedule, {\n        name: 'add-Temperature-1-schedule',\n        plant: plant,\n        id: data === null || data === void 0 ? void 0 : (_data$getUser2 = data.getUser) === null || _data$getUser2 === void 0 ? void 0 : _data$getUser2.id,\n        settingType: settingType\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"addTimeScheduleId\",\n    defaultMessage: \"addTimeScheduleId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  }))), setting.mode === AirTemperatureSensorMode.WHEN_MAX_ACTION_AUTOMATED && __jsx(React.Fragment, null, __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"maxHumidityId\",\n    defaultMessage: \"maxHumidityId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 33\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"maxWarning\",\n    value: setting.maxWarning,\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'maxWarning', e.target.value, settingType);\n    },\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    width: \"45px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 37\n    }\n  }), __jsx(Porcentage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 37\n    }\n  }, \"%\")) : __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 33\n    }\n  }, setting.maxWarning >= 0 && setting.maxWarning <= 100 ? setting === null || setting === void 0 ? void 0 : setting.maxWarning : '-', \" %\"), errorId === 'maxWarning' && __jsx(ErrorMsg, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minMaxWarningId\",\n    defaultMessage: \"minMaxWarningId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 37\n    }\n  })))), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: (relayOneSelected === null || relayOneSelected === void 0 ? void 0 : (_relayOneSelected$val = relayOneSelected.value) === null || _relayOneSelected$val === void 0 ? void 0 : _relayOneSelected$val.length) > 0 ? 'asociatedToId' : 'asociateRelayToId',\n    defaultMessage: \"asociateRelayToId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType);\n    },\n    value: relayOneSelected,\n    options: fourRelaysOptions // inputFocusOnClick={false}\n    // focusInputOnMenuOpen={false}\n    ,\n    isSearchable: false,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 33\n    }\n  }) : __jsx(React.Fragment, null, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 37\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated) : '-', \"  \", (setting === null || setting === void 0 ? void 0 : setting.relayOneWorking) ? '[ON]' : '[OFF]'))))), setting.mode === AirTemperatureSensorMode.WHEN_MIN_ACTION_AUTOMATED && __jsx(React.Fragment, null, __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minHumidityId\",\n    defaultMessage: \"minHumidityId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 33\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"minWarning\",\n    value: setting.minWarning,\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'minWarning', e.target.value, settingType);\n    },\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    width: \"45px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 37\n    }\n  }), __jsx(Porcentage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 37\n    }\n  }, \"%\")) : __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 33\n    }\n  }, setting.minWarning >= 0 && setting.minWarning <= 100 ? setting === null || setting === void 0 ? void 0 : setting.minWarning : '-', \" %\"), errorId === 'minWarning' && __jsx(ErrorMsg, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minMaxWarningId\",\n    defaultMessage: \"minMaxWarningId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 37\n    }\n  })))), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: (relayOneSelected === null || relayOneSelected === void 0 ? void 0 : (_relayOneSelected$val2 = relayOneSelected.value) === null || _relayOneSelected$val2 === void 0 ? void 0 : _relayOneSelected$val2.length) > 0 ? 'asociatedToId' : 'asociateRelayToId',\n    defaultMessage: \"asociateRelayToId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType);\n    },\n    value: relayOneSelected,\n    options: fourRelaysOptions // inputFocusOnClick={false}\n    // focusInputOnMenuOpen={false}\n    ,\n    isSearchable: false,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 33\n    }\n  }) : __jsx(React.Fragment, null, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 37\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated) : '-', \"  \", (setting === null || setting === void 0 ? void 0 : setting.relayOneWorking) ? '[ON]' : '[OFF]'))))), (setting === null || setting === void 0 ? void 0 : (_setting$logs = setting.logs) === null || _setting$logs === void 0 ? void 0 : _setting$logs.length) > 0 && hasRelayAsociated && __jsx(HumidityLogsGraph, {\n    data: setting.logs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 69\n    }\n  }));\n};\n\n_s(AirTemperature, \"D8IzV612IqGXyTJMltovwMtYI/s=\", false, function () {\n  return [useIntl];\n});\n\n_c = AirTemperature;\nexport default AirTemperature;\n\nvar _c;\n\n$RefreshReg$(_c, \"AirTemperature\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/AirTemperatureSensor.tsx"],"names":["React","useState","CloseIcon","PencilIcon","Button","Switch","FormattedMessage","useIntl","Select","Input","WeekDays","fourRelaysOptions","manualModeOptions","AirTemperatureSensorMode","airTemperatureSensorModeOptions","HumidityLogsGraph","PlantsSensorContainer","ListItem","ListTitle","ListDes","WeekContainer","DayContainer","TextSpaced","CardButtons","ActionButton","Text","Type","Status","ScheduleTimeContainer","ActionsButtons","Row","ErrorMsg","Porcentage","openModal","AddTimeSchedule","getDayShortName","getRelayNameText","getSettingTypeText","CheckMark","LightReading","AirTemperature","errorId","plant","settingType","handleSettingsChange","onDeleteSchedule","data","openTab","setOpenTab","handleDeleteSensor","setting","sensors","find","daySelected","setDay","editIsOn","setEditIsOn","intl","selectedMode","option","value","mode","selectedManualState","relayOneWorking","relayOneSelected","relayOneIdRelated","relayTwoSelected","relayTwoIdRelated","selectStyle","control","styles","width","textAlign","tabIsOpen","hasRelayAsociated","length","handleModal","modalComponent","modalProps","className","show","config","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","console","log","e","stopPropagation","justifyContent","marginLeft","NONE","name","formatMessage","id","defaultMessage","target","label","MANUAL","whatsappWarningsOn","SCHEDULE","scheduledOnTimes","map","schedule","i","flexDirection","display","paddingBottom","day","backgroundColor","daysToRepeat","includes","startTime","endTime","getUser","schedulePosition","enabled","smartLight","WHEN_MAX_ACTION_AUTOMATED","maxWarning","WHEN_MIN_ACTION_AUTOMATED","minWarning","logs"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { SearchBox } from 'components/search-box/search-box';\nimport Router,{ useRouter } from 'next/router';\nimport LineChart from 'components/line-chart/line-chart';\nimport GraphChart from 'components/graph-chart/graph-chart';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { SensorsTypes, HumiditySensorMode, WeekDays, fourRelaysOptions, manualModeOptions, AirTemperatureSensorMode, airHumiditySensorModeOptions, airTemperatureSensorModeOptions } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, InputUpper, WeekContainer, DayContainer, ScheduleTime, TextSpaced, CardButtons, ActionButton, Text, ButtonText, Type, Status, ScheduleTimeContainer, ActionsButtons, Row, ErrorMsg, Porcentage } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';  \nimport { ISetting } from 'utils/types';\nimport { getDayShortName, getRelayNameText, getSettingTypeText } from 'utils/sensorUtils';\nimport { CheckMark } from 'assets/icons/CheckMark';\nimport Reading from './HumidityReading';\nimport LightReading from './LightReading';\n\ninterface Props {\n  data?: any;\n  plant: any;\n  settingType: SensorsTypes;\n  openTab: string;\n  errorId: string;\n  setOpenTab: (settingType: string) => void;\n  handleSettingsChange: (plant: any, field: string, value: string | boolean, settingType: SensorsTypes) => void;\n  onDeleteSchedule: (plant: any, settingType: SensorsTypes, position: number) => void;\n  handleDeleteSensor: (plant: any, settingType: string) => void;\n}\n\nconst AirTemperature: React.FC<Props> = ({ errorId, plant, settingType, handleSettingsChange, onDeleteSchedule, data, openTab, setOpenTab, handleDeleteSensor }) => {\n    const setting = plant.sensors.find((setting: ISetting) => setting.settingType === settingType);\n    const [daySelected, setDay] = useState('');\n    const [editIsOn, setEditIsOn] = useState(false);\n    const intl = useIntl();\n    const selectedMode = airTemperatureSensorModeOptions.find((option) => option.value === setting.mode);\n    const selectedManualState = manualModeOptions.find((option) => option.value === setting.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === setting.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find((option) => option.value === setting.relayTwoIdRelated);\n    const selectStyle = { control: styles => ({ ...styles, width: '120px', textAlign: 'left' }) };\n    // const tabIsOpen = openTab === settingType;\n    const tabIsOpen = true;\n    const hasRelayAsociated = setting.relayOneIdRelated?.length > 0;\n    const handleModal = (\n        modalComponent: any,\n        modalProps = {},\n        className: string = 'add-time-schedule-modal'\n        ) => {\n        openModal({\n            show: true,\n            config: {\n            width: 360,\n            height: 'auto',\n            enableResizing: false,\n            disableDragging: true,\n            className: className,\n            },\n            closeOnClickOutside: true,\n            component: modalComponent,\n            componentProps: { item: modalProps },\n        });\n    };\nconsole.log('setting', setting)\n    return (\n        <PlantsSensorContainer style={{ height: tabIsOpen ? '100%' : '66px' }} onClick={(e) => { e.stopPropagation(); setOpenTab(tabIsOpen ? '' : settingType); }}>\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Type bold>{getSettingTypeText(setting?.settingType)}</Type>\n                    { !hasRelayAsociated && (<Type>{<FormattedMessage id=\"fillModeAndRelayToWork\" defaultMessage=\"fillModeAndRelayToWork\" />}</Type>)}\n                </ListTitle>\n                <ListDes style={{ marginLeft: '-10px' }}>\n                    <CardButtons className='button-wrapper'>\n                        { editIsOn ? (\n                            <ActionButton onClick={(e) => { e.stopPropagation(); setEditIsOn(!editIsOn); }} className='edit-btn'>\n                                <CheckMark />\n                            </ActionButton>\n                        ) : (\n                            <ActionButton onClick={(e) => { e.stopPropagation(); setEditIsOn(!editIsOn); }} className='edit-btn'>\n                                <PencilIcon />\n                            </ActionButton>\n                        )}\n                        <ActionButton onClick={(e) => { e.stopPropagation(); handleDeleteSensor(plant, settingType); }} className='delete-btn'>\n                            <CloseIcon />\n                        </ActionButton>\n                    </CardButtons>\n                </ListDes>\n            </ListItem>\n\n\n            { (setting?.mode === AirTemperatureSensorMode.NONE && !!openTab) && (\n                <ListItem>\n                    <Status><FormattedMessage id=\"modoRequiredWarningText\" defaultMessage=\"modoRequiredWarningText\" /> </Status>\n                </ListItem>\n            )}\n\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text>\n                <FormattedMessage\n                  id=\"airTempetureId\"\n                  defaultMessage=\"airTempetureId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes>\n                <LightReading\n                    settingType={settingType}\n                    plant={plant}\n                />\n              {/* <Text bold>{setting?.reading} % {setting?.reading < 40 ? '🌙' : '💡'}</Text> */}\n            </ListDes>\n          </ListItem>\n  \n          <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Text>\n                    <FormattedMessage\n                        id=\"plantName\"\n                        defaultMessage=\"plantName\"\n                    />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    { editIsOn ? (\n                        <Input\n                            type='text'\n                            name='name'\n                            value={setting.name}\n                            placeholder={intl.formatMessage({ id: 'plantNameRequiredNameId', defaultMessage: 'plantNameRequiredNameId' })}\n                            onChange={(e: any) => handleSettingsChange(plant, 'name', e.target.value, settingType)}\n                            backgroundColor='#F7F7F7'\n                            height='34.5px'\n                            // intlInputLabelId=\"profileEmailField\"\n                        />\n                    ) : (\n                        <Text bold>{setting?.name}</Text>\n                    )}\n                </ListDes>\n            </ListItem>\n\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text>\n                <FormattedMessage\n                  id=\"modeId\"\n                  defaultMessage=\"modeId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes>\n                { editIsOn ? (\n                    <Select \n                        onChange={(e: any) => handleSettingsChange(plant, 'mode', e.value, settingType)}\n                        value={selectedMode}\n                        options={airTemperatureSensorModeOptions}\n                        styles={selectStyle}\n                        menuPosition={'fixed'}\n                    />\n                ) : (\n                    <Text style={{ width: 'max-content' }} bold>{selectedMode?.value.length > 1 ? selectedMode.label : '-'}</Text>\n                )}\n            </ListDes>\n          </ListItem>\n  \n  \n          { (setting?.mode === AirTemperatureSensorMode.MANUAL) && (\n            <>\n                <ListItem style={{ justifyContent: 'flex-start' }}>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='manualModeStateId'\n                                defaultMessage='manualModeStateId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            <Switch \n                                disabled={false}\n                                checked={setting.relayOneWorking}\n                                labelPosition={'right'}\n                                // className,\n                                onUpdate={() => handleSettingsChange(plant, 'relayOneWorking', !setting.relayOneWorking, settingType)}\n                            />\n\n                        </ListDes>\n                    </ListItem>\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n                                defaultMessage={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                        { editIsOn ? (\n                                <Select \n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                                    value={relayOneSelected}\n                                    options={fourRelaysOptions}\n                                    styles={selectStyle}\n                                    menuPosition={'fixed'}\n                                />\n                            ) : (\n                                <Text bold>{setting?.relayOneIdRelated.length > 1 ? getRelayNameText(setting?.relayOneIdRelated) : '-'}  {setting?.relayOneWorking ? '[ON]' : '[OFF]'}</Text>\n                            )}\n                        </ListDes>\n                    </ListItem>\n            </>\n          )}\n\n\n        <ListItem style={{ justifyContent: 'flex-start' }}>\n                    <ListTitle>\n                    <Text>\n                        <FormattedMessage\n                        id=\"notifyChangesId\"\n                        defaultMessage=\"notifyChangesId\"\n                        />\n                    </Text>\n                    </ListTitle>\n                    <ListDes>\n                        <Switch \n                            disabled={false}\n                            checked={setting.whatsappWarningsOn}\n                            labelPosition={'right'}\n                            // className,\n                            onUpdate={() => handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType)}\n                        />\n                    </ListDes>\n                </ListItem>\n\n          { ((setting.mode === AirTemperatureSensorMode.SCHEDULE) && hasRelayAsociated) && (\n            <>\n              <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                <Text>\n                    <FormattedMessage\n                    id=\"manualModeStateId\"\n                    defaultMessage=\"manualModeStateId\"\n                    />\n                </Text>\n                </ListTitle>\n                <ListDes>\n                    <Text  bold> \n                        <FormattedMessage\n                        id={setting.relayOneWorking ? 'manualModeStateOnId' : 'manualModeStateOffId'}\n                        defaultMessage='noDefaultOnOffMsg'\n                        />\n                    </Text>\n                    </ListDes>\n                </ListItem>\n\n                <ListItem style={{ justifyContent: 'flex-start' }}>\n                    <ListTitle>\n                    <Text>\n                        <FormattedMessage\n                        id=\"notifyChangesId\"\n                        defaultMessage=\"notifyChangesId\"\n                        />\n                    </Text>\n                    </ListTitle>\n                    <ListDes>\n                        <Switch \n                            disabled={false}\n                            checked={setting.whatsappWarningsOn}\n                            labelPosition={'right'}\n                            // className,\n                            onUpdate={() => handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType)}\n                        />\n                    </ListDes>\n                </ListItem>\n\n                { setting?.scheduledOnTimes?.map((schedule: any, i: number) => {\n                    return (\n                        <WeekContainer>\n                            <ListDes style={{ flexDirection: 'row', display: 'flex', paddingBottom: '10px' }} >\n                                {WeekDays.map((day: any) => {\n                                    return (\n                                        <DayContainer\n                                            key={day + '-day-airtemp-1-container'}\n                                            style={{ backgroundColor: schedule.daysToRepeat.includes(day) ? '#c2b0b0' : 'transparent' }}\n                                            // onClick={() => setDay(day)}\n                                        >\n                                            {getDayShortName(day)}\n                                        </DayContainer>\n                                        )\n                                    })\n                                }\n                            </ListDes>\n                            <ScheduleTimeContainer>\n                                <TextSpaced> <FormattedMessage id='desdeId' defaultMessage='desdeId' /> </TextSpaced> \n                                <TextSpaced bold>{schedule.startTime}</TextSpaced>\n                                <TextSpaced> <FormattedMessage id='aId' defaultMessage='aId' /> </TextSpaced> \n                                <TextSpaced bold>{schedule.endTime}</TextSpaced>\n                                <ActionsButtons className='button-wrapper'>\n                                    <ActionButton onClick={() => handleModal( AddTimeSchedule, { settingType: settingType, plant, id: data?.getUser?.id, schedulePosition: i } )} className='edit-btn'>\n                                        <PencilIcon />\n                                    </ActionButton>\n\n                                    <ActionButton onClick={() => onDeleteSchedule(plant, settingType, i)} className='delete-btn'>\n                                        <CloseIcon />\n                                    </ActionButton>\n                                </ActionsButtons>\n                                {/* 💤🤖 ❌🚫⛔️✅🔆⏹️ */}\n                                <TextSpaced bold>{schedule.enabled ? '' : '⏹️'}</TextSpaced>\n                                <TextSpaced bold>{schedule.smartLight ? '🔆' : ''}</TextSpaced>\n                            </ScheduleTimeContainer>\n                        </WeekContainer>\n                    )\n                })}\n\n                <Button\n                    size='small'\n                    variant='outlined'\n                    type='button'\n                    style={{marginLeft: '10px'}}\n                    className='add-button'\n                    onClick={() => handleModal(\n                        AddTimeSchedule,  { name: 'add-Temperature-1-schedule', plant, id: data?.getUser?.id, settingType } )}\n                >\n                    <FormattedMessage id='addTimeScheduleId' defaultMessage='addTimeScheduleId' />\n                </Button>\n            </>\n            )}\n\n            { setting.mode === AirTemperatureSensorMode.WHEN_MAX_ACTION_AUTOMATED && (\n                <>\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='maxHumidityId'\n                                defaultMessage='maxHumidityId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Row>\n                                    <Input\n                                        type='number'\n                                        name='maxWarning'\n                                        value={setting.maxWarning}\n                                        onChange={(e: any) => handleSettingsChange(plant, 'maxWarning', e.target.value, settingType)}\n                                        backgroundColor='#F7F7F7'\n                                        height='34.5px'\n                                        width='45px'\n                                    />\n                                    <Porcentage>%</Porcentage>\n                                </Row>\n                            ) : (\n                                <Text bold>{(setting.maxWarning >= 0 && setting.maxWarning <= 100) ? setting?.maxWarning : '-'} %</Text>\n                            )}\n                            {errorId === 'maxWarning' && (\n                                <ErrorMsg>\n                                    <FormattedMessage id=\"minMaxWarningId\" defaultMessage=\"minMaxWarningId\" />\n                                </ErrorMsg>\n                            )}\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id={relayOneSelected?.value?.length > 0 ? 'asociatedToId' : 'asociateRelayToId'}\n                                defaultMessage='asociateRelayToId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Select \n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                                    value={relayOneSelected}\n                                    options={fourRelaysOptions}\n                                    // inputFocusOnClick={false}\n                                    // focusInputOnMenuOpen={false}\n                                    isSearchable={false}\n                                    styles={selectStyle}\n                                    menuPosition={'fixed'}\n                                />\n                            ) : (\n                                <>\n                            {/* <Reading> */}\n                            {/* <Reading> */}\n                                    <Text bold>{setting?.relayOneIdRelated.length > 1 ? getRelayNameText(setting?.relayOneIdRelated) : '-'}  {setting?.relayOneWorking ? '[ON]' : '[OFF]'}</Text>\n                                    {/* <Reading> */}\n                            {/* <Reading> */}\n                                </>\n                            )}\n                        </ListDes>\n                    </ListItem>\n                </>\n            )}\n            { setting.mode === AirTemperatureSensorMode.WHEN_MIN_ACTION_AUTOMATED && (\n                <>\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='minHumidityId'\n                                defaultMessage='minHumidityId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Row>\n                                    <Input\n                                        type='number'\n                                        name='minWarning'\n                                        value={setting.minWarning}\n                                        onChange={(e: any) => handleSettingsChange(plant, 'minWarning', e.target.value, settingType)}\n                                        backgroundColor='#F7F7F7'\n                                        height='34.5px'\n                                        width='45px'\n                                    />\n                                    <Porcentage>%</Porcentage>\n                                </Row>\n                            ) : (\n                                <Text bold>{(setting.minWarning >= 0 && setting.minWarning <= 100) ? setting?.minWarning : '-'} %</Text>\n                            )}\n                            {errorId === 'minWarning' && (\n                                <ErrorMsg>\n                                    <FormattedMessage id=\"minMaxWarningId\" defaultMessage=\"minMaxWarningId\" />\n                                </ErrorMsg>\n                            )}\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id={relayOneSelected?.value?.length > 0 ? 'asociatedToId' : 'asociateRelayToId'}\n                                defaultMessage='asociateRelayToId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Select \n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                                    value={relayOneSelected}\n                                    options={fourRelaysOptions}\n                                    // inputFocusOnClick={false}\n                                    // focusInputOnMenuOpen={false}\n                                    isSearchable={false}\n                                    styles={selectStyle}\n                                    menuPosition={'fixed'}\n                                />\n                            ) : (\n                                <>\n                            {/* <Reading> */}\n                            {/* <Reading> */}\n                                    <Text bold>{setting?.relayOneIdRelated.length > 1 ? getRelayNameText(setting?.relayOneIdRelated) : '-'}  {setting?.relayOneWorking ? '[ON]' : '[OFF]'}</Text>\n                                    {/* <Reading> */}\n                            {/* <Reading> */}\n                                </>\n                            )}\n                        </ListDes>\n                    </ListItem>\n                </>\n                )}\n\n            { (setting?.logs?.length > 0 && hasRelayAsociated) && ( <HumidityLogsGraph data={setting.logs} /> )}\n        </PlantsSensorContainer>\n      )\n};\n\nexport default AirTemperature;\n"]},"metadata":{},"sourceType":"module"}