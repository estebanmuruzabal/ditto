{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/popover-bigger/popover-bigger.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport useOnClickOutside from './useOnClickOutside';\nimport PopoverBiggerWrapper from './popover-bigger.style';\n\nvar PopoverBigger = function PopoverBigger(_ref) {\n  _s();\n\n  var className = _ref.className,\n      openHandler = _ref.openHandler,\n      closeHandler = _ref.closeHandler,\n      content = _ref.content,\n      direction = _ref.direction,\n      closeModal = _ref.closeModal;\n\n  // PopoverBigger State\n  var _useState = useState(false),\n      state = _useState[0],\n      setState = _useState[1]; // Ref\n\n\n  var ref = useRef(); // Add all classs to an array\n\n  var addAllClasses = ['popover-wrapper']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  } // Add direction class on popover content\n\n\n  if (direction) {\n    addAllClasses.push(direction);\n  } // Toggle PopoverBigger content\n\n\n  var handleToggle = function handleToggle(e) {\n    e.stopPropagation();\n    setState(function (state) {\n      return !state;\n    });\n  }; // Handle document click\n\n\n  var handleDocumentClick = function handleDocumentClick(e) {\n    e.stopPropagation();\n\n    if (state) {\n      handleToggle(e);\n    }\n  }; // Handle window event listener\n\n\n  useEffect(function () {\n    window.addEventListener('click', handleDocumentClick);\n    return function () {\n      window.removeEventListener('click', handleDocumentClick);\n    };\n  }); // Close popover on click outside\n\n  useOnClickOutside(ref, function () {\n    return setState(function (state) {\n      return false;\n    });\n  });\n  return __jsx(PopoverBiggerWrapper, {\n    className: addAllClasses.join(' '),\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"popover-handler\",\n    onClick: handleToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, state ? openHandler : closeHandler), state && __jsx(\"div\", {\n    className: \"popover-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, content && __jsx(\"div\", {\n    className: \"inner-wrap\",\n    onClick: handleToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, content(handleToggle))));\n};\n\n_s(PopoverBigger, \"6keVeuQQL4WjJKTEtI+7g/SUw/c=\", false, function () {\n  return [useOnClickOutside];\n});\n\n_c = PopoverBigger;\nexport default PopoverBigger;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopoverBigger\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/popover-bigger/popover-bigger.tsx"],"names":["React","useState","useEffect","useRef","useOnClickOutside","PopoverBiggerWrapper","PopoverBigger","className","openHandler","closeHandler","content","direction","closeModal","state","setState","ref","addAllClasses","push","handleToggle","e","stopPropagation","handleDocumentClick","window","addEventListener","removeEventListener","join"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAWA,IAAMC,aAA2C,GAAG,SAA9CA,aAA8C,OAO9C;AAAA;;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,WAKI,QALJA,WAKI;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,UACI,QADJA,UACI;;AACJ;AADI,kBAEsBX,QAAQ,CAAC,KAAD,CAF9B;AAAA,MAEGY,KAFH;AAAA,MAEUC,QAFV,iBAIJ;;;AACA,MAAMC,GAAG,GAAGZ,MAAM,EAAlB,CALI,CAOJ;;AACA,MAAMa,aAAuB,GAAG,CAAC,iBAAD,CAAhC,CARI,CAUJ;;AACA,MAAIT,SAAJ,EAAe;AACbS,IAAAA,aAAa,CAACC,IAAd,CAAmBV,SAAnB;AACD,GAbG,CAeJ;;;AACA,MAAII,SAAJ,EAAe;AACbK,IAAAA,aAAa,CAACC,IAAd,CAAmBN,SAAnB;AACD,GAlBG,CAoBJ;;;AACA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BA,IAAAA,CAAC,CAACC,eAAF;AACAN,IAAAA,QAAQ,CAAC,UAACD,KAAD;AAAA,aAAW,CAACA,KAAZ;AAAA,KAAD,CAAR;AACD,GAHD,CArBI,CA0BJ;;;AACA,MAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACF,CAAD,EAAO;AACjCA,IAAAA,CAAC,CAACC,eAAF;;AACA,QAAIP,KAAJ,EAAW;AACTK,MAAAA,YAAY,CAACC,CAAD,CAAZ;AACD;AACF,GALD,CA3BI,CAkCJ;;;AACAjB,EAAAA,SAAS,CAAC,YAAM;AACdoB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCF,mBAAjC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCH,mBAApC;AACD,KAFD;AAGD,GALQ,CAAT,CAnCI,CA0CJ;;AACAjB,EAAAA,iBAAiB,CAACW,GAAD,EAAM;AAAA,WAAMD,QAAQ,CAAC,UAACD,KAAD;AAAA,aAAW,KAAX;AAAA,KAAD,CAAd;AAAA,GAAN,CAAjB;AAEA,SACE,MAAC,oBAAD;AAAsB,IAAA,SAAS,EAAEG,aAAa,CAACS,IAAd,CAAmB,GAAnB,CAAjC;AAA0D,IAAA,GAAG,EAAEV,GAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,OAAO,EAAEG,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIL,KAAK,GAAGL,WAAH,GAAiBC,YAD1B,CADF,EAIGI,KAAK,IACJ;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,IACN;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAEQ,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,OAAO,CAACQ,YAAD,CADV,CAFJ,CALJ,CADF;AAgBD,CApED;;GAAMZ,a;UAkDJF,iB;;;KAlDIE,a;AAsEN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport useOnClickOutside from './useOnClickOutside';\nimport PopoverBiggerWrapper from './popover-bigger.style';\n\ntype PopoverBiggerProps = {\n  className?: string;\n  openHandler: React.ReactNode;\n  closeHandler: React.ReactNode;\n  content: any;\n  direction?: 'left' | 'right';\n  handleToggle?: () => void;\n};\n\nconst PopoverBigger: React.FC<PopoverBiggerProps> = ({\n  className,\n  openHandler,\n  closeHandler,\n  content,\n  direction,\n  closeModal\n}) => {\n  // PopoverBigger State\n  const [state, setState] = useState(false);\n\n  // Ref\n  const ref = useRef();\n\n  // Add all classs to an array\n  const addAllClasses: string[] = ['popover-wrapper'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  // Add direction class on popover content\n  if (direction) {\n    addAllClasses.push(direction);\n  }\n\n  // Toggle PopoverBigger content\n  const handleToggle = (e) => {\n    e.stopPropagation();\n    setState((state) => !state);\n  };\n\n  // Handle document click\n  const handleDocumentClick = (e) => {\n    e.stopPropagation();\n    if (state) {\n      handleToggle(e);\n    }\n  };\n\n  // Handle window event listener\n  useEffect(() => {\n    window.addEventListener('click', handleDocumentClick);\n    return () => {\n      window.removeEventListener('click', handleDocumentClick);\n    };\n  });\n\n  // Close popover on click outside\n  useOnClickOutside(ref, () => setState((state) => false));\n\n  return (\n    <PopoverBiggerWrapper className={addAllClasses.join(' ')} ref={ref}>\n      <div className=\"popover-handler\" onClick={handleToggle}>\n        { state ? openHandler : closeHandler}\n      </div>\n      {state && (\n        <div className=\"popover-content\">\n          {content && (\n            <div className=\"inner-wrap\" onClick={handleToggle}>\n              {content(handleToggle)}\n            </div>\n          )}\n        </div>\n      )}\n    </PopoverBiggerWrapper>\n  );\n};\n\nexport default PopoverBigger;\n"]},"metadata":{},"sourceType":"module"}