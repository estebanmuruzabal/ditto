{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/SoilHumiditySensor.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { HumiditySensorMode, WeekDays, fourRelaysOptions, humidityModeOptions, manualModeOptions } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, WeekContainer, DayContainer, TextSpaced, CardButtons, ActionButton, Text, Status, Type, ActionsButtons, Row, ScheduleTimeContainer, ErrorMsg, Porcentage } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';\nimport { CheckMark } from 'assets/icons/CheckMark';\nimport { getDayShortName, getRelayNameText, getSettingTypeText } from 'utils/sensorUtils';\nimport HumidityReading from './HumidityReading'; // import { useQuery } from '@apollo/react-hooks';\n// const { loading, error, data = {} } = useQuery(GET_LOGGED_IN_USER_SETTINGS, {\n//     notifyOnNetworkStatusChange: true,\n//     fetchPolicy: \"network-only\",\n//     // pollInterval: 5000,\n//   });\n\nconst SoilHumiditySensor = ({\n  errorId,\n  plant,\n  settingType,\n  handleSettingsChange,\n  onDeleteSchedule,\n  data,\n  openTab,\n  setOpenTab,\n  handleDeleteSensor\n}) => {\n  var _relayOneSelected$val, _relayOneSelected$val2, _setting$relayTwoAuto, _relayOneSelected$val3, _relayTwoSelected$val, _relayTwoSelected$val2, _relayTwoSelected$val3, _setting$scheduledOnT, _relayOneSelected$val4, _setting$logs;\n\n  const setting = plant.sensors.find(module => module.settingType === settingType);\n  const intl = useIntl();\n  const {\n    0: editIsOn,\n    1: setEditIsOn\n  } = useState(false);\n  const selectedMode = humidityModeOptions.find(option => option.value === setting.mode);\n  const selectedManualState = manualModeOptions.find(option => option.value === setting.relayOneWorking);\n  const relayOneSelected = fourRelaysOptions.find(option => option.value === setting.relayOneIdRelated);\n  const relayTwoSelected = fourRelaysOptions.find(option => option.value === setting.relayTwoIdRelated);\n  const selectStyle = {\n    control: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      width: '179.88px',\n      textAlign: 'left'\n    })\n  }; // const tabIsOpen = openTab === settingType;\n\n  const tabIsOpen = true;\n\n  const handleModal = (modalComponent, modalProps = {}, className = 'add-time-schedule-modal') => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  return __jsx(PlantsSensorContainer, {\n    style: {\n      height: tabIsOpen ? '100%' : '82px'\n    },\n    onClick: e => {\n      e.stopPropagation();\n      setOpenTab(tabIsOpen ? '' : settingType);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, __jsx(Type, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, getSettingTypeText(setting === null || setting === void 0 ? void 0 : setting.settingType))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(CardButtons, {\n    className: \"button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, editIsOn ? __jsx(ActionButton, {\n    onClick: e => {\n      e.stopPropagation();\n      setEditIsOn(!editIsOn);\n    },\n    className: \"edit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, __jsx(CheckMark, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  })) : __jsx(ActionButton, {\n    onClick: e => {\n      e.stopPropagation();\n      setEditIsOn(!editIsOn);\n    },\n    className: \"edit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, __jsx(PencilIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  })), __jsx(ActionButton, {\n    onClick: e => {\n      e.stopPropagation();\n      handleDeleteSensor(plant, settingType);\n    },\n    className: \"delete-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, __jsx(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }))))), (setting === null || setting === void 0 ? void 0 : setting.mode) === HumiditySensorMode.NONE && !!openTab && __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, __jsx(Status, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"modoRequiredWarningText\",\n    defaultMessage: \"modoRequiredWarningText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"soilHumidityId\",\n    defaultMessage: \"soilHumidityId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, __jsx(HumidityReading, {\n    settingType: settingType,\n    plant: plant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"plantName\",\n    defaultMessage: \"plantName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, editIsOn ? __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    value: setting.name,\n    placeholder: intl.formatMessage({\n      id: 'plantNameRequiredNameId',\n      defaultMessage: 'plantNameRequiredNameId'\n    }),\n    onChange: e => handleSettingsChange(plant, 'name', e.target.value, settingType),\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\" // intlInputLabelId=\"profileEmailField\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, setting === null || setting === void 0 ? void 0 : setting.name))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"humidityModeId\",\n    defaultMessage: \"humidityModeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: e => handleSettingsChange(plant, 'mode', e.value, settingType),\n    value: selectedMode,\n    options: humidityModeOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, (selectedMode === null || selectedMode === void 0 ? void 0 : selectedMode.value.length) > 1 ? selectedMode.label : '-'))), (setting === null || setting === void 0 ? void 0 : setting.mode) !== HumiditySensorMode.NONE && __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"notifyChangesId\",\n    defaultMessage: \"notifyChangesId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, __jsx(Switch, {\n    disabled: false,\n    checked: setting.whatsappWarningsOn,\n    labelPosition: 'right' // className,\n    ,\n    onUpdate: () => handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }))), setting.mode === HumiditySensorMode.IRRIGATE_ON_DEMAND && __jsx(React.Fragment, null, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minHumidityId\",\n    defaultMessage: \"minHumidityId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, editIsOn ? __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 30\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"minWarning\",\n    value: setting.minWarning,\n    onChange: e => handleSettingsChange(plant, 'minWarning', e.target.value, settingType),\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    width: \"45px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }\n  }), __jsx(Porcentage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }\n  }, \"%\")) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, setting.minWarning >= 0 && setting.minWarning <= 100 ? setting === null || setting === void 0 ? void 0 : setting.minWarning : '-', \" %\"), errorId === 'minWarning' && __jsx(ErrorMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minMaxWarningId\",\n    defaultMessage: \"minMaxWarningId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  })))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: (relayOneSelected === null || relayOneSelected === void 0 ? void 0 : (_relayOneSelected$val = relayOneSelected.value) === null || _relayOneSelected$val === void 0 ? void 0 : _relayOneSelected$val.length) > 0 ? 'asociatedToId' : 'asociateRelayToId',\n    defaultMessage: \"asociateRelayToId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: e => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType),\n    value: relayOneSelected,\n    options: fourRelaysOptions // inputFocusOnClick={false}\n    // focusInputOnMenuOpen={false}\n    ,\n    isSearchable: false,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }) : __jsx(React.Fragment, null, __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 33\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated) : '-'))))), setting.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION && __jsx(React.Fragment, null, __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"maxHumidityId\",\n    defaultMessage: \"maxHumidityId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 33\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"maxWarning\",\n    value: setting.maxWarning,\n    onChange: e => handleSettingsChange(plant, 'maxWarning', e.target.value, settingType),\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    width: \"45px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 37\n    }\n  }), __jsx(Porcentage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 37\n    }\n  }, \"%\"), errorId === 'maxWarning' && __jsx(ErrorMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 41\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minMaxWarningId\",\n    defaultMessage: \"minMaxWarningId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 45\n    }\n  }))) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 33\n    }\n  }, setting.maxWarning >= 0 && setting.maxWarning <= 100 ? setting === null || setting === void 0 ? void 0 : setting.maxWarning : '-', \" %\"))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minHumidityId\",\n    defaultMessage: \"minHumidityId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 33\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"minWarning\",\n    value: setting.minWarning,\n    onChange: e => handleSettingsChange(plant, 'minWarning', e.target.value, settingType),\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    width: \"45px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 37\n    }\n  }), __jsx(Porcentage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 41\n    }\n  }, \"%\"), errorId === 'minWarning' && __jsx(ErrorMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 41\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minMaxWarningId\",\n    defaultMessage: \"minMaxWarningId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 45\n    }\n  }))) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 33\n    }\n  }, setting.minWarning >= 0 && setting.minWarning <= 100 ? setting === null || setting === void 0 ? void 0 : setting.minWarning : '-', \" %\"))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: (relayOneSelected === null || relayOneSelected === void 0 ? void 0 : (_relayOneSelected$val2 = relayOneSelected.value) === null || _relayOneSelected$val2 === void 0 ? void 0 : _relayOneSelected$val2.length) > 0 ? 'asociatedToId' : 'asociateRelayOneId',\n    defaultMessage: \"asociateRelayOneId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: e => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType),\n    value: relayOneSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 33\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 33\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated) : '-'))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"asociateRelayTwoId\",\n    defaultMessage: \"asociateRelayTwoId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: e => handleSettingsChange(plant, 'relayTwoIdRelated', e.value, settingType),\n    value: relayTwoSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 29\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 29\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayTwoIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayTwoIdRelated) : '-'))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"irrigationTimeId\",\n    defaultMessage: \"irrigationTimeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Input, {\n    type: \"number\",\n    name: \"relayOneAutomatedTimeToRun\",\n    value: setting.relayOneAutomatedTimeToRun,\n    onChange: e => handleSettingsChange(plant, 'relayOneAutomatedTimeToRun', e.target.value, settingType),\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 33\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 33\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneAutomatedTimeToRun) >= 0 ? setting.relayOneAutomatedTimeToRun + ' mins' : '-'))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"irrigationEvacuationTimeId\",\n    defaultMessage: \"irrigationEvacuationTimeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Input, {\n    type: \"number\",\n    name: \"relayTwoAutomatedTimeToRun\",\n    value: setting.relayTwoAutomatedTimeToRun,\n    onChange: e => handleSettingsChange(plant, 'relayTwoAutomatedTimeToRun', e.target.value, settingType),\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 33\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 33\n    }\n  }, (setting === null || setting === void 0 ? void 0 : (_setting$relayTwoAuto = setting.relayTwoAutomatedTimeToRun) === null || _setting$relayTwoAuto === void 0 ? void 0 : _setting$relayTwoAuto.length) > 0 ? setting.relayTwoAutomatedTimeToRun + ' mins' : '-')))), (setting.mode === HumiditySensorMode.IRRIGATE_SPECIFICT_AMOUNT_ON_DEMAND || setting.mode === HumiditySensorMode.IRRIGATE_SPECIFICT_AMOUNT_WITH_DOUBLE_ACTION) && __jsx(React.Fragment, null, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minHumidityId\",\n    defaultMessage: \"minHumidityId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 33\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"minWarning\",\n    value: setting.minWarning,\n    onChange: e => handleSettingsChange(plant, 'minWarning', e.target.value, settingType),\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    width: \"45px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 37\n    }\n  }), __jsx(Porcentage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 37\n    }\n  }, \"%\")) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 33\n    }\n  }, setting.minWarning >= 0 && setting.minWarning <= 100 ? setting === null || setting === void 0 ? void 0 : setting.minWarning : '-', \" %\"), errorId === 'minWarning' && __jsx(ErrorMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minMaxWarningId\",\n    defaultMessage: \"minMaxWarningId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 37\n    }\n  })))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: (relayOneSelected === null || relayOneSelected === void 0 ? void 0 : (_relayOneSelected$val3 = relayOneSelected.value) === null || _relayOneSelected$val3 === void 0 ? void 0 : _relayOneSelected$val3.length) > 0 ? 'asociatedToId' : 'asociateRelay1Id',\n    defaultMessage: \"asociateRelay1Id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: e => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType),\n    value: relayOneSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 33\n    }\n  }) : __jsx(React.Fragment, null, __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 37\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated) : '-')))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"irrigationTimeId\",\n    defaultMessage: \"irrigationTimeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Input, {\n    type: \"number\",\n    name: \"relayOneAutomatedTimeToRun\",\n    value: setting.relayOneAutomatedTimeToRun,\n    onChange: e => handleSettingsChange(plant, 'relayOneAutomatedTimeToRun', e.target.value, settingType),\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 33\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 33\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneAutomatedTimeToRun) >= 0 ? setting.relayOneAutomatedTimeToRun + ' mins' : '-'))), setting.mode === HumiditySensorMode.IRRIGATE_SPECIFICT_AMOUNT_WITH_DOUBLE_ACTION && __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 25\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 29\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: (relayTwoSelected === null || relayTwoSelected === void 0 ? void 0 : (_relayTwoSelected$val = relayTwoSelected.value) === null || _relayTwoSelected$val === void 0 ? void 0 : _relayTwoSelected$val.length) > 0 ? 'asociatedToId' : 'asociateRelay2Id',\n    defaultMessage: \"asociateRelay2Id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 33\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 29\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: e => handleSettingsChange(plant, 'relayTwoIdRelated', e.value, settingType),\n    value: relayTwoSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 33\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 33\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayTwoIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayTwoIdRelated) : '-')))), setting.mode === HumiditySensorMode.SCHEDULE && __jsx(React.Fragment, null, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: (relayTwoSelected === null || relayTwoSelected === void 0 ? void 0 : (_relayTwoSelected$val2 = relayTwoSelected.value) === null || _relayTwoSelected$val2 === void 0 ? void 0 : _relayTwoSelected$val2.length) > 0 ? 'asociatedToId' : 'asociateRelay1Id',\n    defaultMessage: \"asociateRelay1Id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 21\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: e => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType),\n    value: relayOneSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 29\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 29\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated) : '-'))), setting.mode === HumiditySensorMode.IRRIGATE_SPECIFICT_AMOUNT_WITH_DOUBLE_ACTION && __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 25\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 29\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: (relayTwoSelected === null || relayTwoSelected === void 0 ? void 0 : (_relayTwoSelected$val3 = relayTwoSelected.value) === null || _relayTwoSelected$val3 === void 0 ? void 0 : _relayTwoSelected$val3.length) > 0 ? 'asociatedToId' : 'asociateRelay2Id',\n    defaultMessage: \"asociateRelay2Id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 33\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 29\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: e => handleSettingsChange(plant, 'relayTwoIdRelated', e.value, settingType),\n    value: relayTwoSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 33\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 33\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayTwoIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayTwoIdRelated) : '-'))), setting === null || setting === void 0 ? void 0 : (_setting$scheduledOnT = setting.scheduledOnTimes) === null || _setting$scheduledOnT === void 0 ? void 0 : _setting$scheduledOnT.map((schedule, i) => {\n    return __jsx(WeekContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 25\n      }\n    }, __jsx(ListDes, {\n      style: {\n        flexDirection: 'row',\n        display: 'flex',\n        paddingBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 29\n      }\n    }, Object.keys(WeekDays).map((day, i) => {\n      return __jsx(DayContainer, {\n        key: i + '-day--humidity-1container',\n        style: {\n          backgroundColor: schedule.daysToRepeat.includes(day) ? '#c2b0b0' : 'transparent'\n        } // onClick={() => setDay(day)}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 41\n        }\n      }, getDayShortName(day));\n    })), __jsx(ScheduleTimeContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 29\n      }\n    }, __jsx(TextSpaced, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 33\n      }\n    }, \" \", __jsx(FormattedMessage, {\n      id: \"desdeId\",\n      defaultMessage: \"desdeId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 46\n      }\n    }), \" \"), __jsx(TextSpaced, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 33\n      }\n    }, schedule.startTime), __jsx(TextSpaced, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 33\n      }\n    }, \" \", __jsx(FormattedMessage, {\n      id: \"aId\",\n      defaultMessage: \"aId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 46\n      }\n    }), \" \"), __jsx(TextSpaced, {\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 33\n      }\n    }, schedule.endTime), __jsx(ActionsButtons, {\n      className: \"button-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 33\n      }\n    }, __jsx(ActionButton, {\n      onClick: e => {\n        var _data$getUser;\n\n        handleModal(AddTimeSchedule, {\n          settingType: settingType,\n          plant,\n          id: data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : _data$getUser.id,\n          schedulePosition: i\n        });\n        e.stopPropagation();\n      },\n      className: \"edit-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 37\n      }\n    }, __jsx(PencilIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 41\n      }\n    })), __jsx(ActionButton, {\n      onClick: () => onDeleteSchedule(plant, settingType, i),\n      className: \"delete-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 37\n      }\n    }, __jsx(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 41\n      }\n    })))));\n  }), __jsx(Button, {\n    size: \"small\",\n    variant: \"outlined\",\n    style: {\n      marginLeft: '10px'\n    },\n    type: \"button\",\n    className: \"add-button\",\n    onClick: () => {\n      var _data$getUser2;\n\n      return handleModal(AddTimeSchedule, {\n        name: 'add-humidity-1-schedule',\n        plant,\n        id: data === null || data === void 0 ? void 0 : (_data$getUser2 = data.getUser) === null || _data$getUser2 === void 0 ? void 0 : _data$getUser2.id,\n        settingType\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"addTimeScheduleId\",\n    defaultMessage: \"addTimeScheduleId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 21\n    }\n  }))), setting.mode === HumiditySensorMode.MANUAL && __jsx(React.Fragment, null, __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"manualModeStateId\",\n    defaultMessage: \"manualModeStateId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 25\n    }\n  }, __jsx(Switch, {\n    disabled: false,\n    checked: setting.relayOneWorking,\n    labelPosition: 'right' // className,\n    ,\n    onUpdate: () => handleSettingsChange(plant, 'relayOneWorking', !setting.relayOneWorking, settingType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 29\n    }\n  }))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: (relayOneSelected === null || relayOneSelected === void 0 ? void 0 : (_relayOneSelected$val4 = relayOneSelected.value) === null || _relayOneSelected$val4 === void 0 ? void 0 : _relayOneSelected$val4.length) > 0 ? 'asociatedToId' : 'asociateRelayToId',\n    defaultMessage: \"asociateRelayToId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: e => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType),\n    value: relayOneSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 33\n    }\n  }) : __jsx(React.Fragment, null, __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 37\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated) : '-'))))), (setting === null || setting === void 0 ? void 0 : (_setting$logs = setting.logs) === null || _setting$logs === void 0 ? void 0 : _setting$logs.length) > 0 && __jsx(HumidityLogsGraph, {\n    data: setting.logs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 46\n    }\n  }));\n};\n\nexport default SoilHumiditySensor;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/SoilHumiditySensor.tsx"],"names":["React","useState","CloseIcon","PencilIcon","Button","Switch","FormattedMessage","useIntl","Select","Input","HumiditySensorMode","WeekDays","fourRelaysOptions","humidityModeOptions","manualModeOptions","HumidityLogsGraph","PlantsSensorContainer","ListItem","ListTitle","ListDes","WeekContainer","DayContainer","TextSpaced","CardButtons","ActionButton","Text","Status","Type","ActionsButtons","Row","ScheduleTimeContainer","ErrorMsg","Porcentage","openModal","AddTimeSchedule","CheckMark","getDayShortName","getRelayNameText","getSettingTypeText","HumidityReading","SoilHumiditySensor","errorId","plant","settingType","handleSettingsChange","onDeleteSchedule","data","openTab","setOpenTab","handleDeleteSensor","setting","sensors","find","module","intl","editIsOn","setEditIsOn","selectedMode","option","value","mode","selectedManualState","relayOneWorking","relayOneSelected","relayOneIdRelated","relayTwoSelected","relayTwoIdRelated","selectStyle","control","styles","width","textAlign","tabIsOpen","handleModal","modalComponent","modalProps","className","show","config","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","e","stopPropagation","justifyContent","NONE","name","formatMessage","id","defaultMessage","target","length","label","whatsappWarningsOn","IRRIGATE_ON_DEMAND","minWarning","SEEDS_POOL_IRRIGATION","maxWarning","relayOneAutomatedTimeToRun","relayTwoAutomatedTimeToRun","IRRIGATE_SPECIFICT_AMOUNT_ON_DEMAND","IRRIGATE_SPECIFICT_AMOUNT_WITH_DOUBLE_ACTION","SCHEDULE","scheduledOnTimes","map","schedule","i","flexDirection","display","paddingBottom","Object","keys","day","backgroundColor","daysToRepeat","includes","startTime","endTime","getUser","schedulePosition","marginLeft","MANUAL","logs"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { SearchBox } from 'components/search-box/search-box';\nimport Router,{ useRouter } from 'next/router';\nimport LineChart from 'components/line-chart/line-chart';\nimport GraphChart from 'components/graph-chart/graph-chart';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { SensorsTypes, HumiditySensorMode, WeekDays, fourRelaysOptions, humidityModeOptions, manualModeOptions } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, InputUpper, WeekContainer, DayContainer, ScheduleTime, TextSpaced, CardButtons, ActionButton, Text, Status, ButtonText, Type, ActionsButtons, Row, ScheduleTimeContainer, ErrorMsg, Porcentage } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';  \nimport { ISetting } from 'utils/types';\nimport { CheckMark } from 'assets/icons/CheckMark';\nimport { getDayShortName, getRelayNameText, getSettingTypeText } from 'utils/sensorUtils';\nimport HumidityReading from './HumidityReading';\n\n// import { useQuery } from '@apollo/react-hooks';\n// const { loading, error, data = {} } = useQuery(GET_LOGGED_IN_USER_SETTINGS, {\n//     notifyOnNetworkStatusChange: true,\n//     fetchPolicy: \"network-only\",\n//     // pollInterval: 5000,\n//   });\ninterface Props {\n  data?: any;\n  plant: any;\n  openTab: string;\n  errorId: string;\n  setOpenTab: (settingType: string) => void;\n  handleDeleteSensor: (plant: any, settingType: string) => void;\n  settingType: SensorsTypes;\n  handleSettingsChange: (plant: any, field: string, value: string | boolean, settingType: SensorsTypes) => void;\n  onDeleteSchedule: (plant: any, settingType: SensorsTypes, position: number) => void;\n}\n\nconst SoilHumiditySensor: React.FC<Props> = ({ errorId, plant, settingType, handleSettingsChange, onDeleteSchedule, data, openTab, setOpenTab, handleDeleteSensor  }) => {\n    const setting = plant.sensors.find((module: ISetting) => module.settingType === settingType);\n    const intl = useIntl();\n    const [editIsOn, setEditIsOn] = useState(false);\n    const selectedMode = humidityModeOptions.find((option) => option.value === setting.mode);\n    const selectedManualState = manualModeOptions.find((option) => option.value === setting.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === setting.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find((option) => option.value === setting.relayTwoIdRelated);\n    const selectStyle = { control: styles => ({ ...styles, width: '179.88px', textAlign: 'left' }) };\n    // const tabIsOpen = openTab === settingType;\n    const tabIsOpen = true;\n\n    const handleModal = (\n        modalComponent: any,\n        modalProps = {},\n        className: string = 'add-time-schedule-modal'\n        ) => {\n        openModal({\n            show: true,\n            config: {\n            width: 360,\n            height: 'auto',\n            enableResizing: false,\n            disableDragging: true,\n            className: className,\n            },\n            closeOnClickOutside: true,\n            component: modalComponent,\n            componentProps: { item: modalProps },\n        });\n    };\n    return (\n        <PlantsSensorContainer style={{ height: tabIsOpen ? '100%' : '82px' }} onClick={(e) => { e.stopPropagation(); setOpenTab(tabIsOpen ? '' : settingType); }}>\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Type bold>{getSettingTypeText(setting?.settingType)}</Type>\n                </ListTitle>\n                <ListDes>\n                    <CardButtons className='button-wrapper'>\n                        { editIsOn ? (\n                            <ActionButton onClick={(e) => { e.stopPropagation(); setEditIsOn(!editIsOn); }} className='edit-btn'>\n                                <CheckMark />\n                            </ActionButton>\n                        ) : (\n                            <ActionButton onClick={(e) => { e.stopPropagation(); setEditIsOn(!editIsOn); }} className='edit-btn'>\n                                <PencilIcon />\n                            </ActionButton>\n                        )}\n                        <ActionButton onClick={(e) => { e.stopPropagation(); handleDeleteSensor(plant, settingType); }} className='delete-btn'>\n                            <CloseIcon />\n                        </ActionButton>\n                    </CardButtons>\n                </ListDes>\n            \n            </ListItem>\n\n            { (setting?.mode === HumiditySensorMode.NONE && !!openTab) && (\n                <ListItem>\n                    <Status>\n                        <FormattedMessage id=\"modoRequiredWarningText\" defaultMessage=\"modoRequiredWarningText\" />\n                    </Status>\n                </ListItem>\n            )}\n\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Text>\n                        <FormattedMessage\n                            id=\"soilHumidityId\"\n                            defaultMessage=\"soilHumidityId\"\n                        />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    <HumidityReading settingType={settingType} plant={plant} />\n                </ListDes>\n            </ListItem>\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Text>\n                    <FormattedMessage\n                        id=\"plantName\"\n                        defaultMessage=\"plantName\"\n                    />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    { editIsOn ? (\n                        <Input\n                            type='text'\n                            name='name'\n                            value={setting.name}\n                            placeholder={intl.formatMessage({ id: 'plantNameRequiredNameId', defaultMessage: 'plantNameRequiredNameId' })}\n                            onChange={(e: any) => handleSettingsChange(plant, 'name', e.target.value, settingType)}\n                            backgroundColor='#F7F7F7'\n                            height='34.5px'\n                            // intlInputLabelId=\"profileEmailField\"\n                        />\n                    ) : (\n                        <Text bold>{setting?.name}</Text>\n                    )}\n                </ListDes>\n            </ListItem>\n\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Text>\n                        <FormattedMessage\n                        id=\"humidityModeId\"\n                        defaultMessage=\"humidityModeId\"\n                        />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                { editIsOn ? (\n                    <Select \n                        onChange={(e: any) => handleSettingsChange(plant, 'mode', e.value, settingType)}\n                        value={selectedMode}\n                        options={humidityModeOptions}\n                        styles={selectStyle}\n                        menuPosition={'fixed'}\n                    />\n                    ) : (\n                        <Text  bold>{selectedMode?.value.length > 1 ? selectedMode.label : '-'}</Text>\n                    )}\n                </ListDes>\n            </ListItem>\n\n            { setting?.mode !== HumiditySensorMode.NONE && (\n                <ListItem style={{ justifyContent: 'flex-start' }}>\n                    <ListTitle>\n                    <Text>\n                        <FormattedMessage\n                        id=\"notifyChangesId\"\n                        defaultMessage=\"notifyChangesId\"\n                        />\n                    </Text>\n                    </ListTitle>\n                    <ListDes>\n                    <Switch \n                        disabled={false}\n                        checked={setting.whatsappWarningsOn}\n                        labelPosition={'right'}\n                        // className,\n                        onUpdate={() => handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType)}\n                    />\n                    </ListDes>\n                </ListItem>\n            )}\n            \n            { setting.mode === HumiditySensorMode.IRRIGATE_ON_DEMAND && (\n            <>\n                <ListItem>\n                    <ListTitle>\n                        <Text>\n                        <FormattedMessage\n                            id='minHumidityId'\n                            defaultMessage='minHumidityId'\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                        { editIsOn ? (\n                             <Row>\n                                <Input\n                                    type='number'\n                                    name='minWarning'\n                                    value={setting.minWarning}\n                                    onChange={(e: any) => handleSettingsChange(plant, 'minWarning', e.target.value, settingType)}\n                                    backgroundColor='#F7F7F7'\n                                    height='34.5px'\n                                    width='45px'\n                                />\n                                <Porcentage>%</Porcentage>\n                            </Row>\n                        ) : (\n                            <Text bold>{(setting.minWarning >= 0 && setting.minWarning <= 100) ? setting?.minWarning : '-'} %</Text>\n                        )}\n                        {errorId === 'minWarning' && (\n                            <ErrorMsg>\n                                <FormattedMessage id=\"minMaxWarningId\" defaultMessage=\"minMaxWarningId\" />\n                            </ErrorMsg>\n                        )}\n                    </ListDes>\n                </ListItem>\n\n                <ListItem>\n                    <ListTitle>\n                        <Text>\n                        <FormattedMessage\n                            id={relayOneSelected?.value?.length > 0 ? 'asociatedToId' : 'asociateRelayToId'}\n                            defaultMessage='asociateRelayToId'\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                        { editIsOn ? (\n                            <Select \n                                onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                                value={relayOneSelected}\n                                options={fourRelaysOptions}\n                                // inputFocusOnClick={false}\n                                // focusInputOnMenuOpen={false}\n                                isSearchable={false}\n                                styles={selectStyle}\n                                menuPosition={'fixed'}\n                            />\n                        ) : (\n                            <>\n                            {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                                <Text bold>{setting?.relayOneIdRelated.length > 1 ? getRelayNameText(setting?.relayOneIdRelated) : '-'}</Text>\n                                {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}{/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                            </>\n                        )}\n                    </ListDes>\n                </ListItem>\n            </>\n            )}\n\n            {   setting.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION && (\n                <>\n                    <ListItem style={{ justifyContent: 'flex-start' }}>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='maxHumidityId'\n                                defaultMessage='maxHumidityId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Row>\n                                    <Input\n                                        type='number'\n                                        name='maxWarning'\n                                        value={setting.maxWarning}\n                                        onChange={(e: any) => handleSettingsChange(plant, 'maxWarning', e.target.value, settingType)}\n                                        backgroundColor='#F7F7F7'\n                                        height='34.5px'\n                                        width='45px'\n                                    />\n                                    <Porcentage>%</Porcentage>\n                                    {errorId === 'maxWarning' && (\n                                        <ErrorMsg>\n                                            <FormattedMessage id=\"minMaxWarningId\" defaultMessage=\"minMaxWarningId\" />\n                                        </ErrorMsg>\n                                    )}\n                                </Row>\n                            ) : (\n                                <Text bold>{(setting.maxWarning >= 0 && setting.maxWarning <= 100) ? setting?.maxWarning : '-'} %</Text>\n                            )}\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='minHumidityId'\n                                defaultMessage='minHumidityId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Row>\n                                    <Input\n                                        type='number'\n                                        name='minWarning'\n                                        value={setting.minWarning}\n                                        onChange={(e: any) => handleSettingsChange(plant, 'minWarning', e.target.value, settingType)}\n                                        backgroundColor='#F7F7F7'\n                                        height='34.5px'\n                                        width='45px'\n                                        />\n                                        <Porcentage>%</Porcentage>\n                                    {errorId === 'minWarning' && (\n                                        <ErrorMsg>\n                                            <FormattedMessage id=\"minMaxWarningId\" defaultMessage=\"minMaxWarningId\" />\n                                        </ErrorMsg>\n                                    )}\n                                </Row>\n                            ) : (\n                                <Text bold>{(setting.minWarning >= 0 && setting.minWarning <= 100) ? setting?.minWarning : '-'} %</Text>\n                            )}\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id={relayOneSelected?.value?.length > 0 ? 'asociatedToId' : 'asociateRelayOneId'}\n                                defaultMessage='asociateRelayOneId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Select \n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                                    value={relayOneSelected}\n                                    options={fourRelaysOptions}\n                                    styles={selectStyle}\n                                    menuPosition={'fixed'}\n                                />\n                            ) : (\n                                <Text bold>{setting?.relayOneIdRelated.length > 1 ? getRelayNameText(setting?.relayOneIdRelated) : '-'}</Text>\n                            )}\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='asociateRelayTwoId'\n                                defaultMessage='asociateRelayTwoId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                        { editIsOn ? (\n                            <Select \n                                onChange={(e: any) => handleSettingsChange(plant, 'relayTwoIdRelated', e.value, settingType)}\n                                value={relayTwoSelected}\n                                options={fourRelaysOptions}\n                                styles={selectStyle}\n                                menuPosition={'fixed'}\n                            />\n                        ) : (\n                            <Text bold>{setting?.relayTwoIdRelated.length > 1 ? getRelayNameText(setting?.relayTwoIdRelated) : '-'}</Text>\n                        )}\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='irrigationTimeId'\n                                defaultMessage='irrigationTimeId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Input\n                                    type='number'\n                                    name='relayOneAutomatedTimeToRun'\n                                    value={setting.relayOneAutomatedTimeToRun}\n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayOneAutomatedTimeToRun', e.target.value, settingType)}\n                                    backgroundColor='#F7F7F7'\n                                    height='34.5px'\n                                />\n                            ) : (\n                                <Text bold>{setting?.relayOneAutomatedTimeToRun >= 0 ? setting.relayOneAutomatedTimeToRun + ' mins' : '-'}</Text>\n                            )}\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='irrigationEvacuationTimeId'\n                                defaultMessage='irrigationEvacuationTimeId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Input\n                                    type='number'\n                                    name='relayTwoAutomatedTimeToRun'\n                                    value={setting.relayTwoAutomatedTimeToRun}\n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayTwoAutomatedTimeToRun', e.target.value, settingType)}\n                                    backgroundColor='#F7F7F7'\n                                    height='34.5px'\n                                />\n                            ) : (\n                                <Text bold>{setting?.relayTwoAutomatedTimeToRun?.length > 0 ? setting.relayTwoAutomatedTimeToRun + ' mins' : '-'}</Text>\n                            )}\n                        </ListDes>\n                    </ListItem>\n                </>\n            )}\n\n            {   (setting.mode === HumiditySensorMode.IRRIGATE_SPECIFICT_AMOUNT_ON_DEMAND || setting.mode === HumiditySensorMode.IRRIGATE_SPECIFICT_AMOUNT_WITH_DOUBLE_ACTION) && (\n                <>\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='minHumidityId'\n                                defaultMessage='minHumidityId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Row>\n                                    <Input\n                                        type='number'\n                                        name='minWarning'\n                                        value={setting.minWarning}\n                                        onChange={(e: any) => handleSettingsChange(plant, 'minWarning', e.target.value, settingType)}\n                                        backgroundColor='#F7F7F7'\n                                        height='34.5px'\n                                        width='45px'\n                                    />\n                                    <Porcentage>%</Porcentage>\n                                </Row>\n                            ) : (\n                                <Text bold>{(setting.minWarning >= 0 && setting.minWarning <= 100) ? setting?.minWarning : '-'} %</Text>\n                            )}\n                            {errorId === 'minWarning' && (\n                                <ErrorMsg>\n                                    <FormattedMessage id=\"minMaxWarningId\" defaultMessage=\"minMaxWarningId\" />\n                                </ErrorMsg>\n                            )}\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id={relayOneSelected?.value?.length > 0 ? 'asociatedToId' : 'asociateRelay1Id'}\n                                defaultMessage='asociateRelay1Id'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Select \n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                                    value={relayOneSelected}\n                                    options={fourRelaysOptions}\n                                    styles={selectStyle}\n                                    menuPosition={'fixed'}\n                                />\n                            ) : (\n                                <>\n                                    <Text bold>{setting?.relayOneIdRelated.length > 1 ? getRelayNameText(setting?.relayOneIdRelated) : '-'}</Text>\n                                </>\n                            )}\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='irrigationTimeId'\n                                defaultMessage='irrigationTimeId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Input\n                                    type='number'\n                                    name='relayOneAutomatedTimeToRun'\n                                    value={setting.relayOneAutomatedTimeToRun}\n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayOneAutomatedTimeToRun', e.target.value, settingType)}\n                                    backgroundColor='#F7F7F7'\n                                    height='34.5px'\n                                />\n                            ) : (\n                                <Text bold>{setting?.relayOneAutomatedTimeToRun >= 0 ? setting.relayOneAutomatedTimeToRun + ' mins' : '-'}</Text>\n                            )}\n                        </ListDes>\n                    </ListItem>\n                    \n                    {   setting.mode === HumiditySensorMode.IRRIGATE_SPECIFICT_AMOUNT_WITH_DOUBLE_ACTION && (                        \n                        <ListItem>\n                            <ListTitle>\n                                <Text>\n                                <FormattedMessage\n                                    id={relayTwoSelected?.value?.length > 0 ? 'asociatedToId' : 'asociateRelay2Id'}\n                                    defaultMessage='asociateRelay2Id'\n                                />\n                                </Text>\n                            </ListTitle>\n                            <ListDes>\n                            { editIsOn ? (\n                                <Select \n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayTwoIdRelated', e.value, settingType)}\n                                    value={relayTwoSelected}\n                                    options={fourRelaysOptions}\n                                    styles={selectStyle}\n                                    menuPosition={'fixed'}\n                                />\n                            ) : (\n                                <Text bold>{setting?.relayTwoIdRelated.length > 1 ? getRelayNameText(setting?.relayTwoIdRelated) : '-'}</Text>\n                            )}\n                            </ListDes>\n                        </ListItem>\n                    )}\n                </>\n            )}\n\n            { setting.mode === HumiditySensorMode.SCHEDULE && (\n            <>\n                <ListItem>\n                    <ListTitle>\n                        <Text>\n                        <FormattedMessage\n                            id={relayTwoSelected?.value?.length > 0 ? 'asociatedToId' : 'asociateRelay1Id'}\n                            defaultMessage='asociateRelay1Id'\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                        { editIsOn ? (\n                            <Select \n                                onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                                value={relayOneSelected}\n                                options={fourRelaysOptions}\n                                styles={selectStyle}\n                                menuPosition={'fixed'}\n                            />\n                        ) : (\n                            <Text bold>{setting?.relayOneIdRelated.length > 1 ? getRelayNameText(setting?.relayOneIdRelated) : '-'}</Text>\n                        )}\n                    </ListDes>\n                </ListItem>\n\n                {   setting.mode === HumiditySensorMode.IRRIGATE_SPECIFICT_AMOUNT_WITH_DOUBLE_ACTION && (                        \n                        <ListItem>\n                            <ListTitle>\n                                <Text>\n                                <FormattedMessage\n                                    id={relayTwoSelected?.value?.length > 0 ? 'asociatedToId' : 'asociateRelay2Id'}\n                                    defaultMessage='asociateRelay2Id'\n                                />\n                                </Text>\n                            </ListTitle>\n                            <ListDes>\n                            { editIsOn ? (\n                                <Select \n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayTwoIdRelated', e.value, settingType)}\n                                    value={relayTwoSelected}\n                                    options={fourRelaysOptions}\n                                    styles={selectStyle}\n                                    menuPosition={'fixed'}\n                                />\n                            ) : (\n                                <Text bold>{setting?.relayTwoIdRelated.length > 1 ? getRelayNameText(setting?.relayTwoIdRelated) : '-'}</Text>\n                            )}\n                            </ListDes>\n                        </ListItem>\n                    )}\n\n                { setting?.scheduledOnTimes?.map((schedule: any, i: number) => {\n                    return (\n                        <WeekContainer>\n                            <ListDes style={{ flexDirection: 'row', display: 'flex', paddingBottom: '10px' }} >\n                                {Object.keys(WeekDays).map((day: any, i: number) => {\n                                    return (\n                                        <DayContainer\n                                            key={i + '-day--humidity-1container'}\n                                            style={{ backgroundColor: schedule.daysToRepeat.includes(day) ? '#c2b0b0' : 'transparent' }}\n                                            // onClick={() => setDay(day)}\n                                        >\n                                            {getDayShortName(day)}\n                                        </DayContainer>\n                                        )\n                                    })\n                                }\n                            </ListDes>\n                            <ScheduleTimeContainer>\n                                <TextSpaced> <FormattedMessage id='desdeId' defaultMessage='desdeId' /> </TextSpaced> \n                                <TextSpaced bold>{schedule.startTime}</TextSpaced>\n                                <TextSpaced> <FormattedMessage id='aId' defaultMessage='aId' /> </TextSpaced> \n                                <TextSpaced bold>{schedule.endTime}</TextSpaced>\n                                <ActionsButtons className='button-wrapper'>\n                                    <ActionButton onClick={(e) => { handleModal( AddTimeSchedule, { settingType: settingType, plant, id: data?.getUser?.id, schedulePosition: i } ); e.stopPropagation(); } } className='edit-btn'>\n                                        <PencilIcon />\n                                    </ActionButton>\n\n                                    <ActionButton onClick={() => onDeleteSchedule(plant, settingType, i)} className='delete-btn'>\n                                        <CloseIcon />\n                                    </ActionButton>\n                                </ActionsButtons>\n                            </ScheduleTimeContainer>\n                        </WeekContainer>\n                    )\n                })}\n\n                <Button\n                    size='small'\n                    variant='outlined'\n                    style={{marginLeft: '10px'}}\n                    type='button'\n                    className='add-button'\n                    onClick={() => handleModal(\n                        AddTimeSchedule,  { name: 'add-humidity-1-schedule', plant, id: data?.getUser?.id, settingType } )}\n                >\n                    <FormattedMessage id='addTimeScheduleId' defaultMessage='addTimeScheduleId' />\n                </Button>\n            </>\n            )}\n            \n            { (setting.mode === HumiditySensorMode.MANUAL) && (\n                <>\n                    <ListItem style={{ justifyContent: 'flex-start' }}>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='manualModeStateId'\n                                defaultMessage='manualModeStateId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            {/* { editIsOn ? (\n                                <Select \n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayOneWorking', e.value, settingType)}\n                                    value={selectedManualState}\n                                    options={manualModeOptions}\n                                    styles={selectStyle}\n                                    menuPosition={'fixed'}\n                                />\n                            ) : (\n                                <Text bold>{setting.relayOneWorking}</Text>\n                            )} */}\n                            {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                        {/* <Reading> */}\n                            <Switch \n                                disabled={false}\n                                checked={setting.relayOneWorking}\n                                labelPosition={'right'}\n                                // className,\n                                onUpdate={() => handleSettingsChange(plant, 'relayOneWorking', !setting.relayOneWorking, settingType)}\n                            />\n\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id={relayOneSelected?.value?.length > 0 ? 'asociatedToId' : 'asociateRelayToId'}\n                                defaultMessage='asociateRelayToId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Select \n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                                    value={relayOneSelected}\n                                    options={fourRelaysOptions}\n                                    styles={selectStyle}\n                                    menuPosition={'fixed'}\n                                />\n                            ) : (\n                                <>\n                                    <Text bold>{setting?.relayOneIdRelated.length > 1 ? getRelayNameText(setting?.relayOneIdRelated) : '-'}</Text>\n                                </>\n                            )}\n                        </ListDes>\n                    </ListItem>\n                </>\n            )}\n\n            { setting?.logs?.length > 0 && ( <HumidityLogsGraph data={setting.logs} /> )}\n        </PlantsSensorContainer>\n    );\n};\n\nexport default SoilHumiditySensor;\n"]},"metadata":{},"sourceType":"module"}