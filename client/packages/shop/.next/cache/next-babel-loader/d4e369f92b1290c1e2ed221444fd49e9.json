{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/SoilHumiditySensor.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { ISettingsName, HumiditySensorMode, WeekDays, fourRelaysOptions, humidityModeOptions, manualModeOptions } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, InputUpper, WeekContainer, DayContainer, ScheduleTime, TextSpaced, CardButtons, ActionButton, Text, Status } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';\n\nvar SoilHumiditySensor = function SoilHumiditySensor(_ref) {\n  _s();\n\n  var _setting$scheduledOnT, _setting$relayOneIdRe, _setting$relayOneIdRe2, _setting$logs;\n\n  var plant = _ref.plant,\n      settingType = _ref.settingType,\n      handleSettingsChange = _ref.handleSettingsChange,\n      onDeleteSchedule = _ref.onDeleteSchedule,\n      data = _ref.data,\n      openTab = _ref.openTab,\n      setOpenTab = _ref.setOpenTab,\n      handleDeleteSensor = _ref.handleDeleteSensor;\n  var setting = plant.sensors.find(function (sensor) {\n    return sensor.settingType === settingType;\n  });\n  var intl = useIntl();\n\n  var _useState = useState(''),\n      daySelected = _useState[0],\n      setDay = _useState[1];\n\n  var _useState2 = useState(false),\n      editIsOn = _useState2[0],\n      setEditIsOn = _useState2[1];\n\n  var selectedMode = humidityModeOptions.find(function (option) {\n    return option.value === setting.mode;\n  });\n  var selectedManualState = manualModeOptions.find(function (option) {\n    return option.value === setting.relayOneWorking;\n  });\n  var relayOneSelected = fourRelaysOptions.find(function (option) {\n    return option.value === setting.relayOneIdRelated;\n  });\n  var relayTwoSelected = fourRelaysOptions.find(function (option) {\n    return option.value === setting.relayTwoIdRelated;\n  });\n  var selectStyle = {\n    control: function control(styles) {\n      return _objectSpread(_objectSpread({}, styles), {}, {\n        width: '197px',\n        textAlign: 'left'\n      });\n    }\n  }; // const tabIsOpen = openTab === settingType;\n\n  var tabIsOpen = true;\n\n  var handleModal = function handleModal(modalComponent) {\n    var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'add-time-schedule-modal';\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  return __jsx(PlantsSensorContainer, {\n    style: {\n      height: tabIsOpen ? '100%' : '82px'\n    },\n    onClick: function onClick() {\n      return setOpenTab(tabIsOpen ? '' : settingType);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.mode) === HumiditySensorMode.NONE && !!openTab && __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, __jsx(Status, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"modoRequiredWarningText\",\n    defaultMessage: \"modoRequiredWarningText\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }))), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"plantName\",\n    defaultMessage: \"plantName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    value: setting.name,\n    placeholder: intl.formatMessage({\n      id: 'plantNameRequiredNameId',\n      defaultMessage: 'plantNameRequiredNameId'\n    }),\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'name', e.target.value, settingType);\n    },\n    backgroundColor: \"#F7F7F7\",\n    width: \"197px\",\n    height: \"34.5px\" // intlInputLabelId=\"profileEmailField\"\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"soilHumidityId\",\n    defaultMessage: \"soilHumidityId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    style: {\n      marginLeft: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, ISettingsName.SOIL_HUMIDITY_SETTING_1 === settingType ? plant === null || plant === void 0 ? void 0 : plant.soil_humidity_1 : plant === null || plant === void 0 ? void 0 : plant.soil_humidity_2, \" %\"))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"humidityModeId\",\n    defaultMessage: \"humidityModeId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'mode', e.value, settingType);\n    },\n    value: selectedMode,\n    options: humidityModeOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }))), (setting.mode === HumiditySensorMode.IRRIGATE_ON_DEMAND || setting.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION) && __jsx(React.Fragment, null, __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"maxHumidityId\",\n    defaultMessage: \"maxHumidityId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"maxWarning\",\n    value: setting.maxWarning,\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'maxWarning', e.target.value, settingType);\n    },\n    backgroundColor: \"#F7F7F7\",\n    width: \"197px\",\n    height: \"34.5px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }))), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minHumidityId\",\n    defaultMessage: \"minHumidityId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, __jsx(InputUpper, {\n    type: \"number\",\n    name: \"minWarning\",\n    value: setting.minWarning,\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'minWarning', e.target.value, settingType);\n    },\n    backgroundColor: \"#F7F7F7\",\n    width: \"197px\",\n    height: \"34.5px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }))), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"asociateRelayOneId\",\n    defaultMessage: \"asociateRelayOneId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType);\n    },\n    value: relayOneSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }) : __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }, setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated, \" %\"))), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"asociateRelayTwoId\",\n    defaultMessage: \"asociateRelayTwoId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType);\n    },\n    value: relayOneSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }) : __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated, \" %\"))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"notifyChangesId\",\n    defaultMessage: \"notifyChangesId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }))), __jsx(ListDes, {\n    style: {\n      marginLeft: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, __jsx(Switch, {\n    disabled: false,\n    checked: setting.whatsappWarningsOn,\n    labelPosition: 'right' // className,\n    ,\n    onUpdate: function onUpdate() {\n      return handleSettingsChange(plant, 'sendWhatsappWarnings', !setting.sendWhatsappWarnings, settingType);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  })))), setting.mode === HumiditySensorMode.SCHEDULE && __jsx(React.Fragment, null, __jsx(WeekContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, Object.keys(WeekDays).map(function (day, i) {\n    return __jsx(DayContainer, {\n      key: i + '-day--humidity-1container',\n      style: {\n        backgroundColor: daySelected === day ? '#E6E6E6' : 'transparent'\n      },\n      onClick: function onClick() {\n        return setDay(day);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, day.substring(0, 3));\n  })), setting === null || setting === void 0 ? void 0 : (_setting$scheduledOnT = setting.scheduledOnTimes) === null || _setting$scheduledOnT === void 0 ? void 0 : _setting$scheduledOnT.map(function (schedule, i) {\n    return __jsx(WeekContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }, schedule.daysToRepeat.includes(daySelected) ? __jsx(ScheduleTime, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 33\n      }\n    }, __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 33\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"startTimeId\",\n      defaultMessage: \"startTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 45\n      }\n    })), \" \", __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 125\n      }\n    }, schedule.startTime), __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 33\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"endTimeId\",\n      defaultMessage: \"endTimeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 45\n      }\n    })), \" \", __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 121\n      }\n    }, schedule.endTime), __jsx(CardButtons, {\n      className: \"button-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 33\n      }\n    }, __jsx(ActionButton, {\n      onClick: function onClick() {\n        var _data$getUser;\n\n        return handleModal(AddTimeSchedule, {\n          settingType: settingType,\n          plant: plant,\n          id: data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : _data$getUser.id\n        });\n      },\n      className: \"edit-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 37\n      }\n    }, __jsx(PencilIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 37\n      }\n    })), __jsx(ActionButton, {\n      onClick: function onClick() {\n        return onDeleteSchedule(plant, settingType, i);\n      },\n      className: \"delete-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 37\n      }\n    }, __jsx(CloseIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 37\n      }\n    })))) : __jsx(ScheduleTime, {\n      style: {\n        border: '0px',\n        height: '42px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 33\n      }\n    }));\n  }), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"notifyChangesId\",\n    defaultMessage: \"notifyChangesId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    style: {\n      marginLeft: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, __jsx(Switch, {\n    disabled: false,\n    checked: setting.whatsappWarningsOn,\n    labelPosition: 'right' // className,\n    ,\n    onUpdate: function onUpdate() {\n      return handleSettingsChange(plant, 'sendWhatsappWarnings', !setting.sendWhatsappWarnings, settingType);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }))), __jsx(Button, {\n    size: \"small\",\n    variant: \"outlined\",\n    type: \"button\",\n    className: \"add-button\",\n    onClick: function onClick() {\n      var _data$getUser2;\n\n      return handleModal(AddTimeSchedule, {\n        name: 'add-humidity-1-schedule',\n        plant: plant,\n        id: data === null || data === void 0 ? void 0 : (_data$getUser2 = data.getUser) === null || _data$getUser2 === void 0 ? void 0 : _data$getUser2.id\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"addTimeScheduleId\",\n    defaultMessage: \"addTimeScheduleId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }))), setting.mode === HumiditySensorMode.MANUAL && __jsx(React.Fragment, null, __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"manualModeStateId\",\n    defaultMessage: \"manualModeStateId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 21\n    }\n  }, __jsx(Select, {\n    onChange: function onChange() {\n      return handleSettingsChange(plant, 'relayOneWorking', e.value, settingType);\n    },\n    value: selectedManualState,\n    options: manualModeOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }\n  }))), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: ((_setting$relayOneIdRe = setting.relayOneIdRelated) === null || _setting$relayOneIdRe === void 0 ? void 0 : _setting$relayOneIdRe.length) ? 'asociateRelayId' : 'asociatedRelayId',\n    defaultMessage: ((_setting$relayOneIdRe2 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe2 === void 0 ? void 0 : _setting$relayOneIdRe2.length) ? 'asociateRelayId' : 'asociatedRelayId',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 21\n    }\n  }, __jsx(Select, {\n    onChange: function onChange() {\n      return handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType);\n    },\n    value: relayOneSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 25\n    }\n  })))), setting.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION && __jsx(React.Fragment, null, __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"irrigationTimeId\",\n    defaultMessage: \"irrigationTimeId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 21\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"relayOneAutomatedTimeToRun\",\n    value: setting.relayOneAutomatedTimeToRun,\n    onChange: function onChange() {\n      return handleSettingsChange(e, plant, 'relayOneAutomatedTimeToRun', e.target.value, settingType);\n    },\n    backgroundColor: \"#F7F7F7\",\n    width: \"197px\",\n    height: \"34.5px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 21\n    }\n  }))), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"irrigationEvacuationTimeId\",\n    defaultMessage: \"irrigationEvacuationTimeId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 21\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"relayTwoAutomatedTimeToRun\",\n    value: setting.relayTwoAutomatedTimeToRun,\n    onChange: function onChange() {\n      return handleSettingsChange(e, plant, 'relayTwoAutomatedTimeToRun', e.target.value, settingType);\n    },\n    backgroundColor: \"#F7F7F7\",\n    width: \"197px\",\n    height: \"34.5px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 21\n    }\n  })))), (setting === null || setting === void 0 ? void 0 : (_setting$logs = setting.logs) === null || _setting$logs === void 0 ? void 0 : _setting$logs.length) > 0 && __jsx(HumidityLogsGraph, {\n    data: setting.logs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  }), __jsx(CardButtons, {\n    className: \"button-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 17\n    }\n  }, __jsx(ActionButton, {\n    onClick: function onClick() {\n      return setEditIsOn(!editIsOn);\n    },\n    className: \"edit-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 21\n    }\n  }, __jsx(PencilIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 25\n    }\n  })), __jsx(ActionButton, {\n    onClick: function onClick() {\n      return handleDeleteSensor(plant, settingType);\n    },\n    className: \"delete-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 21\n    }\n  }, __jsx(CloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 25\n    }\n  }))));\n};\n\n_s(SoilHumiditySensor, \"027o7eGty4cJ5pm9+3zN6SQR4dk=\", false, function () {\n  return [useIntl];\n});\n\n_c = SoilHumiditySensor;\nexport default SoilHumiditySensor;\n\nvar _c;\n\n$RefreshReg$(_c, \"SoilHumiditySensor\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/SoilHumiditySensor.tsx"],"names":["React","useState","CloseIcon","PencilIcon","Button","Switch","FormattedMessage","useIntl","Select","Input","ISettingsName","HumiditySensorMode","WeekDays","fourRelaysOptions","humidityModeOptions","manualModeOptions","HumidityLogsGraph","PlantsSensorContainer","ListItem","ListTitle","ListDes","InputUpper","WeekContainer","DayContainer","ScheduleTime","TextSpaced","CardButtons","ActionButton","Text","Status","openModal","AddTimeSchedule","SoilHumiditySensor","plant","settingType","handleSettingsChange","onDeleteSchedule","data","openTab","setOpenTab","handleDeleteSensor","setting","sensors","find","sensor","intl","daySelected","setDay","editIsOn","setEditIsOn","selectedMode","option","value","mode","selectedManualState","relayOneWorking","relayOneSelected","relayOneIdRelated","relayTwoSelected","relayTwoIdRelated","selectStyle","control","styles","width","textAlign","tabIsOpen","handleModal","modalComponent","modalProps","className","show","config","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","NONE","name","formatMessage","id","defaultMessage","e","target","justifyContent","marginLeft","SOIL_HUMIDITY_SETTING_1","soil_humidity_1","soil_humidity_2","IRRIGATE_ON_DEMAND","SEEDS_POOL_IRRIGATION","maxWarning","minWarning","whatsappWarningsOn","sendWhatsappWarnings","SCHEDULE","Object","keys","map","day","i","backgroundColor","substring","scheduledOnTimes","schedule","daysToRepeat","includes","startTime","endTime","getUser","border","MANUAL","length","relayOneAutomatedTimeToRun","relayTwoAutomatedTimeToRun","logs"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { SearchBox } from 'components/search-box/search-box';\nimport Router,{ useRouter } from 'next/router';\nimport LineChart from 'components/line-chart/line-chart';\nimport GraphChart from 'components/graph-chart/graph-chart';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { ISettingsName, HumiditySensorMode, WeekDays, fourRelaysOptions, humidityModeOptions, manualModeOptions, SensorsTypes } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, InputUpper, WeekContainer, DayContainer, ScheduleTime, TextSpaced, CardButtons, ActionButton, Text, Status, ButtonText } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';  \nimport { ISetting } from 'utils/types';\n\ninterface Props {\n  data?: any;\n  plant: any;\n  openTab: string;\n  setOpenTab: (settingType: string) => void;\n  handleDeleteSensor: (plant: any, settingType: string) => void;\n  settingType: SensorsTypes;\n  handleSettingsChange: (plant: any, field: string, value: string | boolean, settingType: SensorsTypes) => void;\n  onDeleteSchedule: (plant: any, settingType: SensorsTypes, position: number) => void;\n}\n\nconst SoilHumiditySensor: React.FC<Props> = ({ plant, settingType, handleSettingsChange, onDeleteSchedule, data, openTab, setOpenTab, handleDeleteSensor  }) => {\n    const setting = plant.sensors.find((sensor: ISetting) => sensor.settingType === settingType);\n    const intl = useIntl();\n    const [daySelected, setDay] = useState('');\n    const [editIsOn, setEditIsOn] = useState(false);\n    const selectedMode = humidityModeOptions.find((option) => option.value === setting.mode);\n    const selectedManualState = manualModeOptions.find((option) => option.value === setting.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === setting.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find((option) => option.value === setting.relayTwoIdRelated);\n    const selectStyle = { control: styles => ({ ...styles, width: '197px', textAlign: 'left' }) };\n    // const tabIsOpen = openTab === settingType;\n    const tabIsOpen = true;\n\n    \n    const handleModal = (\n        modalComponent: any,\n        modalProps = {},\n        className: string = 'add-time-schedule-modal'\n        ) => {\n        openModal({\n            show: true,\n            config: {\n            width: 360,\n            height: 'auto',\n            enableResizing: false,\n            disableDragging: true,\n            className: className,\n            },\n            closeOnClickOutside: true,\n            component: modalComponent,\n            componentProps: { item: modalProps },\n        });\n    };\n\n    return (\n        <PlantsSensorContainer style={{ height: tabIsOpen ? '100%' : '82px' }} onClick={() => setOpenTab(tabIsOpen ? '' : settingType)}>\n            { (setting?.mode === HumiditySensorMode.NONE && !!openTab) && (\n                <ListItem>\n                    <Status>\n                        <FormattedMessage id=\"modoRequiredWarningText\" defaultMessage=\"modoRequiredWarningText\" />\n                    </Status>\n                </ListItem>\n            )}\n            <ListItem>\n                <ListTitle>\n                    <Text bold>\n                    <FormattedMessage\n                        id=\"plantName\"\n                        defaultMessage=\"plantName\"\n                    />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    <Input\n                    type='text'\n                    name='name'\n                    value={setting.name}\n                    placeholder={intl.formatMessage({ id: 'plantNameRequiredNameId', defaultMessage: 'plantNameRequiredNameId' })}\n                    onChange={(e: any) => handleSettingsChange(plant, 'name', e.target.value, settingType)}\n                    backgroundColor='#F7F7F7'\n                    width='197px'\n                    height='34.5px'\n                    // intlInputLabelId=\"profileEmailField\"\n                    />\n                </ListDes>\n            </ListItem>\n        \n\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Text bold>\n                        <FormattedMessage\n                        id=\"soilHumidityId\"\n                        defaultMessage=\"soilHumidityId\"\n                        />\n                    </Text>\n                </ListTitle>\n                <ListDes style={{ marginLeft: '10px' }}>\n                    <Text>{ISettingsName.SOIL_HUMIDITY_SETTING_1 === settingType ? plant?.soil_humidity_1 : plant?.soil_humidity_2} %</Text>\n                </ListDes>\n            </ListItem>\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Text bold>\n                        <FormattedMessage\n                        id=\"humidityModeId\"\n                        defaultMessage=\"humidityModeId\"\n                        />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    <Select \n                        onChange={(e: any) => handleSettingsChange(plant, 'mode', e.value, settingType)}\n                        value={selectedMode}\n                        options={humidityModeOptions}\n                        styles={selectStyle}\n                        menuPosition={'fixed'}\n                    />\n                </ListDes>\n            </ListItem>\n\n            { (setting.mode === HumiditySensorMode.IRRIGATE_ON_DEMAND ||\n                setting.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION) && (\n            <>\n                <ListItem>\n                    <ListTitle>\n                        <Text bold>\n                        <FormattedMessage\n                            id='maxHumidityId'\n                            defaultMessage='maxHumidityId'\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                        <Input\n                        type='number'\n                        name='maxWarning'\n                        value={setting.maxWarning}\n                        onChange={(e: any) => handleSettingsChange(plant, 'maxWarning', e.target.value, settingType)}\n                        backgroundColor='#F7F7F7'\n                        width='197px'\n                        height='34.5px'\n                        />\n                    </ListDes>\n                </ListItem>\n\n                <ListItem>\n                    <ListTitle>\n                        <Text bold>\n                        <FormattedMessage\n                            id='minHumidityId'\n                            defaultMessage='minHumidityId'\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                        <InputUpper\n                        type='number'\n                        name='minWarning'\n                        value={setting.minWarning}\n                        onChange={(e: any) => handleSettingsChange(plant, 'minWarning', e.target.value, settingType)}\n                        backgroundColor='#F7F7F7'\n                        width='197px'\n                        height='34.5px'\n                        />\n                    </ListDes>\n                </ListItem>\n\n                <ListItem>\n                    <ListTitle>\n                        <Text bold>\n                        <FormattedMessage\n                            id='asociateRelayOneId'\n                            defaultMessage='asociateRelayOneId'\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                        { editIsOn ? (\n                            <Select \n                                onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                                value={relayOneSelected}\n                                options={fourRelaysOptions}\n                                styles={selectStyle}\n                                menuPosition={'fixed'}\n                            />\n                        ) : (\n                            <Text>{setting?.relayOneIdRelated} %</Text>\n                        )}\n                    </ListDes>\n                </ListItem>\n\n                <ListItem>\n                    <ListTitle>\n                        <Text bold>\n                        <FormattedMessage\n                            id='asociateRelayTwoId'\n                            defaultMessage='asociateRelayTwoId'\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                    { editIsOn ? (\n                            <Select \n                                onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                                value={relayOneSelected}\n                                options={fourRelaysOptions}\n                                styles={selectStyle}\n                                menuPosition={'fixed'}\n                            />\n                        ) : (\n                            <Text>{setting?.relayOneIdRelated} %</Text>\n                        )}\n                    </ListDes>\n                </ListItem>\n\n\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                <Text bold>\n                    <FormattedMessage\n                    id=\"notifyChangesId\"\n                    defaultMessage=\"notifyChangesId\"\n                    />\n                </Text>\n                </ListTitle>\n                <ListDes style={{ marginLeft: '10px' }}>\n                <Switch \n                    disabled={false}\n                    checked={setting.whatsappWarningsOn}\n                    labelPosition={'right'}\n                    // className,\n                    onUpdate={() => handleSettingsChange(plant, 'sendWhatsappWarnings', !setting.sendWhatsappWarnings, settingType)}\n                />\n                </ListDes>\n            </ListItem>\n\n            </>\n            )}\n\n            { setting.mode === HumiditySensorMode.SCHEDULE && (\n            <>\n                <WeekContainer>\n                {Object.keys(WeekDays).map((day, i: number) => {\n                    return (\n                        <DayContainer\n                            key={i + '-day--humidity-1container'}\n                            style={{ backgroundColor: daySelected === day ? '#E6E6E6' : 'transparent' }}\n                            onClick={() => setDay(day)}\n                        >\n                            {day.substring(0,3)}\n                        </DayContainer>\n                        )\n                    })\n                }\n                </WeekContainer>\n\n                { setting?.scheduledOnTimes?.map((schedule: any, i: number) => {\n                    return (\n                        <WeekContainer>\n                            { schedule.daysToRepeat.includes(daySelected) ? (\n                                <ScheduleTime>\n                                <TextSpaced><FormattedMessage id='startTimeId' defaultMessage='startTimeId' /></TextSpaced> <TextSpaced>{schedule.startTime}</TextSpaced>\n                                <TextSpaced><FormattedMessage id='endTimeId' defaultMessage='endTimeId' /></TextSpaced> <TextSpaced>{schedule.endTime}</TextSpaced>\n                                <CardButtons className='button-wrapper'>\n                                    <ActionButton onClick={() => handleModal( AddTimeSchedule, { settingType: settingType, plant, id: data?.getUser?.id } )} className='edit-btn'>\n                                    <PencilIcon />\n                                    </ActionButton>\n\n                                    <ActionButton onClick={() => onDeleteSchedule(plant, settingType, i)} className='delete-btn'>\n                                    <CloseIcon />\n                                    </ActionButton>\n                                </CardButtons>\n                                </ScheduleTime>\n                            ) : <ScheduleTime style={{ border: '0px', height: '42px' }}></ScheduleTime>}\n                        </WeekContainer>\n                    )\n                })}\n\n                <ListItem style={{ justifyContent: 'flex-start' }}>\n                    <ListTitle>\n                    <Text bold>\n                        <FormattedMessage\n                        id=\"notifyChangesId\"\n                        defaultMessage=\"notifyChangesId\"\n                        />\n                    </Text>\n                    </ListTitle>\n                    <ListDes style={{ marginLeft: '10px' }}>\n                    <Switch \n                        disabled={false}\n                        checked={setting.whatsappWarningsOn}\n                        labelPosition={'right'}\n                        // className,\n                        onUpdate={() => handleSettingsChange(plant, 'sendWhatsappWarnings', !setting.sendWhatsappWarnings, settingType)}\n                    />\n                    </ListDes>\n                </ListItem>\n\n\n                <Button\n                    size='small'\n                    variant='outlined'\n                    type='button'\n                    className='add-button'\n                    onClick={() => handleModal(\n                        AddTimeSchedule, \n                        {\n                            name: 'add-humidity-1-schedule',\n                            plant,\n                            id: data?.getUser?.id\n                        }\n                        )\n                    }\n                >\n                <FormattedMessage\n                    id='addTimeScheduleId'\n                    defaultMessage='addTimeScheduleId' \n                />\n                </Button>\n            </>\n            )}\n            \n            { setting.mode === HumiditySensorMode.MANUAL && (\n            <>\n                <ListItem>\n                    <ListTitle>\n                        <Text bold>\n                        <FormattedMessage\n                            id='manualModeStateId'\n                            defaultMessage='manualModeStateId'\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                        <Select \n                        onChange={() => handleSettingsChange(plant, 'relayOneWorking', e.value, settingType)}\n                        value={selectedManualState}\n                        options={manualModeOptions}\n                        styles={selectStyle}\n                        menuPosition={'fixed'}\n                        />\n                    </ListDes>\n                </ListItem>\n\n                <ListItem>\n                    <ListTitle>\n                        <Text bold>\n                        <FormattedMessage\n                            id={setting.relayOneIdRelated?.length ? 'asociateRelayId' :'asociatedRelayId' }\n                            defaultMessage={setting.relayOneIdRelated?.length ? 'asociateRelayId' :'asociatedRelayId'}\n                        />\n                        </Text>\n                    </ListTitle>\n                    <ListDes>\n                        <Select \n                        onChange={() => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                        value={relayOneSelected}\n                        options={fourRelaysOptions}\n                        styles={selectStyle}\n                        menuPosition={'fixed'}\n                        />\n                    </ListDes>\n                </ListItem>\n            </>\n            )}\n\n            { setting.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION && (\n            <>\n                <ListItem>\n                <ListTitle>\n                    <Text bold>\n                    <FormattedMessage\n                        id='irrigationTimeId'\n                        defaultMessage='irrigationTimeId'\n                    />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    <Input\n                    type='number'\n                    name='relayOneAutomatedTimeToRun'\n                    value={setting.relayOneAutomatedTimeToRun}\n                    onChange={() => handleSettingsChange(e, plant, 'relayOneAutomatedTimeToRun', e.target.value, settingType)}\n                    backgroundColor='#F7F7F7'\n                    width='197px'\n                    height='34.5px'\n                    />\n                </ListDes>\n                </ListItem>\n\n                <ListItem>\n                <ListTitle>\n                    <Text bold>\n                    <FormattedMessage\n                        id='irrigationEvacuationTimeId'\n                        defaultMessage='irrigationEvacuationTimeId'\n                    />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    <Input\n                    type='number'\n                    name='relayTwoAutomatedTimeToRun'\n                    value={setting.relayTwoAutomatedTimeToRun}\n                    onChange={() => handleSettingsChange(e, plant, 'relayTwoAutomatedTimeToRun', e.target.value, settingType)}\n                    backgroundColor='#F7F7F7'\n                    width='197px'\n                    height='34.5px'\n                    />\n                </ListDes>\n                </ListItem>\n            </>\n            )}\n            \n            { setting?.logs?.length > 0 && (\n                <HumidityLogsGraph\n                    data={setting.logs}\n                />\n            )}\n            \n            {/* {withActionButtons && ( */}\n                <CardButtons className='button-wrapper'>\n                {/* {hasEdit && ( */}\n                    <ActionButton onClick={() => setEditIsOn(!editIsOn)} className='edit-btn'>\n                        <PencilIcon />\n                    </ActionButton>\n                {/* )} */}\n                {/* {hasDelete && ( */}\n                    <ActionButton onClick={() => handleDeleteSensor(plant, settingType)} className='delete-btn'>\n                        <CloseIcon />\n                    </ActionButton>\n                {/* )} */}\n                </CardButtons>\n            {/* )} */}\n            {/* <Button className=\"delete-setting-btn\" variant=\"secondary\" borderRadius={100} onClick={() => handleDeleteSensor(plant, settingType)}>\n                <ButtonText>\n                    <FormattedMessage id={\"deleteSettingId\"} defaultMessage=\"deleteSettingId\" />\n                </ButtonText>\n            </Button> */}\n        </PlantsSensorContainer>\n    );\n};\n\nexport default SoilHumiditySensor;\n"]},"metadata":{},"sourceType":"module"}