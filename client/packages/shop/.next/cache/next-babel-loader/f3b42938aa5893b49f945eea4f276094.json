{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/sensor-readings/HumidityReading.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Text } from '../../your-plants.style';\n\nconst HumidityReading = ({\n  module,\n  plantId,\n  latestDataFetched\n}) => {\n  var _data, _data$getUser, _data$getUser$plants, _data2, _data2$getUser$plants, _data2$getUser$plants2, _data3, _data3$getUser$plants, _data3$getUser$plants2;\n\n  const plantIndex = (_data = data) === null || _data === void 0 ? void 0 : (_data$getUser = _data.getUser) === null || _data$getUser === void 0 ? void 0 : (_data$getUser$plants = _data$getUser.plants) === null || _data$getUser$plants === void 0 ? void 0 : _data$getUser$plants.findIndex(plant => plant.plantId === plantId);\n  const sensorIndex = (_data2 = data) === null || _data2 === void 0 ? void 0 : (_data2$getUser$plants = _data2.getUser.plants[plantIndex]) === null || _data2$getUser$plants === void 0 ? void 0 : (_data2$getUser$plants2 = _data2$getUser$plants.sensors) === null || _data2$getUser$plants2 === void 0 ? void 0 : _data2$getUser$plants2.findIndex(sensor => sensor.settingType === module.settingType);\n  let reading = (_data3 = data) === null || _data3 === void 0 ? void 0 : (_data3$getUser$plants = _data3.getUser.plants[plantIndex]) === null || _data3$getUser$plants === void 0 ? void 0 : (_data3$getUser$plants2 = _data3$getUser$plants.sensors[sensorIndex]) === null || _data3$getUser$plants2 === void 0 ? void 0 : _data3$getUser$plants2.reading; // console.log('data?.getUser.plants[plantIndex]?.sensor', data?.getUser.plants[plantIndex].sensors, module.settingType)\n  // console.log('plantIndex', plantIndex)\n  // console.log('reading', reading)\n  // if (reading > -5 && reading <= 0) reading = 0;\n  // if (reading >= 100 && reading < 110) reading = 100;\n  // const readingFormatted = (reading >= -10 && reading < 0) ? 0 + ' % ðŸ’§' : (reading >= 0 && reading <= 100 && reading) ? reading + ' % ðŸ’§' : 'Disconected';\n  // const readingFormatted = (module.reading >= 0 && module.reading <= 110) ? `${module.reading} % ðŸ’§` : 'Disconected';  \n  // console.log(\"module.reading\", module.reading, reading)\n\n  return __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, `${reading} % ðŸ’§`);\n};\n\nexport default HumidityReading;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/sensor-readings/HumidityReading.tsx"],"names":["React","Text","HumidityReading","module","plantId","latestDataFetched","plantIndex","data","getUser","plants","findIndex","plant","sensorIndex","sensors","sensor","settingType","reading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,yBAArB;;AAQA,MAAMC,eAAgC,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAD,KAA6C;AAAA;;AAClF,QAAMC,UAAU,YAAGC,IAAH,2DAAG,MAAMC,OAAT,0EAAG,cAAeC,MAAlB,yDAAG,qBAAuBC,SAAvB,CAAkCC,KAAD,IAAgBA,KAAK,CAACP,OAAN,KAAkBA,OAAnE,CAAnB;AACA,QAAMQ,WAAW,aAAGL,IAAH,oEAAG,OAAMC,OAAN,CAAcC,MAAd,CAAqBH,UAArB,CAAH,oFAAG,sBAAkCO,OAArC,2DAAG,uBAA2CH,SAA3C,CAAsDI,MAAD,IAAiBA,MAAM,CAACC,WAAP,KAAuBZ,MAAM,CAACY,WAApG,CAApB;AACA,MAAIC,OAAO,aAAGT,IAAH,oEAAG,OAAMC,OAAN,CAAcC,MAAd,CAAqBH,UAArB,CAAH,oFAAG,sBAAkCO,OAAlC,CAA0CD,WAA1C,CAAH,2DAAG,uBAAwDI,OAAtE,CAHkF,CAIlF;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;;AACA,SACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAa,GAAEA,OAAQ,OAAvB,CADJ;AAGH,CAlBD;;AAoBA,eAAed,eAAf","sourcesContent":["import React from 'react';\nimport { Text } from '../../your-plants.style';\n\ninterface Props {\n  module: any;\n  plantId: any;\n  latestDataFetched: any;\n}\n\nconst HumidityReading: React.FC<Props> = ({ module, plantId, latestDataFetched  }) => {\n    const plantIndex = data?.getUser?.plants?.findIndex((plant: any) => plant.plantId === plantId);\n    const sensorIndex = data?.getUser.plants[plantIndex]?.sensors?.findIndex((sensor: any) => sensor.settingType === module.settingType);            \n    let reading = data?.getUser.plants[plantIndex]?.sensors[sensorIndex]?.reading;\n    // console.log('data?.getUser.plants[plantIndex]?.sensor', data?.getUser.plants[plantIndex].sensors, module.settingType)\n    // console.log('plantIndex', plantIndex)\n    // console.log('reading', reading)\n    \n    // if (reading > -5 && reading <= 0) reading = 0;\n    // if (reading >= 100 && reading < 110) reading = 100;\n\n\n    // const readingFormatted = (reading >= -10 && reading < 0) ? 0 + ' % ðŸ’§' : (reading >= 0 && reading <= 100 && reading) ? reading + ' % ðŸ’§' : 'Disconected';\n    // const readingFormatted = (module.reading >= 0 && module.reading <= 110) ? `${module.reading} % ðŸ’§` : 'Disconected';  \n    // console.log(\"module.reading\", module.reading, reading)\n    return (\n        <Text bold>{`${reading} % ðŸ’§`}</Text>\n    );\n};\n\nexport default HumidityReading;\n"]},"metadata":{},"sourceType":"module"}