{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { DeliveryMethods, DeliveryText, LocationContent, MethodOption, Options, SubHeaderWrapper } from './sub-header.style';\nimport { openModal } from '@redq/reuse-modal';\nimport { useLocale } from 'contexts/language/language.provider';\nimport { useMedia } from 'utils/use-media';\nimport { FormattedMessage } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport LocationModal from 'features/location-modal/location-modal';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from 'features/authentication-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\n\nvar LocationMenu = function LocationMenu(_ref) {\n  var cityAndStateText = _ref.cityAndStateText,\n      deliveryMethodSelected = _ref.deliveryMethodSelected,\n      isOpen = _ref.isOpen;\n  var noOptionSelected = deliveryMethodSelected === DeliveryMethodsConstants.PICKUP || deliveryMethodSelected === DeliveryMethodsConstants.DELIVERY;\n  return __jsx(LocationContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, isOpen ? __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleDown,\n    className: \"fas fa-chevron-down\",\n    style: {\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleUp,\n    className: \"fas fa-chevron-up\",\n    style: {\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }\n  }), __jsx(DeliveryText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, deliveryMethodSelected));\n};\n\n_c = LocationMenu;\n\nvar SubHeader = function SubHeader(_ref2) {\n  _s();\n\n  var _deliverData$delivery;\n\n  var props = _extends({}, _ref2);\n\n  var _useLocale = useLocale(),\n      location = _useLocale.location;\n\n  var mobile = useMedia('(max-width: 580px)');\n\n  var _React$useState = React.useState('How you want your items?'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      deliveryMethodSelected = _React$useState2[0],\n      setDeliveryMethod = _React$useState2[1];\n\n  var _useQuery = useQuery(DELIVERY_METHOD),\n      deliverData = _useQuery.data;\n\n  var _useContext = useContext(AuthContext),\n      authDispatch = _useContext.authDispatch;\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      subHeaderModal = _React$useState4[0],\n      setSubHeaderModal = _React$useState4[1];\n\n  var setDelivery = function setDelivery(e, deli) {\n    e.stopPropagation();\n    setDeliveryMethod(deli);\n  };\n\n  var deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items; // const orderDeliveryMethod = deliveryMethods?.filter(method => method.id === myOrder?.delivery_method_id)[0];\n  // const deliveryDateAndTime = `${myOrder?.delivery_pickup_date} ${getDeliverySchedule(orderDeliveryMethod?.details, intl.locale)}`;\n\n  console.log('deliveryMethods', deliveryMethods);\n  var pickUpOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n    return deliveryMethod.isPickUp === true;\n  });\n  var isPickUp = deliveryMethodSelected === DeliveryMethodsConstants.PICKUP;\n  var hasDefaultPickUpOption = true;\n  var a = isPickUp && hasDefaultPickUpOption ? 'Find the closest PickUp Location' : 'Check delivery address ZIP CODE';\n  var cityAndStateText = isPickUp ? a : location ? mobile ? \"\".concat(location.split(', ')[1], \", \").concat(location.split(', ')[2]) : \"\".concat(location.split(', ')[0], \", \").concat(location.split(', ')[1]) : '';\n\n  var openLocationModal = function openLocationModal() {\n    authDispatch({\n      type: 'LOCATION_MODAL'\n    });\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto'\n      }\n    });\n  };\n\n  return __jsx(SubHeaderWrapper, {\n    className: props.className,\n    id: \"layout-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverBigger, {\n    direction: \"left\",\n    className: \"user-pages-dropdown\",\n    openHandler: __jsx(LocationMenu, {\n      isOpen: false,\n      deliveryMethodSelected: deliveryMethodSelected,\n      cityAndStateText: cityAndStateText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 22\n      }\n    }),\n    closeHandler: __jsx(LocationMenu, {\n      isOpen: true,\n      deliveryMethodSelected: deliveryMethodSelected,\n      cityAndStateText: cityAndStateText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 23\n      }\n    }),\n    content: __jsx(DeliveryMethods, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, __jsx(Options, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, __jsx(MethodOption, {\n      onClick: function onClick(e) {\n        return setDelivery(e, DeliveryMethodsConstants.PICKUP);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Pickup\"), __jsx(MethodOption, {\n      onClick: function onClick(e) {\n        return setDelivery(e, DeliveryMethodsConstants.DELIVERY);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, \"Delivery\")), __jsx(Wrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, __jsx(Container, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, __jsx(Heading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, isPickUp ? __jsx(FormattedMessage, {\n      id: \"pickupModalheading\",\n      defaultMessage: \"Select Your Location\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }) : __jsx(FormattedMessage, {\n      id: \"deliveryModalheading\",\n      defaultMessage: \"Select Your Location\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    })), __jsx(PlacesAutocomplete, {\n      value: address,\n      onChange: function onChange(e) {\n        return setAddress(e);\n      },\n      onSelect: handleSelect,\n      searchOptions: {\n        types: [],\n        componentRestrictions: {\n          country: \"us\"\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, function (_ref3) {\n      var getInputProps = _ref3.getInputProps,\n          suggestions = _ref3.suggestions,\n          getSuggestionItemProps = _ref3.getSuggestionItemProps,\n          loading = _ref3.loading;\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, __jsx(\"input\", _extends({}, getInputProps({\n        placeholder: \"Enter address\",\n        className: \"location-search-input\",\n        style: {\n          display: 'block',\n          width: '220px',\n          padding: '0px 8px',\n          appearance: 'none',\n          fontFamily: \"'Lato', sans-serif\",\n          fontSize: 'base',\n          lineHeight: 'inherit',\n          border: '1px solid',\n          borderColor: '#f1f1f1',\n          borderRadius: '3px',\n          backgroundColor: 'white',\n          color: 'text.bold',\n          height: '48px',\n          transition: 'all 0.25s ease',\n          // mb: 3,\n          '&:focus': {\n            borderColor: '#009E7F'\n          }\n        }\n      }), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 23\n        }\n      })), __jsx(\"div\", {\n        className: \"autocomplete-dropdown-container\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 23\n        }\n      }, loading && __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 37\n        }\n      }, \"Loading...\"), suggestions.map(function (suggestion) {\n        var style = suggestion.active ? {\n          backgroundColor: \"#fafafa\",\n          cursor: \"pointer\"\n        } : {\n          backgroundColor: \"#ffffff\",\n          cursor: \"pointer\"\n        };\n        return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n          style: style\n        }), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }\n        }), suggestion.description);\n      })));\n    }), __jsx(Button, {\n      fullwidth: true,\n      radius: 100,\n      onClick: handleZipCode,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"continueBtn\",\n      defaultMessage: \"Continue\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }))), __jsx(OfferSection, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, __jsx(GiftBox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }), __jsx(Offer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"locationModalFooter\",\n      defaultMessage: \"Free Delivery For 1st Order\",\n      values: {\n        number: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    })))), __jsx(LocationModal, {\n      isPick: deliveryMethodSelected === DeliveryMethodsConstants.PICKUP,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(SubHeader, \"Gx8xlBdy+45JeVB7I8gGc9dcEX4=\", false, function () {\n  return [useLocale, useMedia, useQuery];\n});\n\n_c2 = SubHeader;\nexport default SubHeader;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LocationMenu\");\n$RefreshReg$(_c2, \"SubHeader\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx"],"names":["React","useContext","DeliveryMethods","DeliveryText","LocationContent","MethodOption","Options","SubHeaderWrapper","openModal","useLocale","useMedia","FormattedMessage","PopoverBigger","LocationModal","AuthContext","AuthenticationForm","FontAwesomeIcon","faChevronCircleDown","faChevronCircleUp","DeliveryMethodsConstants","useQuery","DELIVERY_METHOD","LocationMenu","cityAndStateText","deliveryMethodSelected","isOpen","noOptionSelected","PICKUP","DELIVERY","color","SubHeader","props","location","mobile","useState","setDeliveryMethod","deliverData","data","authDispatch","subHeaderModal","setSubHeaderModal","setDelivery","e","deli","stopPropagation","deliveryMethods","items","console","log","pickUpOptionsMethods","filter","deliveryMethod","isPickUp","hasDefaultPickUpOption","a","split","openLocationModal","type","show","overlayClassName","closeOnClickOutside","component","closeComponent","config","enableResizing","disableDragging","className","width","height","address","setAddress","handleSelect","types","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","style","display","padding","appearance","fontFamily","fontSize","lineHeight","border","borderColor","borderRadius","backgroundColor","transition","map","suggestion","active","cursor","description","handleZipCode","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { BannerIcon, BannerText, DeliveryMethods, DeliveryText, LocationContent, MethodOption, Options, SubHeaderWrapper } from './sub-header.style';\nimport { openModal } from '@redq/reuse-modal';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport Popover from 'components/popover/popover';\nimport { useMedia } from 'utils/use-media';\nimport { MenuItem } from 'layouts/header/menu/language-switcher/language-switcher.style';\nimport { FormattedMessage } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport LocationModal from 'features/location-modal/location-modal';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from 'features/authentication-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faChevronCircleDown, faChevronCircleUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\n\ninterface Props {\n  className: string\n}\n\n\nconst LocationMenu = ({ cityAndStateText, deliveryMethodSelected, isOpen }) => {\n  const noOptionSelected = deliveryMethodSelected === DeliveryMethodsConstants.PICKUP || deliveryMethodSelected === DeliveryMethodsConstants.DELIVERY;\n  return (\n    <LocationContent>\n        { isOpen \n          ? (<FontAwesomeIcon icon={faChevronCircleDown} className=\"fas fa-chevron-down\" style={{ color: \"black\" }} />) \n          : (<FontAwesomeIcon icon={faChevronCircleUp} className=\"fas fa-chevron-up\" style={{ color: \"black\" }} />)\n        }\n        <DeliveryText>{deliveryMethodSelected}</DeliveryText>\n        {/* { noOptionSelected && (\n          <>\n              |\n            <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>\n            <BannerText>{cityAndStateText && cityAndStateText}</BannerText>\n          </>\n        )} */}\n      </LocationContent>\n  );\n};\n\n\nconst SubHeader: React.FC<Props> = ({ ...props  }) => {\n  const { location } = useLocale();\n  const mobile = useMedia('(max-width: 580px)');\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState('How you want your items?');\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  const { authDispatch } = useContext<any>(AuthContext);\n  const [subHeaderModal, setSubHeaderModal] = React.useState(false);\n\n  const setDelivery =  (e, deli) => {\n    e.stopPropagation();\n    setDeliveryMethod(deli)\n  };\n\n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  // const orderDeliveryMethod = deliveryMethods?.filter(method => method.id === myOrder?.delivery_method_id)[0];\n  // const deliveryDateAndTime = `${myOrder?.delivery_pickup_date} ${getDeliverySchedule(orderDeliveryMethod?.details, intl.locale)}`;\n  console.log('deliveryMethods', deliveryMethods)\n\n  const pickUpOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n    return deliveryMethod.isPickUp === true;\n  });\n\n  const isPickUp = deliveryMethodSelected === DeliveryMethodsConstants.PICKUP;\n  const hasDefaultPickUpOption = true;\n  const a = (isPickUp && hasDefaultPickUpOption) ? 'Find the closest PickUp Location' : 'Check delivery address ZIP CODE';\n  const cityAndStateText = isPickUp ? a : location ? mobile ?\n    `${location.split(', ')[1]}, ${location.split(', ')[2]}`\n    : `${location.split(', ')[0]}, ${location.split(', ')[1]}`\n    : '';\n\n  const openLocationModal = () => {\n    authDispatch({\n      type: 'LOCATION_MODAL',\n    });\n\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto',\n      },\n    });\n\n  };\n\n  return (\n    <SubHeaderWrapper className={props.className} id=\"layout-header\">\n      <PopoverBigger\n        direction=\"left\"\n        className=\"user-pages-dropdown\"\n        openHandler={<LocationMenu\n          isOpen={false} deliveryMethodSelected={deliveryMethodSelected} cityAndStateText={cityAndStateText} />\n        }\n        closeHandler={<LocationMenu\n          isOpen={true} deliveryMethodSelected={deliveryMethodSelected} cityAndStateText={cityAndStateText}/>\n        }\n        content={\n          <DeliveryMethods>\n      \n            <Options>\n              <MethodOption onClick={(e) => setDelivery(e, DeliveryMethodsConstants.PICKUP)}>Pickup</MethodOption> \n              <MethodOption onClick={(e) => setDelivery(e, DeliveryMethodsConstants.DELIVERY)}>Delivery</MethodOption> \n            </Options>\n            <Wrapper>\n              <Container>\n                <Heading>\n                  { isPickUp ? (\n                    <FormattedMessage\n                      id=\"pickupModalheading\"\n                      defaultMessage=\"Select Your Location\"\n                    />\n                  ) : (\n                    <FormattedMessage\n                      id=\"deliveryModalheading\"\n                      defaultMessage=\"Select Your Location\"\n                    />\n                  )}\n                </Heading>\n                {/* <SubHeading>\n                  <FormattedMessage\n                    id=\"locationModalSubHeading\"\n                    defaultMessage=\"You have to select your location for deliver service perpous\"\n                  />\n                </SubHeading> */}\n                <PlacesAutocomplete\n                  value={address}\n                  onChange={(e) => setAddress(e)}\n                  onSelect={handleSelect}\n                  searchOptions={{\n                    types: [],\n                    componentRestrictions: { country: \"us\" },\n                  }}\n                >\n                  {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                    <div>\n                      <input\n                        {...getInputProps({\n                          placeholder: \"Enter address\",\n                          className: \"location-search-input\",\n                          style: {\n                            display: 'block',\n                            width: '220px',\n\n                            padding:'0px 8px',\n                            appearance: 'none',\n                            fontFamily: `'Lato', sans-serif`,\n                            fontSize: 'base',\n                            lineHeight: 'inherit',\n                            border: '1px solid',\n                            borderColor: '#f1f1f1',\n                            borderRadius: '3px',\n                            backgroundColor: 'white',\n                            color: 'text.bold',\n                            height: '48px',\n                            transition: 'all 0.25s ease',\n                            // mb: 3,\n                            '&:focus': {\n                              borderColor: '#009E7F',\n                            },\n                          },\n                        })}\n                      />\n                      <div className=\"autocomplete-dropdown-container\">\n                        {loading && <div>Loading...</div>}\n                        {suggestions.map((suggestion) => {\n                          const style = suggestion.active\n                            ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                            : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                          return (\n                            <div {...getSuggestionItemProps(suggestion, { style })}>\n                              {suggestion.description}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  )}\n                </PlacesAutocomplete>\n                <Button\n                  fullwidth\n                  radius={100}\n                  onClick={handleZipCode}\n                >\n                  <FormattedMessage id='continueBtn' defaultMessage='Continue' />\n                </Button>\n              </Container>\n              <OfferSection>\n                <GiftBox />\n                <Offer>\n                  <FormattedMessage\n                    id=\"locationModalFooter\"\n                    defaultMessage=\"Free Delivery For 1st Order\"\n                    values={{ number: 1 }}\n                  />\n                </Offer>\n              </OfferSection>\n            </Wrapper>\n            <LocationModal\n              isPick={deliveryMethodSelected === DeliveryMethodsConstants.PICKUP}\n             />\n        </DeliveryMethods>\n        }\n      />\n  </SubHeaderWrapper>\n  );\n\n};\n\nexport default SubHeader;\n"]},"metadata":{},"sourceType":"module"}