{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/pages/checkout.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Modal } from '@redq/reuse-modal';\nimport { openModal } from '@redq/reuse-modal';\nimport { SEO } from 'components/seo';\nimport Checkout from 'features/checkouts/checkout-two/checkout-two';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { PAYMENT_OPTION } from 'graphql/query/paymentoption';\nimport { ProfileProvider } from 'contexts/profile/profile.provider';\nimport ErrorMessage from 'components/error-message/error-message';\nimport ErrorMessageTwo from 'components/error-message/error-message-two';\nimport { AuthContext } from \"../contexts/auth/auth.context\";\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Button } from \"../components/button/button\";\nimport styled from \"styled-components\";\nimport AuthenticationForm from \"../features/authentication-form\";\nimport { LinkButton, Offer } from 'features/authentication-form/authentication-form.style';\nconst LoginMessageDiv = styled.aside.withConfig({\n  displayName: \"checkout__LoginMessageDiv\",\n  componentId: \"ca89yr-0\"\n})({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '15vh',\n  padding: '0 1.5rem 1.5rem',\n  fontSize: '22px',\n  backgroundColor: '#fff'\n});\n\nconst CheckoutPage = ({\n  deviceType\n}) => {\n  var _error$toString;\n\n  const {\n    data: deliverData,\n    error: deliveryError,\n    loading: deliveryLoading,\n    refetch: deliveryRefetch\n  } = useQuery(DELIVERY_METHOD);\n  const {\n    data: paymentData,\n    error: paymentError,\n    loading: paymentLoading,\n    refetch: paymentRefetch\n  } = useQuery(PAYMENT_OPTION);\n  const {\n    data,\n    error,\n    loading,\n    refetch: userRefetch\n  } = useQuery(GET_LOGGED_IN_USER);\n  const intl = useIntl();\n\n  if (error) {\n    userRefetch();\n    return null;\n  }\n\n  const {\n    authDispatch\n  } = useContext(AuthContext);\n\n  const toggleSignUpForm = () => {\n    authDispatch({\n      type: 'SIGNUP'\n    });\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto'\n      }\n    });\n  };\n\n  const toggleSignInForm = () => {\n    authDispatch({\n      type: 'SIGNIN'\n    });\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto'\n      }\n    });\n  };\n\n  if (loading || deliveryLoading || paymentLoading) {\n    return __jsx(ErrorMessage, {\n      message: 'Loading...',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (error === null || error === void 0 ? void 0 : (_error$toString = error.toString()) === null || _error$toString === void 0 ? void 0 : _error$toString.includes('no token sent')) {\n    // @ts-ignore\n    return __jsx(React.Fragment, null, __jsx(ErrorMessageTwo, {\n      message: intl.formatMessage({\n        id: 'notAuth',\n        defaultMessage: 'notAuth'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), __jsx(LoginMessageDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, __jsx(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, __jsx(Button, {\n      type: \"button\",\n      onClick: toggleSignInForm,\n      size: \"big\",\n      style: {\n        width: '200px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, intl.formatMessage({\n      id: 'loginBtnText',\n      defaultMessage: 'loginBtnText'\n    })), __jsx(Offer, {\n      style: {\n        padding: '20px 20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"dontHaveAccount\",\n      defaultMessage: \"Don't have any account?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }), ' ', __jsx(LinkButton, {\n      onClick: toggleSignUpForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"signUpBtnText\",\n      defaultMessage: \"Sign Up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }))))));\n  } else if (error || deliveryError || paymentError) {\n    // @ts-ignore\n    const err = error || deliveryError || paymentError;\n    return __jsx(React.Fragment, null, __jsx(ErrorMessageTwo, {\n      message: intl.formatMessage({\n        id: 'somethingWentWrongAuth',\n        defaultMessage: err.toString()\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }), __jsx(LoginMessageDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, __jsx(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, __jsx(Button, {\n      type: \"button\",\n      onClick: toggleSignInForm,\n      size: \"big\",\n      style: {\n        width: '200px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, intl.formatMessage({\n      id: 'loginBtnText',\n      defaultMessage: 'loginBtnText'\n    })), __jsx(Offer, {\n      style: {\n        padding: '20px 20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"dontHaveAccount\",\n      defaultMessage: \"Don't have any account?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }), ' ', __jsx(LinkButton, {\n      onClick: toggleSignUpForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"signUpBtnText\",\n      defaultMessage: \"Sign Up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }))))));\n  }\n\n  const token = 'true';\n  deliveryRefetch();\n  paymentRefetch();\n  console.dir(deliverData.deliveryMethods);\n  console.dir(paymentData.paymentOptions);\n\n  const checkoutData = _objectSpread(_objectSpread({}, data.getUser), {}, {\n    deliveryMethods: [],\n    paymentMethods: []\n  });\n\n  console.dir(deliverData);\n  console.dir(paymentData);\n\n  if (checkoutData.deliveryMethods.length == 0 && (deliverData || deliverData.deliveryMethods)) {\n    checkoutData.deliveryMethods = [...deliverData.deliveryMethods.items];\n  }\n\n  if (checkoutData.paymentMethods.length == 0 && (paymentData || paymentData.paymentOptions)) {\n    checkoutData.paymentMethods = [...paymentData.paymentOptions.items];\n  }\n\n  return __jsx(React.Fragment, null, __jsx(SEO, {\n    title: \"Checkout - Ditto\",\n    description: \"Checkout Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }), __jsx(ProfileProvider, {\n    initData: checkoutData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, __jsx(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, __jsx(Checkout, {\n    token: token,\n    deviceType: deviceType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default CheckoutPage;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/pages/checkout.tsx"],"names":["React","useContext","useQuery","Modal","openModal","SEO","Checkout","GET_LOGGED_IN_USER","DELIVERY_METHOD","PAYMENT_OPTION","ProfileProvider","ErrorMessage","ErrorMessageTwo","AuthContext","FormattedMessage","useIntl","Button","styled","AuthenticationForm","LinkButton","Offer","LoginMessageDiv","aside","display","justifyContent","alignItems","height","padding","fontSize","backgroundColor","CheckoutPage","deviceType","data","deliverData","error","deliveryError","loading","deliveryLoading","refetch","deliveryRefetch","paymentData","paymentError","paymentLoading","paymentRefetch","userRefetch","intl","authDispatch","toggleSignUpForm","type","show","overlayClassName","closeOnClickOutside","component","closeComponent","config","enableResizing","disableDragging","className","width","toggleSignInForm","toString","includes","formatMessage","id","defaultMessage","err","token","console","dir","deliveryMethods","paymentOptions","checkoutData","getUser","paymentMethods","length","items"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {NextPage, GetStaticProps} from 'next';\nimport Router from 'next/router';\nimport {useQuery} from '@apollo/react-hooks';\nimport {Modal} from '@redq/reuse-modal';\nimport { openModal } from '@redq/reuse-modal';\nimport {SEO} from 'components/seo';\nimport Checkout from 'features/checkouts/checkout-two/checkout-two';\nimport {GET_LOGGED_IN_USER} from 'graphql/query/customer.query';\nimport {DELIVERY_METHOD} from 'graphql/query/delivery';\nimport {PAYMENT_OPTION} from 'graphql/query/paymentoption';\nimport {ProfileProvider} from 'contexts/profile/profile.provider';\nimport ErrorMessage from 'components/error-message/error-message';\nimport ErrorMessageTwo from 'components/error-message/error-message-two';\nimport {AuthContext} from \"../contexts/auth/auth.context\";\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport {Button} from \"../components/button/button\";\nimport styled from \"styled-components\";\nimport AuthenticationForm from \"../features/authentication-form\";\nimport { render } from 'react-dom';\nimport { LinkButton, Offer } from 'features/authentication-form/authentication-form.style';\n\ntype Props = {\n    deviceType: {\n        mobile: boolean;\n        tablet: boolean;\n        desktop: boolean;\n    };\n};\n\nconst LoginMessageDiv = styled.aside({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '15vh',\n    padding: '0 1.5rem 1.5rem',\n    fontSize: '22px',\n    backgroundColor: '#fff',\n});\n\nconst CheckoutPage: NextPage<Props> = ({deviceType}) => {\n    const {data: deliverData, error: deliveryError, loading: deliveryLoading, refetch: deliveryRefetch} = useQuery(DELIVERY_METHOD)\n    const {data: paymentData, error: paymentError, loading: paymentLoading, refetch: paymentRefetch} = useQuery(PAYMENT_OPTION);\n    const {data, error, loading, refetch: userRefetch} = useQuery(GET_LOGGED_IN_USER);\n    const intl = useIntl();\n\n    if (error) { userRefetch(); return(null); }\n\n    const {authDispatch} = useContext<any>(AuthContext);\n\n    const toggleSignUpForm = () => {\n        authDispatch({\n            type: 'SIGNUP',\n        });\n\n        openModal({\n            show: true,\n            overlayClassName: 'quick-view-overlay',\n            closeOnClickOutside: true,\n            component: AuthenticationForm,\n            closeComponent: '',\n            config:{\n                enableResizing: false,\n                disableDragging: true,\n                className: 'quick-view-modal',\n                width: 458,\n                height: 'auto',\n            },\n        });\n    };\n\n    const toggleSignInForm = () => {\n        authDispatch({\n            type: 'SIGNIN',\n        });\n\n        openModal({\n            show: true,\n            overlayClassName: 'quick-view-overlay',\n            closeOnClickOutside: true,\n            component: AuthenticationForm,\n            closeComponent: '',\n            config:{\n                enableResizing: false,\n                disableDragging: true,\n                className: 'quick-view-modal',\n                width: 458,\n                height: 'auto',\n            },\n        });\n    };\n\n    if (loading || deliveryLoading || paymentLoading) {\n        return <ErrorMessage message={'Loading...'}/>\n    }\n\n    if (error?.toString()?.includes('no token sent')) {\n        // @ts-ignore\n        return (\n            <>\n                <ErrorMessageTwo message={intl.formatMessage({ id: 'notAuth', defaultMessage: 'notAuth' })}/>\n                <LoginMessageDiv>\n                    <Modal>\n                    <Button\n                        type='button'\n                        onClick={toggleSignInForm}\n                        size='big'\n                        style={{width: '200px'}}\n                    >\n                        {intl.formatMessage({ id: 'loginBtnText', defaultMessage: 'loginBtnText' })}\n                    </Button>\n                    <Offer style={{ padding: '20px 20px' }}>\n                        <FormattedMessage\n                            id='dontHaveAccount'\n                            defaultMessage=\"Don't have any account?\"\n                        />{' '}\n                        <LinkButton onClick={toggleSignUpForm}>\n                            <FormattedMessage id='signUpBtnText' defaultMessage='Sign Up' />\n                        </LinkButton>\n                    </Offer>\n                    </Modal>\n                </LoginMessageDiv>\n            </>\n        )\n    } else if (error || deliveryError || paymentError) {\n        // @ts-ignore\n        const err = error || deliveryError || paymentError;\n        return (\n            <>\n                <ErrorMessageTwo message={intl.formatMessage({ id: 'somethingWentWrongAuth', defaultMessage: err.toString() })}/>\n                <LoginMessageDiv>\n                    <Modal>\n                    <Button\n                        type='button'\n                        onClick={toggleSignInForm}\n                        size='big'\n                        style={{width: '200px'}}\n                    >\n                        {intl.formatMessage({ id: 'loginBtnText', defaultMessage: 'loginBtnText' })}\n                    </Button>\n                    <Offer style={{ padding: '20px 20px' }}>\n                        <FormattedMessage\n                            id='dontHaveAccount'\n                            defaultMessage=\"Don't have any account?\"\n                        />{' '}\n                        <LinkButton onClick={toggleSignUpForm}>\n                            <FormattedMessage id='signUpBtnText' defaultMessage='Sign Up' />\n                        </LinkButton>\n                    </Offer>\n                    </Modal>\n                </LoginMessageDiv>\n            </>\n        )\n    }\n\n    const token = 'true';\n\n    deliveryRefetch();\n    paymentRefetch();\n\n    console.dir(deliverData.deliveryMethods)\n    console.dir(paymentData.paymentOptions)\n\n    const checkoutData = {\n        ...data.getUser,\n        deliveryMethods: [],\n        paymentMethods: [],\n    }\n\n\n    console.dir(deliverData)\n    console.dir(paymentData)\n\n    if (checkoutData.deliveryMethods.length == 0 && (deliverData || deliverData.deliveryMethods)) {\n        checkoutData.deliveryMethods = [...deliverData.deliveryMethods.items];\n    }\n\n    if (checkoutData.paymentMethods.length == 0 && (paymentData || paymentData.paymentOptions)) {\n        checkoutData.paymentMethods = [...paymentData.paymentOptions.items];\n    }\n\n\n    return (\n        <>\n            <SEO title=\"Checkout - Ditto\" description=\"Checkout Details\"/>\n            <ProfileProvider initData={checkoutData}>\n                <Modal>\n                    <Checkout token={token} deviceType={deviceType}/>\n                </Modal>\n            </ProfileProvider>\n        </>\n    );\n};\n\nexport default CheckoutPage;\n"]},"metadata":{},"sourceType":"module"}