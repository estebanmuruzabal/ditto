{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/market/market.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { PlantsPageContainer, BlockTitle, PlantPageWrapper } from './market.style';\nimport { FormattedMessage } from 'react-intl';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { GET_SETTING } from 'graphql/query/site.settings.query';\n\nvar Market = function Market(_ref) {\n  _s();\n\n  var deviceType = _ref.deviceType,\n      userRefetch = _ref.userRefetch;\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useQuery = useQuery(GET_SETTING),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  var _useState = useState(),\n      siteSettingData = _useState[0],\n      setSiteSettingData = _useState[1];\n\n  useEffect(function () {\n    if (data) {\n      setSiteSettingData(JSON.parse(data.getSiteSetting.value));\n    }\n  }, [data]);\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Cargando...',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    });\n  }\n\n  ;\n  var growersList = [{\n    user_id: '32151231',\n    productsCategories: [],\n    bestSellProducts: [],\n    slug: '/el-patio-de-cachito'\n  }];\n  return __jsx(PlantPageWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, __jsx(PlantsPageContainer, {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: \"home-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"backProfileBtn\",\n    defaultMessage: \"Back to Profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }))), __jsx(BlockTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"dittoBotsIds\",\n    defaultMessage: \"dittoBotsIds\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(Market, \"4z9NqEaexbwCFq0Ne3W4VP/SK60=\", false, function () {\n  return [useQuery];\n});\n\n_c = Market;\nexport default Market;\n\nvar _c;\n\n$RefreshReg$(_c, \"Market\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/market/market.tsx"],"names":["React","useState","useEffect","useContext","Link","useQuery","ErrorMessage","PlantsPageContainer","BlockTitle","PlantPageWrapper","FormattedMessage","ProfileContext","GET_SETTING","Market","deviceType","userRefetch","state","dispatch","data","error","loading","siteSettingData","setSiteSettingData","JSON","parse","getSiteSetting","value","message","growersList","user_id","productsCategories","bestSellProducts","slug","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAAsBC,QAAtB,QAAsC,qBAAtC;AAEA,OAAOC,YAAP,MAAyB,wCAAzB;AAEA,SACEC,mBADF,EAGEC,UAHF,EASEC,gBATF,QAeO,gBAfP;AAgBA,SAASC,gBAAT,QAA0C,YAA1C;AAMA,SAASC,cAAT,QAA+B,kCAA/B;AAGA,SAASC,WAAT,QAA4B,mCAA5B;;AAeA,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAAiC;AAAA;;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,oBACzCZ,UAAU,CAACQ,cAAD,CAD+B;AAAA,MAC7DK,KAD6D,eAC7DA,KAD6D;AAAA,MACtDC,QADsD,eACtDA,QADsD;;AAAA,kBAGtCZ,QAAQ,CAACO,WAAD,CAH8B;AAAA,MAG9DM,IAH8D,aAG9DA,IAH8D;AAAA,MAGxDC,KAHwD,aAGxDA,KAHwD;AAAA,MAGjDC,OAHiD,aAGjDA,OAHiD;;AAAA,kBAIrBnB,QAAQ,EAJa;AAAA,MAI7DoB,eAJ6D;AAAA,MAI5CC,kBAJ4C;;AAMrEpB,EAAAA,SAAS,CAAE,YAAM;AACf,QAAGgB,IAAH,EAAQ;AACNI,MAAAA,kBAAkB,CAACC,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACO,cAAL,CAAoBC,KAA/B,CAAD,CAAlB;AACD;AACF,GAJQ,EAIN,CAACR,IAAD,CAJM,CAAT;;AAMA,MAAIE,OAAJ,EAAa;AACX,WAAO,MAAC,YAAD;AAAc,MAAA,OAAO,EAAE,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAAA;;AAED,MAAID,KAAJ,EAAW;AACT,WACE,MAAC,YAAD;AAAc,MAAA,OAAO,EAAEA,KAAK,CAACQ,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAAA;AAED,MAAMC,WAAW,GAAG,CAClB;AACEC,IAAAA,OAAO,EAAE,UADX;AAEEC,IAAAA,kBAAkB,EAAE,EAFtB;AAGEC,IAAAA,gBAAgB,EAAE,EAHpB;AAIEC,IAAAA,IAAI,EAAE;AAJR,GADkB,CAApB;AASA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AAAqB,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,gBAArB;AAAsC,IAAA,cAAc,EAAC,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAOE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,cAAc,EAAC,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,CADF;AA+BD,CA9DD;;GAAMpB,M;UAG2BR,Q;;;KAH3BQ,M;AAgEN,eAAeA,MAAf","sourcesContent":["import React,  { useState, useEffect, useContext } from 'react';\nimport Link from 'next/link';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { CommonMode, RelaysIds, SensorsTypes } from 'utils/constant';\nimport ErrorMessage from 'components/error-message/error-message';\n\nimport {\n  PlantsPageContainer,\n  OrderDetails,\n  BlockTitle,\n  Text,\n  ListItem,\n  ListTitle,\n  ListDes,\n  ButtonText,\n  PlantPageWrapper,\n  PlantsWrapper,\n  PlantsSensorContainer,\n  Column1,\n  Row1,\n  CardButtons\n} from './market.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { Button } from 'components/button/button';\nimport { ADD_PLANT, DELETE_SETTING, UPDATE_SETTING } from 'graphql/query/plants.query';\nimport { GeolocateControl } from \"mapbox-gl\";\nimport { Input } from 'components/forms/input';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { SuccessMsg } from 'features/user-profile/settings/settings.style';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { GET_SETTING } from 'graphql/query/site.settings.query';\n  \n\ntype MarketProps = {\n  data?: any;\n  userRefetch: any;\n  index?: Number;\n  Router?: any;\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst Market: React.FC<MarketProps> = ({ deviceType, userRefetch }) => {\n  const { state, dispatch } = useContext(ProfileContext);\n  \n  const {data, error, loading} = useQuery(GET_SETTING);\n  const [ siteSettingData, setSiteSettingData ] = useState<any | null>();\n\n  useEffect( () => {\n    if(data){\n      setSiteSettingData(JSON.parse(data.getSiteSetting.value))\n    }\n  }, [data])\n\n  if (loading) {\n    return <ErrorMessage message={'Cargando...'} />\n  };\n\n  if (error) {\n    return (\n      <ErrorMessage message={error.message} />\n    );\n  };\n\n  const growersList = [\n    {\n      user_id: '32151231',\n      productsCategories: [],\n      bestSellProducts: [],\n      slug: '/el-patio-de-cachito'\n    }\n  ]\n\n  return (\n    <PlantPageWrapper>\n      <PlantsPageContainer style={{ width: '100%' }}>\n        <Link href=\"/profile\">\n          <a className=\"home-btn\">\n            <FormattedMessage id=\"backProfileBtn\" defaultMessage=\"Back to Profile\" />\n          </a>\n        </Link>\n\n        <BlockTitle>\n          <FormattedMessage\n            id=\"dittoBotsIds\"\n            defaultMessage=\"dittoBotsIds\"\n          />\n        </BlockTitle>\n{/* \n        <buscador />\n        <filtros />\n        < Mapa growersList={\n          userId\n          productos(fetch categorylist and 5 products?)\n          slug\n\n        }  /> <Filtros />\n        <ProductosList>\n          <Product>\n          <Product>\n        </ProductosList> */}\n      </PlantsPageContainer>\n    </PlantPageWrapper>\n  );\n};\n\nexport default Market;"]},"metadata":{},"sourceType":"module"}