{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router'; // the redirect will only happen on the client-side. This is by design,\n\nvar IndexPage = function IndexPage() {\n  _s();\n\n  useEffect(function () {\n    Router.replace('/[type]', '/grocery');\n  });\n  return __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"meta\", {\n    name: \"robots\",\n    content: \"noindex, nofollow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(IndexPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = IndexPage;\nexport default IndexPage;\n/*import { useEffect } from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_TYPE } from 'graphql/query/type.query';\nimport ErrorMessage from 'components/error-message/error-message';\n\n// the redirect will only happen on the client-side. This is by design,\nconst IndexPage: React.FC<{}> = () => {\n  let selectedMenu = null;\n  let defaultMenu = null;\n  const { data, error, loading } = useQuery(\n    GET_TYPE,\n    {\n      variables: {\n        searchText: ''\n      }\n    }\n  );\n  if (loading) {\n    return <ErrorMessage message={'Loading...'} />\n  };\n\n  if (error) {\n    return (\n      <ErrorMessage message={'Error occured for only domain routing'} />\n    );\n  };\n\n  const typeMenu = data.types.items.map((item) => {\n    return({\n      id: item.id,\n      href: `/${item.slug}`\n    })\n  })\n  defaultMenu = typeMenu[0].href;\n  if(localStorage.getItem('myMenu')){\n    selectedMenu = JSON.parse(localStorage.getItem('myMenu'));\n    selectedMenu = selectedMenu.href;\n  }\n\n  useEffect(() => {\n    Router.replace('/[type]', selectedMenu !== null ? selectedMenu : defaultMenu);\n  });\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n};\n\nexport default IndexPage;\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/pages/index.tsx"],"names":["useEffect","Head","Router","IndexPage","replace"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;;AACA,IAAMC,SAAuB,GAAG,SAA1BA,SAA0B,GAAM;AAAA;;AACpCH,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,MAAM,CAACE,OAAP,CAAe,SAAf,EAA0B,UAA1B;AACD,GAFQ,CAAT;AAGA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,OAAO,EAAC,mBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CATD;;GAAMD,S;;KAAAA,S;AAWN,eAAeA,SAAf;AAIA","sourcesContent":["import { useEffect } from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\n\n// the redirect will only happen on the client-side. This is by design,\nconst IndexPage: React.FC<{}> = () => {\n  useEffect(() => {\n    Router.replace('/[type]', '/grocery');\n  });\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n};\n\nexport default IndexPage;\n\n\n\n/*import { useEffect } from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_TYPE } from 'graphql/query/type.query';\nimport ErrorMessage from 'components/error-message/error-message';\n\n// the redirect will only happen on the client-side. This is by design,\nconst IndexPage: React.FC<{}> = () => {\n  let selectedMenu = null;\n  let defaultMenu = null;\n  const { data, error, loading } = useQuery(\n    GET_TYPE,\n    {\n      variables: {\n        searchText: ''\n      }\n    }\n  );\n  if (loading) {\n    return <ErrorMessage message={'Loading...'} />\n  };\n\n  if (error) {\n    return (\n      <ErrorMessage message={'Error occured for only domain routing'} />\n    );\n  };\n\n  const typeMenu = data.types.items.map((item) => {\n    return({\n      id: item.id,\n      href: `/${item.slug}`\n    })\n  })\n  defaultMenu = typeMenu[0].href;\n  if(localStorage.getItem('myMenu')){\n    selectedMenu = JSON.parse(localStorage.getItem('myMenu'));\n    selectedMenu = selectedMenu.href;\n  }\n\n  useEffect(() => {\n    Router.replace('/[type]', selectedMenu !== null ? selectedMenu : defaultMenu);\n  });\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n};\n\nexport default IndexPage;\n*/"]},"metadata":{},"sourceType":"module"}