{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/carts/cart-popup.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport Cart from './cart';\nimport { useIntl } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { useMedia } from 'utils/use-media';\nconst CartPopupStyle = createGlobalStyle`\n  .cartPopup{\n    top: auto !important;\n    left: auto !important;\n    bottom: 50px !important;\n    right: 50px !important;\n    box-shadow: ${themeGet('shadows.big', '0 21px 36px rgba(0, 0, 0, 0.16)')};\n    transform-origin: bottom right;\n\n    @media (max-width: 580px) {\n      max-width: none!important;\n      width: 100% !important;\n      bottom: 0 !important;\n      left: 0!important;\n      background: ${themeGet('colors.white', '#ffffff')};\n      overflow: initial !important;\n      transform-origin: bottom center;\n    }\n  }\n`;\n\nconst CartPopUp = ({\n  deviceType: {\n    tablet,\n    desktop\n  }\n}) => {\n  const {\n    isOpen,\n    cartItemsCount,\n    toggleCart,\n    calculatePrice\n  } = useCart();\n  const mobile = useMedia('(max-width: 580px)');\n  const intl = useIntl();\n\n  const handleModal = () => {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40\n        }\n      },\n      closeOnClickOutside: true,\n      component: Cart,\n      closeComponent: () => __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }),\n      componentProps: {\n        onCloseBtnClick: closeModal,\n        scrollbarHeight: 330\n      }\n    });\n  };\n\n  let cartSliderClass = isOpen === true ? 'cartPopupFixed' : '';\n  return __jsx(React.Fragment, null);\n};\n\nexport default CartPopUp;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/carts/cart-popup.tsx"],"names":["React","createGlobalStyle","themeGet","openModal","closeModal","Cart","useIntl","useCart","useMedia","CartPopupStyle","CartPopUp","deviceType","tablet","desktop","isOpen","cartItemsCount","toggleCart","calculatePrice","mobile","intl","handleModal","show","config","className","width","height","enableResizing","disableDragging","transition","tension","friction","closeOnClickOutside","component","closeComponent","componentProps","onCloseBtnClick","scrollbarHeight","cartSliderClass"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,mBAAtC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAMA,SAA2BC,OAA3B,QAA0C,YAA1C;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,MAAMC,cAAc,GAAGR,iBAAkB;;;;;;kBAMvBC,QAAQ,CAAC,aAAD,EAAgB,iCAAhB,CAAmD;;;;;;;;oBAQzDA,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAA4B;;;;;CAdxD;;AA6BA,MAAMQ,SAA8B,GAAG,CAAC;AACtCC,EAAAA,UAAU,EAAE;AAAGC,IAAAA,MAAH;AAAWC,IAAAA;AAAX;AAD0B,CAAD,KAEjC;AACJ,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,cAAV;AAA0BC,IAAAA,UAA1B;AAAsCC,IAAAA;AAAtC,MAAyDV,OAAO,EAAtE;AACA,QAAMW,MAAM,GAAGV,QAAQ,CAAC,oBAAD,CAAvB;AACA,QAAMW,IAAI,GAAGb,OAAO,EAApB;;AACA,QAAMc,WAAW,GAAG,MAAM;AACxBjB,IAAAA,SAAS,CAAC;AACRkB,MAAAA,IAAI,EAAE,IADE;AAERC,MAAAA,MAAM,EAAE;AACNC,QAAAA,SAAS,EAAE,WADL;AAENC,QAAAA,KAAK,EAAE,MAFD;AAGNC,QAAAA,MAAM,EAAE,MAHF;AAINC,QAAAA,cAAc,EAAE,KAJV;AAKNC,QAAAA,eAAe,EAAE,IALX;AAMNC,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE,GADC;AAEVC,UAAAA,QAAQ,EAAE;AAFA;AANN,OAFA;AAaRC,MAAAA,mBAAmB,EAAE,IAbb;AAcRC,MAAAA,SAAS,EAAE3B,IAdH;AAeR4B,MAAAA,cAAc,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfd;AAgBRC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,eAAe,EAAE/B,UAAnB;AAA+BgC,QAAAA,eAAe,EAAE;AAAhD;AAhBR,KAAD,CAAT;AAkBD,GAnBD;;AAqBA,MAAIC,eAAe,GAAGvB,MAAM,KAAK,IAAX,GAAkB,gBAAlB,GAAqC,EAA3D;AAEA,SACE,2BADF;AAKD,CAlCD;;AAoCA,eAAeJ,SAAf","sourcesContent":["import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport Cart from './cart';\nimport CartPopupButton, {\n  BoxedCartButton,\n} from 'components/cart-popup/cart-popup-button';\nimport { CURRENCY } from 'utils/constant';\nimport { CartSlidePopup } from './cart.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { useMedia } from 'utils/use-media';\n\nconst CartPopupStyle = createGlobalStyle`\n  .cartPopup{\n    top: auto !important;\n    left: auto !important;\n    bottom: 50px !important;\n    right: 50px !important;\n    box-shadow: ${themeGet('shadows.big', '0 21px 36px rgba(0, 0, 0, 0.16)')};\n    transform-origin: bottom right;\n\n    @media (max-width: 580px) {\n      max-width: none!important;\n      width: 100% !important;\n      bottom: 0 !important;\n      left: 0!important;\n      background: ${themeGet('colors.white', '#ffffff')};\n      overflow: initial !important;\n      transform-origin: bottom center;\n    }\n  }\n`;\n\ntype CartProps = {\n  deviceType: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst CartPopUp: React.FC<CartProps> = ({\n  deviceType: {  tablet, desktop },\n}) => {\n  const { isOpen, cartItemsCount, toggleCart, calculatePrice } = useCart();\n  const mobile = useMedia('(max-width: 580px)');\n  const intl = useIntl();\n  const handleModal = () => {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40,\n        },\n      },\n      closeOnClickOutside: true,\n      component: Cart,\n      closeComponent: () => <div />,\n      componentProps: { onCloseBtnClick: closeModal, scrollbarHeight: 330 },\n    });\n  };\n\n  let cartSliderClass = isOpen === true ? 'cartPopupFixed' : '';\n\n  return (\n    <>\n      \n    </>\n  );\n};\n\nexport default CartPopUp;\n"]},"metadata":{},"sourceType":"module"}