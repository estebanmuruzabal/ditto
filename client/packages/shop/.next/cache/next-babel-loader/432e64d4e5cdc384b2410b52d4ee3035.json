{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/user-profile/settings/settings.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Col } from 'react-styled-flexboxgrid';\nimport { openModal } from '@redq/reuse-modal';\nimport Router from 'next/router';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport RadioCard from 'components/radio-card/radio-card';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { DELETE_ADDRESS, SETPRIMARY_ADDRESS } from 'graphql/mutation/address';\nimport { UPDATE_USER } from 'graphql/mutation/user';\nimport { CHANGE_PASSWORD } from 'graphql/mutation/changePassword';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_PHONENUMBER, SETPRIMARY_PHONENUMBER } from 'graphql/mutation/phone';\nimport { SettingsForm, SettingsFormContent, HeadingSection, Title, Row, ButtonGroup, Input, SuccessMsg, InputUpper } from './settings.style';\nimport RadioGroupTwo from 'components/radio-group/radio-group-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport UpdateAddressTwo from 'components/address-card/address-card-two';\nimport UpdateContact from 'components/contact-card/contact-card';\nimport { Button } from 'components/button/button';\nimport { UPDATE_ME } from 'graphql/mutation/me';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Label } from 'components/forms/label';\n\nvar SettingsContent = function SettingsContent(_ref) {\n  _s();\n\n  var _state$oldPassword, _state$newPassword, _state$confirmPasswor;\n\n  var deviceType = _ref.deviceType;\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(''),\n      userinfoMsg = _useState[0],\n      setUserinfoMsg = _useState[1];\n\n  var _useState2 = useState(''),\n      passwordChangeMsg = _useState2[0],\n      setPasswordChangeMsg = _useState2[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      isAuthenticated = _React$useContext.authState.isAuthenticated,\n      authDispatch = _React$useContext.authDispatch;\n\n  var _useMutation = useMutation(UPDATE_ME),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateMeMutation = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_CARD),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deletePaymentCardMutation = _useMutation4[0];\n\n  var _useMutation5 = useMutation(UPDATE_USER),\n      _useMutation6 = _slicedToArray(_useMutation5, 1),\n      updateUserMutation = _useMutation6[0];\n\n  var _useMutation7 = useMutation(CHANGE_PASSWORD),\n      _useMutation8 = _slicedToArray(_useMutation7, 1),\n      changePasswordMutation = _useMutation8[0];\n\n  var _useMutation9 = useMutation(DELETE_PHONENUMBER),\n      _useMutation10 = _slicedToArray(_useMutation9, 1),\n      deletePhoneNumberMutation = _useMutation10[0];\n\n  var _useMutation11 = useMutation(SETPRIMARY_PHONENUMBER),\n      _useMutation12 = _slicedToArray(_useMutation11, 1),\n      setprimaryPhoneNumberMutation = _useMutation12[0];\n\n  var _useMutation13 = useMutation(SETPRIMARY_ADDRESS),\n      _useMutation14 = _slicedToArray(_useMutation13, 1),\n      setprimaryAddressMutation = _useMutation14[0];\n\n  var _useMutation15 = useMutation(DELETE_ADDRESS),\n      _useMutation16 = _slicedToArray(_useMutation15, 1),\n      deleteAddressMutation = _useMutation16[0];\n\n  var intl = useIntl();\n  var delivery_address = state.delivery_address,\n      card = state.card,\n      name = state.name,\n      email = state.email,\n      id = state.id,\n      phones = state.phones;\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name;\n    dispatch({\n      type: 'HANDLE_ON_INPUT_CHANGE',\n      payload: {\n        value: value,\n        field: name\n      }\n    });\n  }; // Add or edit modal\n\n\n  var handleModal = function handleModal(modalComponent) {\n    var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'add-address-modal';\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  var handleEditDelete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item, index, type, name) {\n      var modalComponent;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(type === 'edit')) {\n                _context.next = 5;\n                break;\n              }\n\n              modalComponent = name === 'address' ? UpdateAddressTwo : UpdateContact;\n              handleModal(modalComponent, {\n                item: item,\n                id: id\n              });\n              _context.next = 29;\n              break;\n\n            case 5:\n              _context.t0 = name;\n              _context.next = _context.t0 === 'payment' ? 8 : _context.t0 === 'contact' ? 12 : _context.t0 === 'address' ? 20 : 28;\n              break;\n\n            case 8:\n              dispatch({\n                type: 'DELETE_CARD',\n                payload: item.id\n              });\n              _context.next = 11;\n              return deletePaymentCardMutation({\n                variables: {\n                  cardId: JSON.stringify(item.id)\n                }\n              });\n\n            case 11:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 12:\n              if (!(phones.length > 1)) {\n                _context.next = 19;\n                break;\n              }\n\n              dispatch({\n                type: 'DELETE_CONTACT',\n                payload: item.id\n              });\n              _context.next = 16;\n              return deletePhoneNumberMutation({\n                variables: {\n                  id: id,\n                  phoneId: item.id\n                }\n              });\n\n            case 16:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 19:\n              return _context.abrupt(\"return\", null);\n\n            case 20:\n              if (!(delivery_address.length > 1)) {\n                _context.next = 27;\n                break;\n              }\n\n              dispatch({\n                type: 'DELETE_ADDRESS',\n                payload: item.id\n              });\n              _context.next = 24;\n              return deleteAddressMutation({\n                variables: {\n                  id: id,\n                  addressId: item.id\n                }\n              });\n\n            case 24:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 27:\n              return _context.abrupt(\"return\", null);\n\n            case 28:\n              return _context.abrupt(\"return\", false);\n\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleEditDelete(_x, _x2, _x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handlePrimary = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(item, name) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = name;\n              _context2.next = _context2.t0 === 'contact' ? 3 : _context2.t0 === 'address' ? 7 : 11;\n              break;\n\n            case 3:\n              dispatch({\n                type: 'SET_PRIMARY_CONTACT',\n                payload: item.id\n              });\n              _context2.next = 6;\n              return setprimaryPhoneNumberMutation({\n                variables: {\n                  id: id,\n                  phoneId: item.id\n                }\n              });\n\n            case 6:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 7:\n              dispatch({\n                type: 'SET_PRIMARY_ADDRESS',\n                payload: item.id\n              });\n              _context2.next = 10;\n              return setprimaryAddressMutation({\n                variables: {\n                  id: id,\n                  addressId: item.id\n                }\n              });\n\n            case 10:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 11:\n              return _context2.abrupt(\"return\", false);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handlePrimary(_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleSave = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var name, email;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              name = state.name, email = state.email;\n              _context3.next = 3;\n              return updateUserMutation({\n                variables: {\n                  id: id,\n                  name: name,\n                  email: email\n                }\n              });\n\n            case 3:\n              setUserinfoMsg('Update user info successfully');\n              setTimeout(function () {\n                setUserinfoMsg('');\n              }, 8000);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleSave() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleSavePassord = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var oldPassword, newPassword, confirmPassword, hasEmptyFields;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              oldPassword = state.oldPassword, newPassword = state.newPassword, confirmPassword = state.confirmPassword;\n              hasEmptyFields = !oldPassword || !newPassword || !(confirmPassword === null || confirmPassword === void 0 ? void 0 : confirmPassword.length) === 0;\n\n              if (!hasEmptyFields) {\n                _context4.next = 7;\n                break;\n              }\n\n              setPasswordChangeMsg(intl.formatMessage({\n                id: 'passwordEmptyFields',\n                defaultMessage: 'passwordEmptyFields'\n              }));\n              return _context4.abrupt(\"return\");\n\n            case 7:\n              setPasswordChangeMsg('');\n\n            case 8:\n              _context4.next = 10;\n              return changePasswordMutation({\n                variables: {\n                  id: id,\n                  old_password: oldPassword,\n                  new_password: newPassword,\n                  confirm_password: confirmPassword\n                }\n              });\n\n            case 10:\n              if (true) {\n                localStorage.removeItem('access_token');\n                authDispatch({\n                  type: 'SIGN_OUT'\n                });\n                Router.push('/');\n              }\n\n              setPasswordChangeMsg('Loadding...');\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleSavePassord() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var hasEmptyFields = ((_state$oldPassword = state.oldPassword) === null || _state$oldPassword === void 0 ? void 0 : _state$oldPassword.length) === 0 || ((_state$newPassword = state.newPassword) === null || _state$newPassword === void 0 ? void 0 : _state$newPassword.length) === 0 || ((_state$confirmPasswor = state.confirmPassword) === null || _state$confirmPasswor === void 0 ? void 0 : _state$confirmPasswor.length) === 0;\n  return __jsx(SettingsForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, __jsx(HeadingSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profilePageTitle\",\n    defaultMessage: \"Your Profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }))), __jsx(Row, {\n    style: {\n      alignItems: 'flex-end',\n      marginBottom: '50px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    lg: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileNameField\",\n    defaultMessage: \"Your Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  })), __jsx(InputUpper, {\n    type: \"text\",\n    label: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: handleChange,\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    marginBottom: \"10px\" // intlInputLabelId=\"profileNameField\"\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    lg: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileEmailField\",\n    defaultMessage: \"Your Email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  })), __jsx(Input, {\n    type: \"email\",\n    name: \"email\",\n    label: \"Email Address\",\n    value: email,\n    onChange: handleChange,\n    backgroundColor: \"#F7F7F7\",\n    marginBottom: \"10px\" // intlInputLabelId=\"profileEmailField\"\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 2,\n    md: 2,\n    lg: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"big\",\n    style: {\n      width: '100%',\n      marginBottom: '10px'\n    },\n    onClick: handleSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileSaveBtn\",\n    defaultMessage: \"Save\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }))), userinfoMsg && __jsx(SuccessMsg, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"userInfoSuccess\",\n    defaultMessage: userinfoMsg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }))), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, __jsx(HeadingSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }, __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"contactNumberTItle\",\n    defaultMessage: \"Contact Numbers\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  }))), __jsx(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, __jsx(RadioGroupThree, {\n    items: phones,\n    component: function component(item, index) {\n      return __jsx(RadioCard, {\n        id: index,\n        key: index,\n        title: item.is_primary ? intl.formatMessage({\n          id: 'primaryId',\n          defaultMessage: 'Primary'\n        }) : intl.formatMessage({\n          id: 'secundaryId',\n          defaultMessage: 'Secondary'\n        }),\n        content: item.number,\n        checked: item.is_primary === true,\n        onChange: function onChange() {\n          return handlePrimary(item, 'contact');\n        },\n        name: \"contact\",\n        onEdit: function onEdit() {\n          return handleEditDelete(item, index, 'edit', 'contact');\n        },\n        onDelete: function onDelete() {\n          return handleEditDelete(item, index, 'delete', 'contact');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }\n      });\n    },\n    secondaryComponent: __jsx(Button, {\n      size: \"big\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: function onClick() {\n        return handleModal(UpdateContact, {\n          item: {},\n          id: id\n        }, 'add-contact-modal');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addContactBtn\",\n      defaultMessage: \"Add Contact\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 23\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  }))))), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    style: {\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, __jsx(HeadingSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 15\n    }\n  }, __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"deliveryAddresTitle\",\n    defaultMessage: \"Delivery Address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 19\n    }\n  }))), __jsx(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, __jsx(RadioGroupTwo, {\n    items: delivery_address,\n    component: function component(item, index) {\n      return __jsx(RadioCardTWO, {\n        id: index,\n        key: index,\n        address: item.address,\n        district: item.district,\n        division: item.division,\n        title: item.title,\n        region: item.region,\n        name: \"address\",\n        isChecked: item.is_primary === true,\n        onChange: function onChange() {\n          return handlePrimary(item, 'address');\n        },\n        onEdit: function onEdit() {\n          return handleEditDelete(item, index, 'edit', 'address');\n        },\n        onDelete: function onDelete() {\n          return handleEditDelete(item, index, 'delete', 'address');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }\n      });\n    },\n    secondaryComponent: __jsx(Button, {\n      size: \"big\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: function onClick() {\n        return handleModal(UpdateAddressTwo, {\n          item: {},\n          id: id\n        }, 'add-address-modal');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: (delivery_address === null || delivery_address === void 0 ? void 0 : delivery_address.length) === 3 ? \"fullDeliveryAddressesMsg\" : \"addAddressBtn\",\n      defaultMessage: \"Add Address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 23\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }))))), __jsx(Row, {\n    style: {\n      alignItems: 'flex-end',\n      marginBottom: '50px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }, __jsx(HeadingSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 15\n    }\n  }, __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"changePasswordTitle\",\n    defaultMessage: \"Change Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 19\n    }\n  }))))), __jsx(Col, {\n    xs: 12,\n    sm: 2,\n    md: 2,\n    lg: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"password\"\n    /* label='Old Password' */\n    ,\n    placeholder: intl.formatMessage({\n      id: 'oldPasswordId',\n      defaultMessage: 'Old password'\n    }),\n    name: \"oldPassword\",\n    value: state.oldPassword || '',\n    onChange: handleChange,\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    marginBottom: \"10px\"\n    /* intlInputLabelId=\"profileNameField\" */\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 2,\n    md: 2,\n    lg: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"password\",\n    label: \"New Password\",\n    placeholder: intl.formatMessage({\n      id: 'newPasswordId',\n      defaultMessage: 'New password'\n    }),\n    name: \"newPassword\",\n    value: state.newPassword || '',\n    onChange: handleChange,\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    marginBottom: \"10px\" // intlInputLabelId=\"profileNameField\"\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 2,\n    md: 2,\n    lg: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    placeholder: intl.formatMessage({\n      id: 'confirmPasswordId',\n      defaultMessage: 'Confirm password'\n    }),\n    value: state.confirmPassword || '',\n    onChange: handleChange,\n    backgroundColor: \"#F7F7F7\",\n    marginBottom: \"10px\" // intlInputLabelId=\"profileEmailField\"\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 2,\n    md: 2,\n    lg: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 11\n    }\n  }, !passwordChangeMsg && __jsx(Button, {\n    size: \"big\",\n    style: {\n      width: '100%',\n      marginBottom: '10px'\n    },\n    onClick: handleSavePassord,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileSaveBtn\",\n    defaultMessage: \"Save\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 17\n    }\n  })), passwordChangeMsg && __jsx(Button, {\n    size: \"big\",\n    style: {\n      width: '100%'\n    },\n    onClick: handleSavePassord,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileSaveBtn\",\n    defaultMessage: \"Loading..\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 17\n    }\n  })), passwordChangeMsg && __jsx(SuccessMsg, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"userInfoSuccess\",\n    defaultMessage: userinfoMsg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 17\n    }\n  }))))));\n};\n\n_s(SettingsContent, \"IpTp2kzUkfaZ8EZ7JAHJ5jjjIss=\", false, function () {\n  return [useMutation, useMutation, useMutation, useMutation, useMutation, useMutation, useMutation, useMutation, useIntl];\n});\n\n_c = SettingsContent;\nexport default SettingsContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsContent\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/user-profile/settings/settings.tsx"],"names":["React","useContext","useState","useMutation","Col","openModal","Router","RadioCardTWO","RadioCard","ProfileContext","AuthContext","DELETE_ADDRESS","SETPRIMARY_ADDRESS","UPDATE_USER","CHANGE_PASSWORD","DELETE_CARD","DELETE_PHONENUMBER","SETPRIMARY_PHONENUMBER","SettingsForm","SettingsFormContent","HeadingSection","Title","Row","ButtonGroup","Input","SuccessMsg","InputUpper","RadioGroupTwo","RadioGroupThree","UpdateAddressTwo","UpdateContact","Button","UPDATE_ME","FormattedMessage","useIntl","Label","SettingsContent","deviceType","state","dispatch","userinfoMsg","setUserinfoMsg","passwordChangeMsg","setPasswordChangeMsg","isAuthenticated","authState","authDispatch","updateMeMutation","deletePaymentCardMutation","updateUserMutation","changePasswordMutation","deletePhoneNumberMutation","setprimaryPhoneNumberMutation","setprimaryAddressMutation","deleteAddressMutation","intl","delivery_address","card","name","email","id","phones","handleChange","e","target","value","type","payload","field","handleModal","modalComponent","modalProps","className","show","config","width","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","handleEditDelete","index","variables","cardId","JSON","stringify","length","phoneId","addressId","handlePrimary","handleSave","setTimeout","handleSavePassord","oldPassword","newPassword","confirmPassword","hasEmptyFields","formatMessage","defaultMessage","old_password","new_password","confirm_password","localStorage","removeItem","push","alignItems","marginBottom","is_primary","number","position","address","district","division","title","region"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Col } from 'react-styled-flexboxgrid';\nimport { openModal } from '@redq/reuse-modal';\nimport Router, { useRouter } from 'next/router';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport RadioCard from 'components/radio-card/radio-card';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { DELETE_ADDRESS, SETPRIMARY_ADDRESS } from 'graphql/mutation/address';\nimport { UPDATE_USER } from 'graphql/mutation/user';\nimport { CHANGE_PASSWORD } from 'graphql/mutation/changePassword';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_PHONENUMBER, SETPRIMARY_PHONENUMBER } from 'graphql/mutation/phone';\nimport StripePaymentForm from 'features/payment/stripe-form';\nimport {\n  SettingsForm,\n  SettingsFormContent,\n  HeadingSection,\n  Title,\n  Row,\n  ButtonGroup,\n  Input,\n  SuccessMsg,\n  ErrorMsg,\n  InputUpper\n} from './settings.style';\nimport RadioGroupTwo from 'components/radio-group/radio-group-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\n\nimport PaymentGroup from 'components/payment-group/payment-group';\nimport UpdateAddressTwo from 'components/address-card/address-card-two';\nimport UpdateContact from 'components/contact-card/contact-card';\nimport { Button } from 'components/button/button';\nimport { UPDATE_ME } from 'graphql/mutation/me';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Label } from 'components/forms/label';\nimport { ItemCount } from 'components/cart-popup/cart-popup.style';\n\ntype SettingsContentProps = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst SettingsContent: React.FC<SettingsContentProps> = ({ deviceType }) => {\n  const { state, dispatch } = useContext(ProfileContext);\n  const [userinfoMsg, setUserinfoMsg] = useState('');\n  const [passwordChangeMsg, setPasswordChangeMsg] = useState('');\n  const {\n    authState: { isAuthenticated },\n    authDispatch,\n  } = React.useContext<any>(AuthContext);\n  const [updateMeMutation] = useMutation(UPDATE_ME);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n\n  const [updateUserMutation] = useMutation(UPDATE_USER);\n  const [changePasswordMutation] = useMutation(CHANGE_PASSWORD);\n  const [deletePhoneNumberMutation] = useMutation(DELETE_PHONENUMBER);\n  const [setprimaryPhoneNumberMutation] = useMutation(SETPRIMARY_PHONENUMBER);\n  const [setprimaryAddressMutation] = useMutation(SETPRIMARY_ADDRESS);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const intl = useIntl();\n \n\n  const { \n    delivery_address, \n    card,\n    name,\n    email,\n    id,\n    phones\n  } = state;\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    dispatch({\n      type: 'HANDLE_ON_INPUT_CHANGE',\n      payload: { value, field: name },\n    });\n  };\n  // Add or edit modal\n  const handleModal = (\n    modalComponent: any,\n    modalProps = {},\n    className: string = 'add-address-modal'\n  ) => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className,\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: { item: modalProps },\n    });\n  };\n\n  const handleEditDelete = async (item: any, index: any, type: string, name: string) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddressTwo : UpdateContact;\n      handleModal(modalComponent,{\n        item,\n        id\n      });\n    } else {\n      switch (name) {\n        case 'payment':\n          dispatch({ type: 'DELETE_CARD', payload: item.id });\n          return await deletePaymentCardMutation({\n            variables: { cardId: JSON.stringify(item.id) },\n          });\n        case 'contact':\n          if(phones.length > 1){\n            dispatch({ type: 'DELETE_CONTACT', payload: item.id });\n            return await deletePhoneNumberMutation({\n              variables: { \n                id,\n                phoneId: item.id\n              },\n            });\n          }else{\n            return null\n          }\n        case 'address':\n          if(delivery_address.length > 1){\n          dispatch({ type: 'DELETE_ADDRESS', payload: item.id });\n            return await deleteAddressMutation({\n              variables: { \n                id,\n                addressId: item.id\n              },\n            });\n          }else{\n            return null\n          }\n        default:\n          return false;\n      }\n    }\n  };\n\n  const handlePrimary = async (item: any, name: string) => {\n      switch (name) {\n        case 'contact':\n          dispatch({ type: 'SET_PRIMARY_CONTACT', payload: item.id });\n          return await setprimaryPhoneNumberMutation({\n            variables: { \n              id,\n              phoneId: item.id\n            },\n          });\n        case 'address':\n          dispatch({ type: 'SET_PRIMARY_ADDRESS', payload: item.id });\n            return await setprimaryAddressMutation({\n              variables: { \n                id,\n                addressId: item.id\n              },\n            });\n        default:\n          return false;\n      }\n  };\n\n  const handleSave = async () => {\n    const { name, email } = state;\n    await updateUserMutation({\n      variables: {\n         id,\n         name,\n         email\n        }\n    });\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000)\n  };\n\n  const handleSavePassord = async () => {\n    const { oldPassword , newPassword, confirmPassword } = state;\n\n    const hasEmptyFields = !oldPassword || !newPassword || !confirmPassword?.length === 0; \n\n    if (hasEmptyFields) {\n      setPasswordChangeMsg(intl.formatMessage({ id: 'passwordEmptyFields', defaultMessage: 'passwordEmptyFields' }))\n      return;\n    } else {\n      setPasswordChangeMsg('')\n    }\n      await changePasswordMutation({\n        variables: {\n          id,\n          old_password: oldPassword,\n          new_password: newPassword,\n          confirm_password: confirmPassword\n          }\n      });\n      if (typeof window !== 'undefined') {\n        localStorage.removeItem('access_token');\n        authDispatch({ type: 'SIGN_OUT' });\n        Router.push('/');\n      }\n      setPasswordChangeMsg('Loadding...')\n  };\n\n  const hasEmptyFields = state.oldPassword?.length === 0 || state.newPassword?.length === 0 || state.confirmPassword?.length === 0; \n  return (\n    <SettingsForm>\n      <SettingsFormContent>\n        <HeadingSection>\n          <Title>\n            <FormattedMessage\n              id='profilePageTitle'\n              defaultMessage='Your Profile'\n            />\n          </Title>\n        </HeadingSection>\n        <Row style={{ alignItems: 'flex-end', marginBottom: '50px' }}>\n          <Col xs={12} sm={5} md={5} lg={5}>\n            <Label>\n              <FormattedMessage\n                id='profileNameField'\n                defaultMessage='Your Name'\n              />\n            </Label>\n            <InputUpper\n              type='text'\n              label='Name'\n              name='name'\n              value={name}\n              onChange={handleChange}\n              backgroundColor='#F7F7F7'\n              height='48px'\n              marginBottom='10px'\n              // intlInputLabelId=\"profileNameField\"\n            />\n          </Col>\n\n          <Col xs={12} sm={5} md={5} lg={5}>\n            <Label>\n              <FormattedMessage\n                id='profileEmailField'\n                defaultMessage='Your Email'\n              />\n            </Label>\n            <Input\n              type='email'\n              name='email'\n              label='Email Address'\n              value={email}\n              onChange={handleChange}\n              backgroundColor='#F7F7F7'\n              marginBottom='10px'\n              // intlInputLabelId=\"profileEmailField\"\n            />\n          </Col>\n\n          <Col xs={12} sm={2} md={2} lg={2}>\n            <Button size='big' style={{ width: '100%', marginBottom: '10px' }} onClick={handleSave}>\n              <FormattedMessage id='profileSaveBtn' defaultMessage='Save' />\n            </Button>\n          </Col>\n          {userinfoMsg && (\n              <SuccessMsg>\n                <FormattedMessage\n                  id='userInfoSuccess'\n                  defaultMessage={userinfoMsg}\n                />\n              </SuccessMsg>\n          )}\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='contactNumberTItle'\n                    defaultMessage='Contact Numbers'\n                  />\n                </Title>\n              </HeadingSection>\n              <ButtonGroup>\n                <RadioGroupThree\n                  items={phones}\n                  component={(item: any, index: any) => (\n                    <RadioCard\n                      id={index}\n                      key={index}\n                      title={item.is_primary ? intl.formatMessage({ id: 'primaryId', defaultMessage: 'Primary' }) : intl.formatMessage({ id: 'secundaryId', defaultMessage: 'Secondary' })}\n                      content={item.number}\n                      checked={item.is_primary === true}\n                      onChange={() => handlePrimary(item, 'contact')}\n                      name='contact'\n                      onEdit={() => handleEditDelete(item, index, 'edit', 'contact')}\n                      onDelete={() =>\n                        handleEditDelete(item, index, 'delete', 'contact')\n                      }\n                    />\n                  )}\n                  secondaryComponent={\n                    <Button\n                      size='big'\n                      variant='outlined'\n                      type='button'\n                      className='add-button'\n                      onClick={() =>handleModal(\n                         UpdateContact, \n                         {\n                          item:{},\n                          id\n                        }, \n                        'add-contact-modal'\n                        )\n                      }\n                    >\n                      <FormattedMessage\n                        id='addContactBtn'\n                        defaultMessage='Add Contact'\n                      />\n                    </Button>\n                  }\n                />\n              </ButtonGroup>\n            </SettingsFormContent>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12} style={{ position: 'relative' }}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='deliveryAddresTitle'\n                    defaultMessage='Delivery Address'\n                  />\n                </Title>\n              </HeadingSection>\n              <ButtonGroup>\n                <RadioGroupTwo\n                  items={delivery_address}\n                  component={(item: any, index: any) => (\n                    <RadioCardTWO \n                      id={index}\n                      key={index}\n                      address={item.address}\n                      district={item.district}\n                      division={item.division}\n                      title={item.title}\n                      region = {item.region}\n                      name='address'\n                      isChecked={item.is_primary === true}\n                      onChange={() =>handlePrimary(item, 'address')}\n                      onEdit={() => handleEditDelete(item, index, 'edit', 'address')}\n                      onDelete={() =>\n                        handleEditDelete(item, index, 'delete', 'address')\n                      }\n                    />\n                  )}\n                  \n                  secondaryComponent={\n                    <Button\n                      size='big'\n                      variant='outlined'\n                      type='button'\n                      className='add-button'\n                      onClick={() =>handleModal(\n                          UpdateAddressTwo, \n                          {\n                            item:{},\n                            id\n                          },\n                          'add-address-modal')\n                      }\n                    >\n                      <FormattedMessage\n                        id={delivery_address?.length === 3 ? \"fullDeliveryAddressesMsg\" : \"addAddressBtn\"}\n                        defaultMessage='Add Address' \n                      />\n                    </Button>\n                  }\n                />\n              </ButtonGroup>\n            </SettingsFormContent>\n          </Col>\n        </Row>\n        <Row style={{ alignItems: 'flex-end', marginBottom: '50px' }}>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='changePasswordTitle'\n                    defaultMessage='Change Password'\n                  />\n                </Title>\n              </HeadingSection>\n            </SettingsFormContent>\n          </Col>\n          <Col xs={12} sm={2} md={2} lg={3}>\n            <Input\n              type='password'\n              /* label='Old Password' */\n              placeholder={intl.formatMessage({ id: 'oldPasswordId', defaultMessage: 'Old password' })}\n              name='oldPassword'\n              value={ state.oldPassword || '' }\n              onChange={handleChange}\n              backgroundColor='#F7F7F7'\n              height='48px'\n              marginBottom='10px'\n              /* intlInputLabelId=\"profileNameField\" */\n            />\n          </Col>\n          <Col xs={12} sm={2} md={2} lg={3}>\n            <Input\n              type='password'\n              label='New Password'\n              placeholder={intl.formatMessage({ id: 'newPasswordId', defaultMessage: 'New password' })}\n              name='newPassword'\n              value={ state.newPassword || '' }\n              onChange={handleChange}\n              backgroundColor='#F7F7F7'\n              height='48px'\n              marginBottom='10px'\n              // intlInputLabelId=\"profileNameField\"\n            />\n          </Col>\n          <Col xs={12} sm={2} md={2} lg={3}>\n            <Input\n              type='password'\n              name='confirmPassword'\n              placeholder={intl.formatMessage({ id: 'confirmPasswordId', defaultMessage: 'Confirm password' })}\n              value={ state.confirmPassword || '' }\n              onChange={handleChange}\n              backgroundColor='#F7F7F7'\n              marginBottom='10px'\n              // intlInputLabelId=\"profileEmailField\"\n            />\n          </Col>\n          <Col xs={12} sm={2} md={2} lg={3}>\n            {!passwordChangeMsg &&\n              <Button size='big' style={{ width: '100%', marginBottom: '10px' }} onClick={handleSavePassord}>\n                <FormattedMessage id='profileSaveBtn' defaultMessage='Save' />\n              </Button>\n            }\n            {passwordChangeMsg &&\n              <Button size='big' style={{ width: '100%' }} onClick={handleSavePassord}>\n                <FormattedMessage id='profileSaveBtn' defaultMessage='Loading..' />\n              </Button>\n            }\n            {passwordChangeMsg && (\n              <SuccessMsg>\n                <FormattedMessage\n                  id='userInfoSuccess'\n                  defaultMessage={userinfoMsg}\n                />\n              </SuccessMsg>\n          )}\n          </Col>\n        </Row>\n\n        {/*<Row>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='paymentCardTitle'\n                    defaultMessage='Payments Card'\n                  />\n                </Title>\n              </HeadingSection>\n              <PaymentGroup\n                name='payment'\n                deviceType={deviceType}\n                items={card}\n                onEditDeleteField={(item: any, type: string) =>\n                  handleEditDelete(item, type, 'payment')\n                }\n                onChange={(item: any) =>\n                  dispatch({\n                    type: 'SET_PRIMARY_CARD',\n                    payload: item.id.toString(),\n                  })\n                }\n                handleAddNewCard={() => {\n                  handleModal(\n                    StripePaymentForm,\n                    { buttonText: 'Add Card' },\n                    'add-address-modal stripe-modal'\n                  );\n                }}\n              />\n            </SettingsFormContent>\n          </Col>\n        </Row>*/}\n      </SettingsFormContent>\n    </SettingsForm>\n  );\n};\n\nexport default SettingsContent;\n"]},"metadata":{},"sourceType":"module"}