{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/layouts/header/mobile-header.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport { MobileHeaderWrapper, MobileHeaderInnerWrapper, DrawerWrapper, LogoWrapper, SearchModalWrapper, SearchModalClose } from './header.style';\nimport Search from 'features/search/search';\nimport LogoImage from 'assets/images/logo.svg';\nimport { LongArrowLeft } from 'assets/icons/LongArrowLeft';\nimport Logo from 'layouts/logo/logo';\nimport LanguageSwitcher from './menu/language-switcher/language-switcher';\nimport { isCategoryPage } from '../is-home-page';\nimport useDimensions from 'utils/useComponentSize';\nimport { GET_TYPE } from 'graphql/query/type.query';\nimport { useQuery } from '@apollo/react-hooks';\nimport { CATEGORY_MENU_ITEMS } from 'site-settings/site-navigation';\n\nvar SearchModal = function SearchModal() {\n  var onSubmit = function onSubmit() {\n    closeModal();\n  };\n\n  return __jsx(SearchModalWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(SearchModalClose, {\n    type: \"submit\",\n    onClick: function onClick() {\n      return closeModal();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(LongArrowLeft, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), __jsx(Search, {\n    className: \"header-modal-search\",\n    showButtonText: false,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = SearchModal;\n\nvar MobileHeader = function MobileHeader(_ref) {\n  _s();\n\n  var className = _ref.className;\n\n  var _useRouter = useRouter(),\n      pathname = _useRouter.pathname,\n      query = _useRouter.query;\n\n  var _useDimensions = useDimensions(),\n      _useDimensions2 = _slicedToArray(_useDimensions, 2),\n      mobileHeaderRef = _useDimensions2[0],\n      dimensions = _useDimensions2[1];\n\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_TYPE, {\n    variables: {\n      searchText: ''\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  var handleSearchModal = function handleSearchModal() {\n    openModal({\n      show: true,\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'search-modal-mobile',\n        width: '100%',\n        height: '100%'\n      },\n      closeOnClickOutside: false,\n      component: SearchModal,\n      closeComponent: function closeComponent() {\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }\n        });\n      }\n    });\n  };\n\n  var type = pathname === '/restaurant' ? 'restaurant' : query.type;\n  var isHomePage = isCategoryPage(type);\n  var typeMenu = data.types.items.map(function (item) {\n    return {\n      id: item.id,\n      href: \"/\".concat(item.slug),\n      defaultMessage: item.name,\n      icon: item.icon,\n      dynamic: true\n    };\n  });\n  var initialMenu = router.asPath == '/' ? typeMenu[0] : typeMenu.find(function (item) {\n    return item.href == router.asPath;\n  });\n\n  if (initialMenu) {\n    if (localStorage.getItem('myMenu')) {\n      localStorage.removeItem('myMenu');\n    }\n\n    localStorage.setItem('myMenu', JSON.stringify(initialMenu));\n  }\n\n  var _React$useState = React.useState(initialMenu !== null && initialMenu !== void 0 ? initialMenu : CATEGORY_MENU_ITEMS[0]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeMenu = _React$useState2[0],\n      setActiveMenu = _React$useState2[1];\n\n  return __jsx(MobileHeaderWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, __jsx(MobileHeaderInnerWrapper, {\n    className: className,\n    ref: mobileHeaderRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, __jsx(DrawerWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), __jsx(LogoWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, __jsx(Logo, {\n    imageUrl: LogoImage,\n    alt: \"shop logo\",\n    onClick: initialMenu ? initialMenu : JSON.parse(localStorage.getItem('myMenu')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), __jsx(LanguageSwitcher, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(MobileHeader, \"LJjaoA7DikqWEL4qe6jlUhWAS4k=\", false, function () {\n  return [useRouter, useDimensions, useRouter, useQuery];\n});\n\n_c2 = MobileHeader;\nexport default MobileHeader;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchModal\");\n$RefreshReg$(_c2, \"MobileHeader\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/layouts/header/mobile-header.tsx"],"names":["React","useRouter","openModal","closeModal","MobileHeaderWrapper","MobileHeaderInnerWrapper","DrawerWrapper","LogoWrapper","SearchModalWrapper","SearchModalClose","Search","LogoImage","LongArrowLeft","Logo","LanguageSwitcher","isCategoryPage","useDimensions","GET_TYPE","useQuery","CATEGORY_MENU_ITEMS","SearchModal","onSubmit","MobileHeader","className","pathname","query","mobileHeaderRef","dimensions","router","variables","searchText","data","error","loading","handleSearchModal","show","config","enableResizing","disableDragging","width","height","closeOnClickOutside","component","closeComponent","type","isHomePage","typeMenu","types","items","map","item","id","href","slug","defaultMessage","name","icon","dynamic","initialMenu","asPath","find","localStorage","getItem","removeItem","setItem","JSON","stringify","useState","activeMenu","setActiveMenu","parse"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,mBAAtC;AAEA,SACEC,mBADF,EAEEC,wBAFF,EAGEC,aAHF,EAIEC,WAJF,EAMEC,kBANF,EAOEC,gBAPF,QAQO,gBARP;AASA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAGA,SAASC,aAAT,QAA8B,4BAA9B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAOC,gBAAP,MAA6B,4CAA7B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,mBAAT,QAAoC,+BAApC;;AAOA,IAAMC,WAAyB,GAAG,SAA5BA,WAA4B,GAAM;AACtC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBlB,IAAAA,UAAU;AACX,GAFD;;AAGA,SACE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,OAAO,EAAE;AAAA,aAAMA,UAAU,EAAhB;AAAA,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,qBADZ;AAEE,IAAA,cAAc,EAAE,KAFlB;AAGE,IAAA,QAAQ,EAAEkB,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAYD,CAhBD;;KAAMD,W;;AAkBN,IAAME,YAAyC,GAAG,SAA5CA,YAA4C,OAAmB;AAAA;;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,mBACvCtB,SAAS,EAD8B;AAAA,MAC3DuB,QAD2D,cAC3DA,QAD2D;AAAA,MACjDC,KADiD,cACjDA,KADiD;;AAAA,uBAG7BT,aAAa,EAHgB;AAAA;AAAA,MAG5DU,eAH4D;AAAA,MAG3CC,UAH2C;;AAInE,MAAMC,MAAM,GAAG3B,SAAS,EAAxB;;AAJmE,kBAKlCiB,QAAQ,CACvCD,QADuC,EAEvC;AACEY,IAAAA,SAAS,EAAE;AACTC,MAAAA,UAAU,EAAE;AADH;AADb,GAFuC,CAL0B;AAAA,MAK3DC,IAL2D,aAK3DA,IAL2D;AAAA,MAKrDC,KALqD,aAKrDA,KALqD;AAAA,MAK9CC,OAL8C,aAK9CA,OAL8C;;AAcnE,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BhC,IAAAA,SAAS,CAAC;AACRiC,MAAAA,IAAI,EAAE,IADE;AAERC,MAAAA,MAAM,EAAE;AACNC,QAAAA,cAAc,EAAE,KADV;AAENC,QAAAA,eAAe,EAAE,IAFX;AAGNf,QAAAA,SAAS,EAAE,qBAHL;AAINgB,QAAAA,KAAK,EAAE,MAJD;AAKNC,QAAAA,MAAM,EAAE;AALF,OAFA;AASRC,MAAAA,mBAAmB,EAAE,KATb;AAURC,MAAAA,SAAS,EAAEtB,WAVH;AAWRuB,MAAAA,cAAc,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAAA;AAXR,KAAD,CAAT;AAaD,GAdD;;AAeA,MAAMC,IAAI,GAAGpB,QAAQ,KAAK,aAAb,GAA6B,YAA7B,GAA4CC,KAAK,CAACmB,IAA/D;AAEA,MAAMC,UAAU,GAAG9B,cAAc,CAAC6B,IAAD,CAAjC;AACA,MAAME,QAAQ,GAAGf,IAAI,CAACgB,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAU;AAC9C,WAAO;AACLC,MAAAA,EAAE,EAAED,IAAI,CAACC,EADJ;AAELC,MAAAA,IAAI,aAAMF,IAAI,CAACG,IAAX,CAFC;AAGLC,MAAAA,cAAc,EAAEJ,IAAI,CAACK,IAHhB;AAILC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAJN;AAKLC,MAAAA,OAAO,EAAE;AALJ,KAAP;AAOD,GARgB,CAAjB;AASA,MAAMC,WAAW,GAAG9B,MAAM,CAAC+B,MAAP,IAAiB,GAAjB,GAAuBb,QAAQ,CAAC,CAAD,CAA/B,GAAqCA,QAAQ,CAACc,IAAT,CAAc,UAACV,IAAD;AAAA,WAAUA,IAAI,CAACE,IAAL,IAAaxB,MAAM,CAAC+B,MAA9B;AAAA,GAAd,CAAzD;;AAEA,MAAGD,WAAH,EAAe;AACb,QAAGG,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAH,EAAkC;AAChCD,MAAAA,YAAY,CAACE,UAAb,CAAwB,QAAxB;AACD;;AACDF,IAAAA,YAAY,CAACG,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeR,WAAf,CAA/B;AACD;;AAhDkE,wBAkD/B1D,KAAK,CAACmE,QAAN,CAClCT,WADkC,aAClCA,WADkC,cAClCA,WADkC,GACnBvC,mBAAmB,CAAC,CAAD,CADA,CAlD+B;AAAA;AAAA,MAkD5DiD,UAlD4D;AAAA,MAkDhDC,aAlDgD;;AAsDnE,SACE,MAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,wBAAD;AAA0B,IAAA,SAAS,EAAE9C,SAArC;AAAgD,IAAA,GAAG,EAAEG,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,QAAQ,EAAEf,SADZ;AAEE,IAAA,GAAG,EAAC,WAFN;AAGE,IAAA,OAAO,EAAE+C,WAAW,GAAGA,WAAH,GAAgBO,IAAI,CAACK,KAAL,CAAWT,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EAaE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF;AAkCD,CAxFD;;GAAMxC,Y;UACwBrB,S,EAEUe,a,EACvBf,S,EACkBiB,Q;;;MAL7BI,Y;AA0FN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { useRouter } from 'next/router';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport MobileDrawer from './mobile-drawer';\nimport {\n  MobileHeaderWrapper,\n  MobileHeaderInnerWrapper,\n  DrawerWrapper,\n  LogoWrapper,\n  SearchWrapper,\n  SearchModalWrapper,\n  SearchModalClose,\n} from './header.style';\nimport Search from 'features/search/search';\nimport LogoImage from 'assets/images/logo.svg';\n\nimport { SearchIcon } from 'assets/icons/SearchIcon';\nimport { LongArrowLeft } from 'assets/icons/LongArrowLeft';\nimport Logo from 'layouts/logo/logo';\n\nimport LanguageSwitcher from './menu/language-switcher/language-switcher';\nimport { isCategoryPage } from '../is-home-page';\nimport useDimensions from 'utils/useComponentSize';\nimport { GET_TYPE } from 'graphql/query/type.query';\nimport { useQuery } from '@apollo/react-hooks';\nimport { CATEGORY_MENU_ITEMS } from 'site-settings/site-navigation';\n\ntype MobileHeaderProps = {\n  className?: string;\n  closeSearch?: any;\n};\n\nconst SearchModal: React.FC<{}> = () => {\n  const onSubmit = () => {\n    closeModal();\n  };\n  return (\n    <SearchModalWrapper>\n      <SearchModalClose type=\"submit\" onClick={() => closeModal()}>\n        <LongArrowLeft />\n      </SearchModalClose>\n      <Search\n        className=\"header-modal-search\"\n        showButtonText={false}\n        onSubmit={onSubmit}\n      />\n    </SearchModalWrapper>\n  );\n};\n\nconst MobileHeader: React.FC<MobileHeaderProps> = ({ className }) => {\n  const { pathname, query } = useRouter();\n\n  const [mobileHeaderRef, dimensions] = useDimensions();\n  const router = useRouter();\n  const { data, error, loading } = useQuery(\n    GET_TYPE,\n    {\n      variables: {\n        searchText: ''\n      }\n    }\n  );\n\n  const handleSearchModal = () => {\n    openModal({\n      show: true,\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'search-modal-mobile',\n        width: '100%',\n        height: '100%',\n      },\n      closeOnClickOutside: false,\n      component: SearchModal,\n      closeComponent: () => <div />,\n    });\n  };\n  const type = pathname === '/restaurant' ? 'restaurant' : query.type;\n\n  const isHomePage = isCategoryPage(type);\n  const typeMenu = data.types.items.map((item) => {\n    return({\n      id: item.id,\n      href: `/${item.slug}`,\n      defaultMessage: item.name,\n      icon: item.icon,\n      dynamic: true,\n    })\n  })\n  const initialMenu = router.asPath == '/' ? typeMenu[0] : typeMenu.find((item) => item.href == router.asPath);\n  \n  if(initialMenu){\n    if(localStorage.getItem('myMenu')){\n      localStorage.removeItem('myMenu');\n    }\n    localStorage.setItem('myMenu', JSON.stringify(initialMenu));\n  }\n\n  const [activeMenu, setActiveMenu] = React.useState(\n    initialMenu ?? CATEGORY_MENU_ITEMS[0]\n  );\n\n  return (\n    <MobileHeaderWrapper>\n      <MobileHeaderInnerWrapper className={className} ref={mobileHeaderRef}>\n        <DrawerWrapper>\n          {/* <MobileDrawer /> */}\n        </DrawerWrapper>\n\n        <LogoWrapper>\n          <Logo\n            imageUrl={LogoImage}\n            alt=\"shop logo\"\n            onClick={initialMenu ? initialMenu: JSON.parse(localStorage.getItem('myMenu'))}\n          />\n        </LogoWrapper>\n\n        <LanguageSwitcher />\n\n        {/* {isHomePage ? (\n          <SearchWrapper\n            onClick={handleSearchModal}\n            className=\"searchIconWrapper\"\n          >\n            <SearchIcon />\n          </SearchWrapper>\n        ) : null} */}\n        {/* <SearchWrapper\n          onClick={handleSearchModal}\n          className=\"searchIconWrapper\"\n        >\n          <SearchIcon />\n        </SearchWrapper> */}\n      </MobileHeaderInnerWrapper>\n    </MobileHeaderWrapper>\n  );\n};\n\nexport default MobileHeader;\n"]},"metadata":{},"sourceType":"module"}