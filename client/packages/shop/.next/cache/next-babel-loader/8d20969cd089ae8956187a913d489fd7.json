{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// product card for general\nimport React, { useState } from 'react';\nimport { Button } from 'components/button/button';\nimport { ProductCardWrapper, ProductImageWrapper, DiscountPercent, OutOfStock, ButtonText, PriceContainer, PriceContainerRow, ProductCartBtn, ProductCartWrapper, ProductPrice, ProductPriceWrapper, SalePrice, OneLineProductInfo } from './product-card-six.style';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { Counter } from 'components/counter/counter';\nimport { cartAnimation } from 'utils/cart-animation';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ProductQuantityExceededMsg } from '../product-card.style';\nimport { CURRENCY } from 'utils/constant';\n\nconst ProductCard = (_ref) => {\n  var _getItem9, _getItem10;\n\n  let {\n    title,\n    image,\n    weight,\n    price,\n    salePrice,\n    discountInPercent,\n    cartProducts,\n    addToCart,\n    updateCart,\n    value,\n    currency,\n    onChange,\n    increment,\n    decrement,\n    data,\n    deviceType,\n    onClick\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"title\", \"image\", \"weight\", \"price\", \"salePrice\", \"discountInPercent\", \"cartProducts\", \"addToCart\", \"updateCart\", \"value\", \"currency\", \"onChange\", \"increment\", \"decrement\", \"data\", \"deviceType\", \"onClick\"]);\n\n  const {\n    addItem,\n    removeItem,\n    getItem,\n    isInCart,\n    items,\n    removeRecicledItemHandler,\n    addRecicledItemHandler,\n    removeItemFromCart\n  } = useCart();\n  const {\n    0: showProductQuantityExceededMsg,\n    1: setShowProductQuantityExceededMsg\n  } = useState(false);\n  const hasEcoButton = data.packagePrice > 0;\n  const intl = useIntl();\n\n  const handleAddClick = e => {\n    var _getItem, _getItem2;\n\n    const currentQuantity = (((_getItem = getItem(data.id)) === null || _getItem === void 0 ? void 0 : _getItem.quantity) || 0) + (((_getItem2 = getItem(data.id)) === null || _getItem2 === void 0 ? void 0 : _getItem2.recicledQuantity) || 0);\n    const stock = data.product_quantity;\n\n    if (stock <= currentQuantity) {\n      e.stopPropagation();\n      showProductQuantityExceededMsgFor5Sec();\n    } else {\n      e.stopPropagation();\n      addItem(data);\n\n      if (!isInCart(data.id)) {\n        cartAnimation(e);\n      }\n    }\n  };\n\n  const handleRecicledAddClick = e => {\n    var _getItem3, _getItem4;\n\n    const currentQuantity = (((_getItem3 = getItem(data.id)) === null || _getItem3 === void 0 ? void 0 : _getItem3.quantity) || 0) + (((_getItem4 = getItem(data.id)) === null || _getItem4 === void 0 ? void 0 : _getItem4.recicledQuantity) || 0);\n    const stock = data.product_quantity;\n\n    if (stock <= currentQuantity) {\n      e.stopPropagation();\n      showProductQuantityExceededMsgFor5Sec();\n    } else {\n      e.stopPropagation();\n      addRecicledItemHandler(data);\n    }\n  };\n\n  const handleRecicledRemoveClick = e => {\n    var _getItem5, _getItem6;\n\n    const recicledQuantity = ((_getItem5 = getItem(data.id)) === null || _getItem5 === void 0 ? void 0 : _getItem5.recicledQuantity) || 0;\n    const quantity = ((_getItem6 = getItem(data.id)) === null || _getItem6 === void 0 ? void 0 : _getItem6.quantity) || 0;\n    e.stopPropagation();\n    quantity === 0 && recicledQuantity === 1 ? removeItemFromCart(data) : removeRecicledItemHandler(data);\n  };\n\n  const handleRemoveClick = e => {\n    var _getItem7, _getItem8;\n\n    const recicledQuantity = ((_getItem7 = getItem(data.id)) === null || _getItem7 === void 0 ? void 0 : _getItem7.recicledQuantity) || 0;\n    const quantity = ((_getItem8 = getItem(data.id)) === null || _getItem8 === void 0 ? void 0 : _getItem8.quantity) || 0;\n    e.stopPropagation();\n    quantity === 1 && recicledQuantity === 0 ? removeItemFromCart(data) : removeItem(data);\n  };\n\n  const showProductQuantityExceededMsgFor5Sec = () => {\n    setShowProductQuantityExceededMsg(true);\n    setTimeout(() => {\n      setShowProductQuantityExceededMsg(false);\n    }, 1500);\n  };\n\n  const PriceContent = () => __jsx(React.Fragment, null, data.product_quantity != 0 ? __jsx(ProductCartWrapper, null, __jsx(ProductCartBtn, {\n    style: {\n      display: 'flex'\n    }\n  }, __jsx(PriceContainer, null, __jsx(\"h3\", {\n    className: \"product-title\"\n  }, title), __jsx(PriceContainerRow, null, __jsx(ProductPriceWrapper, null, data.discountInPercent ? __jsx(SalePrice, null, CURRENCY, \" \", data.sale_price) : null, __jsx(ProductPrice, null, CURRENCY, finalPrice)), noRecicledQuantityInCart ? __jsx(React.Fragment, null, __jsx(Counter, {\n    value: getItem(data.id).quantity,\n    onDecrement: handleRemoveClick,\n    onIncrement: handleAddClick\n  })) : __jsx(Button, {\n    className: \"cart-button\",\n    variant: \"secondary\",\n    borderradius: 100,\n    onClick: handleAddClick\n  }, __jsx(ButtonText, null, __jsx(FormattedMessage, {\n    id: \"addToCartButton\",\n    defaultMessage: \"Cart\"\n  }))), hasEcoButton ? __jsx(React.Fragment, null, __jsx(ProductPriceWrapper, null, __jsx(ProductPrice, null, \" \", CURRENCY, \" \", Number(finalPrice - data.packagePrice))), reclicledQuantityInCart ? __jsx(React.Fragment, null, __jsx(Counter, {\n    value: reclicledQuantityInCart,\n    onDecrement: handleRecicledRemoveClick,\n    onIncrement: handleRecicledAddClick\n  })) : __jsx(Button, {\n    className: \"cart-button\",\n    variant: \"secondary\",\n    borderRadius: 100,\n    onClick: handleRecicledAddClick\n  }, __jsx(ButtonText, null, __jsx(FormattedMessage, {\n    id: \"addEcoToCartButton\",\n    defaultMessage: \"Cart\"\n  })))) : null)))) : __jsx(ProductCartWrapper, null, __jsx(ProductPriceWrapper, null, data.discountInPercent ? __jsx(SalePrice, null, CURRENCY, \" \", data.sale_price) : null, __jsx(ProductPrice, null, CURRENCY, finalPrice))), showProductQuantityExceededMsg && __jsx(ProductQuantityExceededMsg, null, __jsx(FormattedMessage, {\n    id: \"productStockLimit\",\n    defaultMessage: \"There is no more availability of this product\"\n  })), hasEcoButton && data.product_quantity != 0 && __jsx(\"span\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      margin: '0px -10px'\n    }\n  }, \"*\", __jsx(\"p\", {\n    className: \"eco-detail\"\n  }, __jsx(FormattedMessage, {\n    id: \"ecoDescription\",\n    defaultMessage: \"Eco purchase: you pay ${packageDiscount} if you have a package from us to returned.\",\n    values: {\n      packageDiscount: data.packagePrice\n    }\n  }))));\n\n  const finalPrice = salePrice ? salePrice : price;\n  const noRecicledQuantityInCart = (_getItem9 = getItem(data.id)) === null || _getItem9 === void 0 ? void 0 : _getItem9.quantity;\n  const reclicledQuantityInCart = (_getItem10 = getItem(data.id)) === null || _getItem10 === void 0 ? void 0 : _getItem10.recicledQuantity;\n  return __jsx(ProductCardWrapper, {\n    onClick: onClick,\n    className: \"product-card\"\n  }, __jsx(ProductImageWrapper, null, discountInPercent ? __jsx(React.Fragment, null, __jsx(DiscountPercent, null, discountInPercent, \"%\")) : '', data.product_quantity == 0 ? __jsx(React.Fragment, null, __jsx(OutOfStock, null, intl.formatMessage({\n    id: 'outOfStock',\n    defaultMessage: 'Out of stock'\n  }))) : ''), __jsx(OneLineProductInfo, null, __jsx(PriceContent, null)));\n};\n\nexport default ProductCard;","map":null,"metadata":{},"sourceType":"module"}