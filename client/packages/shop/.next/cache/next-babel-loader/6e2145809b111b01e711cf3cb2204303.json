{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\n/* import { useEffect } from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\n\n// the redirect will only happen on the client-side. This is by design,\nconst IndexPage: React.FC<{}> = () => {\n  useEffect(() => {\n    Router.replace('/[type]', '/grocery');\n  });\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n};\n\nexport default IndexPage;\n\n\n */\nimport { useEffect } from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_TYPE } from 'graphql/query/type.query';\nimport ErrorMessage from 'components/error-message/error-message'; // the redirect will only happen on the client-side. This is by design,\n\nconst IndexPage = () => {\n  let selectedMenu = null;\n  let defaultMenu = null;\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_TYPE, {\n    variables: {\n      searchText: ''\n    }\n  });\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Loading...'\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: 'Error occured for only domain routing'\n    });\n  }\n\n  ;\n  const typeMenu = data.types.items.map(item => {\n    return {\n      id: item.id,\n      href: `/${item.slug}`\n    };\n  });\n  defaultMenu = typeMenu[0].href;\n\n  if (localStorage.getItem('myMenu')) {\n    selectedMenu = JSON.parse(localStorage.getItem('myMenu'));\n    selectedMenu = selectedMenu.href;\n  }\n\n  useEffect(() => {\n    Router.replace('/[type]', selectedMenu !== null ? selectedMenu : defaultMenu);\n  });\n  return __jsx(Head, null, __jsx(\"meta\", {\n    name: \"robots\",\n    content: \"noindex, nofollow\"\n  }));\n};\n\nexport default IndexPage;","map":null,"metadata":{},"sourceType":"module"}