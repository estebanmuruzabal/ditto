{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/your-plants.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport Link from 'next/link';\nimport { Col } from 'react-styled-flexboxgrid';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { HumiditySensorMode } from 'utils/constant';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { Label } from 'components/forms/label';\nimport { OrderReceivedContainer, OrderDetails, BlockTitle, Text, ListItem, ListTitle, ListDes, ButtonText, Row, InputUpper, PlantPageWrapper } from './your-plants.style';\nimport { FormattedMessage } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { PlantsListWrapper } from 'features/your-plants/your-plants.style';\nimport { Button } from 'components/button/button';\nimport { ADD_PLANT, UPDATE_HUMIDITY_SETTINGS_1, UPDATE_HUMIDITY_SETTINGS_2 } from 'graphql/query/plants.query';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { SuccessMsg } from 'features/user-profile/settings/settings.style';\nimport Switch from 'components/switch/switch';\n\nvar YourPlants = function YourPlants(_ref) {\n  _s();\n\n  var _plants$;\n\n  var deviceType = _ref.deviceType;\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useQuery = useQuery(GET_LOGGED_IN_USER),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading; // const router = useRouter();\n  // const intl = useIntl();\n\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setPlantName = _useState[1];\n\n  var _useState2 = useState(''),\n      controllerId = _useState2[0],\n      setControllerID = _useState2[1];\n\n  var _useState3 = useState(''),\n      userinfoMsg = _useState3[0],\n      setUserinfoMsg = _useState3[1];\n\n  var _useMutation = useMutation(ADD_PLANT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addPlant = _useMutation2[0];\n\n  var _useMutation3 = useMutation(UPDATE_HUMIDITY_SETTINGS_1),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      updateSoilHumiditySettings1 = _useMutation4[0];\n\n  var _useMutation5 = useMutation(UPDATE_HUMIDITY_SETTINGS_2),\n      _useMutation6 = _slicedToArray(_useMutation5, 1),\n      updateSoilHumiditySettings2 = _useMutation6[0];\n\n  var plants = state.plants;\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Cargando...',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 12\n      }\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    });\n  }\n\n  ;\n\n  var handleHumiditySettings1Change = function handleHumiditySettings1Change(plant, field, value) {\n    dispatch({\n      type: 'HANDLE_HUMIDITY_1_SETTINGS_CHANGE',\n      payload: {\n        plant: plant,\n        value: value,\n        field: field\n      }\n    });\n    setTimeout(function () {\n      handleSettingsSaveClick(plant, field, value);\n    }, 1000);\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000);\n  };\n\n  var handleHumiditySettings2Change = function handleHumiditySettings2Change(plant, field, value) {\n    dispatch({\n      type: 'HANDLE_HUMIDITY_2_SETTINGS_CHANGE',\n      payload: {\n        plant: plant,\n        value: value,\n        field: field\n      }\n    });\n    handleSettingsSaveClick(plant, field, value);\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000);\n  };\n\n  var handleAddClick = function handleAddClick() {\n    var _data$getUser;\n\n    addPlant({\n      variables: {\n        id: data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : _data$getUser.id,\n        name: name,\n        controllerId: Number(controllerId)\n      }\n    });\n  };\n\n  var handleSettingsSaveClick = function handleSettingsSaveClick(plant, fieldName, fieldValue) {\n    var _data$getUser2, _objectSpread2;\n\n    console.log(plant, fieldName, fieldValue);\n    updateSoilHumiditySettings1({\n      variables: _objectSpread((_objectSpread2 = {\n        id: data === null || data === void 0 ? void 0 : (_data$getUser2 = data.getUser) === null || _data$getUser2 === void 0 ? void 0 : _data$getUser2.id\n      }, _defineProperty(_objectSpread2, fieldName, fieldValue), _defineProperty(_objectSpread2, \"controllerId\", plant.controllerId), _objectSpread2), plant.soilHumiditySettings1)\n    });\n  };\n\n  var modeOptions = [{\n    value: HumiditySensorMode.SEEDS_POOL_IRRIGATION,\n    label: 'Semillero'\n  }, {\n    value: HumiditySensorMode.MANUAL,\n    label: 'Manual'\n  }, {\n    value: HumiditySensorMode.IRRIGATE_ON_DEMAND,\n    label: 'A demanda'\n  }, {\n    value: HumiditySensorMode.SCHEDULE,\n    label: 'Calendario'\n  }, {\n    value: HumiditySensorMode.NONE,\n    label: 'NONE'\n  }];\n  var manualModeOptions = [{\n    value: true,\n    label: 'Prendido'\n  }, {\n    value: false,\n    label: 'Apagado'\n  }];\n  var selectStyle = {\n    control: function control(styles) {\n      return _objectSpread(_objectSpread({}, styles), {}, {\n        width: '197px'\n      });\n    } // option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    //   // const color = chroma(data.color);\n    //   return {\n    //     ...styles,\n    //     backgroundColor: isDisabled ? 'red' : blue,\n    //     color: '#FFF',\n    //     cursor: isDisabled ? 'not-allowed' : 'default',\n    //     ...\n    //   };\n    // }\n\n  };\n  return __jsx(PlantPageWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, __jsx(OrderReceivedContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: \"home-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"backProfileBtn\",\n    defaultMessage: \"Back to Profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }))), __jsx(OrderDetails, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, __jsx(BlockTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"yourPlants\",\n    defaultMessage: \"Your Plants\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  })), (plants === null || plants === void 0 ? void 0 : plants.length) < 1 && __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 36\n    }\n  }, \"No tienes plantas registradas\"), plants === null || plants === void 0 ? void 0 : plants.map(function (plant, i) {\n    var _state$workInfo, _state$workInfo2, _plant$soilHumiditySe3, _plant$soilHumiditySe4, _plant$soilHumiditySe5, _plant$soilHumiditySe6, _plant$soilHumiditySe7;\n\n    var selectedMode = modeOptions.find(function (option) {\n      var _plant$soilHumiditySe;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe === void 0 ? void 0 : _plant$soilHumiditySe.mode);\n    });\n    var selectedManualState = manualModeOptions.find(function (option) {\n      var _plant$soilHumiditySe2;\n\n      return option.value === (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe2 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe2 === void 0 ? void 0 : _plant$soilHumiditySe2.relayOneWorking);\n    });\n    console.log('selectedManualState', selectedManualState);\n    return __jsx(PlantsListWrapper, {\n      key: i + '-orderList',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"plantName\",\n      defaultMessage: \"plantName\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.name, \" \"), __jsx(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings1.name,\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'name', e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      marginBottom: \"10px\" // intlInputLabelId=\"profileEmailField\"\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 23\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 23\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"soilHumidityId\",\n      defaultMessage: \"soilHumidityId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 27\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 23\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.soilHumidity1, \" \"))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 23\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"modoId\",\n      defaultMessage: \"modoId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 27\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 23\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'mode', e.value);\n      },\n      value: selectedMode,\n      options: modeOptions,\n      styles: selectStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }\n    }))), __jsx(Switch, {\n      label: \"Usted se encuentra: \".concat(((_state$workInfo = state.workInfo) === null || _state$workInfo === void 0 ? void 0 : _state$workInfo.isWorking) ? 'Chambeando' : 'Vagando'),\n      disabled: false,\n      checked: (_state$workInfo2 = state.workInfo) === null || _state$workInfo2 === void 0 ? void 0 : _state$workInfo2.isWorking,\n      labelPosition: 'right' // className,\n      ,\n      onUpdate: function onUpdate() {\n        var _state$workInfo3;\n\n        return ((_state$workInfo3 = state.workInfo) === null || _state$workInfo3 === void 0 ? void 0 : _state$workInfo3.isWorking) ? stopWorking() : startWorking();\n      } // style\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }), ((plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe3 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe3 === void 0 ? void 0 : _plant$soilHumiditySe3.mode) === HumiditySensorMode.IRRIGATE_ON_DEMAND || (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe4 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe4 === void 0 ? void 0 : _plant$soilHumiditySe4.mode) === HumiditySensorMode.SEEDS_POOL_IRRIGATION) && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 23\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 27\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"maxHumidityId\",\n      defaultMessage: \"maxHumidityId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, __jsx(Input, {\n      type: \"number\",\n      name: \"maxWarning\",\n      value: plant === null || plant === void 0 ? void 0 : plant.soilHumiditySettings1.maxWarning,\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'maxWarning', e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      marginBottom: \"10px\" // intlInputLabelId=\"profileEmailField\"\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 27\n      }\n    }))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 23\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 27\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"minHumidityId\",\n      defaultMessage: \"minHumidityId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 25\n      }\n    }, __jsx(InputUpper, {\n      type: \"number\",\n      name: \"minWarning\",\n      value: plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe5 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe5 === void 0 ? void 0 : _plant$soilHumiditySe5.minWarning,\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'minWarning', e.target.value);\n      },\n      backgroundColor: \"#F7F7F7\",\n      height: \"48px\",\n      marginBottom: \"10px\" // intlInputLabelId=\"profileNameField\"\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 27\n      }\n    })))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe6 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe6 === void 0 ? void 0 : _plant$soilHumiditySe6.mode) === HumiditySensorMode.MANUAL && __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 23\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 27\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"manualModeStateId\",\n      defaultMessage: \"manualModeStateId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 29\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 25\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(e) {\n        return handleHumiditySettings1Change(plant, 'relayOneWorking', e.value);\n      },\n      value: selectedManualState,\n      options: manualModeOptions,\n      styles: selectStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 27\n      }\n    })))), (plant === null || plant === void 0 ? void 0 : (_plant$soilHumiditySe7 = plant.soilHumiditySettings1) === null || _plant$soilHumiditySe7 === void 0 ? void 0 : _plant$soilHumiditySe7.mode) === HumiditySensorMode.NONE && __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }\n    }, \"Necesitas seleccionar un modo\"));\n  }), __jsx(PlantsListWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 11\n    }\n  }, __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"tempSensorId\",\n    defaultMessage: \"tempSensorId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 19\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }\n  }, (_plants$ = plants[0]) === null || _plants$ === void 0 ? void 0 : _plants$.tempeture, \" \")))), __jsx(PlantsListWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }, __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"humedadAmbienteSensorId\",\n    defaultMessage: \"humedadAmbienteSensorId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 19\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 17\n    }\n  }, plants, \"?.airHumidity} \")))), userinfoMsg && __jsx(SuccessMsg, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"userInfoSuccess\",\n    defaultMessage: userinfoMsg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 17\n    }\n  })), __jsx(BlockTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"addController\",\n    defaultMessage: \"Your Plants\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  })), __jsx(Row, {\n    style: {\n      alignItems: 'flex-end',\n      marginBottom: '50px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    lg: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }\n  }, __jsx(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"plantNameField\",\n    defaultMessage: \"Name of the plant\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 17\n    }\n  })), __jsx(InputUpper, {\n    type: \"text\",\n    label: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: function onChange(e) {\n      return setPlantName(e.target.value);\n    },\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    marginBottom: \"10px\" // intlInputLabelId=\"profileNameField\"\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    lg: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 14\n    }\n  }, __jsx(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"controllerIdField\",\n    defaultMessage: \"ID of the controller\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  })), __jsx(InputUpper, {\n    type: \"number\",\n    label: \"Controller ID\",\n    name: \"controllerId\",\n    value: controllerId,\n    onChange: function onChange(e) {\n      return setControllerID(e.target.value);\n    },\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\",\n    marginBottom: \"10px\" // intlInputLabelId=\"profileNameField\"\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 15\n    }\n  }))), __jsx(Button, {\n    className: \"cart-button\",\n    variant: \"secondary\",\n    borderRadius: 100,\n    onClick: handleAddClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 11\n    }\n  }, __jsx(ButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"addPlantButton\",\n    defaultMessage: \"Add plant\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 15\n    }\n  }))))));\n};\n\n_s(YourPlants, \"fa08ZLayhy4LQRVo0g5C+OS+mYg=\", false, function () {\n  return [useQuery, useMutation, useMutation, useMutation];\n});\n\n_c = YourPlants;\nexport default YourPlants;\n\nvar _c;\n\n$RefreshReg$(_c, \"YourPlants\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/your-plants.tsx"],"names":["React","useState","useContext","Link","Col","useMutation","useQuery","HumiditySensorMode","ErrorMessage","Label","OrderReceivedContainer","OrderDetails","BlockTitle","Text","ListItem","ListTitle","ListDes","ButtonText","Row","InputUpper","PlantPageWrapper","FormattedMessage","GET_LOGGED_IN_USER","PlantsListWrapper","Button","ADD_PLANT","UPDATE_HUMIDITY_SETTINGS_1","UPDATE_HUMIDITY_SETTINGS_2","Select","Input","ProfileContext","SuccessMsg","Switch","YourPlants","deviceType","state","dispatch","data","error","loading","name","setPlantName","controllerId","setControllerID","userinfoMsg","setUserinfoMsg","addPlant","updateSoilHumiditySettings1","updateSoilHumiditySettings2","plants","message","handleHumiditySettings1Change","plant","field","value","type","payload","setTimeout","handleSettingsSaveClick","handleHumiditySettings2Change","handleAddClick","variables","id","getUser","Number","fieldName","fieldValue","console","log","soilHumiditySettings1","modeOptions","SEEDS_POOL_IRRIGATION","label","MANUAL","IRRIGATE_ON_DEMAND","SCHEDULE","NONE","manualModeOptions","selectStyle","control","styles","width","length","map","i","selectedMode","find","option","mode","selectedManualState","relayOneWorking","e","target","soilHumidity1","workInfo","isWorking","stopWorking","startWorking","maxWarning","minWarning","tempeture","alignItems","marginBottom"],"mappings":"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","sourcesContent":["import React,  { useState, useEffect, useContext } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router'\nimport { Col } from 'react-styled-flexboxgrid';\nimport moment from 'moment';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { GET_ORDERS } from 'graphql/query/order.query';\nimport { CURRENCY, HumiditySensorMode } from 'utils/constant';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { Modal } from '@redq/reuse-modal';\nimport { Label } from 'components/forms/label';\n  \nimport OrderReceivedWrapper, {\n  OrderReceivedContainer,\n  OrderInfo,\n  OrderDetails,\n  TotalAmount,\n  BlockTitle,\n  Text,\n  InfoBlockWrapper,\n  InfoBlock,\n  ListItem,\n  ListTitle,\n  ListDes,\n  ButtonText,\n  Row,\n  InputUpper,\n  PlantPageWrapper\n} from './your-plants.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { PlantsListWrapper } from 'features/your-plants/your-plants.style';\nimport ErrorMessageTwo from 'components/error-message/error-message-two';\nimport { Button } from 'components/button/button';\nimport { ADD_PLANT, UPDATE_HUMIDITY_SETTINGS_1, UPDATE_HUMIDITY_SETTINGS_2 } from 'graphql/query/plants.query';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { SuccessMsg } from 'features/user-profile/settings/settings.style';\nimport Switch from 'components/switch/switch';\n  \n\ntype YourPlantsProps = {\n  data?: any;\n  index?: Number;\n  Router?: any;\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst YourPlants: React.FC<YourPlantsProps> = ({ deviceType }) => {\n  const { state, dispatch } = useContext(ProfileContext);\n  const { data, error, loading } = useQuery(GET_LOGGED_IN_USER);\n  // const router = useRouter();\n  // const intl = useIntl();\n  const [name, setPlantName] = useState('');\n  const [controllerId, setControllerID] = useState('');\n  const [userinfoMsg, setUserinfoMsg] = useState('');\n  const [addPlant] = useMutation(ADD_PLANT);\n  const [updateSoilHumiditySettings1] = useMutation(UPDATE_HUMIDITY_SETTINGS_1);\n  const [updateSoilHumiditySettings2] = useMutation(UPDATE_HUMIDITY_SETTINGS_2);\n  const { plants } = state;\n\n  if (loading) {\n    return <ErrorMessage message={'Cargando...'} />\n  };\n\n  if (error) {\n    return (\n      <ErrorMessage message={error.message} />\n    );\n  };\n\n  const handleHumiditySettings1Change = (plant: any, field: string, value: string) => {\n    dispatch({\n      type: 'HANDLE_HUMIDITY_1_SETTINGS_CHANGE',\n      payload: { plant, value, field },\n    });\n\n    setTimeout(function () {\n      handleSettingsSaveClick(plant, field, value);\n    }, 1000)\n\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000)\n  };\n\n  const handleHumiditySettings2Change = (plant: any, field: string, value: string) => {\n    dispatch({\n      type: 'HANDLE_HUMIDITY_2_SETTINGS_CHANGE',\n      payload: { plant, value, field },\n    });\n\n    handleSettingsSaveClick(plant, field, value);\n\n    setUserinfoMsg('Update user info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000)\n  };\n  \n  const handleAddClick = () => {\n    addPlant({\n      variables: {\n        id: data?.getUser?.id,\n        name,\n        controllerId: Number(controllerId)\n      },\n    });\n  };\n\n    \n  const handleSettingsSaveClick = (plant: any, fieldName: string, fieldValue: string) => {\n    console.log(plant, fieldName, fieldValue);\n    updateSoilHumiditySettings1({\n      variables: {\n        id: data?.getUser?.id,\n        [fieldName]: fieldValue,\n        controllerId: plant.controllerId,\n        ...plant.soilHumiditySettings1\n      },\n    });\n  };\n\n  const modeOptions = [\n    { value: HumiditySensorMode.SEEDS_POOL_IRRIGATION, label: 'Semillero' },\n    { value: HumiditySensorMode.MANUAL, label: 'Manual' },\n    { value: HumiditySensorMode.IRRIGATE_ON_DEMAND, label: 'A demanda' },\n    { value: HumiditySensorMode.SCHEDULE, label: 'Calendario' },\n    { value: HumiditySensorMode.NONE, label: 'NONE' }\n  ];\n\n  const manualModeOptions = [\n    { value: true, label: 'Prendido' },\n    { value: false, label: 'Apagado' }\n  ];\n\n  const selectStyle = {\n    control: styles => ({ ...styles, width: '197px' }),\n    // option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    //   // const color = chroma(data.color);\n    //   return {\n    //     ...styles,\n    //     backgroundColor: isDisabled ? 'red' : blue,\n    //     color: '#FFF',\n    //     cursor: isDisabled ? 'not-allowed' : 'default',\n    //     ...\n    //   };\n    // }\n  };\n\n  return (\n    <PlantPageWrapper>\n      <OrderReceivedContainer>\n        <Link href=\"/profile\">\n          <a className=\"home-btn\">\n            <FormattedMessage id=\"backProfileBtn\" defaultMessage=\"Back to Profile\" />\n          </a>\n        </Link>\n\n        <OrderDetails>\n          <BlockTitle>\n            <FormattedMessage\n              id=\"yourPlants\"\n              defaultMessage=\"Your Plants\"\n            />\n          </BlockTitle>\n\n          { plants?.length < 1 && (<Text>No tienes plantas registradas</Text>) }\n          { plants?.map((plant, i: number) => {\n            const selectedMode = modeOptions.find((option) => option.value === plant?.soilHumiditySettings1?.mode);\n            const selectedManualState = manualModeOptions.find((option) => option.value === plant?.soilHumiditySettings1?.relayOneWorking);\n            console.log('selectedManualState', selectedManualState)\n              return (\n                <PlantsListWrapper key={i + '-orderList'}>\n                  <ListItem>\n                    <ListTitle>\n                      <Text bold>\n                        <FormattedMessage\n                          id=\"plantName\"\n                          defaultMessage=\"plantName\"\n                        />\n                      </Text>\n                    </ListTitle>\n                    <ListDes>\n                      <Text>{plant?.name} </Text>\n                      <Input\n                        type='text'\n                        name='name'\n                        value={plant?.soilHumiditySettings1.name}\n                        onChange={(e: any) => handleHumiditySettings1Change(plant, 'name', e.target.value)}\n                        backgroundColor='#F7F7F7'\n                        marginBottom='10px'\n                        // intlInputLabelId=\"profileEmailField\"\n                      />\n                    </ListDes>\n                  </ListItem>\n                \n\n                    <ListItem>\n                      <ListTitle>\n                        <Text bold>\n                          <FormattedMessage\n                            id=\"soilHumidityId\"\n                            defaultMessage=\"soilHumidityId\"\n                          />\n                        </Text>\n                      </ListTitle>\n                      <ListDes>\n                        <Text>{plant?.soilHumidity1} </Text>\n                      </ListDes>\n                    </ListItem>\n                    <ListItem>\n                      <ListTitle>\n                        <Text bold>\n                          <FormattedMessage\n                            id=\"modoId\"\n                            defaultMessage=\"modoId\"\n                          />\n                        </Text>\n                      </ListTitle>\n                      <ListDes>\n                        <Select \n                          onChange={(e: any) => handleHumiditySettings1Change(plant, 'mode', e.value)}\n                          value={selectedMode}\n                          options={modeOptions}\n                          styles={selectStyle}\n                        />\n                      </ListDes>\n                    </ListItem>\n                    <Switch \n                      label={`Usted se encuentra: ${state.workInfo?.isWorking ? 'Chambeando' : 'Vagando'}`}\n                      disabled={false}\n                      checked={state.workInfo?.isWorking}\n                      labelPosition={'right'}\n                      // className,\n                      onUpdate={() => state.workInfo?.isWorking ? stopWorking() :startWorking() }\n                      // style\n                    />\n                  { (plant?.soilHumiditySettings1?.mode === HumiditySensorMode.IRRIGATE_ON_DEMAND ||\n                    plant?.soilHumiditySettings1?.mode === HumiditySensorMode.SEEDS_POOL_IRRIGATION) && (\n                    <>\n                      <ListItem>\n                        <ListTitle>\n                          <Text bold>\n                            <FormattedMessage\n                              id='maxHumidityId'\n                              defaultMessage='maxHumidityId'\n                            />\n                          </Text>\n                        </ListTitle>\n                        <ListDes>\n                          <Input\n                            type='number'\n                            name='maxWarning'\n                            value={plant?.soilHumiditySettings1.maxWarning}\n                            onChange={(e: any) => handleHumiditySettings1Change(plant, 'maxWarning', e.target.value)}\n                            backgroundColor='#F7F7F7'\n                            marginBottom='10px'\n                            // intlInputLabelId=\"profileEmailField\"\n                          />\n                        </ListDes>\n                      </ListItem>\n\n                      <ListItem>\n                        <ListTitle>\n                          <Text bold>\n                            <FormattedMessage\n                               id='minHumidityId'\n                               defaultMessage='minHumidityId'\n                            />\n                          </Text>\n                        </ListTitle>\n                        <ListDes>\n                          <InputUpper\n                            type='number'\n                            name='minWarning'\n                            value={plant?.soilHumiditySettings1?.minWarning}\n                            onChange={(e: any) => handleHumiditySettings1Change(plant, 'minWarning', e.target.value)}\n                            backgroundColor='#F7F7F7'\n                            height='48px'\n                            marginBottom='10px'\n                            // intlInputLabelId=\"profileNameField\"\n                          />\n                        </ListDes>\n                      </ListItem>\n    \n                    </>\n                  )}\n\n                  { plant?.soilHumiditySettings1?.mode === HumiditySensorMode.MANUAL && (\n                    <>\n                      <ListItem>\n                        <ListTitle>\n                          <Text bold>\n                            <FormattedMessage\n                              id='manualModeStateId'\n                              defaultMessage='manualModeStateId'\n                            />\n                          </Text>\n                        </ListTitle>\n                        <ListDes>\n                          <Select \n                            onChange={(e: any) => handleHumiditySettings1Change(plant, 'relayOneWorking', e.value)}\n                            value={selectedManualState}\n                            options={manualModeOptions}\n                            styles={selectStyle}\n                          />\n                        </ListDes>\n                      </ListItem>\n                    </>\n                  )}\n                  \n                  { plant?.soilHumiditySettings1?.mode === HumiditySensorMode.NONE && (\n                    <Text>Necesitas seleccionar un modo</Text>\n                  )}\n                  \n                  {/* <PlantsListWrapper>\n                    <ListItem>\n                      <ListTitle>\n                        <Text bold>\n                          <FormattedMessage\n                            id=\"soilHumidityId\"\n                            defaultMessage=\"soilHumidityId\"\n                          />\n                        </Text>\n                      </ListTitle>\n                      <ListDes>\n                        <Text>{plant?.soilHumidity2} </Text>\n                      </ListDes>\n                    </ListItem>\n                    <ListItem>\n                      <ListTitle>\n                        <Text bold>\n                          <FormattedMessage\n                            id=\"modoId\"\n                            defaultMessage=\"modoId\"\n                          />\n                        </Text>\n                      </ListTitle>\n                      <ListDes>\n                        <Text>{plant?.soilHumiditySettings2?.mode} </Text>\n                      </ListDes>\n                    </ListItem>\n                  </PlantsListWrapper> */}\n\n                </PlantsListWrapper>\n              )\n            })\n          }\n\n          <PlantsListWrapper>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id=\"tempSensorId\"\n                    defaultMessage=\"tempSensorId\"\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Text>{plants[0]?.tempeture} </Text>\n              </ListDes>\n            </ListItem>\n          </PlantsListWrapper>\n\n          <PlantsListWrapper>\n            <ListItem>\n              <ListTitle>\n                <Text bold>\n                  <FormattedMessage\n                    id=\"humedadAmbienteSensorId\"\n                    defaultMessage=\"humedadAmbienteSensorId\"\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n                <Text>{plants}?.airHumidity} </Text>\n              </ListDes>\n            </ListItem>\n          </PlantsListWrapper>\n\n          {userinfoMsg && (\n              <SuccessMsg>\n                <FormattedMessage\n                  id='userInfoSuccess'\n                  defaultMessage={userinfoMsg}\n                />\n              </SuccessMsg>\n          )}\n\n          <BlockTitle>\n            <FormattedMessage\n              id=\"addController\"\n              defaultMessage=\"Your Plants\"\n            />\n          </BlockTitle>\n          <Row style={{ alignItems: 'flex-end', marginBottom: '50px' }}>\n            <Col xs={12} sm={5} md={5} lg={5}>\n              <Label>\n                <FormattedMessage\n                  id='plantNameField'\n                  defaultMessage='Name of the plant'\n                />\n              </Label>\n              <InputUpper\n                type='text'\n                label='Name'\n                name='name'\n                value={name}\n                onChange={(e) => setPlantName(e.target.value)}\n                backgroundColor='#F7F7F7'\n                height='48px'\n                marginBottom='10px'\n                // intlInputLabelId=\"profileNameField\"\n              />\n            </Col>\n\n             <Col xs={12} sm={5} md={5} lg={5}>\n              <Label>\n                <FormattedMessage\n                  id='controllerIdField'\n                  defaultMessage='ID of the controller'\n                />\n              </Label>\n              <InputUpper\n                type='number'\n                label='Controller ID'\n                name='controllerId'\n                value={controllerId}\n                onChange={(e) => setControllerID(e.target.value)}\n                backgroundColor='#F7F7F7'\n                height='48px'\n                marginBottom='10px'\n                // intlInputLabelId=\"profileNameField\"\n              />\n            </Col>\n          </Row>\n\n          <Button className=\"cart-button\" variant=\"secondary\" borderRadius={100} onClick={handleAddClick}>\n            <ButtonText>\n              <FormattedMessage id={\"addPlantButton\"} defaultMessage=\"Add plant\" />\n            </ButtonText>\n          </Button>\n        </OrderDetails>\n      </OrderReceivedContainer>\n    </PlantPageWrapper>\n  );\n};\n\nexport default YourPlants;\n"]},"metadata":{},"sourceType":"module"}