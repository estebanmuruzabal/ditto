{"ast":null,"code":"import { useEffect, useState } from 'react';\nconst isClient = false;\nconst mobile = useMedia('(max-width: 580px)');\nexport const useMedia = (query, defaultState = false) => {\n  const {\n    0: state,\n    1: setState\n  } = useState(isClient ? () => window.matchMedia(query).matches : defaultState);\n  useEffect(() => {\n    let mounted = true;\n    const mql = window.matchMedia(query);\n\n    const onChange = () => {\n      if (!mounted) {\n        return;\n      }\n\n      setState(!!mql.matches);\n    };\n\n    mql.addListener(onChange);\n    setState(mql.matches);\n    return () => {\n      mounted = false;\n      mql.removeListener(onChange);\n    };\n  }, [query]);\n  return state;\n};","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/utils/use-media.ts"],"names":["useEffect","useState","isClient","mobile","useMedia","query","defaultState","state","setState","window","matchMedia","matches","mounted","mql","onChange","addListener","removeListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,MAAMC,QAAQ,QAAd;AAEA,MAAMC,MAAM,GAAGC,QAAQ,CAAC,oBAAD,CAAvB;AAEA,OAAO,MAAMA,QAAQ,GAAG,CAACC,KAAD,EAAgBC,YAAqB,GAAG,KAAxC,KAAkD;AACxE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAChCC,QAAQ,GAAG,MAAMO,MAAM,CAACC,UAAP,CAAkBL,KAAlB,EAAyBM,OAAlC,GAA4CL,YADpB,CAAlC;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,OAAO,GAAG,IAAd;AACA,UAAMC,GAAG,GAAGJ,MAAM,CAACC,UAAP,CAAkBL,KAAlB,CAAZ;;AACA,UAAMS,QAAQ,GAAG,MAAM;AACrB,UAAI,CAACF,OAAL,EAAc;AACZ;AACD;;AACDJ,MAAAA,QAAQ,CAAC,CAAC,CAACK,GAAG,CAACF,OAAP,CAAR;AACD,KALD;;AAOAE,IAAAA,GAAG,CAACE,WAAJ,CAAgBD,QAAhB;AACAN,IAAAA,QAAQ,CAACK,GAAG,CAACF,OAAL,CAAR;AAEA,WAAO,MAAM;AACXC,MAAAA,OAAO,GAAG,KAAV;AACAC,MAAAA,GAAG,CAACG,cAAJ,CAAmBF,QAAnB;AACD,KAHD;AAID,GAjBQ,EAiBN,CAACT,KAAD,CAjBM,CAAT;AAmBA,SAAOE,KAAP;AACD,CAzBM","sourcesContent":["import { useEffect, useState } from 'react';\nconst isClient = typeof window === 'object';\n\nconst mobile = useMedia('(max-width: 580px)');\n\nexport const useMedia = (query: string, defaultState: boolean = false) => {\n  const [state, setState] = useState(\n    isClient ? () => window.matchMedia(query).matches : defaultState\n  );\n\n  useEffect(() => {\n    let mounted = true;\n    const mql = window.matchMedia(query);\n    const onChange = () => {\n      if (!mounted) {\n        return;\n      }\n      setState(!!mql.matches);\n    };\n\n    mql.addListener(onChange);\n    setState(mql.matches);\n\n    return () => {\n      mounted = false;\n      mql.removeListener(onChange);\n    };\n  }, [query]);\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}