{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SearchBox } from 'components/search-box/search-box';\nimport { useAppState, useAppDispatch } from 'contexts/app/app.provider';\nimport { useRouter } from 'next/router';\nimport { useIntl } from 'react-intl';\nimport { SearchWrapper, SearchResultWrap } from './search.style';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { GET_PRODUCTS_SEARCH } from 'graphql/query/products.search.query';\n\nvar Search = function Search(_ref) {\n  var onSubmit = _ref.onSubmit,\n      props = _objectWithoutProperties(_ref, [\"onSubmit\"]);\n\n  var router = useRouter();\n  var container = useRef(null);\n  var pathname = router.pathname,\n      query = router.query;\n\n  var _useState = useState([]),\n      filteredSearchData = _useState[0],\n      setFilteredSearchData = _useState[1];\n\n  var _useState2 = useState(false),\n      isShow = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useQuery = useQuery(GET_PRODUCTS_SEARCH, {\n    variables: {\n      type: query.type || 'grocery',\n      offset: 0,\n      limit: 20\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (!data || loading) {\n    return __jsx(\"div\", null, \"loading...\");\n  }\n\n  if (error) return __jsx(ErrorMessage, {\n    message: error.message\n  });\n  var searchData = data.products.items;\n  var searchTerm = useAppState('searchTerm');\n  var dispatch = useAppDispatch();\n  var intl = useIntl();\n\n  var handleOnChange = function handleOnChange(e) {\n    var value = e.target.value;\n    var result = searchData.filter(function (item) {\n      return item.name.toLowerCase().startsWith(value);\n    });\n    setFilteredSearchData(result);\n    filteredSearchData.length > 0 ? setShow(true) : setShow(false);\n    dispatch({\n      type: 'SET_SEARCH_TERM',\n      payload: value\n    });\n  };\n\n  var onSearch = function onSearch(e) {\n    e.preventDefault();\n\n    var type = query.type,\n        rest = _objectWithoutProperties(query, [\"type\"]);\n\n    if (type) {\n      router.push({\n        pathname: pathname,\n        query: _objectSpread(_objectSpread({}, rest), {}, {\n          text: searchTerm\n        })\n      }, {\n        pathname: \"/\".concat(type),\n        query: _objectSpread(_objectSpread({}, rest), {}, {\n          text: searchTerm\n        })\n      });\n    } else {\n      router.push({\n        pathname: pathname,\n        query: _objectSpread(_objectSpread({}, rest), {}, {\n          text: searchTerm\n        })\n      });\n    }\n\n    dispatch({\n      type: 'SET_SEARCH_TERM',\n      payload: ''\n    });\n\n    if (onSubmit) {\n      onSubmit();\n    }\n  };\n\n  var myhandleClick = function myhandleClick(e) {\n    if (container.current.contains(e.target)) {\n      return;\n    }\n\n    setShow(false);\n  };\n\n  useEffect(function () {\n    document.addEventListener(\"mousedown\", myhandleClick);\n    return function () {\n      document.removeEventListener(\"mousedown\", myhandleClick);\n    };\n  }, []);\n  return __jsx(SearchWrapper, {\n    className: props.minimal ? 'minimal-wrap' : 'modern-wrap',\n    ref: container\n  }, __jsx(SearchBox, _extends({\n    onEnter: onSearch,\n    onChange: handleOnChange,\n    value: searchTerm,\n    name: \"search\",\n    placeholder: intl.formatMessage({\n      id: 'searchPlaceholder',\n      defaultMessage: 'Search your products from here'\n    }),\n    categoryType: query.type || 'Grocery',\n    buttonText: intl.formatMessage({\n      id: 'searchButtonText',\n      defaultMessage: 'Search'\n    })\n  }, props)), isShow && __jsx(SearchResultWrap, {\n    className: \"searchResultWrap\"\n  }, __jsx(\"ul\", null, filteredSearchData.map(function (item, index) {\n    return __jsx(\"li\", {\n      onClick: function onClick() {\n        return router.push('/product/[slug]', \"/product/\".concat(item.slug));\n      },\n      key: index\n    }, item.name);\n  }))));\n};\n\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}