{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/ditto-market/ditto-market.tsx\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { PlantsPageContainer, PlantPageWrapper } from './ditto-market.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport ReactMapGL from \"react-map-gl\";\n\nvar DittoMarket = function DittoMarket(_ref) {\n  _s();\n\n  var deviceType = _ref.deviceType,\n      userRefetch = _ref.userRefetch;\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useContext2 = useContext(AuthContext),\n      authDispatch = _useContext2.authDispatch;\n\n  var _useQuery = useQuery(GET_LOGGED_IN_USER, {\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: \"network-only\" // pollInterval: 5000,\n\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      _useQuery$data = _useQuery.data,\n      data = _useQuery$data === void 0 ? {} : _useQuery$data;\n\n  var _useState = useState({\n    height: \"100%\",\n    width: \"100%\"\n  }),\n      viewport = _useState[0],\n      setViewport = _useState[1];\n\n  var intl = useIntl();\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Cargando...',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    });\n  }\n\n  ;\n  return __jsx(PlantPageWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(PlantsPageContainer, {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: \"jsx-182966123\" + \" \" + \"home-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"backProfileBtn\",\n    defaultMessage: \"Back to Profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }))), __jsx(ReactMapGL, {\n    viewState: viewport,\n    onViewportChange: function onViewportChange(newViewport) {\n      return setViewport(newViewport);\n    },\n    mapboxApiAccessToken: \"<your-mapbox-api-token>\",\n    mapStyle: \"mapbox://styles/mapbox/light-v9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"182966123\",\n    __self: _this\n  }, \".root.jsx-182966123{position:absolute;top:0;left:0;height:100vh;width:100vw;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lc3RlYmFubXVydXphYmFsL3dvcmsvZGl0dG8vY2xpZW50L3BhY2thZ2VzL3Nob3Avc3JjL2ZlYXR1cmVzL2RpdHRvLW1hcmtldC9kaXR0by1tYXJrZXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNFVyxBQUdpQyxrQkFDWixNQUNDLE9BQ00sYUFDRCxZQUNkIiwiZmlsZSI6Ii9Vc2Vycy9lc3RlYmFubXVydXphYmFsL3dvcmsvZGl0dG8vY2xpZW50L3BhY2thZ2VzL3Nob3Avc3JjL2ZlYXR1cmVzL2RpdHRvLW1hcmtldC9kaXR0by1tYXJrZXQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCAgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCB7IHVzZU11dGF0aW9uLCB1c2VRdWVyeSB9IGZyb20gJ0BhcG9sbG8vcmVhY3QtaG9va3MnO1xuaW1wb3J0IEVycm9yTWVzc2FnZSBmcm9tICdjb21wb25lbnRzL2Vycm9yLW1lc3NhZ2UvZXJyb3ItbWVzc2FnZSc7XG5cbmltcG9ydCB7XG4gIFBsYW50c1BhZ2VDb250YWluZXIsXG4gIFBsYW50UGFnZVdyYXBwZXIsXG59IGZyb20gJy4vZGl0dG8tbWFya2V0LnN0eWxlJztcbmltcG9ydCB7IEZvcm1hdHRlZE1lc3NhZ2UsIHVzZUludGwgfSBmcm9tICdyZWFjdC1pbnRsJztcbmltcG9ydCB7IEdFVF9MT0dHRURfSU5fVVNFUiwgR0VUX0xPR0dFRF9JTl9VU0VSX1NFVFRJTkdTIH0gZnJvbSAnZ3JhcGhxbC9xdWVyeS9jdXN0b21lci5xdWVyeSc7XG5pbXBvcnQgeyBQcm9maWxlQ29udGV4dCB9IGZyb20gJ2NvbnRleHRzL3Byb2ZpbGUvcHJvZmlsZS5jb250ZXh0JztcbmltcG9ydCB7IEF1dGhDb250ZXh0IH0gZnJvbSAnY29udGV4dHMvYXV0aC9hdXRoLmNvbnRleHQnO1xuaW1wb3J0IFJlYWN0TWFwR0wgZnJvbSBcInJlYWN0LW1hcC1nbFwiO1xuXG50eXBlIERpdHRvTWFya2V0UHJvcHMgPSB7XG4gIGRhdGE/OiBhbnk7XG4gIHVzZXJSZWZldGNoOiBhbnk7XG4gIGluZGV4PzogTnVtYmVyO1xuICBSb3V0ZXI/OiBhbnk7XG4gIGRldmljZVR5cGU/OiB7XG4gICAgbW9iaWxlOiBib29sZWFuO1xuICAgIHRhYmxldDogYm9vbGVhbjtcbiAgICBkZXNrdG9wOiBib29sZWFuO1xuICB9O1xufTtcblxuY29uc3QgRGl0dG9NYXJrZXQ6IFJlYWN0LkZDPERpdHRvTWFya2V0UHJvcHM+ID0gKHsgZGV2aWNlVHlwZSwgdXNlclJlZmV0Y2ggfSkgPT4ge1xuICBjb25zdCB7IHN0YXRlLCBkaXNwYXRjaCB9ID0gdXNlQ29udGV4dChQcm9maWxlQ29udGV4dCk7XG4gIGNvbnN0IHthdXRoRGlzcGF0Y2h9ID0gdXNlQ29udGV4dDxhbnk+KEF1dGhDb250ZXh0KTtcblxuICBjb25zdCB7IGxvYWRpbmcsIGVycm9yLCBkYXRhID0ge30gfSA9IHVzZVF1ZXJ5KEdFVF9MT0dHRURfSU5fVVNFUiwge1xuICAgIG5vdGlmeU9uTmV0d29ya1N0YXR1c0NoYW5nZTogdHJ1ZSxcbiAgICBmZXRjaFBvbGljeTogXCJuZXR3b3JrLW9ubHlcIixcbiAgICAvLyBwb2xsSW50ZXJ2YWw6IDUwMDAsXG4gIH0pO1xuXG4gIGNvbnN0IFt2aWV3cG9ydCwgc2V0Vmlld3BvcnRdID0gdXNlU3RhdGUoe1xuICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgd2lkdGg6IFwiMTAwJVwiXG4gIH0pO1xuXG4gIGNvbnN0IGludGwgPSB1c2VJbnRsKCk7XG5cbiAgaWYgKGxvYWRpbmcpIHtcbiAgICByZXR1cm4gPEVycm9yTWVzc2FnZSBtZXNzYWdlPXsnQ2FyZ2FuZG8uLi4nfSAvPlxuICB9O1xuXG4gIGlmIChlcnJvcikge1xuICAgIHJldHVybiAoXG4gICAgICA8RXJyb3JNZXNzYWdlIG1lc3NhZ2U9e2Vycm9yLm1lc3NhZ2V9IC8+XG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxQbGFudFBhZ2VXcmFwcGVyPlxuICAgICAgPFBsYW50c1BhZ2VDb250YWluZXIgc3R5bGU9e3sgd2lkdGg6ICcxMDAlJyB9fT5cbiAgICAgICAgPExpbmsgaHJlZj1cIi9wcm9maWxlXCI+XG4gICAgICAgICAgPGEgY2xhc3NOYW1lPVwiaG9tZS1idG5cIj5cbiAgICAgICAgICAgIDxGb3JtYXR0ZWRNZXNzYWdlIGlkPVwiYmFja1Byb2ZpbGVCdG5cIiBkZWZhdWx0TWVzc2FnZT1cIkJhY2sgdG8gUHJvZmlsZVwiIC8+XG4gICAgICAgICAgPC9hPlxuICAgICAgICA8L0xpbms+XG5cbiAgICAgICAgPFJlYWN0TWFwR0xcbiAgICAgICAgICB2aWV3U3RhdGU9e3ZpZXdwb3J0fVxuICAgICAgICAgIG9uVmlld3BvcnRDaGFuZ2U9e25ld1ZpZXdwb3J0ID0+IHNldFZpZXdwb3J0KG5ld1ZpZXdwb3J0KX1cbiAgICAgICAgICBtYXBib3hBcGlBY2Nlc3NUb2tlbj1cIjx5b3VyLW1hcGJveC1hcGktdG9rZW4+XCJcbiAgICAgICAgICBtYXBTdHlsZT1cIm1hcGJveDovL3N0eWxlcy9tYXBib3gvbGlnaHQtdjlcIlxuICAgICAgICAvPlxuICAgICAgICA8c3R5bGUganN4PlxuICAgICAgICAgIHtgXG4gICAgICAgICAgICAucm9vdCB7XG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgYH1cbiAgICAgICAgPC9zdHlsZT5cbiAgICAgIDwvUGxhbnRzUGFnZUNvbnRhaW5lcj5cbiAgICA8L1BsYW50UGFnZVdyYXBwZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBEaXR0b01hcmtldDtcbiJdfQ== */\\n/*@ sourceURL=/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/ditto-market/ditto-market.tsx */\")));\n};\n\n_s(DittoMarket, \"TIl8vxqUegat/nE6+yXzHZTyt1w=\", false, function () {\n  return [useQuery, useIntl];\n});\n\n_c = DittoMarket;\nexport default DittoMarket;\n\nvar _c;\n\n$RefreshReg$(_c, \"DittoMarket\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/ditto-market/ditto-market.tsx"],"names":["React","useState","useContext","Link","useQuery","ErrorMessage","PlantsPageContainer","PlantPageWrapper","FormattedMessage","useIntl","GET_LOGGED_IN_USER","ProfileContext","AuthContext","ReactMapGL","DittoMarket","deviceType","userRefetch","state","dispatch","authDispatch","notifyOnNetworkStatusChange","fetchPolicy","loading","error","data","height","width","viewport","setViewport","intl","message","newViewport"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAsBC,QAAtB,QAAsC,qBAAtC;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AAEA,SACEC,mBADF,EAEEC,gBAFF,QAGO,sBAHP;AAIA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,YAA1C;AACA,SAASC,kBAAT,QAAgE,8BAAhE;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAcA,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAAiC;AAAA;;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,oBACnDd,UAAU,CAACS,cAAD,CADyC;AAAA,MACvEM,KADuE,eACvEA,KADuE;AAAA,MAChEC,QADgE,eAChEA,QADgE;;AAAA,qBAExDhB,UAAU,CAAMU,WAAN,CAF8C;AAAA,MAExEO,YAFwE,gBAExEA,YAFwE;;AAAA,kBAIzCf,QAAQ,CAACM,kBAAD,EAAqB;AACjEU,IAAAA,2BAA2B,EAAE,IADoC;AAEjEC,IAAAA,WAAW,EAAE,cAFoD,CAGjE;;AAHiE,GAArB,CAJiC;AAAA,MAIvEC,OAJuE,aAIvEA,OAJuE;AAAA,MAI9DC,KAJ8D,aAI9DA,KAJ8D;AAAA,iCAIvDC,IAJuD;AAAA,MAIvDA,IAJuD,+BAIhD,EAJgD;;AAAA,kBAU/CvB,QAAQ,CAAC;AACvCwB,IAAAA,MAAM,EAAE,MAD+B;AAEvCC,IAAAA,KAAK,EAAE;AAFgC,GAAD,CAVuC;AAAA,MAUxEC,QAVwE;AAAA,MAU9DC,WAV8D;;AAe/E,MAAMC,IAAI,GAAGpB,OAAO,EAApB;;AAEA,MAAIa,OAAJ,EAAa;AACX,WAAO,MAAC,YAAD;AAAc,MAAA,OAAO,EAAE,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAAA;;AAED,MAAIC,KAAJ,EAAW;AACT,WACE,MAAC,YAAD;AAAc,MAAA,OAAO,EAAEA,KAAK,CAACO,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAAA;AAED,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AAAqB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,KAAK,EAAE;AAAT,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,uCAAa,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,gBAArB;AAAsC,IAAA,cAAc,EAAC,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAOE,MAAC,UAAD;AACE,IAAA,SAAS,EAAEC,QADb;AAEE,IAAA,gBAAgB,EAAE,0BAAAI,WAAW;AAAA,aAAIH,WAAW,CAACG,WAAD,CAAf;AAAA,KAF/B;AAGE,IAAA,oBAAoB,EAAC,yBAHvB;AAIE,IAAA,QAAQ,EAAC,iCAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF;AAAA;AAAA;AAAA,g0HADF,CADF;AA6BD,CAxDD;;GAAMjB,W;UAIkCV,Q,EAWzBK,O;;;KAfTK,W;AA0DN,eAAeA,WAAf","sourcesContent":["import React,  { useState, useEffect, useContext } from 'react';\nimport Link from 'next/link';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport ErrorMessage from 'components/error-message/error-message';\n\nimport {\n  PlantsPageContainer,\n  PlantPageWrapper,\n} from './ditto-market.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER, GET_LOGGED_IN_USER_SETTINGS } from 'graphql/query/customer.query';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport ReactMapGL from \"react-map-gl\";\n\ntype DittoMarketProps = {\n  data?: any;\n  userRefetch: any;\n  index?: Number;\n  Router?: any;\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst DittoMarket: React.FC<DittoMarketProps> = ({ deviceType, userRefetch }) => {\n  const { state, dispatch } = useContext(ProfileContext);\n  const {authDispatch} = useContext<any>(AuthContext);\n\n  const { loading, error, data = {} } = useQuery(GET_LOGGED_IN_USER, {\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: \"network-only\",\n    // pollInterval: 5000,\n  });\n\n  const [viewport, setViewport] = useState({\n    height: \"100%\",\n    width: \"100%\"\n  });\n\n  const intl = useIntl();\n\n  if (loading) {\n    return <ErrorMessage message={'Cargando...'} />\n  };\n\n  if (error) {\n    return (\n      <ErrorMessage message={error.message} />\n    );\n  };\n\n  return (\n    <PlantPageWrapper>\n      <PlantsPageContainer style={{ width: '100%' }}>\n        <Link href=\"/profile\">\n          <a className=\"home-btn\">\n            <FormattedMessage id=\"backProfileBtn\" defaultMessage=\"Back to Profile\" />\n          </a>\n        </Link>\n\n        <ReactMapGL\n          viewState={viewport}\n          onViewportChange={newViewport => setViewport(newViewport)}\n          mapboxApiAccessToken=\"<your-mapbox-api-token>\"\n          mapStyle=\"mapbox://styles/mapbox/light-v9\"\n        />\n        <style jsx>\n          {`\n            .root {\n              position: absolute;\n              top: 0;\n              left: 0;\n              height: 100vh;\n              width: 100vw;\n            }\n          `}\n        </style>\n      </PlantsPageContainer>\n    </PlantPageWrapper>\n  );\n};\n\nexport default DittoMarket;\n"]},"metadata":{},"sourceType":"module"}