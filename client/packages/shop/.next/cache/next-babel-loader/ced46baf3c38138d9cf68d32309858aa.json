{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/carts/fixed-cart-popup.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport FixedCart from './fixed-cart';\nimport CartPopupButton from 'components/cart-popup/cart-popup-button';\nimport { CURRENCY } from 'utils/constant';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\nconst CartPopupStyle = createGlobalStyle`\n  .cartPopup{\n    top: auto !important;\n    left: auto !important;\n    bottom: 50px !important;\n    right: 50px !important;\n    box-shadow: ${themeGet('shadows.big', '0 21px 36px rgba(0, 0, 0, 0.16)')};\n    transform-origin: bottom right;\n\n    @media (max-width: 767px) {\n      max-width: none!important;\n      width: 100% !important;\n      bottom: 0 !important;\n      left: 0!important;\n      background: ${themeGet('colors.white', '#ffffff')};\n      overflow: initial !important;\n      transform-origin: bottom center;\n    }\n  }\n\n.fixedCartPopup{\n  @media (min-width: 991px) {\n    display: none;\n  }\n}\n`;\n\nconst FixedCartPopup = ({\n  onCheckout\n}) => {\n  const {\n    isOpen,\n    cartItemsCount,\n    toggleCart,\n    calculatePrice\n  } = useCart();\n  const intl = useIntl();\n\n  const handleModal = () => {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40\n        }\n      },\n      closeOnClickOutside: true,\n      component: FixedCart,\n      closeComponent: () => __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }),\n      componentProps: {\n        onCloseBtnClick: closeModal,\n        scrollbarHeight: 370,\n        onCheckout: onCheckout\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(CartPopupStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), __jsx(CartPopupButton, {\n    className: \"fixedCartPopup\",\n    itemCount: cartItemsCount,\n    btnText: intl.formatMessage({\n      id: 'buyNowId',\n      defaultMessage: 'Buy now'\n    }),\n    itemPostfix: cartItemsCount > 1 ? __jsx(FormattedMessage, {\n      id: \"cartItems\",\n      defaultMessage: \"items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }) : __jsx(FormattedMessage, {\n      id: \"cartItem\",\n      defaultMessage: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }),\n    price: calculatePrice(),\n    pricePrefix: CURRENCY,\n    onClick: handleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FixedCartPopup;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/carts/fixed-cart-popup.tsx"],"names":["React","createGlobalStyle","themeGet","openModal","closeModal","FixedCart","CartPopupButton","CURRENCY","FormattedMessage","useIntl","useCart","CartPopupStyle","FixedCartPopup","onCheckout","isOpen","cartItemsCount","toggleCart","calculatePrice","intl","handleModal","show","config","className","width","height","enableResizing","disableDragging","transition","tension","friction","closeOnClickOutside","component","closeComponent","componentProps","onCloseBtnClick","scrollbarHeight","formatMessage","id","defaultMessage"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,mBAAtC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,YAA1C;AACA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,MAAMC,cAAc,GAAGV,iBAAkB;;;;;;kBAMvBC,QAAQ,CAAC,aAAD,EAAgB,iCAAhB,CAAmD;;;;;;;;oBAQzDA,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAA4B;;;;;;;;;;;CAdxD;;AA+BA,MAAMU,cAAmC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAC9D,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,cAAV;AAA0BC,IAAAA,UAA1B;AAAsCC,IAAAA;AAAtC,MAAyDP,OAAO,EAAtE;AACA,QAAMQ,IAAI,GAAGT,OAAO,EAApB;;AACA,QAAMU,WAAW,GAAG,MAAM;AACxBhB,IAAAA,SAAS,CAAC;AACRiB,MAAAA,IAAI,EAAE,IADE;AAERC,MAAAA,MAAM,EAAE;AACNC,QAAAA,SAAS,EAAE,WADL;AAENC,QAAAA,KAAK,EAAE,MAFD;AAGNC,QAAAA,MAAM,EAAE,MAHF;AAINC,QAAAA,cAAc,EAAE,KAJV;AAKNC,QAAAA,eAAe,EAAE,IALX;AAMNC,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE,GADC;AAEVC,UAAAA,QAAQ,EAAE;AAFA;AANN,OAFA;AAaRC,MAAAA,mBAAmB,EAAE,IAbb;AAcRC,MAAAA,SAAS,EAAE1B,SAdH;AAeR2B,MAAAA,cAAc,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfd;AAgBRC,MAAAA,cAAc,EAAE;AACdC,QAAAA,eAAe,EAAE9B,UADH;AAEd+B,QAAAA,eAAe,EAAE,GAFH;AAGdtB,QAAAA,UAAU,EAAEA;AAHE;AAhBR,KAAD,CAAT;AAsBD,GAvBD;;AAyBA,SACE,4BACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,eAAD;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,SAAS,EAAEE,cAFb;AAGE,IAAA,OAAO,EAAEG,IAAI,CAACkB,aAAL,CAAmB;AAAEC,MAAAA,EAAE,EAAE,UAAN;AAAkBC,MAAAA,cAAc,EAAE;AAAlC,KAAnB,CAHX;AAIE,IAAA,WAAW,EACTvB,cAAc,GAAG,CAAjB,GACE,MAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,WAArB;AAAiC,MAAA,cAAc,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAGE,MAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,UAArB;AAAgC,MAAA,cAAc,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARN;AAWE,IAAA,KAAK,EAAEE,cAAc,EAXvB;AAYE,IAAA,WAAW,EAAEV,QAZf;AAaE,IAAA,OAAO,EAAEY,WAbX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAoBD,CAhDD;;AAkDA,eAAeP,cAAf","sourcesContent":["import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport FixedCart from './fixed-cart';\nimport CartPopupButton from 'components/cart-popup/cart-popup-button';\nimport { CURRENCY } from 'utils/constant';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\n\nconst CartPopupStyle = createGlobalStyle`\n  .cartPopup{\n    top: auto !important;\n    left: auto !important;\n    bottom: 50px !important;\n    right: 50px !important;\n    box-shadow: ${themeGet('shadows.big', '0 21px 36px rgba(0, 0, 0, 0.16)')};\n    transform-origin: bottom right;\n\n    @media (max-width: 767px) {\n      max-width: none!important;\n      width: 100% !important;\n      bottom: 0 !important;\n      left: 0!important;\n      background: ${themeGet('colors.white', '#ffffff')};\n      overflow: initial !important;\n      transform-origin: bottom center;\n    }\n  }\n\n.fixedCartPopup{\n  @media (min-width: 991px) {\n    display: none;\n  }\n}\n`;\n\ntype CartProps = {\n  onCheckout?: (e: any) => void;\n};\n\nconst FixedCartPopup: React.FC<CartProps> = ({ onCheckout }) => {\n  const { isOpen, cartItemsCount, toggleCart, calculatePrice } = useCart();\n  const intl = useIntl();\n  const handleModal = () => {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40,\n        },\n      },\n      closeOnClickOutside: true,\n      component: FixedCart,\n      closeComponent: () => <div />,\n      componentProps: {\n        onCloseBtnClick: closeModal,\n        scrollbarHeight: 370,\n        onCheckout: onCheckout,\n      },\n    });\n  };\n\n  return (\n    <>\n      <CartPopupStyle />\n      <CartPopupButton\n        className='fixedCartPopup'\n        itemCount={cartItemsCount}\n        btnText={intl.formatMessage({ id: 'buyNowId', defaultMessage: 'Buy now' })}\n        itemPostfix={\n          cartItemsCount > 1 ? (\n            <FormattedMessage id='cartItems' defaultMessage='items' />\n          ) : (\n            <FormattedMessage id='cartItem' defaultMessage='item' />\n          )\n        }\n        price={calculatePrice()}\n        pricePrefix={CURRENCY}\n        onClick={handleModal}\n      />\n    </>\n  );\n};\n\nexport default FixedCartPopup;\n"]},"metadata":{},"sourceType":"module"}