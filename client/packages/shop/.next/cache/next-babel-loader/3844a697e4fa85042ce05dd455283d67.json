{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/DistanceSensor.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { fourRelaysOptions, manualModeOptions, DistanceMode, distanceModeOptions } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, CardButtons, ActionButton, Text, Status, Type, Row, ErrorMsg, Porcentage } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport { getRelayNameText, getSettingTypeText } from 'utils/sensorUtils';\nimport { CheckMark } from 'assets/icons/CheckMark';\n\nconst DistanceSensor = ({\n  plant,\n  settingType,\n  handleSettingsChange,\n  onDeleteSchedule,\n  data,\n  openTab,\n  setOpenTab,\n  handleDeleteSensor,\n  errorId\n}) => {\n  var _setting$logs;\n\n  const setting = plant.sensors.find(sensor => sensor.settingType === settingType);\n  const intl = useIntl();\n  const {\n    0: daySelected,\n    1: setDay\n  } = useState('');\n  const {\n    0: editIsOn,\n    1: setEditIsOn\n  } = useState(false);\n  const selectedMode = distanceModeOptions.find(option => option.value === setting.mode);\n  const selectedManualState = manualModeOptions.find(option => option.value === setting.relayOneWorking);\n  const relayOneSelected = fourRelaysOptions.find(option => option.value === setting.relayOneIdRelated);\n  const relayTwoSelected = fourRelaysOptions.find(option => option.value === setting.relayTwoIdRelated);\n  const selectStyle = {\n    control: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      width: '179.88px',\n      textAlign: 'left'\n    })\n  }; // const tabIsOpen = openTab === settingType;\n\n  const tabIsOpen = true;\n\n  const handleModal = (modalComponent, modalProps = {}, className = 'add-time-schedule-modal') => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  return __jsx(PlantsSensorContainer, {\n    style: {\n      height: tabIsOpen ? '100%' : '82px'\n    },\n    onClick: () => setOpenTab(tabIsOpen ? '' : settingType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, __jsx(Type, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, getSettingTypeText(setting === null || setting === void 0 ? void 0 : setting.settingType))), __jsx(ListDes, {\n    style: {\n      marginLeft: '-10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, __jsx(CardButtons, {\n    className: \"button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, editIsOn ? __jsx(ActionButton, {\n    onClick: () => setEditIsOn(!editIsOn),\n    className: \"edit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, __jsx(CheckMark, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  })) : __jsx(ActionButton, {\n    onClick: () => setEditIsOn(!editIsOn),\n    className: \"edit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, __jsx(PencilIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  })), __jsx(ActionButton, {\n    onClick: () => handleDeleteSensor(plant, settingType),\n    className: \"delete-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, __jsx(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }))))), (setting === null || setting === void 0 ? void 0 : setting.mode) === DistanceMode.NONE && !!openTab && __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, __jsx(Status, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"modoRequiredWarningText\",\n    defaultMessage: \"modoRequiredWarningText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"distanceId\",\n    defaultMessage: \"distanceId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.reading) > 0 && (setting === null || setting === void 0 ? void 0 : setting.reading) < 100 ? (setting === null || setting === void 0 ? void 0 : setting.reading) + 'cm.' : '-', \" \"))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"plantName\",\n    defaultMessage: \"plantName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, editIsOn ? __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    value: setting.name,\n    placeholder: intl.formatMessage({\n      id: 'plantNameRequiredNameId',\n      defaultMessage: 'plantNameRequiredNameId'\n    }),\n    onChange: e => handleSettingsChange(plant, 'name', e.target.value, settingType),\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\" // intlInputLabelId=\"profileEmailField\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, setting === null || setting === void 0 ? void 0 : setting.name))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"distanceModeId\",\n    defaultMessage: \"distanceModeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: e => handleSettingsChange(plant, 'mode', e.value, settingType),\n    value: selectedMode // placeholder={'asdsad'}\n    ,\n    options: distanceModeOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, selectedMode.value.length > 1 ? selectedMode.label : '-'))), (setting === null || setting === void 0 ? void 0 : setting.mode) !== DistanceMode.NONE && __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"notifyChangesId\",\n    defaultMessage: \"notifyChangesId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, __jsx(Switch, {\n    disabled: false,\n    checked: setting.whatsappWarningsOn,\n    labelPosition: 'right' // className,\n    ,\n    onUpdate: () => handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }))), [DistanceMode.WHEN_FULL_ACTION_CUSTOM, DistanceMode.WHEN_FULL_ACTION_AUTOMATED].indexOf(setting.mode) >= 0 && __jsx(React.Fragment, null, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"maxDistanceId\",\n    defaultMessage: \"maxDistanceId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"maxWarning\",\n    value: setting.maxWarning,\n    onChange: e => handleSettingsChange(plant, 'maxWarning', e.target.value, settingType),\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    width: \"45px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }), __jsx(Porcentage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 37\n    }\n  }, \"%\")) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 33\n    }\n  }, setting.maxWarning), errorId === 'maxWarning' && __jsx(ErrorMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minMaxWarningId\",\n    defaultMessage: \"minMaxWarningId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 37\n    }\n  })))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"asociateRelayTwoId\",\n    defaultMessage: \"asociateRelayTwoId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: e => handleSettingsChange(plant, 'relayTwoIdRelated', e.value, settingType),\n    value: relayTwoSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayTwoIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayTwoIdRelated) : '-'))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"runingMinMaxWarningTimeId\",\n    defaultMessage: \"runingMinMaxWarningTimeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 25\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"relayTwoAutomatedTimeToRun\",\n    value: setting.relayTwoAutomatedTimeToRun,\n    onChange: e => handleSettingsChange(plant, 'relayTwoAutomatedTimeToRun', e.target.value, settingType),\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  })))), [DistanceMode.WHEN_EMPTY_ACTION_CUSTOM, DistanceMode.WHEN_EMPTY_ACTION_AUTOMATED].indexOf(setting.mode) >= 0 && __jsx(React.Fragment, null, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minDistanceId\",\n    defaultMessage: \"minDistanceId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 33\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"minWarning\",\n    value: setting.minWarning,\n    onChange: e => handleSettingsChange(plant, 'minWarning', e.target.value, settingType),\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    width: \"45px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 37\n    }\n  }), __jsx(Porcentage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 37\n    }\n  }, \"%\")) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 33\n    }\n  }, setting.minWarning)), errorId === 'minWarning' && __jsx(ErrorMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minMaxWarningId\",\n    defaultMessage: \"minMaxWarningId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 33\n    }\n  }))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"asociateRelayOneId\",\n    defaultMessage: \"asociateRelayOneId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: e => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType),\n    value: relayOneSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 33\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 33\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated) : '-'))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"runingMinMaxWarningTimeId\",\n    defaultMessage: \"runingMinMaxWarningTimeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 25\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"relayOneAutomatedTimeToRun\",\n    value: setting.relayOneAutomatedTimeToRun,\n    onChange: e => handleSettingsChange(plant, 'relayOneAutomatedTimeToRun', e.target.value, settingType),\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 29\n    }\n  })))), (setting === null || setting === void 0 ? void 0 : (_setting$logs = setting.logs) === null || _setting$logs === void 0 ? void 0 : _setting$logs.length) > 0 && __jsx(HumidityLogsGraph, {\n    data: setting.logs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default DistanceSensor;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/DistanceSensor.tsx"],"names":["React","useState","CloseIcon","PencilIcon","Switch","FormattedMessage","useIntl","Select","Input","fourRelaysOptions","manualModeOptions","DistanceMode","distanceModeOptions","HumidityLogsGraph","PlantsSensorContainer","ListItem","ListTitle","ListDes","CardButtons","ActionButton","Text","Status","Type","Row","ErrorMsg","Porcentage","openModal","getRelayNameText","getSettingTypeText","CheckMark","DistanceSensor","plant","settingType","handleSettingsChange","onDeleteSchedule","data","openTab","setOpenTab","handleDeleteSensor","errorId","setting","sensors","find","sensor","intl","daySelected","setDay","editIsOn","setEditIsOn","selectedMode","option","value","mode","selectedManualState","relayOneWorking","relayOneSelected","relayOneIdRelated","relayTwoSelected","relayTwoIdRelated","selectStyle","control","styles","width","textAlign","tabIsOpen","handleModal","modalComponent","modalProps","className","show","config","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","justifyContent","marginLeft","NONE","reading","name","formatMessage","id","defaultMessage","e","target","length","label","whatsappWarningsOn","WHEN_FULL_ACTION_CUSTOM","WHEN_FULL_ACTION_AUTOMATED","indexOf","maxWarning","relayTwoAutomatedTimeToRun","WHEN_EMPTY_ACTION_CUSTOM","WHEN_EMPTY_ACTION_AUTOMATED","minWarning","relayOneAutomatedTimeToRun","logs"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { SearchBox } from 'components/search-box/search-box';\nimport Router,{ useRouter } from 'next/router';\nimport LineChart from 'components/line-chart/line-chart';\nimport GraphChart from 'components/graph-chart/graph-chart';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { HumiditySensorMode, WeekDays, fourRelaysOptions, humidityModeOptions, manualModeOptions, SensorsTypes, DistanceMode, distanceModeOptions } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, InputUpper, WeekContainer, DayContainer, ScheduleTime, TextSpaced, CardButtons, ActionButton, Text, Status, ButtonText, Type, Row, ErrorMsg, Porcentage } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';  \nimport { ISetting } from 'utils/types';\nimport { getRelayNameText, getSettingTypeText } from 'utils/sensorUtils';\nimport { CheckMark } from 'assets/icons/CheckMark';\n\ninterface Props {\n  data?: any;\n  plant: any;\n  openTab: string;\n  setOpenTab: (settingType: string) => void;\n  handleDeleteSensor: (plant: any, settingType: string) => void;\n  settingType: SensorsTypes;\n  errorId: string;\n  handleSettingsChange: (plant: any, field: string, value: string | boolean, settingType: SensorsTypes) => void;\n  onDeleteSchedule: (plant: any, settingType: SensorsTypes, position: number) => void;\n}\n\nconst DistanceSensor: React.FC<Props> = ({ plant, settingType, handleSettingsChange, onDeleteSchedule, data, openTab, setOpenTab, handleDeleteSensor, errorId  }) => {\n    const setting = plant.sensors.find((sensor: ISetting) => sensor.settingType === settingType);\n    const intl = useIntl();\n    const [daySelected, setDay] = useState('');\n    const [editIsOn, setEditIsOn] = useState(false);\n    const selectedMode = distanceModeOptions.find((option) => option.value === setting.mode);\n    const selectedManualState = manualModeOptions.find((option) => option.value === setting.relayOneWorking);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === setting.relayOneIdRelated);\n    const relayTwoSelected = fourRelaysOptions.find((option) => option.value === setting.relayTwoIdRelated);\n    const selectStyle = { control: styles => ({ ...styles, width: '179.88px', textAlign: 'left' }) };\n    // const tabIsOpen = openTab === settingType;\n    const tabIsOpen = true;\n    \n    const handleModal = (\n        modalComponent: any,\n        modalProps = {},\n        className: string = 'add-time-schedule-modal'\n        ) => {\n        openModal({\n            show: true,\n            config: {\n            width: 360,\n            height: 'auto',\n            enableResizing: false,\n            disableDragging: true,\n            className: className,\n            },\n            closeOnClickOutside: true,\n            component: modalComponent,\n            componentProps: { item: modalProps },\n        });\n    };\n\n\n    return (\n        <PlantsSensorContainer style={{ height: tabIsOpen ? '100%' : '82px' }} onClick={() => setOpenTab(tabIsOpen ? '' : settingType)}>\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Type bold>{getSettingTypeText(setting?.settingType)}</Type>\n                </ListTitle>\n                <ListDes style={{ marginLeft: '-10px' }}>\n                    <CardButtons className='button-wrapper'>\n                        { editIsOn ? (\n                            <ActionButton onClick={() => setEditIsOn(!editIsOn)} className='edit-btn'>\n                                <CheckMark />\n                            </ActionButton>\n                        ) : (\n                            <ActionButton onClick={() => setEditIsOn(!editIsOn)} className='edit-btn'>\n                                <PencilIcon />\n                            </ActionButton>\n                        )}\n                        <ActionButton onClick={() => handleDeleteSensor(plant, settingType)} className='delete-btn'>\n                            <CloseIcon />\n                        </ActionButton>\n                    </CardButtons>\n                </ListDes>\n            \n            </ListItem>\n\n            { (setting?.mode === DistanceMode.NONE && !!openTab) && (\n                <ListItem>\n                    <Status>\n                        <FormattedMessage id=\"modoRequiredWarningText\" defaultMessage=\"modoRequiredWarningText\" />\n                    </Status>\n                </ListItem>\n            )}\n\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Text>\n                        <FormattedMessage\n                        id=\"distanceId\"\n                        defaultMessage=\"distanceId\"\n                        />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    <Text bold>{(setting?.reading > 0 && setting?.reading < 100) ? setting?.reading + 'cm.'  : '-' } </Text>\n                </ListDes>\n            \n            </ListItem>\n\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Text>\n                    <FormattedMessage\n                        id=\"plantName\"\n                        defaultMessage=\"plantName\"\n                    />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    { editIsOn ? (\n                        <Input\n                            type='text'\n                            name='name'\n                            value={setting.name}\n                            placeholder={intl.formatMessage({ id: 'plantNameRequiredNameId', defaultMessage: 'plantNameRequiredNameId' })}\n                            onChange={(e: any) => handleSettingsChange(plant, 'name', e.target.value, settingType)}\n                            backgroundColor='#F7F7F7'\n                            height='34.5px'\n                            // intlInputLabelId=\"profileEmailField\"\n                        />\n                    ) : (\n                        <Text  bold>{setting?.name}</Text>\n                    )}\n                </ListDes>\n            </ListItem>\n        \n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Text>\n                        <FormattedMessage\n                        id=\"distanceModeId\"\n                        defaultMessage=\"distanceModeId\"\n                        />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                { editIsOn ? (\n                    <Select \n                        onChange={(e: any) => handleSettingsChange(plant, 'mode', e.value, settingType)}\n                        value={selectedMode}\n                        // placeholder={'asdsad'}\n                        options={distanceModeOptions}\n                        styles={selectStyle}\n                        menuPosition={'fixed'}\n                    />\n                    ) : (\n                        <Text  bold>{selectedMode.value.length > 1 ? selectedMode.label : '-'}</Text>\n                    )}\n                </ListDes>\n            </ListItem>\n         \n            { setting?.mode !== DistanceMode.NONE && (\n                <ListItem style={{ justifyContent: 'flex-start' }}>\n                    <ListTitle>\n                    <Text bold>\n                        <FormattedMessage\n                        id=\"notifyChangesId\"\n                        defaultMessage=\"notifyChangesId\"\n                        />\n                    </Text>\n                    </ListTitle>\n                    <ListDes>\n                    <Switch \n                        disabled={false}\n                        checked={setting.whatsappWarningsOn}\n                        labelPosition={'right'}\n                        // className,\n                        onUpdate={() => handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType)}\n                    />\n                    </ListDes>\n                </ListItem>\n            )}\n\n            { [DistanceMode.WHEN_FULL_ACTION_CUSTOM, DistanceMode.WHEN_FULL_ACTION_AUTOMATED].indexOf(setting.mode) >= 0 && (\n                <>\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='maxDistanceId'\n                                defaultMessage='maxDistanceId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Row>\n                                    <Input\n                                        type='number'\n                                        name='maxWarning'\n                                        value={setting.maxWarning}\n                                        onChange={(e: any) => handleSettingsChange(plant, 'maxWarning', e.target.value, settingType)}\n                                        backgroundColor='#F7F7F7'\n                                        height='34.5px'\n                                        width='45px'\n                                    />\n                                    <Porcentage>%</Porcentage>\n                                </Row>\n                            ) : (\n                                <Text bold>{setting.maxWarning}</Text>\n                            )}\n                            {errorId === 'maxWarning' && (\n                                <ErrorMsg>\n                                    <FormattedMessage id=\"minMaxWarningId\" defaultMessage=\"minMaxWarningId\" />\n                                </ErrorMsg>\n                            )}\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='asociateRelayTwoId'\n                                defaultMessage='asociateRelayTwoId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                        { editIsOn ? (\n                            <Select \n                                onChange={(e: any) => handleSettingsChange(plant, 'relayTwoIdRelated', e.value, settingType)}\n                                value={relayTwoSelected}\n                                options={fourRelaysOptions}\n                                styles={selectStyle}\n                                menuPosition={'fixed'}\n                            />\n                        ) : (\n                            <Text bold>{setting?.relayTwoIdRelated.length > 1 ? getRelayNameText(setting?.relayTwoIdRelated) : '-'}</Text>\n                        )}\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text bold>\n                            <FormattedMessage\n                                id='runingMinMaxWarningTimeId'\n                                defaultMessage='runingMinMaxWarningTimeId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            <Input\n                            type='number'\n                            name='relayTwoAutomatedTimeToRun'\n                            value={setting.relayTwoAutomatedTimeToRun}\n                            onChange={(e: any) => handleSettingsChange(plant, 'relayTwoAutomatedTimeToRun', e.target.value, settingType)}\n                            backgroundColor='#F7F7F7'\n                            height='34.5px'\n                            />\n                        </ListDes>\n                    </ListItem>\n                </>\n            )}\n\n            { [DistanceMode.WHEN_EMPTY_ACTION_CUSTOM, DistanceMode.WHEN_EMPTY_ACTION_AUTOMATED].indexOf(setting.mode) >= 0 && (\n                <>\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='minDistanceId'\n                                defaultMessage='minDistanceId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Row>\n                                    <Input\n                                        type='number'\n                                        name='minWarning'\n                                        value={setting.minWarning}\n                                        onChange={(e: any) => handleSettingsChange(plant, 'minWarning', e.target.value, settingType)}\n                                        backgroundColor='#F7F7F7'\n                                        height='34.5px'\n                                        width='45px'\n                                    />\n                                    <Porcentage>%</Porcentage>\n                                </Row>\n                            ) : (\n                                <Text bold>{setting.minWarning}</Text>\n                            )}\n                        </ListDes>\n                        {errorId === 'minWarning' && (\n                            <ErrorMsg>\n                                <FormattedMessage id=\"minMaxWarningId\" defaultMessage=\"minMaxWarningId\" />\n                            </ErrorMsg>\n                        )}\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='asociateRelayOneId'\n                                defaultMessage='asociateRelayOneId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Select \n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                                    value={relayOneSelected}\n                                    options={fourRelaysOptions}\n                                    styles={selectStyle}\n                                    menuPosition={'fixed'}\n                                />\n                            ) : (\n                                <Text bold>{setting?.relayOneIdRelated.length > 1 ? getRelayNameText(setting?.relayOneIdRelated) : '-'}</Text>\n                            )}\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text bold>\n                            <FormattedMessage\n                                id='runingMinMaxWarningTimeId'\n                                defaultMessage='runingMinMaxWarningTimeId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            <Input\n                            type='number'\n                            name='relayOneAutomatedTimeToRun'\n                            value={setting.relayOneAutomatedTimeToRun}\n                            onChange={(e: any) => handleSettingsChange(plant, 'relayOneAutomatedTimeToRun', e.target.value, settingType)}\n                            backgroundColor='#F7F7F7'\n                            height='34.5px'\n                            />\n                        </ListDes>\n                    </ListItem>\n                </>\n            )}\n            \n            { setting?.logs?.length > 0 && (\n                <HumidityLogsGraph\n                    data={setting.logs}\n                />\n            )}\n        </PlantsSensorContainer>\n    );\n};\n\nexport default DistanceSensor;\n"]},"metadata":{},"sourceType":"module"}