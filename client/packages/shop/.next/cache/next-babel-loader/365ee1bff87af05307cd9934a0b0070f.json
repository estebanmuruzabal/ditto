{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n// product card for general\nimport React from 'react';\nimport Image from 'components/image/image';\nimport { Button } from 'components/button/button';\nimport { ProductCardWrapper, ProductImageWrapper, ProductInfo, DiscountPercent, OutOfStock, ButtonText } from '../product-card.style';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { Counter } from 'components/counter/counter';\nimport { cartAnimation } from 'utils/cart-animation';\nimport { FormattedMessage } from 'react-intl';\nimport { CartIcon } from 'assets/icons/CartIcon';\n\nvar ProductCard = function ProductCard(_ref) {\n  var title = _ref.title,\n      image = _ref.image,\n      weight = _ref.weight,\n      price = _ref.price,\n      salePrice = _ref.salePrice,\n      discountInPercent = _ref.discountInPercent,\n      cartProducts = _ref.cartProducts,\n      addToCart = _ref.addToCart,\n      updateCart = _ref.updateCart,\n      value = _ref.value,\n      currency = _ref.currency,\n      onChange = _ref.onChange,\n      increment = _ref.increment,\n      decrement = _ref.decrement,\n      data = _ref.data,\n      deviceType = _ref.deviceType,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, [\"title\", \"image\", \"weight\", \"price\", \"salePrice\", \"discountInPercent\", \"cartProducts\", \"addToCart\", \"updateCart\", \"value\", \"currency\", \"onChange\", \"increment\", \"decrement\", \"data\", \"deviceType\", \"onClick\"]);\n\n  var _useCart = useCart(),\n      addItem = _useCart.addItem,\n      removeItem = _useCart.removeItem,\n      getItem = _useCart.getItem,\n      isInCart = _useCart.isInCart,\n      items = _useCart.items;\n\n  var handleAddClick = function handleAddClick(e) {\n    e.stopPropagation();\n    addItem(data);\n\n    if (!isInCart(data.id)) {\n      cartAnimation(e);\n    }\n  };\n\n  var handleRemoveClick = function handleRemoveClick(e) {\n    e.stopPropagation();\n    removeItem(data);\n  };\n\n  return __jsx(ProductCardWrapper, {\n    onClick: onClick,\n    className: \"product-card\"\n  }, __jsx(ProductImageWrapper, null, __jsx(Image, {\n    url: image,\n    className: \"product-image\",\n    style: {\n      position: 'relative'\n    },\n    alt: title\n  }), discountInPercent ? __jsx(React.Fragment, null, __jsx(DiscountPercent, null, discountInPercent, \"%\")) : '', data.product_quantity == 0 ? __jsx(React.Fragment, null, __jsx(OutOfStock, null, \"Out Of Stock\")) : ''), __jsx(ProductInfo, null, __jsx(\"h3\", {\n    className: \"product-title\"\n  }, title), __jsx(\"span\", {\n    className: \"product-weight\"\n  }, weight), __jsx(\"div\", {\n    className: \"product-meta\"\n  }, __jsx(\"div\", {\n    className: \"productPriceWrapper\"\n  }, discountInPercent ? __jsx(\"span\", {\n    className: \"discountedPrice\"\n  }, currency, price) : '', __jsx(\"span\", {\n    className: \"product-price\"\n  }, currency, salePrice ? salePrice : price)), data.product_quantity != 0 ? !isInCart(data.id) ? __jsx(Button, {\n    className: \"cart-button\",\n    variant: \"secondary\",\n    borderRadius: 100,\n    onClick: handleAddClick\n  }, __jsx(CartIcon, null), __jsx(ButtonText, null, __jsx(FormattedMessage, {\n    id: \"addCartButton\",\n    defaultMessage: \"Cart\"\n  }))) : __jsx(Counter, {\n    value: getItem(data.id).quantity,\n    onDecrement: handleRemoveClick,\n    onIncrement: handleAddClick\n  }) : __jsx(Button, {\n    className: \"cart-button\",\n    variant: \"secondary\",\n    borderRadius: 100,\n    onClick: function onClick(e) {\n      e.preventDefault();\n    },\n    disabled: true\n  }, __jsx(CartIcon, null), __jsx(ButtonText, null, __jsx(FormattedMessage, {\n    id: \"addCartButton\",\n    defaultMessage: \"Cart\"\n  }))))));\n};\n\nexport default ProductCard;","map":null,"metadata":{},"sourceType":"module"}