{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport { useIntl } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport DeliverySelection from 'features/delivery-selection/delivery-selection';\nimport { BannerIcon, BannerText, DeliveryText, LocationContent, SubHeaderWrapper } from './sub-header.style';\nimport { SIGNIN_MUTATION } from 'graphql/mutation/signin';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { useMutation } from '@apollo/react-hooks';\n\nconst LocationMenu = ({\n  deliveryMethodSaved,\n  isOpen\n}) => {\n  var _deliveryMethodSaved$, _deliveryMethodSaved$2, _deliveryMethodSaved$3, _deliveryMethodSaved$4, _deliveryMethodSaved$5, _deliveryMethodSaved$6, _deliveryMethodSaved$7, _deliveryMethodSaved$8, _deliveryMethodSaved$9;\n\n  const mobile = useMedia('(max-width: 580px)');\n  const address = mobile ? deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$ = deliveryMethodSaved.details) === null || _deliveryMethodSaved$ === void 0 ? void 0 : (_deliveryMethodSaved$2 = _deliveryMethodSaved$.split('|')) === null || _deliveryMethodSaved$2 === void 0 ? void 0 : _deliveryMethodSaved$2[0].substring(0, deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$3 = deliveryMethodSaved.details) === null || _deliveryMethodSaved$3 === void 0 ? void 0 : (_deliveryMethodSaved$4 = _deliveryMethodSaved$3.split('|')) === null || _deliveryMethodSaved$4 === void 0 ? void 0 : (_deliveryMethodSaved$5 = _deliveryMethodSaved$4[0]) === null || _deliveryMethodSaved$5 === void 0 ? void 0 : _deliveryMethodSaved$5.lengtha) : deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$6 = deliveryMethodSaved.details) === null || _deliveryMethodSaved$6 === void 0 ? void 0 : (_deliveryMethodSaved$7 = _deliveryMethodSaved$6.split('|')) === null || _deliveryMethodSaved$7 === void 0 ? void 0 : _deliveryMethodSaved$7[0];\n  const time = deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$8 = deliveryMethodSaved.details) === null || _deliveryMethodSaved$8 === void 0 ? void 0 : (_deliveryMethodSaved$9 = _deliveryMethodSaved$8.split('|')) === null || _deliveryMethodSaved$9 === void 0 ? void 0 : _deliveryMethodSaved$9[1];\n  const intl = useIntl();\n  const defaultText = intl.formatMessage({\n    id: 'defaultDeliveryPickupText',\n    defaultMessage: 'check here'\n  });\n  return __jsx(LocationContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, isOpen ? __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleDown,\n    className: \"fas fa-chevron-down\",\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleUp,\n    className: \"fas fa-chevron-up\",\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }\n  }), __jsx(DeliveryText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, deliveryMethodSaved ? (deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.isPickUp) ? DeliveryMethodsConstants.PICKUP : DeliveryMethodsConstants.DELIVERY : defaultText), (deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.name) && address && __jsx(React.Fragment, null, \"|\", __jsx(BannerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: DeliveryIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  })), __jsx(BannerText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, `${deliveryMethodSaved.name} - ${address}`)));\n};\n\nconst SubHeader = (_ref) => {\n  let props = Object.assign({}, _ref);\n  const [deliveryMethodSaved, setDeliveryMethodSaved] = React.useState();\n  const {\n    authDispatch\n  } = useContext(AuthContext);\n  const [signinMeMutation, {\n    loading,\n    error,\n    data\n  }] = useMutation(SIGNIN_MUTATION, {\n    onCompleted: data => {\n      const {\n        access_token,\n        user\n      } = data.login;\n      console.log('data', data);\n\n      if (false) {\n        localStorage.setItem('access_token', `${access_token}`);\n        authDispatch({\n          type: 'SIGNIN_SUCCESS',\n          user\n        }); // Router.push('/[type]', router.asPath);\n      }\n    },\n    onError: error => {\n      // setPhone('');\n      // setPassword('');\n      console.log(error);\n    }\n  });\n  useEffect(() => {\n    // if (getCookie(deliveryMethodCookieKeyName) && !deliveryMethodSaved) {\n    //   const deliveryMethodSaved = JSON.parse(getCookie(deliveryMethodCookieKeyName));\n    //   setDeliveryMethodSaved(deliveryMethodSaved)\n    // }\n    console.log('window.location.href.split(\"?\").pop()', window.location.href.split(\"?\").pop());\n\n    if (window.location.href.split(\"?\").pop()) {\n      handlePhoneChange(window.location.href.split(\"?\").pop());\n    }\n  }, []);\n  return __jsx(SubHeaderWrapper, {\n    className: props.className,\n    id: \"layout-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverBigger, {\n    direction: \"left\",\n    className: \"user-pages-dropdown\",\n    openHandler: __jsx(LocationMenu, {\n      isOpen: false,\n      deliveryMethodSaved: deliveryMethodSaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 22\n      }\n    }),\n    closeHandler: __jsx(LocationMenu, {\n      isOpen: true,\n      deliveryMethodSaved: deliveryMethodSaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 23\n      }\n    }),\n    content: __jsx(DeliverySelection, {\n      deliveryMethodSaved: deliveryMethodSaved,\n      setDeliveryMethodSaved: setDeliveryMethodSaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 18\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SubHeader;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx"],"names":["React","useEffect","useContext","DeliveryIcon","useMedia","useIntl","PopoverBigger","FontAwesomeIcon","faChevronCircleDown","faChevronCircleUp","DeliveryMethodsConstants","DeliverySelection","BannerIcon","BannerText","DeliveryText","LocationContent","SubHeaderWrapper","SIGNIN_MUTATION","AuthContext","useMutation","LocationMenu","deliveryMethodSaved","isOpen","mobile","address","details","split","substring","lengtha","time","intl","defaultText","formatMessage","id","defaultMessage","color","isPickUp","PICKUP","DELIVERY","name","SubHeader","props","setDeliveryMethodSaved","useState","authDispatch","signinMeMutation","loading","error","data","onCompleted","access_token","user","login","console","log","localStorage","setItem","type","onError","window","location","href","pop","handlePhoneChange","className"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants, deliveryMethodCookieKeyName } from 'utils/constant';\nimport { getCookie, setCookie } from 'utils/session';\nimport DeliverySelection from 'features/delivery-selection/delivery-selection';\nimport { BannerIcon, BannerText, DeliveryText, LocationContent, SubHeaderWrapper } from './sub-header.style';\nimport { SIGNIN_MUTATION } from 'graphql/mutation/signin';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { useMutation } from '@apollo/react-hooks';\n\ninterface Props {\n  className: string\n}\n\n\nconst LocationMenu = ({ deliveryMethodSaved, isOpen }) => {\n  const mobile = useMedia('(max-width: 580px)');\n  const address = mobile \n    ? deliveryMethodSaved?.details?.split('|')?.[0].substring(0, deliveryMethodSaved?.details?.split('|')?.[0]?.lengtha)\n    : deliveryMethodSaved?.details?.split('|')?.[0]\n  const time = deliveryMethodSaved?.details?.split('|')?.[1]\n\n  const intl = useIntl();\n\n  const defaultText = intl.formatMessage({ id: 'defaultDeliveryPickupText', defaultMessage: 'check here' })\n  return (\n    <LocationContent>\n        { isOpen \n          ? (<FontAwesomeIcon icon={faChevronCircleDown} className=\"fas fa-chevron-down\" style={{ color: \"black\" }} />) \n          : (<FontAwesomeIcon icon={faChevronCircleUp} className=\"fas fa-chevron-up\" style={{ color: \"black\" }} />)\n        }\n        { \n\n        }\n        <DeliveryText>{deliveryMethodSaved ? deliveryMethodSaved?.isPickUp ? DeliveryMethodsConstants.PICKUP : DeliveryMethodsConstants.DELIVERY : defaultText}</DeliveryText>\n        { deliveryMethodSaved?.name && address && (\n          <>\n              |\n            <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>\n            <BannerText>{`${deliveryMethodSaved.name} - ${address}`}</BannerText>\n          </>\n        )}\n      </LocationContent>\n  );\n};\n\n\nconst SubHeader: React.FC<Props> = ({ ...props  }) => {\n  const [deliveryMethodSaved, setDeliveryMethodSaved] = React.useState();\n  const { authDispatch } = useContext<any>(AuthContext);\n  \n  const [\n    signinMeMutation,\n    { \n      loading,\n      error,\n      data\n    }\n  ] = useMutation(SIGNIN_MUTATION,{\n    onCompleted: (data) => {\n      const { access_token, user } = data.login;\n      console.log('data', data)\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('access_token', `${access_token}`);\n        authDispatch({ \n          type: 'SIGNIN_SUCCESS',\n          user\n        });\n        \n        // Router.push('/[type]', router.asPath);\n      }\n    },\n    onError: (error) => {\n      // setPhone('');\n      // setPassword('');\n      console.log(error)\n    }\n  });\n\n  useEffect(() => {\n    // if (getCookie(deliveryMethodCookieKeyName) && !deliveryMethodSaved) {\n    //   const deliveryMethodSaved = JSON.parse(getCookie(deliveryMethodCookieKeyName));\n    //   setDeliveryMethodSaved(deliveryMethodSaved)\n    // }\n    console.log('window.location.href.split(\"?\").pop()',window.location.href.split(\"?\").pop())\n    if (window.location.href.split(\"?\").pop()) {\n      handlePhoneChange(window.location.href.split(\"?\").pop())\n    }\n  }, []);\n\n\n  return (\n    <SubHeaderWrapper className={props.className} id=\"layout-header\">\n      <PopoverBigger\n        direction=\"left\"\n        className=\"user-pages-dropdown\"\n        openHandler={<LocationMenu\n          isOpen={false} deliveryMethodSaved={deliveryMethodSaved} />\n        }\n        closeHandler={<LocationMenu\n          isOpen={true} deliveryMethodSaved={deliveryMethodSaved}/>\n        }\n        content={<DeliverySelection deliveryMethodSaved={deliveryMethodSaved} setDeliveryMethodSaved={setDeliveryMethodSaved} />}\n      />\n    </SubHeaderWrapper>\n  );\n\n};\n\nexport default SubHeader;\n"]},"metadata":{},"sourceType":"module"}