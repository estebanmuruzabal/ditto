{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/components/address-card/address-card-two.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_ADDRESS, UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { FieldWrapper } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl'; // Shape of form values\n\n// Wrap our form with the using withFormik HoC\nvar FormEnhancer = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: function mapPropsToValues(props) {\n    var ID = props.item.id;\n    var addressItem = props.item.item;\n    return {\n      id: ID || null,\n      addressId: addressItem.id || null,\n      title: addressItem.title || '',\n      address: addressItem.address || '',\n      instructions: addressItem.instructions || '',\n      location: addressItem.location || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required('Required!'),\n    address: Yup.string().required('Required'),\n    location: Yup.string().required('Required')\n  }),\n  handleSubmit: function handleSubmit(values) {// do submitting things\n  }\n});\n\nvar UpdateAddressTwo = function UpdateAddressTwo(props) {\n  _s();\n\n  var isValid = props.isValid,\n      item = props.item,\n      values = props.values,\n      touched = props.touched,\n      errors = props.errors,\n      dirty = props.dirty,\n      handleChange = props.handleChange,\n      handleBlur = props.handleBlur,\n      handleReset = props.handleReset,\n      isSubmitting = props.isSubmitting;\n  var ID = item.id;\n  var newAddressid = null;\n  var addressItem = item.item;\n  var addressValue = {\n    id: ID,\n    addressId: addressItem.id,\n    title: values.title,\n    address: values.address,\n    location: values.location,\n    instructions: values.instructions\n  };\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var intl = useIntl();\n\n  var _useMutation = useMutation(UPDATE_ADDRESS),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateAddressMutation = _useMutation2[0];\n\n  var _useMutation3 = useMutation(ADD_ADDRESS),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      addAddressMutation = _useMutation4[0];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var id, addressId, title, address, location, instructions, _yield$addAddressMuta, data, updateAddressData;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!isValid) {\n                _context.next = 18;\n                break;\n              }\n\n              id = addressValue.id, addressId = addressValue.addressId, title = addressValue.title, address = addressValue.address, location = addressValue.location, instructions = addressValue.instructions;\n\n              if (!(Object.keys(addressItem).length === 0)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 5;\n              return addAddressMutation({\n                variables: {\n                  id: id,\n                  title: title,\n                  address: address,\n                  location: location,\n                  instructions: instructions\n                }\n              });\n\n            case 5:\n              _yield$addAddressMuta = _context.sent;\n              data = _yield$addAddressMuta.data;\n              newAddressid = data.addDeliveryAddress.id;\n              addressValue.id = data.addDeliveryAddress.id;\n              dispatch({\n                type: 'ADD_ADDRESS',\n                payload: addressValue\n              });\n              closeModal();\n              _context.next = 18;\n              break;\n\n            case 13:\n              _context.next = 15;\n              return updateAddressMutation({\n                variables: {\n                  id: id,\n                  addressId: addressId,\n                  title: title,\n                  address: address,\n                  location: location,\n                  instructions: instructions\n                }\n              });\n\n            case 15:\n              updateAddressData = _context.sent;\n              dispatch({\n                type: 'UPDATE_ADDRESS',\n                payload: {\n                  value: addressValue,\n                  id: addressItem.id\n                }\n              });\n              closeModal();\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, __jsx(FieldWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"title\",\n    type: \"text\",\n    placeholder: intl.formatMessage({\n      id: 'addressRefId',\n      defaultMessage: 'Address name'\n    }),\n    error: touched.title && errors.title,\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"address\",\n    type: \"text\",\n    placeholder: intl.formatMessage({\n      id: 'addressId',\n      defaultMessage: 'Address'\n    }),\n    error: touched.address && errors.address,\n    value: values.address,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"location\",\n    type: \"text\",\n    placeholder: intl.formatMessage({\n      id: 'locationId',\n      defaultMessage: 'Localidad'\n    }),\n    error: touched.location && errors.location,\n    value: values.location,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"instructions\",\n    as: \"textarea\",\n    placeholder: intl.formatMessage({\n      id: 'instructionsId',\n      defaultMessage: 'Delivery instructions'\n    }),\n    error: touched.instructions && errors.instructions,\n    value: values.instructions,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  })), __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"submit\",\n    style: {\n      width: '100%',\n      height: '44px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"savedAddressId\",\n    defaultMessage: \"Save Address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(UpdateAddressTwo, \"zreL7P2M3SwQnw/q6qq0LsDWl0E=\", false, function () {\n  return [useIntl, useMutation, useMutation];\n});\n\n_c = UpdateAddressTwo;\nexport default _c2 = FormEnhancer(UpdateAddressTwo);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UpdateAddressTwo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/components/address-card/address-card-two.tsx"],"names":["React","useContext","Yup","withFormik","Form","closeModal","TextField","Button","useMutation","ADD_ADDRESS","UPDATE_ADDRESS","FieldWrapper","ProfileContext","FormattedMessage","useIntl","FormEnhancer","mapPropsToValues","props","ID","item","id","addressItem","addressId","title","address","instructions","location","validationSchema","object","shape","string","required","handleSubmit","values","UpdateAddressTwo","isValid","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","newAddressid","addressValue","state","dispatch","intl","updateAddressMutation","addAddressMutation","Object","keys","length","variables","data","addDeliveryAddress","type","payload","updateAddressData","value","formatMessage","defaultMessage","width","height"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, FormikProps, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_ADDRESS, UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\n// Shape of form values\ninterface FormValues {\n  id: any | null;\n  addressId: any | null,\n  title: string;\n  address: string;\n  location?: string;\n  instructions?: string;\n}\n\n// The type of props MyForm receives\ninterface MyFormProps {\n  item?: any | null;\n  id?: any | null;\n}\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik<MyFormProps, FormValues>({\n  // Transform outer props into form values\n  mapPropsToValues: (props) => {\n    const ID = props.item.id;\n    const addressItem = props.item.item;\n    return {\n      id: ID || null,\n      addressId: addressItem.id || null,\n      title: addressItem.title || '',\n      address: addressItem.address || '',\n      instructions: addressItem.instructions || '',\n      location: addressItem.location || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required('Required!'),\n    address: Yup.string().required('Required'),\n    location: Yup.string().required('Required'),\n  }),\n  handleSubmit: (values) => {\n    // do submitting things\n  },\n});\n\nconst UpdateAddressTwo = (props: FormikProps<FormValues> & MyFormProps) => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n\n    handleReset,\n    isSubmitting,\n  } = props;\n  const ID = item.id;\n  let newAddressid = null;\n  const addressItem = item.item;\n  const addressValue = {\n    id: ID,\n    addressId: addressItem.id, \n    title: values.title,\n    address: values.address,\n    location: values.location,\n    instructions: values.instructions,\n  };\n  const { state, dispatch } = useContext(ProfileContext);\n  const intl = useIntl();\n\n  const [updateAddressMutation] = useMutation(UPDATE_ADDRESS);\n  const [addAddressMutation] = useMutation(ADD_ADDRESS);\n\n  const handleSubmit = async () => {\n    if (isValid) {\n      const {id, addressId, title, address, location, instructions} = addressValue;\n      if(Object.keys(addressItem).length === 0){\n        const {data}  = await addAddressMutation({\n          variables: { \n            id,\n            title,\n            address, \n            location,\n            instructions,\n           },\n        });\n        newAddressid = data.addDeliveryAddress.id;\n        addressValue.id = data.addDeliveryAddress.id;\n        dispatch({\n          type: 'ADD_ADDRESS',\n          payload: addressValue \n        });\n        closeModal();\n      }else{\n        const updateAddressData = await updateAddressMutation({\n          variables: { \n            id,\n            addressId,\n            title,\n            address, \n            location,\n            instructions\n           }\n        });\n        dispatch({\n          type: 'UPDATE_ADDRESS',\n          payload: { value: addressValue, id: addressItem.id }\n\n        });\n        closeModal();\n      }\n    }\n  };\n  return (\n    <Form>\n      \n      <FieldWrapper>\n        <TextField\n          id=\"title\"\n          type=\"text\"\n          placeholder={intl.formatMessage({ id: 'addressRefId', defaultMessage: 'Address name' })}\n          error={touched.title && errors.title}\n          value={values.title}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"address\"\n          type=\"text\"\n          placeholder={intl.formatMessage({ id: 'addressId', defaultMessage: 'Address' })}\n          error={touched.address && errors.address}\n          value={values.address}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"location\"\n          type=\"text\"\n          placeholder={intl.formatMessage({ id: 'locationId', defaultMessage: 'Localidad' })}\n          error={touched.location && errors.location}\n          value={values.location}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"instructions\"\n          as=\"textarea\"\n          placeholder={intl.formatMessage({ id: 'instructionsId', defaultMessage: 'Delivery instructions' })}\n          error={touched.instructions && errors.instructions}\n          value={values.instructions}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n\n      <Button\n        onClick={handleSubmit}\n        type=\"submit\"\n        style={{ width: '100%', height: '44px' }}\n      >\n        <FormattedMessage id=\"savedAddressId\" defaultMessage=\"Save Address\" />\n      </Button>\n    </Form>\n  );\n};\n\nexport default FormEnhancer(UpdateAddressTwo);\n"]},"metadata":{},"sourceType":"module"}