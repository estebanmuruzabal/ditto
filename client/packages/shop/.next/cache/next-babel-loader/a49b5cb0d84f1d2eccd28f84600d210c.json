{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation UpdateHumidity2Settings($id: ID!, $controllerId: Int!, $input: InputHumiditySettings!) {\\n      updateHumidity2Settings(id: $id, controllerId: $controllerId, input: $input) {\\n        message\\n        status\\n      }\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation UpdateSoilHumiditySettings1($id: ID!, $controllerId: Int!, $input: InputHumiditySettings!) {\\n      UpdateSoilHumiditySettings1(id: $id, controllerId: $controllerId, input: $input) {\\n        message\\n        status\\n      }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation UpdateLightSettings($id: ID!, $controllerId: Int!, $input: InputLightSettings!) {\\n      updateLightSettings(id: $id, controllerId: $controllerId, input: $input) {\\n        message\\n        status\\n      }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nmutation AddPlant($id: ID!, $name: String!, $controllerId: Int!) {\\n  addPlant(\\n    id: $id,\\n    name: $name,\\n    controllerId: $controllerId\\n  ) {\\n    message\\n    status\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nexport var ADD_PLANT = gql(_templateObject());\nexport var UPDATE_LIGHT_SETTINGS = gql(_templateObject2());\nexport var UPDATE_HUMIDITY_1_SETTINGS = gql(_templateObject3());\nexport var UPDATE_HUMIDITY_2_SETTINGS = gql(_templateObject4()); // export const GET_PLANTS = gql`\n// mutation GetUserPlants($id: ID!, $name: String!, $humedad: Int, $tempeture: Int, $mapeoTierra: Int, $mapeoLuz: Int) {\n//   getUserPlants(\n//     id: $id,\n//   ) {\n//     id\n//   }\n// }\n// `;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/graphql/query/plants.query.ts"],"names":["gql","ADD_PLANT","UPDATE_LIGHT_SETTINGS","UPDATE_HUMIDITY_1_SETTINGS","UPDATE_HUMIDITY_2_SETTINGS"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,IAAMC,SAAS,GAAGD,GAAH,mBAAf;AAaP,OAAO,IAAME,qBAAqB,GAAGF,GAAH,oBAA3B;AASP,OAAO,IAAMG,0BAA0B,GAAGH,GAAH,oBAAhC;AASP,OAAO,IAAMI,0BAA0B,GAAGJ,GAAH,oBAAhC,C,CASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import gql from 'graphql-tag';\n\nexport const ADD_PLANT = gql`\nmutation AddPlant($id: ID!, $name: String!, $controllerId: Int!) {\n  addPlant(\n    id: $id,\n    name: $name,\n    controllerId: $controllerId\n  ) {\n    message\n    status\n  }\n}\n`;\n\nexport const UPDATE_LIGHT_SETTINGS = gql`\n    mutation UpdateLightSettings($id: ID!, $controllerId: Int!, $input: InputLightSettings!) {\n      updateLightSettings(id: $id, controllerId: $controllerId, input: $input) {\n        message\n        status\n      }\n    }\n`;\n\nexport const UPDATE_HUMIDITY_1_SETTINGS = gql`\n    mutation UpdateSoilHumiditySettings1($id: ID!, $controllerId: Int!, $input: InputHumiditySettings!) {\n      UpdateSoilHumiditySettings1(id: $id, controllerId: $controllerId, input: $input) {\n        message\n        status\n      }\n    }\n`;\n\nexport const UPDATE_HUMIDITY_2_SETTINGS = gql`\n    mutation UpdateHumidity2Settings($id: ID!, $controllerId: Int!, $input: InputHumiditySettings!) {\n      updateHumidity2Settings(id: $id, controllerId: $controllerId, input: $input) {\n        message\n        status\n      }\n    }\n`;\n\n// export const GET_PLANTS = gql`\n// mutation GetUserPlants($id: ID!, $name: String!, $humedad: Int, $tempeture: Int, $mapeoTierra: Int, $mapeoLuz: Int) {\n//   getUserPlants(\n//     id: $id,\n//   ) {\n//     id\n//   }\n// }\n// `;"]},"metadata":{},"sourceType":"module"}