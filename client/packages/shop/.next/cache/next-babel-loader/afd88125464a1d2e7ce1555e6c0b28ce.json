{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { closeModal } from '@redq/reuse-modal';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { getCookie, setCookie } from 'utils/session';\nimport { Wrapper, Container, Heading, OfferSection, Offer, Button } from './location-modal.style';\nimport { GiftBox } from 'assets/icons/GiftBox'; // import { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\n// import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\nconst googleApiKey = process.env.GOOGLE_API_KEY; // import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n// import { useJsApiLoader } from '@react-google-maps/api';\n\nexport default function LocationModal({\n  isPickUp\n}) {\n  // Your existing state variables and functions here\n  const {\n    0: address,\n    1: setAddress\n  } = useState(\"\");\n  const intl = useIntl(); // Handle place selection\n  // const { isLoaded } = useJsApiLoader({\n  //   id: 'google-map-script',\n  //   googleMapsApiKey: \"YOUR_API_KEY\"\n  // })\n  // const handleSelect = async (address) => {\n  //   console.log('address',address)\n  //   setAddress(address);\n  //   const results = await geocodeByAddress(address);\n  //   const latLng = await getLatLng(results[0]);\n  // };\n\n  const handleZipCode = () => {\n    setCookie('zip_code', address);\n    closeModal();\n  };\n\n  const handleSelect = address => {// geocodeByAddress(address)\n    //   .then(results => getLatLng(results[0]))\n    //   .then(latLng => {\n    //     console.log('Success', latLng)\n    //     setAddress(address)\n    //   })\n    //   .catch(error => console.error('Error', error));\n  }; // const fetchCurrentPosition = () => {\n  //   navigator.geolocation.getCurrentPosition(\n  //     function(position) {\n  //       var pos = new google.maps.LatLng(\n  //         position.coords.latitude,\n  //         position.coords.longitude\n  //       );\n  //       console.log(position.coords);\n  //       google.maps.geometry.poly.containsLocation(pos, refPoly.current.polygon)\n  //         ? setShowBtn(true)\n  //         : setShowBtn(false);\n  //     },\n  //     function(error) {\n  //       console.log(error);\n  //     }\n  //   );\n  // };\n\n\n  useEffect(() => {\n    if (!getCookie('first_visit')) {\n      setCookie('first_visit', true);\n    }\n  }, []);\n  console.log('addresss', address);\n  return __jsx(Wrapper, null, __jsx(Container, null, __jsx(Heading, null, isPickUp ? __jsx(FormattedMessage, {\n    id: \"pickupModalheading\",\n    defaultMessage: \"Select Your Location\"\n  }) : __jsx(FormattedMessage, {\n    id: \"deliveryModalheading\",\n    defaultMessage: \"Select Your Location\"\n  })), __jsx(Button, {\n    fullwidth: true,\n    radius: 100,\n    onClick: handleZipCode\n  }, __jsx(FormattedMessage, {\n    id: \"continueBtn\",\n    defaultMessage: \"Continue\"\n  }))), __jsx(OfferSection, null, __jsx(GiftBox, null), __jsx(Offer, null, __jsx(FormattedMessage, {\n    id: \"locationModalFooter\",\n    defaultMessage: \"Free Delivery For 1st Order\",\n    values: {\n      number: 1\n    }\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}