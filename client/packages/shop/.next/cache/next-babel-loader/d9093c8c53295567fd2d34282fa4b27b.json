{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/ditto-market/ditto-market.tsx\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { PlantsPageContainer, PlantPageWrapper } from './ditto-market.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport ReactMapGL from \"react-map-gl\";\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nvar DittoMarket = function DittoMarket(_ref) {\n  _s();\n\n  var deviceType = _ref.deviceType,\n      userRefetch = _ref.userRefetch;\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useContext2 = useContext(AuthContext),\n      authDispatch = _useContext2.authDispatch;\n\n  var _useQuery = useQuery(GET_LOGGED_IN_USER, {\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: \"network-only\" // pollInterval: 5000,\n\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      _useQuery$data = _useQuery.data,\n      data = _useQuery$data === void 0 ? {} : _useQuery$data;\n\n  var _useState = useState({\n    height: \"100%\",\n    width: \"100%\"\n  }),\n      viewport = _useState[0],\n      setViewport = _useState[1];\n\n  var intl = useIntl();\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Cargando...',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    });\n  }\n\n  ;\n  return __jsx(PlantPageWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(PlantsPageContainer, {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: \"jsx-182966123\" + \" \" + \"home-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"backProfileBtn\",\n    defaultMessage: \"Back to Profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }))), __jsx(ReactMapGL, {\n    viewState: viewport,\n    onViewportChange: function onViewportChange(newViewport) {\n      return setViewport(newViewport);\n    },\n    mapboxApiAccessToken: \"<your-mapbox-api-token>\",\n    mapStyle: \"mapbox://styles/mapbox/light-v9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"182966123\",\n    __self: _this\n  }, \".root.jsx-182966123{position:absolute;top:0;left:0;height:100vh;width:100vw;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lc3RlYmFubXVydXphYmFsL3dvcmsvZGl0dG8vY2xpZW50L3BhY2thZ2VzL3Nob3Avc3JjL2ZlYXR1cmVzL2RpdHRvLW1hcmtldC9kaXR0by1tYXJrZXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVFVyxBQUdpQyxrQkFDWixNQUNDLE9BQ00sYUFDRCxZQUNkIiwiZmlsZSI6Ii9Vc2Vycy9lc3RlYmFubXVydXphYmFsL3dvcmsvZGl0dG8vY2xpZW50L3BhY2thZ2VzL3Nob3Avc3JjL2ZlYXR1cmVzL2RpdHRvLW1hcmtldC9kaXR0by1tYXJrZXQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCAgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCB7IHVzZU11dGF0aW9uLCB1c2VRdWVyeSB9IGZyb20gJ0BhcG9sbG8vcmVhY3QtaG9va3MnO1xuaW1wb3J0IEVycm9yTWVzc2FnZSBmcm9tICdjb21wb25lbnRzL2Vycm9yLW1lc3NhZ2UvZXJyb3ItbWVzc2FnZSc7XG5cbmltcG9ydCB7XG4gIFBsYW50c1BhZ2VDb250YWluZXIsXG4gIFBsYW50UGFnZVdyYXBwZXIsXG59IGZyb20gJy4vZGl0dG8tbWFya2V0LnN0eWxlJztcbmltcG9ydCB7IEZvcm1hdHRlZE1lc3NhZ2UsIHVzZUludGwgfSBmcm9tICdyZWFjdC1pbnRsJztcbmltcG9ydCB7IEdFVF9MT0dHRURfSU5fVVNFUiwgR0VUX0xPR0dFRF9JTl9VU0VSX1NFVFRJTkdTIH0gZnJvbSAnZ3JhcGhxbC9xdWVyeS9jdXN0b21lci5xdWVyeSc7XG5pbXBvcnQgeyBQcm9maWxlQ29udGV4dCB9IGZyb20gJ2NvbnRleHRzL3Byb2ZpbGUvcHJvZmlsZS5jb250ZXh0JztcbmltcG9ydCB7IEF1dGhDb250ZXh0IH0gZnJvbSAnY29udGV4dHMvYXV0aC9hdXRoLmNvbnRleHQnO1xuaW1wb3J0IFJlYWN0TWFwR0wgZnJvbSBcInJlYWN0LW1hcC1nbFwiO1xuaW1wb3J0ICdtYXBib3gtZ2wvZGlzdC9tYXBib3gtZ2wuY3NzJztcblxudHlwZSBEaXR0b01hcmtldFByb3BzID0ge1xuICBkYXRhPzogYW55O1xuICB1c2VyUmVmZXRjaDogYW55O1xuICBpbmRleD86IE51bWJlcjtcbiAgUm91dGVyPzogYW55O1xuICBkZXZpY2VUeXBlPzoge1xuICAgIG1vYmlsZTogYm9vbGVhbjtcbiAgICB0YWJsZXQ6IGJvb2xlYW47XG4gICAgZGVza3RvcDogYm9vbGVhbjtcbiAgfTtcbn07XG5cbmNvbnN0IERpdHRvTWFya2V0OiBSZWFjdC5GQzxEaXR0b01hcmtldFByb3BzPiA9ICh7IGRldmljZVR5cGUsIHVzZXJSZWZldGNoIH0pID0+IHtcbiAgY29uc3QgeyBzdGF0ZSwgZGlzcGF0Y2ggfSA9IHVzZUNvbnRleHQoUHJvZmlsZUNvbnRleHQpO1xuICBjb25zdCB7YXV0aERpc3BhdGNofSA9IHVzZUNvbnRleHQ8YW55PihBdXRoQ29udGV4dCk7XG5cbiAgY29uc3QgeyBsb2FkaW5nLCBlcnJvciwgZGF0YSA9IHt9IH0gPSB1c2VRdWVyeShHRVRfTE9HR0VEX0lOX1VTRVIsIHtcbiAgICBub3RpZnlPbk5ldHdvcmtTdGF0dXNDaGFuZ2U6IHRydWUsXG4gICAgZmV0Y2hQb2xpY3k6IFwibmV0d29yay1vbmx5XCIsXG4gICAgLy8gcG9sbEludGVydmFsOiA1MDAwLFxuICB9KTtcblxuICBjb25zdCBbdmlld3BvcnQsIHNldFZpZXdwb3J0XSA9IHVzZVN0YXRlKHtcbiAgICBoZWlnaHQ6IFwiMTAwJVwiLFxuICAgIHdpZHRoOiBcIjEwMCVcIlxuICB9KTtcblxuICBjb25zdCBpbnRsID0gdXNlSW50bCgpO1xuXG4gIGlmIChsb2FkaW5nKSB7XG4gICAgcmV0dXJuIDxFcnJvck1lc3NhZ2UgbWVzc2FnZT17J0NhcmdhbmRvLi4uJ30gLz5cbiAgfTtcblxuICBpZiAoZXJyb3IpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEVycm9yTWVzc2FnZSBtZXNzYWdlPXtlcnJvci5tZXNzYWdlfSAvPlxuICAgICk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8UGxhbnRQYWdlV3JhcHBlcj5cbiAgICAgIDxQbGFudHNQYWdlQ29udGFpbmVyIHN0eWxlPXt7IHdpZHRoOiAnMTAwJScgfX0+XG4gICAgICAgIDxMaW5rIGhyZWY9XCIvcHJvZmlsZVwiPlxuICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImhvbWUtYnRuXCI+XG4gICAgICAgICAgICA8Rm9ybWF0dGVkTWVzc2FnZSBpZD1cImJhY2tQcm9maWxlQnRuXCIgZGVmYXVsdE1lc3NhZ2U9XCJCYWNrIHRvIFByb2ZpbGVcIiAvPlxuICAgICAgICAgIDwvYT5cbiAgICAgICAgPC9MaW5rPlxuXG4gICAgICAgIDxSZWFjdE1hcEdMXG4gICAgICAgICAgdmlld1N0YXRlPXt2aWV3cG9ydH1cbiAgICAgICAgICBvblZpZXdwb3J0Q2hhbmdlPXtuZXdWaWV3cG9ydCA9PiBzZXRWaWV3cG9ydChuZXdWaWV3cG9ydCl9XG4gICAgICAgICAgbWFwYm94QXBpQWNjZXNzVG9rZW49XCI8eW91ci1tYXBib3gtYXBpLXRva2VuPlwiXG4gICAgICAgICAgbWFwU3R5bGU9XCJtYXBib3g6Ly9zdHlsZXMvbWFwYm94L2xpZ2h0LXY5XCJcbiAgICAgICAgLz5cbiAgICAgICAgPHN0eWxlIGpzeD5cbiAgICAgICAgICB7YFxuICAgICAgICAgICAgLnJvb3Qge1xuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgICAgICAgICAgd2lkdGg6IDEwMHZ3O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGB9XG4gICAgICAgIDwvc3R5bGU+XG4gICAgICA8L1BsYW50c1BhZ2VDb250YWluZXI+XG4gICAgPC9QbGFudFBhZ2VXcmFwcGVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRGl0dG9NYXJrZXQ7XG4iXX0= */\\n/*@ sourceURL=/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/ditto-market/ditto-market.tsx */\")));\n};\n\n_s(DittoMarket, \"TIl8vxqUegat/nE6+yXzHZTyt1w=\", false, function () {\n  return [useQuery, useIntl];\n});\n\n_c = DittoMarket;\nexport default DittoMarket;\n\nvar _c;\n\n$RefreshReg$(_c, \"DittoMarket\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/ditto-market/ditto-market.tsx"],"names":["React","useState","useContext","Link","useQuery","ErrorMessage","PlantsPageContainer","PlantPageWrapper","FormattedMessage","useIntl","GET_LOGGED_IN_USER","ProfileContext","AuthContext","ReactMapGL","DittoMarket","deviceType","userRefetch","state","dispatch","authDispatch","notifyOnNetworkStatusChange","fetchPolicy","loading","error","data","height","width","viewport","setViewport","intl","message","newViewport"],"mappings":"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","sourcesContent":["import React,  { useState, useEffect, useContext } from 'react';\nimport Link from 'next/link';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport ErrorMessage from 'components/error-message/error-message';\n\nimport {\n  PlantsPageContainer,\n  PlantPageWrapper,\n} from './ditto-market.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER, GET_LOGGED_IN_USER_SETTINGS } from 'graphql/query/customer.query';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport ReactMapGL from \"react-map-gl\";\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\ntype DittoMarketProps = {\n  data?: any;\n  userRefetch: any;\n  index?: Number;\n  Router?: any;\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst DittoMarket: React.FC<DittoMarketProps> = ({ deviceType, userRefetch }) => {\n  const { state, dispatch } = useContext(ProfileContext);\n  const {authDispatch} = useContext<any>(AuthContext);\n\n  const { loading, error, data = {} } = useQuery(GET_LOGGED_IN_USER, {\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: \"network-only\",\n    // pollInterval: 5000,\n  });\n\n  const [viewport, setViewport] = useState({\n    height: \"100%\",\n    width: \"100%\"\n  });\n\n  const intl = useIntl();\n\n  if (loading) {\n    return <ErrorMessage message={'Cargando...'} />\n  };\n\n  if (error) {\n    return (\n      <ErrorMessage message={error.message} />\n    );\n  };\n\n  return (\n    <PlantPageWrapper>\n      <PlantsPageContainer style={{ width: '100%' }}>\n        <Link href=\"/profile\">\n          <a className=\"home-btn\">\n            <FormattedMessage id=\"backProfileBtn\" defaultMessage=\"Back to Profile\" />\n          </a>\n        </Link>\n\n        <ReactMapGL\n          viewState={viewport}\n          onViewportChange={newViewport => setViewport(newViewport)}\n          mapboxApiAccessToken=\"<your-mapbox-api-token>\"\n          mapStyle=\"mapbox://styles/mapbox/light-v9\"\n        />\n        <style jsx>\n          {`\n            .root {\n              position: absolute;\n              top: 0;\n              left: 0;\n              height: 100vh;\n              width: 100vw;\n            }\n          `}\n        </style>\n      </PlantsPageContainer>\n    </PlantPageWrapper>\n  );\n};\n\nexport default DittoMarket;\n"]},"metadata":{},"sourceType":"module"}