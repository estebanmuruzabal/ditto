{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/authentication-form/register.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport { useMutation } from '@apollo/react-hooks';\nimport es from 'react-phone-input-2/lang/es.json';\nimport { Input } from 'components/forms/input';\nimport { Wrapper, Container, Heading, SubHeading, HelperText, Offer, LinkButton, SubrequirementContainer, Dot, Requirement } from './authentication-form.style';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { SIGNUP_MUTATION } from 'graphql/mutation/signup';\nimport PhoneInput from 'react-phone-input-2';\nexport default function SignOutModal() {\n  _s();\n\n  var intl = useIntl();\n\n  var _useContext = useContext(AuthContext),\n      authState = _useContext.authState,\n      authDispatch = _useContext.authDispatch;\n\n  var toggleSignInForm = function toggleSignInForm() {\n    authDispatch({\n      type: 'SIGNIN'\n    });\n  };\n\n  var toggleOtpForm = function toggleOtpForm() {\n    authDispatch({\n      type: 'OTP_VERIFICATION'\n    });\n  }; //signup\n\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      phone = _React$useState2[0],\n      setPhone = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      errorMessage = _React$useState6[0],\n      setErrorMessage = _React$useState6[1];\n\n  var _useMutation = useMutation(SIGNUP_MUTATION, {\n    onCompleted: function onCompleted(data) {\n      console.log('data', data);\n\n      if (true) {\n        localStorage.setItem('phone_number', \"\".concat(phone));\n        toggleOtpForm();\n      }\n\n      setErrorMessage(null);\n    },\n    onError: function onError(error) {\n      setPhone('');\n      setPassword('');\n      console.log(error);\n      if ((error === null || error === void 0 ? void 0 : error.toString()) && (error === null || error === void 0 ? void 0 : error.toString().includes('User already registered'))) setErrorMessage(intl.formatMessage({\n        id: 'userAlreadyRegistered',\n        defaultMessage: 'User already registered'\n      }));else if ((error === null || error === void 0 ? void 0 : error.toString()) && (error === null || error === void 0 ? void 0 : error.toString().includes('Incorrect length'))) setErrorMessage(intl.formatMessage({\n        id: 'atLeast6Char',\n        defaultMessage: 'MÃ­nimo 6 caracteres'\n      }));else setErrorMessage(intl.formatMessage({\n        id: 'somethingWentWrong'\n      }));\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signupMeMutation = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  var handlePhoneChange = function handlePhoneChange(value, data, event, formattedValue) {\n    setPhone(value);\n  };\n\n  var hasMinLength = function hasMinLength() {\n    return password.length >= 6;\n  }; // private hasSecurity() {\n  //   let securityChecks = 0;\n  //   // @ts-ignore\n  //   securityChecks += this.hasLowerCase() + this.hasUpperCase() + this.hasDigit() + this.hasSpecialChar();\n  //   return securityChecks >= 3;\n  // }\n  // private hasLowerCase() {\n  //   return !!this.state.password.match(new RegExp('[a-z]'));\n  // }\n  // private hasUpperCase() {\n  //   return !!this.state.password.match(new RegExp('[A-Z]'));\n  // }\n  // private hasDigit() {\n  //   return !!this.state.password.match(new RegExp('[0-9]'));\n  // }\n  // private hasSpecialChar() {\n  //   return !!this.state.password.match(/[\\~\\`\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\+\\=\\_\\-\\{\\}\\[\\]\\\\|\\:\\;\\\"\\'\\?\\/\\<\\>\\,\\.]/);\n  // }\n\n\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"signUpBtnText\",\n    defaultMessage: \"Sign Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), __jsx(SubHeading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return signupMeMutation({\n                  variables: {\n                    phone: phone,\n                    password: password\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, __jsx(PhoneInput, {\n    inputProps: {\n      name: 'Numero de telefono',\n      required: true,\n      autoFocus: false\n    },\n    containerStyle: {\n      textAlign: \"left\"\n    },\n    inputStyle: {\n      backgroundColor: \"#F7F7F7\",\n      height: \"48px\",\n      marginBottom: \"10px\",\n      width: \"100%\"\n    },\n    onlyCountries: ['ar'],\n    localization: es,\n    country: 'ar',\n    masks: {\n      ar: '(...) ...-....'\n    },\n    value: phone,\n    onChange: handlePhoneChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    type: \"text\",\n    name: \"password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    placeholder: intl.formatMessage({\n      id: 'passwordPlaceholder',\n      defaultMessage: 'Password (min 6 characters)'\n    }),\n    height: \"48px\",\n    backgroundColor: \"#F7F7F7\",\n    mb: \"10px\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), !hasMinLength && __jsx(SubrequirementContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, __jsx(Dot, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }), __jsx(Requirement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, intl.formatMessage({\n    id: 'atLeast6Char',\n    defaultMessage: 'At least 6 characters'\n  }))), __jsx(HelperText, {\n    style: {\n      padding: '20px 0 30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"tramsText\",\n    defaultMessage: \"By signing up, you agree to Ditto's\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }), \"\\xA0\", __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"termsConditionText\",\n    defaultMessage: \"Terms & Condition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }))))), loading && __jsx(\"p\", {\n    style: {\n      marginTop: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 23\n    }\n  }, \"Loading...\"), error && __jsx(\"p\", {\n    style: {\n      marginTop: \"15px\",\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, errorMessage), __jsx(Offer, {\n    style: {\n      padding: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"alreadyHaveAccount\",\n    defaultMessage: \"Already have an account?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }), ' ', __jsx(LinkButton, {\n    onClick: toggleSignInForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"loginBtnText\",\n    defaultMessage: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(SignOutModal, \"jGytfBDR0ThoSw0ZPjyLCGEsxuk=\", false, function () {\n  return [useIntl, useMutation];\n});\n\n_c = SignOutModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignOutModal\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/authentication-form/register.tsx"],"names":["React","useContext","Link","useMutation","es","Input","Wrapper","Container","Heading","SubHeading","HelperText","Offer","LinkButton","SubrequirementContainer","Dot","Requirement","AuthContext","FormattedMessage","useIntl","SIGNUP_MUTATION","PhoneInput","SignOutModal","intl","authState","authDispatch","toggleSignInForm","type","toggleOtpForm","useState","phone","setPhone","password","setPassword","errorMessage","setErrorMessage","onCompleted","data","console","log","localStorage","setItem","onError","error","toString","includes","formatMessage","id","defaultMessage","signupMeMutation","loading","handlePhoneChange","value","event","formattedValue","hasMinLength","length","e","preventDefault","variables","name","required","autoFocus","textAlign","backgroundColor","height","marginBottom","width","ar","target","padding","marginTop","color"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport Link from 'next/link';\nimport { useMutation } from '@apollo/react-hooks';\nimport es from 'react-phone-input-2/lang/es.json'\nimport { Input } from 'components/forms/input';\n\nimport {\n  Button,\n  Wrapper,\n  Container,\n  Heading,\n  SubHeading,\n  HelperText,\n  Offer,\n  LinkButton,\n  SubrequirementContainer,\n  Dot,\n  Requirement\n} from './authentication-form.style';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { SIGNUP_MUTATION } from 'graphql/mutation/signup';\nimport PhoneInput from 'react-phone-input-2'\nimport startsWith from 'lodash.startswith';\n\nexport default function SignOutModal() {\n  const intl = useIntl();\n  const { authState, authDispatch } = useContext<any>(AuthContext);\n  const toggleSignInForm = () => {\n    authDispatch({\n      type: 'SIGNIN',\n    });\n  };\n\n  const toggleOtpForm = () => {\n    authDispatch({\n      type: 'OTP_VERIFICATION',\n    });\n  };\n\n  //signup\n  const [phone, setPhone] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState(null);\n\n  const [\n    signupMeMutation,\n    { \n      loading,\n      error\n    }\n  ] = useMutation(SIGNUP_MUTATION,{\n    onCompleted: (data) => {\n      console.log('data', data)\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('phone_number', `${phone}`);\n        toggleOtpForm();\n      }\n      setErrorMessage(null)\n    },\n    onError: (error) => {\n      setPhone('');\n      setPassword('');\n      console.log(error);\n      if (error?.toString() && error?.toString().includes('User already registered')) setErrorMessage(intl.formatMessage({ id: 'userAlreadyRegistered', defaultMessage: 'User already registered' }))\n      else if (error?.toString() && error?.toString().includes('Incorrect length')) setErrorMessage(intl.formatMessage({ id: 'atLeast6Char', defaultMessage: 'MÃ­nimo 6 caracteres' }))\n      else setErrorMessage(intl.formatMessage({ id: 'somethingWentWrong' }))\n    }\n  });\n\n  const handlePhoneChange = (value, data, event, formattedValue) => {\n    setPhone(value)\n  }\n\n  const hasMinLength = () => {\n    return password.length >= 6;\n  }\n\n  // private hasSecurity() {\n  //   let securityChecks = 0;\n  //   // @ts-ignore\n  //   securityChecks += this.hasLowerCase() + this.hasUpperCase() + this.hasDigit() + this.hasSpecialChar();\n  //   return securityChecks >= 3;\n  // }\n\n  // private hasLowerCase() {\n  //   return !!this.state.password.match(new RegExp('[a-z]'));\n  // }\n\n  // private hasUpperCase() {\n  //   return !!this.state.password.match(new RegExp('[A-Z]'));\n  // }\n\n  // private hasDigit() {\n  //   return !!this.state.password.match(new RegExp('[0-9]'));\n  // }\n\n  // private hasSpecialChar() {\n  //   return !!this.state.password.match(/[\\~\\`\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\+\\=\\_\\-\\{\\}\\[\\]\\\\|\\:\\;\\\"\\'\\?\\/\\<\\>\\,\\.]/);\n  // }\n\n\n\n  return (\n    <Wrapper>\n      <Container>\n        <Heading>\n          <FormattedMessage id='signUpBtnText' defaultMessage='Sign Up' />\n        </Heading>\n        <SubHeading>\n          {/* <FormattedMessage\n            id='signUpText'\n            defaultMessage='Every fill is required in sign up'\n          /> */}\n        </SubHeading>\n          <form method=\"post\" onSubmit={\n            async (e) => {\n                e.preventDefault();\n                await signupMeMutation({\n                  variables: {phone, password}\n                });\n              }\n            }\n          >\n            <PhoneInput\n              inputProps={{\n                name: 'Numero de telefono',\n                required: true,\n                autoFocus: false\n              }}\n              containerStyle={{textAlign: \"left\"}}\n              inputStyle={{backgroundColor: \"#F7F7F7\", height: \"48px\", marginBottom: \"10px\", width: \"100%\"}}\n              onlyCountries={['ar']}\n              localization={es}\n              country={'ar'}\n              masks={{ar: '(...) ...-....'}}\n              value={phone}\n              onChange={handlePhoneChange}\n            />\n            <Input\n              type=\"text\"\n              name=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder={intl.formatMessage({\n                id: 'passwordPlaceholder',\n                defaultMessage: 'Password (min 6 characters)',\n              })}\n              height='48px'\n              backgroundColor='#F7F7F7'\n              mb='10px'\n              required\n            />\n             {!hasMinLength && (\n              <SubrequirementContainer>\n                <Dot />\n                <Requirement>{intl.formatMessage({ id: 'atLeast6Char', defaultMessage: 'At least 6 characters' })}</Requirement>\n              </SubrequirementContainer>\n            )}\n            {/*\n            {!this.hasSecurity() && (\n              <div>\n                <SubrequirementContainer>\n                  <Dot />\n                  <Requirement>{lang.t('CHANGE_PASSWORD.AT_LEAST_CATEGORIES')}</Requirement>\n                </SubrequirementContainer>\n                {!this.hasLowerCase() && (\n                  <SubrequirementContainer>\n                    <Dot />\n                    <Requirement>{lang.t('CHANGE_PASSWORD.LOWERCASE_LETTER')}</Requirement>\n                  </SubrequirementContainer>\n                )}\n                {!this.hasUpperCase() && (\n                  <SubrequirementContainer>\n                    <Dot />\n                    <Requirement>{lang.t('CHANGE_PASSWORD.UPPERCASE_LETTR')}</Requirement>\n                  </SubrequirementContainer>\n                )}\n                {!this.hasDigit() && (\n                  <SubrequirementContainer>\n                    <Dot />\n                    <Requirement>{lang.t('CHANGE_PASSWORD.DIGIT')}</Requirement>\n                  </SubrequirementContainer>\n                )}\n                {!this.hasSpecialChar() && (\n                  <SubrequirementContainer>\n                    <Dot />\n                    <Requirement>{lang.t('CHANGE_PASSWORD.SPECIAL_CHAR')}</Requirement>\n                  </SubrequirementContainer>\n                )}\n                </div>\n              )} */}\n            <HelperText style={{ padding: '20px 0 30px' }}>\n              <FormattedMessage\n                id='tramsText'\n                defaultMessage=\"By signing up, you agree to Ditto's\"\n              />\n              &nbsp;\n              <Link href='/'>\n                <a>\n                  <FormattedMessage\n                    id='termsConditionText'\n                    defaultMessage='Terms &amp; Condition'\n                  />\n                </a>\n              </Link>\n            </HelperText>\n            \n          </form>\n          {loading && <p style={{\n            marginTop: \"15px\"\n          }}>Loading...</p>}\n          {error && <p style={{\n            marginTop: \"15px\",\n            color: \"red\"\n          }}>{errorMessage}</p>}\n        <Offer style={{ padding: '20px 0' }}>\n          <FormattedMessage\n            id='alreadyHaveAccount'\n            defaultMessage='Already have an account?'\n          />{' '}\n          <LinkButton onClick={toggleSignInForm}>\n            <FormattedMessage id='loginBtnText' defaultMessage='Login' />\n          </LinkButton>\n        </Offer>\n      </Container>\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}