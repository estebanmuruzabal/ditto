{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { SearchWrapper } from './humidity-logs-graph.style';\nimport GraphChart from 'components/graph-chart/graph-chart';\n\nconst HumidityLogsGraph = (_ref) => {\n  let {\n    data\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"data\"]);\n\n  JSON.stringify(data);\n  let humidities = [0];\n  let times = [];\n  Object.keys(data).forEach(function (key, index) {\n    if (data[key].reading >= 0 || data[key].reading <= 100) {\n      humidities.push(data[key].reading);\n      times.push(data[key].timestamp);\n    } // let trimed = data[key]?.timestamp?.substring(0, data[key].timestamp.length - 6);\n\n  });\n  return __jsx(SearchWrapper, null, __jsx(GraphChart // widgetTitle='Humidity history'\n  , {\n    colors: ['#6571f0'],\n    series: humidities,\n    labels: times\n  }));\n};\n\nexport default HumidityLogsGraph;","map":null,"metadata":{},"sourceType":"module"}