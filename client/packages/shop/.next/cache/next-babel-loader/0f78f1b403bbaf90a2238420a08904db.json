{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/pages/work.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery } from '@apollo/react-hooks';\nimport { Modal } from '@redq/reuse-modal';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { WorkProvider } from 'contexts/work/work.provider';\nimport WorkContent from 'features/user-profile/work/work';\nimport { PageWrapper, SidebarSection, ContentBox } from 'features/user-profile/user-profile.style';\nimport Sidebar from 'features/user-profile/sidebar/sidebar';\nimport { SEO } from 'components/seo';\nimport ErrorMessage from 'components/error-message/error-message';\nconst GET_STAFFS = gql`\n  query staffs {\n    getStaffs {\n      id\n      name\n      email\n      role\n      created_at\n      phones{\n        number\n        id\n        is_primary\n      }\n      workInfo{\n        stoppedWorkTime\n        startedWorkTime\n        ratePerHour\n        totalWorkingMinutesPerWeek\n        totalSalaryToPayWeekly\n        advancedSalaryPaid\n        isWorking\n        taskRelated\n      }\n      tasks{\n        taskId\n        startDate\n        finishDate\n        plannedDate\n        isRepetitived\n        completationTimes\n        isDone\n        description\n        workedHours\n      }\n      logs{\n        logDescription\n        timestamp\n      }\n    }\n  }\n`;\n\nconst WorkPage = ({\n  deviceType\n}) => {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_LOGGED_IN_USER);\n  const {\n    data: staffData,\n    error: staffError,\n    refetch\n  } = useQuery(GET_STAFFS);\n  console.log('data.getUser:::', staffData);\n\n  if (!data || loading) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  if (error) return __jsx(ErrorMessage, {\n    message: error.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(SEO, {\n    title: \"Work - Ditto\",\n    description: \"Work Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), __jsx(WorkProvider, {\n    initData: data.getUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(PageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, __jsx(SidebarSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, __jsx(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  })), __jsx(ContentBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(WorkContent, {\n    deviceType: deviceType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default WorkPage;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/pages/work.tsx"],"names":["useQuery","Modal","GET_LOGGED_IN_USER","WorkProvider","WorkContent","PageWrapper","SidebarSection","ContentBox","Sidebar","SEO","ErrorMessage","GET_STAFFS","gql","WorkPage","deviceType","data","error","loading","staffData","staffError","refetch","console","log","message","getUser"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,qBAAzB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,UAHF,QAIO,0CAJP;AAKA,OAAOC,OAAP,MAAoB,uCAApB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AAUA,MAAMC,UAAU,GAAGC,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAvB;;AA0CA,MAAMC,QAAyB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BjB,QAAQ,CAACE,kBAAD,CAAzC;AACA,QAAM;AAAEa,IAAAA,IAAI,EAAEG,SAAR;AAAmBF,IAAAA,KAAK,EAAEG,UAA1B;AAAsCC,IAAAA;AAAtC,MAAkDpB,QAAQ,CAACW,UAAD,CAAhE;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAAgCJ,SAAhC;;AACA,MAAI,CAACH,IAAD,IAASE,OAAb,EAAsB;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,MAAID,KAAJ,EAAW,OAAO,MAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,KAAK,CAACO,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEX,SACE,4BACE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC,cAAX;AAA0B,IAAA,WAAW,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAER,IAAI,CAACS,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,UAAU,EAAEV,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,CADF,CAFF,CADF;AAiBD,CA3BD;;AA6BA,eAAeD,QAAf","sourcesContent":["import { NextPage } from 'next';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Modal } from '@redq/reuse-modal';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { WorkProvider } from 'contexts/work/work.provider';\nimport WorkContent from 'features/user-profile/work/work';\nimport {\n  PageWrapper,\n  SidebarSection,\n  ContentBox,\n} from 'features/user-profile/user-profile.style';\nimport Sidebar from 'features/user-profile/sidebar/sidebar';\nimport { SEO } from 'components/seo';\nimport ErrorMessage from 'components/error-message/error-message';\n\ntype Props = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst GET_STAFFS = gql`\n  query staffs {\n    getStaffs {\n      id\n      name\n      email\n      role\n      created_at\n      phones{\n        number\n        id\n        is_primary\n      }\n      workInfo{\n        stoppedWorkTime\n        startedWorkTime\n        ratePerHour\n        totalWorkingMinutesPerWeek\n        totalSalaryToPayWeekly\n        advancedSalaryPaid\n        isWorking\n        taskRelated\n      }\n      tasks{\n        taskId\n        startDate\n        finishDate\n        plannedDate\n        isRepetitived\n        completationTimes\n        isDone\n        description\n        workedHours\n      }\n      logs{\n        logDescription\n        timestamp\n      }\n    }\n  }\n`;\n\nconst WorkPage: NextPage<Props> = ({ deviceType }) => {\n  const { data, error, loading } = useQuery(GET_LOGGED_IN_USER);\n  const { data: staffData, error: staffError, refetch } = useQuery(GET_STAFFS);\n\n  console.log('data.getUser:::' , staffData)\n  if (!data || loading) {\n    return <div>loading...</div>;\n  }\n  if (error) return <ErrorMessage message={error.message} />;\n  \n  return (\n    <>\n      <SEO title=\"Work - Ditto\" description=\"Work Details\" />\n      <WorkProvider initData={data.getUser}>\n        <Modal>\n          <PageWrapper>\n            <SidebarSection>\n              <Sidebar />\n            </SidebarSection>\n            <ContentBox>\n              <WorkContent deviceType={deviceType} />\n            </ContentBox>\n          </PageWrapper>\n        </Modal>\n      </WorkProvider>\n    </>\n  );\n};\n\nexport default WorkPage;\n"]},"metadata":{},"sourceType":"module"}