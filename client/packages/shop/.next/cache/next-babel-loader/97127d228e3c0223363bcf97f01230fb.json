{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/layouts/header/mobile-header.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport MobileDrawer from './mobile-drawer';\nimport { MobileHeaderWrapper, MobileHeaderInnerWrapper, DrawerWrapper, LogoWrapper, SearchModalWrapper, SearchModalClose } from './header.style';\nimport Search from 'features/search/search';\nimport LogoImage from 'assets/images/logo.svg';\nimport { LongArrowLeft } from 'assets/icons/LongArrowLeft';\nimport Logo from 'layouts/logo/logo';\nimport LanguageSwitcher from './menu/language-switcher/language-switcher';\nimport { isCategoryPage } from '../is-home-page';\nimport useDimensions from 'utils/useComponentSize';\nimport { GET_TYPE } from 'graphql/query/type.query';\nimport { useQuery } from '@apollo/react-hooks';\nimport { CATEGORY_MENU_ITEMS } from 'site-settings/site-navigation';\nimport { AuthContext } from 'contexts/auth/auth.context';\n\nconst SearchModal = () => {\n  const onSubmit = () => {\n    closeModal();\n  };\n\n  return __jsx(SearchModalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(SearchModalClose, {\n    type: \"submit\",\n    onClick: () => closeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(LongArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), __jsx(Search, {\n    className: \"header-modal-search\",\n    showButtonText: false,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst MobileHeader = ({\n  className\n}) => {\n  const {\n    pathname,\n    query\n  } = useRouter();\n  const {\n    authState: {\n      isAuthenticated\n    }\n  } = useContext(AuthContext);\n  const [mobileHeaderRef, dimensions] = useDimensions();\n  const router = useRouter();\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_TYPE, {\n    variables: {\n      searchText: ''\n    }\n  });\n\n  const handleSearchModal = () => {\n    openModal({\n      show: true,\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'search-modal-mobile',\n        width: '100%',\n        height: '100%'\n      },\n      closeOnClickOutside: false,\n      component: SearchModal,\n      closeComponent: () => __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      })\n    });\n  };\n\n  const type = pathname === '/restaurant' ? 'restaurant' : query.type;\n  const isHomePage = isCategoryPage(type);\n  const typeMenu = data.types.items.map(item => {\n    return {\n      id: item.id,\n      href: `/${item.slug}`,\n      defaultMessage: item.name,\n      icon: item.icon,\n      dynamic: true\n    };\n  });\n  const initialMenu = router.asPath == '/' ? typeMenu[0] : typeMenu.find(item => item.href == router.asPath);\n\n  if (initialMenu) {\n    if (localStorage.getItem('myMenu')) {\n      localStorage.removeItem('myMenu');\n    }\n\n    localStorage.setItem('myMenu', JSON.stringify(initialMenu));\n  }\n\n  const [activeMenu, setActiveMenu] = React.useState(initialMenu !== null && initialMenu !== void 0 ? initialMenu : CATEGORY_MENU_ITEMS[0]);\n  return __jsx(MobileHeaderWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, __jsx(MobileHeaderInnerWrapper, {\n    className: className,\n    ref: mobileHeaderRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, __jsx(DrawerWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(MobileDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  })), __jsx(LogoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, __jsx(Logo, {\n    imageUrl: LogoImage,\n    alt: \"shop logo\",\n    onClick: initialMenu ? initialMenu : JSON.parse(localStorage.getItem('myMenu')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })), __jsx(LanguageSwitcher, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default MobileHeader;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/layouts/header/mobile-header.tsx"],"names":["React","useContext","useRouter","openModal","closeModal","MobileDrawer","MobileHeaderWrapper","MobileHeaderInnerWrapper","DrawerWrapper","LogoWrapper","SearchModalWrapper","SearchModalClose","Search","LogoImage","LongArrowLeft","Logo","LanguageSwitcher","isCategoryPage","useDimensions","GET_TYPE","useQuery","CATEGORY_MENU_ITEMS","AuthContext","SearchModal","onSubmit","MobileHeader","className","pathname","query","authState","isAuthenticated","mobileHeaderRef","dimensions","router","data","error","loading","variables","searchText","handleSearchModal","show","config","enableResizing","disableDragging","width","height","closeOnClickOutside","component","closeComponent","type","isHomePage","typeMenu","types","items","map","item","id","href","slug","defaultMessage","name","icon","dynamic","initialMenu","asPath","find","localStorage","getItem","removeItem","setItem","JSON","stringify","activeMenu","setActiveMenu","useState","parse"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport MobileDrawer from './mobile-drawer';\nimport {\n  MobileHeaderWrapper,\n  MobileHeaderInnerWrapper,\n  DrawerWrapper,\n  LogoWrapper,\n  SearchWrapper,\n  SearchModalWrapper,\n  SearchModalClose,\n} from './header.style';\nimport Search from 'features/search/search';\nimport LogoImage from 'assets/images/logo.svg';\n\nimport { SearchIcon } from 'assets/icons/SearchIcon';\nimport { LongArrowLeft } from 'assets/icons/LongArrowLeft';\nimport Logo from 'layouts/logo/logo';\n\nimport LanguageSwitcher from './menu/language-switcher/language-switcher';\nimport { isCategoryPage } from '../is-home-page';\nimport useDimensions from 'utils/useComponentSize';\nimport { GET_TYPE } from 'graphql/query/type.query';\nimport { useQuery } from '@apollo/react-hooks';\nimport { CATEGORY_MENU_ITEMS } from 'site-settings/site-navigation';\nimport { AuthContext } from 'contexts/auth/auth.context';\n\ntype MobileHeaderProps = {\n  className?: string;\n  closeSearch?: any;\n};\n\nconst SearchModal: React.FC<{}> = () => {\n  const onSubmit = () => {\n    closeModal();\n  };\n  return (\n    <SearchModalWrapper>\n      <SearchModalClose type=\"submit\" onClick={() => closeModal()}>\n        <LongArrowLeft />\n      </SearchModalClose>\n      <Search\n        className=\"header-modal-search\"\n        showButtonText={false}\n        onSubmit={onSubmit}\n      />\n    </SearchModalWrapper>\n  );\n};\n\nconst MobileHeader: React.FC<MobileHeaderProps> = ({ className }) => {\n  const { pathname, query } = useRouter();\n  const { authState: { isAuthenticated } } = useContext<any>(AuthContext);\n  \n  const [mobileHeaderRef, dimensions] = useDimensions();\n  const router = useRouter();\n  const { data, error, loading } = useQuery(\n    GET_TYPE,\n    {\n      variables: {\n        searchText: ''\n      }\n    }\n  );\n\n  const handleSearchModal = () => {\n    openModal({\n      show: true,\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'search-modal-mobile',\n        width: '100%',\n        height: '100%',\n      },\n      closeOnClickOutside: false,\n      component: SearchModal,\n      closeComponent: () => <div />,\n    });\n  };\n  const type = pathname === '/restaurant' ? 'restaurant' : query.type;\n\n  const isHomePage = isCategoryPage(type);\n  const typeMenu = data.types.items.map((item) => {\n    return({\n      id: item.id,\n      href: `/${item.slug}`,\n      defaultMessage: item.name,\n      icon: item.icon,\n      dynamic: true,\n    })\n  })\n  const initialMenu = router.asPath == '/' ? typeMenu[0] : typeMenu.find((item) => item.href == router.asPath);\n  \n  if(initialMenu){\n    if(localStorage.getItem('myMenu')){\n      localStorage.removeItem('myMenu');\n    }\n    localStorage.setItem('myMenu', JSON.stringify(initialMenu));\n  }\n\n  const [activeMenu, setActiveMenu] = React.useState(\n    initialMenu ?? CATEGORY_MENU_ITEMS[0]\n  );\n\n  return (\n    <MobileHeaderWrapper>\n      <MobileHeaderInnerWrapper className={className} ref={mobileHeaderRef}>\n        <DrawerWrapper>\n          {\n\n          }\n          <MobileDrawer />\n        </DrawerWrapper>\n\n        <LogoWrapper>\n          <Logo\n            imageUrl={LogoImage}\n            alt=\"shop logo\"\n            onClick={initialMenu ? initialMenu: JSON.parse(localStorage.getItem('myMenu'))}\n          />\n        </LogoWrapper>\n\n        <LanguageSwitcher />\n\n        {/* {isHomePage ? (\n          <SearchWrapper\n            onClick={handleSearchModal}\n            className=\"searchIconWrapper\"\n          >\n            <SearchIcon />\n          </SearchWrapper>\n        ) : null} */}\n        {/* <SearchWrapper\n          onClick={handleSearchModal}\n          className=\"searchIconWrapper\"\n        >\n          <SearchIcon />\n        </SearchWrapper> */}\n      </MobileHeaderInnerWrapper>\n    </MobileHeaderWrapper>\n  );\n};\n\nexport default MobileHeader;\n"]},"metadata":{},"sourceType":"module"}