{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/your-plants/your-plants.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport ErrorMessage from 'components/error-message/error-message';\nimport OrderReceivedWrapper, { OrderReceivedContainer, OrderDetails, BlockTitle, Text, ListItem, ListTitle, ListDes } from './your-plants.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { OrderListWrapper } from 'features/user-profile/order/order.style';\nimport { ADD_PLANT } from 'graphql/query/plants.query';\nimport { ProfileContext } from 'contexts/profile/profile.context';\n\nvar YourPlants = function YourPlants(props) {\n  _s();\n\n  var _data$getUser;\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var router = useRouter();\n  var intl = useIntl();\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setPlantName = _useState[1];\n\n  var _useState2 = useState(''),\n      controllerId = _useState2[0],\n      setControllerID = _useState2[1]; // const { id } = state;\n\n\n  var _useQuery = useQuery(GET_LOGGED_IN_USER),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  var _useMutation = useMutation(ADD_PLANT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addPlant = _useMutation2[0];\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Cargando...',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    });\n  }\n\n  ; // if (error?.toString()?.includes('no token sent')) {\n  //       // @ts-ignore\n  //       return (\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    });\n  }\n\n  ;\n\n  var handleAddClick = function handleAddClick() {\n    addPlant({\n      variables: {\n        // id,\n        name: name,\n        controllerId: controllerId\n      }\n    });\n  };\n\n  var userPlants = data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : _data$getUser.plants;\n  return __jsx(OrderReceivedWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(OrderReceivedContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: \"home-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"backProfileBtn\",\n    defaultMessage: \"Back to Profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }))), __jsx(OrderDetails, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(BlockTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"yourPlants\",\n    defaultMessage: \"Your Plants\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), (userPlants === null || userPlants === void 0 ? void 0 : userPlants.length) < 1 && __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 40\n    }\n  }, \"No tienes plantas registradas\"), userPlants === null || userPlants === void 0 ? void 0 : userPlants.map(function (plant) {\n    return __jsx(OrderListWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"plantName\",\n      defaultMessage: \"plantName\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.name, \" \"))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"tempId\",\n      defaultMessage: \"tempId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 23\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.temperatura, \" \"))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"humedadId\",\n      defaultMessage: \"humedadId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }, plant === null || plant === void 0 ? void 0 : plant.humedad, \" \"))), __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, __jsx(ListTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"phId\",\n      defaultMessage: \"PH\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }))), __jsx(ListDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 23\n      }\n    }, \"7.2\", \" \"))));\n  }))));\n};\n\n_s(YourPlants, \"DlsDFBCvOC1NpwKYBY37biSyPEE=\", false, function () {\n  return [useRouter, useIntl, useQuery, useMutation];\n});\n\n_c = YourPlants;\nexport default YourPlants;\n\nvar _c;\n\n$RefreshReg$(_c, \"YourPlants\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/your-plants/your-plants.tsx"],"names":["React","useState","useContext","Link","useRouter","useMutation","useQuery","ErrorMessage","OrderReceivedWrapper","OrderReceivedContainer","OrderDetails","BlockTitle","Text","ListItem","ListTitle","ListDes","FormattedMessage","useIntl","GET_LOGGED_IN_USER","OrderListWrapper","ADD_PLANT","ProfileContext","YourPlants","props","state","dispatch","router","intl","name","setPlantName","controllerId","setControllerID","data","error","loading","addPlant","message","handleAddClick","variables","userPlants","getUser","plants","length","map","plant","temperatura","humedad"],"mappings":"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","sourcesContent":["import React,  { useState, useEffect, useContext } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router'\nimport { Col } from 'react-styled-flexboxgrid';\nimport moment from 'moment';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { GET_ORDERS } from 'graphql/query/order.query';\nimport { CURRENCY } from 'utils/constant';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { Modal } from '@redq/reuse-modal';\nimport { Label } from 'components/forms/label';\n  \nimport OrderReceivedWrapper, {\n  OrderReceivedContainer,\n  OrderInfo,\n  OrderDetails,\n  TotalAmount,\n  BlockTitle,\n  Text,\n  InfoBlockWrapper,\n  InfoBlock,\n  ListItem,\n  ListTitle,\n  ListDes,\n  ButtonText,\n  Row,\n  InputUpper\n} from './your-plants.style';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { OrderListWrapper } from 'features/user-profile/order/order.style';\nimport ErrorMessageTwo from 'components/error-message/error-message-two';\nimport { Button } from 'components/button/button';\nimport { ADD_PLANT } from 'graphql/query/plants.query';\nimport { ProfileContext } from 'contexts/profile/profile.context';\n\ntype YourPlantsProps = {\n  data?: any;\n  index?: Number;\n  Router?: any;\n};\n\nconst YourPlants: React.FunctionComponent<YourPlantsProps> = (props) => {\n  const { state, dispatch } = useContext(ProfileContext);\n  const router = useRouter();\n  const intl = useIntl();\n  const [name, setPlantName] = useState('');\n  const [controllerId, setControllerID] = useState('');\n  // const { id } = state;\n\n  const { data, error, loading } = useQuery(GET_LOGGED_IN_USER);\n  const [addPlant] = useMutation(ADD_PLANT);\n  if (loading) {\n    return <ErrorMessage message={'Cargando...'} />\n  };\n\n  // if (error?.toString()?.includes('no token sent')) {\n  //       // @ts-ignore\n  //       return (\n\n  if (error) {\n    return (\n      <ErrorMessage message={error.message} />\n    );\n  };\n\n\n  \n  const handleAddClick = () => {\n    addPlant({\n      variables: {\n        // id,\n        name,\n        controllerId\n      },\n    });\n  };\n\n  const userPlants = data?.getUser?.plants;\n\n  return (\n    <OrderReceivedWrapper>\n      <OrderReceivedContainer>\n        <Link href=\"/profile\">\n          <a className=\"home-btn\">\n            <FormattedMessage id=\"backProfileBtn\" defaultMessage=\"Back to Profile\" />\n          </a>\n        </Link>\n\n        <OrderDetails>\n          <BlockTitle>\n            <FormattedMessage\n              id=\"yourPlants\"\n              defaultMessage=\"Your Plants\"\n            />\n          </BlockTitle>\n\n          { userPlants?.length < 1 && (<Text>No tienes plantas registradas</Text>) }\n          { userPlants?.map((plant) => {\n              return (\n                <OrderListWrapper>\n                  <ListItem>\n                    <ListTitle>\n                      <Text bold>\n                        <FormattedMessage\n                          id=\"plantName\"\n                          defaultMessage=\"plantName\"\n                        />\n                      </Text>\n                    </ListTitle>\n                    <ListDes>\n                      <Text>{plant?.name} </Text>\n                    </ListDes>\n                  </ListItem>\n\n                  <ListItem>\n                    <ListTitle>\n                      <Text bold>\n                        <FormattedMessage\n                          id=\"tempId\"\n                          defaultMessage=\"tempId\"\n                        />\n                      </Text>\n                    </ListTitle>\n                    <ListDes>\n                      <Text>{plant?.temperatura} </Text>\n                    </ListDes>\n                  </ListItem>\n\n                  <ListItem>\n                    <ListTitle>\n                      <Text bold>\n                        <FormattedMessage\n                          id=\"humedadId\"\n                          defaultMessage=\"humedadId\"\n                        />\n                      </Text>\n                    </ListTitle>\n                    <ListDes>\n                      <Text>{plant?.humedad} </Text>\n                    </ListDes>\n                  </ListItem>\n\n                  <ListItem>\n                    <ListTitle>\n                      <Text bold>\n                        <FormattedMessage\n                          id=\"phId\"\n                          defaultMessage=\"PH\"\n                        />\n                      </Text>\n                    </ListTitle>\n                    <ListDes>\n                      <Text>{\"7.2\"} </Text>\n                    </ListDes>\n                  </ListItem>\n                </OrderListWrapper>\n              )\n            })\n          }\n\n        </OrderDetails>\n      </OrderReceivedContainer>\n    </OrderReceivedWrapper>\n  );\n};\n\nexport default YourPlants;\n"]},"metadata":{},"sourceType":"module"}