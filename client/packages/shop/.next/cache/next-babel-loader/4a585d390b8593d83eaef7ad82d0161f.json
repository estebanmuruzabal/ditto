{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ORDERS } from 'graphql/query/order.query';\nimport ErrorMessage from 'components/error-message/error-message';\nimport OrderReceivedWrapper, { OrderReceivedContainer, OrderInfo, OrderDetails, TotalAmount, BlockTitle, Text, InfoBlockWrapper, InfoBlock, ListItem, ListTitle, ListDes } from './order-received.style';\nimport { FormattedMessage } from 'react-intl';\n\nconst OrderReceived = props => {\n  const router = useRouter();\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_ORDERS);\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Loading...'\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message\n    });\n  }\n\n  ;\n  const ids = data.getUserOrders.map(el => el.id);\n  const index = ids.indexOf(router.query.itemId);\n  const myOrder = data.getUserOrders[index];\n\n  const printHandler = () => {\n    if (false) {\n      window.print();\n    }\n  };\n\n  return __jsx(OrderReceivedWrapper, null, __jsx(OrderReceivedContainer, null, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    className: \"home-btn\"\n  }, __jsx(FormattedMessage, {\n    id: \"backHomeBtn\",\n    defaultMessage: \"Back to Home\"\n  }))), __jsx(\"span\", {\n    onClick: printHandler,\n    className: \"print-btn\"\n  }, \"Print Invoice\"), __jsx(OrderInfo, null, __jsx(BlockTitle, null, __jsx(FormattedMessage, {\n    id: \"orderReceivedText\",\n    defaultMessage: \"Order\"\n  })), __jsx(InfoBlockWrapper, null, __jsx(InfoBlock, null, __jsx(Text, {\n    bold: true,\n    className: \"title\"\n  }, __jsx(FormattedMessage, {\n    id: \"orderNumberText\",\n    defaultMessage: \"Order Number\"\n  })), __jsx(Text, null, myOrder.order_code)), __jsx(InfoBlock, null, __jsx(Text, {\n    bold: true,\n    className: \"title\"\n  }, __jsx(FormattedMessage, {\n    id: \"orderDateText\",\n    defaultMessage: \"Date\"\n  })), __jsx(Text, null, myOrder.datetime.split('2020').shift())), __jsx(InfoBlock, null, __jsx(Text, {\n    bold: true,\n    className: \"title\"\n  }, __jsx(FormattedMessage, {\n    id: \"totalText\",\n    defaultMessage: \"Total\"\n  })), __jsx(Text, null, myOrder.total)), __jsx(InfoBlock, null, __jsx(Text, {\n    bold: true,\n    className: \"title\"\n  }, __jsx(FormattedMessage, {\n    id: \"paymenMethodText\",\n    defaultMessage: \"Payment Method\"\n  })), __jsx(Text, null, __jsx(FormattedMessage, {\n    id: \"paymentMethodName\",\n    defaultMessage: myOrder.payment_method\n  }))))), __jsx(OrderDetails, null, __jsx(BlockTitle, null, __jsx(FormattedMessage, {\n    id: \"orderDetailsText\",\n    defaultMessage: \"Order Details\"\n  })), __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, {\n    bold: true\n  }, __jsx(FormattedMessage, {\n    id: \"totalItemText\",\n    defaultMessage: \"Total Item\"\n  }))), __jsx(ListDes, null, __jsx(Text, null, \"6 Items\"))), __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, {\n    bold: true\n  }, __jsx(FormattedMessage, {\n    id: \"orderTimeText\",\n    defaultMessage: \"Order Method\"\n  }))), __jsx(ListDes, null, __jsx(Text, null, myOrder.delivery_method.details))), __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, {\n    bold: true\n  }, __jsx(FormattedMessage, {\n    id: \"deliveryLocationText\",\n    defaultMessage: \"Delivery Location\"\n  }))), __jsx(ListDes, null, __jsx(Text, null, myOrder.delivery_address)))), __jsx(TotalAmount, null, __jsx(BlockTitle, null, __jsx(FormattedMessage, {\n    id: \"totalAmountText\",\n    defaultMessage: \"Total Amount\"\n  })), __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, {\n    bold: true\n  }, __jsx(FormattedMessage, {\n    id: \"subTotal\",\n    defaultMessage: \"Sub total\"\n  }))), __jsx(ListDes, null, __jsx(Text, null, myOrder.sub_total))), __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, {\n    bold: true\n  }, __jsx(FormattedMessage, {\n    id: \"paymenMethodText\",\n    defaultMessage: \"Payment Method\"\n  }))), __jsx(ListDes, null, __jsx(Text, null, myOrder.payment_method))), __jsx(ListItem, null, __jsx(ListTitle, null, __jsx(Text, {\n    bold: true\n  }, __jsx(FormattedMessage, {\n    id: \"totalText\",\n    defaultMessage: \"Total\"\n  }))), __jsx(ListDes, null, __jsx(Text, null, myOrder.total))))));\n};\n\nexport default OrderReceived;","map":null,"metadata":{},"sourceType":"module"}