{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport { useIntl } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport DeliverySelection from 'features/delivery-selection/delivery-selection';\nimport { BannerIcon, BannerText, DeliveryText, LocationContent, SubHeaderWrapper } from './sub-header.style';\n\nconst LocationMenu = ({\n  deliveryMethodSelected,\n  isOpen\n}) => {\n  var _deliveryMethodSelect, _deliveryMethodSelect2, _deliveryMethodSelect3, _deliveryMethodSelect4, _deliveryMethodSelect5, _deliveryMethodSelect6, _deliveryMethodSelect7, _deliveryMethodSelect8, _deliveryMethodSelect9;\n\n  const mobile = useMedia('(max-width: 580px)');\n  const address = mobile ? deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : (_deliveryMethodSelect = deliveryMethodSelected.details) === null || _deliveryMethodSelect === void 0 ? void 0 : (_deliveryMethodSelect2 = _deliveryMethodSelect.split('|')) === null || _deliveryMethodSelect2 === void 0 ? void 0 : _deliveryMethodSelect2[0].substring(0, deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : (_deliveryMethodSelect3 = deliveryMethodSelected.details) === null || _deliveryMethodSelect3 === void 0 ? void 0 : (_deliveryMethodSelect4 = _deliveryMethodSelect3.split('|')) === null || _deliveryMethodSelect4 === void 0 ? void 0 : (_deliveryMethodSelect5 = _deliveryMethodSelect4[0]) === null || _deliveryMethodSelect5 === void 0 ? void 0 : _deliveryMethodSelect5.lengtha) : deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : (_deliveryMethodSelect6 = deliveryMethodSelected.details) === null || _deliveryMethodSelect6 === void 0 ? void 0 : (_deliveryMethodSelect7 = _deliveryMethodSelect6.split('|')) === null || _deliveryMethodSelect7 === void 0 ? void 0 : _deliveryMethodSelect7[0];\n  const time = deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : (_deliveryMethodSelect8 = deliveryMethodSelected.details) === null || _deliveryMethodSelect8 === void 0 ? void 0 : (_deliveryMethodSelect9 = _deliveryMethodSelect8.split('|')) === null || _deliveryMethodSelect9 === void 0 ? void 0 : _deliveryMethodSelect9[1];\n  const intl = useIntl();\n  const defaultText = intl.formatMessage({\n    id: 'defaultDeliveryPickupText',\n    defaultMessage: 'check here'\n  });\n  return __jsx(LocationContent, null, isOpen ? __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleDown,\n    className: \"fas fa-chevron-down\",\n    style: {\n      color: \"black\"\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleUp,\n    className: \"fas fa-chevron-up\",\n    style: {\n      color: \"black\"\n    }\n  }), __jsx(DeliveryText, null, deliveryMethodSelected ? (deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.isPickUp) ? DeliveryMethodsConstants.PICKUP : DeliveryMethodsConstants.DELIVERY : defaultText), (deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.name) && address && __jsx(React.Fragment, null, \"|\", __jsx(BannerIcon, null, __jsx(\"img\", {\n    src: DeliveryIcon,\n    alt: \"\"\n  })), __jsx(BannerText, null, `${deliveryMethodSelected.name} - ${address}`)));\n};\n\nconst SubHeader = (_ref) => {\n  let props = Object.assign({}, _ref);\n  const [deliveryMethodSelected, setDeliveryMethodSaved] = React.useState(); // useEffect(() => {\n  //   // if (getCookie(deliveryMethodCookieKeyName) && !deliveryMethodSelected) {\n  //   //   const deliveryMethodSelected = JSON.parse(getCookie(deliveryMethodCookieKeyName));\n  //   //   setDeliveryMethodSaved(deliveryMethodSelected)\n  //   // }\n  //   console.log('window.location.href.split(\"?\").pop()',window.location.href.split(\"?\").pop())\n  //   if (window.location.href.split(\"?\").pop()) {\n  //     handlePhoneChange(window.location.href.split(\"?\").pop())\n  //   }\n  // }, []);\n\n  return __jsx(SubHeaderWrapper, {\n    className: props.className,\n    id: \"layout-header\"\n  }, __jsx(PopoverBigger, {\n    direction: \"left\",\n    className: \"user-pages-dropdown\",\n    openHandler: __jsx(LocationMenu, {\n      isOpen: false,\n      deliveryMethodSelected: deliveryMethodSelected\n    }),\n    closeHandler: __jsx(LocationMenu, {\n      isOpen: true,\n      deliveryMethodSelected: deliveryMethodSelected\n    }),\n    content: __jsx(DeliverySelection, {\n      deliveryMethodSelected: deliveryMethodSelected,\n      setDeliveryMethodSaved: setDeliveryMethodSaved\n    })\n  }));\n};\n\nexport default SubHeader;","map":null,"metadata":{},"sourceType":"module"}