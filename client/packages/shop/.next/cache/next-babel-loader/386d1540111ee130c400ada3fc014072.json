{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two-sections/delivery-selection.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { ActionButton, ActionsButtons, BannerIcon, Button, ButtonGroup, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Options, Wrapper } from './delivery-selection.style';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { Plus } from 'assets/icons/PlusMinus';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport { IconWrapper } from '../checkout-two/checkout-two.style';\n\nvar DeliverySelection = function DeliverySelection(_ref) {\n  _s();\n\n  var props = _extends({}, _ref);\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      deliveryMethodSelected = _React$useState2[0],\n      setDeliveryMethodSelected = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      zipCode = _React$useState4[0],\n      setZipCode = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      searchResult = _React$useState6[0],\n      setSearchResult = _React$useState6[1];\n\n  var _useState = useState(\"\"),\n      deliveryAddress = _useState[0],\n      setDeliveryAddress = _useState[1];\n\n  var _useState2 = useState(false),\n      notInsideDeliveryAreas = _useState2[0],\n      setNotInsideDeliveryAreas = _useState2[1];\n\n  var setDeliveryMethodAndSaveCookie = function setDeliveryMethodAndSaveCookie(deliveryOrPickupMethodSelected) {\n    var deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : _objectSpread(_objectSpread({}, deliveryOrPickupMethodSelected), {}, {\n      deliveryAddress: deliveryAddress\n    });\n    setDeliveryMethodSelected(deliveryMethod);\n    props.setDeliveryAddress(deliveryMethod, false); // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n    // }\n  };\n\n  function inside(point, vs) {\n    var x = point[0],\n        y = point[1];\n    var inside = false;\n\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0],\n          yi = vs[i][1];\n      var xj = vs[j][0],\n          yj = vs[j][1];\n      var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  ;\n\n  var searchPickupZipCode = function searchPickupZipCode(e) {\n    var _props$deliveryMethod;\n\n    var zipCode = e.target.value;\n    handleOnFocus(e);\n    setZipCode(zipCode);\n    var pickUpOptionsMethods = (_props$deliveryMethod = props.deliveryMethods) === null || _props$deliveryMethod === void 0 ? void 0 : _props$deliveryMethod.filter(function (deliveryMethod) {\n      return deliveryMethod.isPickUp === true;\n    }); // const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode)\n\n    var methodFound = zipCode === resistenciaZipCode ? pickUpOptionsMethods : []; // e.stopPropagation();\n\n    props.setDeliveryMethodsSelected(methodFound.length > 0 ? methodFound : null);\n  };\n\n  var setDelivery = function setDelivery(e, deli) {\n    e.stopPropagation();\n    props.setDeliveryMethodType(deli);\n    props.setDeliveryMethodsSelected(null);\n    setZipCode('');\n  };\n\n  var deleteDeliveryAddress = function deleteDeliveryAddress() {\n    props.setDeliveryMethodsSelected(null);\n    setDeliveryAddress('');\n    setNotInsideDeliveryAreas(false);\n  };\n\n  var handleOnFocus = function handleOnFocus(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }; // deliveryMethodSelected\n\n\n  var isPickUpSelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  var isDeliverySelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  var intl = useIntl();\n\n  var handleSelect = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n      var results, latLng, deliveryOptionsMethods, _props$deliveryMethod2, _props$deliveryMethod3, _props$deliveryMethod4, _props$deliveryMethod5;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDeliveryAddress(address);\n              _context.next = 3;\n              return geocodeByAddress(address);\n\n            case 3:\n              results = _context.sent;\n              _context.next = 6;\n              return getLatLng(results[0]);\n\n            case 6:\n              latLng = _context.sent;\n              setNotInsideDeliveryAreas(false);\n              deliveryOptionsMethods = [];\n\n              if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n                deliveryOptionsMethods = (_props$deliveryMethod2 = props.deliveryMethods) === null || _props$deliveryMethod2 === void 0 ? void 0 : _props$deliveryMethod2.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) {\n                    deliveryMethod.name = 'GRATIS';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n                deliveryOptionsMethods = (_props$deliveryMethod3 = props.deliveryMethods) === null || _props$deliveryMethod3 === void 0 ? void 0 : _props$deliveryMethod3.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) {\n                    deliveryMethod.name = 'GRATIS';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n                deliveryOptionsMethods = (_props$deliveryMethod4 = props.deliveryMethods) === null || _props$deliveryMethod4 === void 0 ? void 0 : _props$deliveryMethod4.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) {\n                    deliveryMethod.name = 'GRATIS';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n                deliveryOptionsMethods = (_props$deliveryMethod5 = props.deliveryMethods) === null || _props$deliveryMethod5 === void 0 ? void 0 : _props$deliveryMethod5.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) {\n                    deliveryMethod.name = 'GRATIS';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else {\n                setNotInsideDeliveryAreas(true);\n                console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n              }\n\n              props.setDeliveryMethodsSelected(deliveryOptionsMethods);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSelect(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var selectedAddress = props.submitResult.delivery_address && props.submitResult.delivery_address.find(function (item) {\n    return item.is_primary === true;\n  });\n  return __jsx(React.Fragment, null, props.deliveryMethodSaved ? __jsx(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, __jsx(RadioGroupThree, {\n    items: [props.deliveryMethodSaved],\n    component: function component(item, index) {\n      return __jsx(RadioCardTWO, {\n        id: index,\n        key: index,\n        address: item.address,\n        instructions: item.instructions,\n        location: item.location,\n        title: item.title,\n        name: \"address\",\n        isChecked: item.is_primary === true // onChange={() =>handlePrimary(item, 'address')}\n        // onEdit={() => handleEditDelete(item, index, 'edit', 'address')}\n        // onDelete={() =>\n        //   handleEditDelete(item, index, 'delete', 'address')\n        // }\n        ,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      });\n    },\n    secondaryComponent: props.deliveryMethodSaved ? __jsx(Button, {\n      className: \"changeButton\",\n      variant: \"text\",\n      type: \"button\",\n      onClick: props.setDeliveryAddress(null),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, __jsx(IconWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, __jsx(Plus, {\n      width: \"10px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    })), __jsx(FormattedMessage, {\n      id: \"changeDeliveryMethod\",\n      defaultMessage: \"changeDeliveryMethod\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    })) : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })) : __jsx(DeliveryMethods, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, __jsx(Options, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, __jsx(CardWrapper, {\n    color: isPickUpSelected ? '#009E7F' : '#e4f4fc',\n    onClick: function onClick(e) {\n      return setDelivery(e, DeliveryMethodsConstants.PICKUP);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"pickUpId\",\n    defaultMessage: \"notFoundId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 142\n    }\n  })), __jsx(CardWrapper, {\n    color: isDeliverySelected ? '#009E7F' : '#e4f4fc',\n    onClick: function onClick(e) {\n      return setDelivery(e, DeliveryMethodsConstants.DELIVERY);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"deliveryId\",\n    defaultMessage: \"notFoundId2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 146\n    }\n  }))), __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, !!props.deliveryMethodTypeSelected && __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, __jsx(Heading, {\n    onClick: function onClick(e) {\n      return handleOnFocus(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }, isPickUpSelected ? __jsx(FormattedMessage, {\n    id: \"pickupModalheading\",\n    defaultMessage: \"pickupModalheading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 23\n    }\n  }) : __jsx(FormattedMessage, {\n    id: \"deliveryModalheading\",\n    defaultMessage: \"deliveryModalheading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  })), isPickUpSelected ? __jsx(\"div\", {\n    onClick: function onClick(e) {\n      return handleOnFocus(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 23\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    onFocus: function onFocus(e) {\n      return handleOnFocus(e);\n    } // placeholder='Código postal'\n    ,\n    value: zipCode,\n    autoComplete: \"off\" // we have to change the onChange because the is no one for the controller name actualy\n    ,\n    onChange: function onChange(e) {\n      return searchPickupZipCode(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  })) : __jsx(PlacesAutocomplete, {\n    value: deliveryAddressA,\n    onChange: function onChange(e) {\n      return setDeliveryAddress(e);\n    },\n    onSelect: handleSelect,\n    searchOptions: {\n      types: [],\n      componentRestrictions: {\n        country: \"ar\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }, function (_ref3) {\n    var getInputProps = _ref3.getInputProps,\n        suggestions = _ref3.suggestions,\n        getSuggestionItemProps = _ref3.getSuggestionItemProps,\n        loading = _ref3.loading;\n    return __jsx(\"div\", {\n      onClick: function onClick(e) {\n        return handleOnFocus(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 27\n      }\n    }, __jsx(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: '0px 0px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    }, __jsx(\"input\", _extends({}, getInputProps({\n      placeholder: \"Calle, altura, localidad\",\n      className: \"location-search-input\",\n      style: {\n        width: '220px',\n        padding: '0px 8px',\n        appearance: 'none',\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '15',\n        lineHeight: 'inherit',\n        border: '1px solid',\n        borderColor: '#f7f7f7',\n        borderRadius: '6px',\n        backgroundColor: '#f7f7f7',\n        color: '#0D1136',\n        height: '48px',\n        transition: 'all 0.25s ease',\n        // mb: 3,\n        '&:hover,&:focus': {\n          outline: 0,\n          borderColor: '#009e7f'\n        }\n      }\n    }), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 31\n      }\n    })), (deliveryAddress === null || deliveryAddress === void 0 ? void 0 : deliveryAddress.length) ? __jsx(ActionsButtons, {\n      className: \"button-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 33\n      }\n    }, __jsx(ActionButton, {\n      onClick: function onClick() {\n        return deleteDeliveryAddress();\n      },\n      className: \"delete-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 37\n      }\n    }, __jsx(CloseIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 41\n      }\n    }))) : ''), __jsx(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 29\n      }\n    }, loading && __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 43\n      }\n    }, \"Loading...\"), suggestions.map(function (suggestion) {\n      var _suggestion$descripti, _suggestion$descripti2;\n\n      var style = suggestion.active ? {\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\",\n        borderBottom: \"1px solid gray\",\n        justifyContent: \"flex-start\",\n        display: 'flex',\n        maxWidth: '320px'\n      } : {\n        backgroundColor: \"#ffffff\",\n        cursor: \"pointer\",\n        borderBottom: \"1px solid gray\",\n        justifyContent: \"flex-start\",\n        display: 'flex',\n        maxWidth: '320px',\n        alignItems: \"center\"\n      };\n      return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n        style: style\n      }), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 35\n        }\n      }), __jsx(BannerIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 37\n        }\n      }, __jsx(\"img\", {\n        src: DeliveryIcon,\n        alt: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 49\n        }\n      })), (_suggestion$descripti = suggestion.description) === null || _suggestion$descripti === void 0 ? void 0 : _suggestion$descripti.split(\",\")[0], (_suggestion$descripti2 = suggestion.description) === null || _suggestion$descripti2 === void 0 ? void 0 : _suggestion$descripti2.split(\",\")[1]);\n    })));\n  }), !props.deliveryMethodsSelected && zipCode.length >= 4 && props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP && __jsx(DeliveryText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 23\n    }\n  }, intl.formatMessage({\n    id: 'noDittoPickUpLocations',\n    defaultMessage: 'noDittoPickUpLocations'\n  })), notInsideDeliveryAreas && __jsx(DeliveryText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 23\n    }\n  }, intl.formatMessage({\n    id: 'noDeliveryThereYet',\n    defaultMessage: 'noDeliveryThereYet'\n  }))))), props.userSavedAddresses && props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY && __jsx(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, \"o selecciona una direccion\", __jsx(RadioGroupThree, {\n    items: props.userSavedAddresses,\n    component: function component(item, index) {\n      var _props$deliveryMethod6;\n\n      return __jsx(RadioCardTWO, {\n        id: index,\n        key: index,\n        address: item.address,\n        location: item.location,\n        instructions: item.instructions,\n        title: item.title,\n        name: \"address\",\n        isChecked: item.id === ((_props$deliveryMethod6 = props.deliveryMethodSaved) === null || _props$deliveryMethod6 === void 0 ? void 0 : _props$deliveryMethod6.id),\n        onClick: function onClick() {\n          var _item$address, _item$address2;\n\n          props.setSubmitResult(_objectSpread(_objectSpread({}, props.submitResult), {}, {\n            delivery_address: \"\".concat(item.title, \" -\\n                      \").concat((_item$address = item.address) === null || _item$address === void 0 ? void 0 : _item$address.split(\",\")[0], \" \").concat((_item$address2 = item.address) === null || _item$address2 === void 0 ? void 0 : _item$address2.split(\",\")[1], \", \").concat(item.location, \", \").concat(item.instructions, \"\\n                      \"),\n            products: props.cartProduct\n          }));\n          props.setDeliveryAddress(item, false);\n        } // onEdit={() => handleEditDelete(item, index, 'edit', 'address')}\n        // onDelete={() =>\n        //   handleEditDelete(item, index, 'delete', 'address')\n        // }\n        ,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 19\n        }\n      });\n    },\n    secondaryComponent: selectedAddress ? null : __jsx(Button, {\n      className: \"addButton\",\n      variant: \"text\",\n      type: \"button\",\n      onClick: function onClick() {\n        return props.setDeliveryAddress(null);\n      } // onClick={() =>\n      //   handleModal(UpdateAddressTwo,\n      //     {\n      //       item:{ address: props.deliveryMethodSaved?.deliveryAddress },\n      //       id\n      //     },\n      //     'add-address-modal')\n      // }\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 18\n      }\n    }, __jsx(IconWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }\n    }, __jsx(Plus, {\n      width: \"10px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 19\n      }\n    })), __jsx(FormattedMessage, {\n      id: \"completeAddress\",\n      defaultMessage: \"Add New\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  })));\n};\n\n_s(DeliverySelection, \"OfEJ8vl/2Mt3JV7a1pvzZ96DnCQ=\", false, function () {\n  return [useIntl];\n});\n\n_c = DeliverySelection;\nexport default DeliverySelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliverySelection\");","map":{"version":3,"sources":["/Users/virginiamuruzabal/work/ditto/client/packages/shop/src/features/checkouts/checkout-two-sections/delivery-selection.tsx"],"names":["React","useState","FormattedMessage","useIntl","DeliveryMethodsConstants","plazaBelgranoPolygon","plazaEspañaPolygon","plazaNueveDeJulioPolygon","plazadoceDeOctubrePolygon","resistenciaZipCode","CloseIcon","ActionButton","ActionsButtons","BannerIcon","Button","ButtonGroup","CardWrapper","Container","DeliveryMethods","DeliveryText","Heading","Input","Options","Wrapper","PlacesAutocomplete","geocodeByAddress","getLatLng","DeliveryIcon","Plus","RadioCardTWO","RadioGroupThree","IconWrapper","DeliverySelection","props","undefined","deliveryMethodSelected","setDeliveryMethodSelected","zipCode","setZipCode","searchResult","setSearchResult","deliveryAddress","setDeliveryAddress","notInsideDeliveryAreas","setNotInsideDeliveryAreas","setDeliveryMethodAndSaveCookie","deliveryOrPickupMethodSelected","deliveryMethod","isPickUpSelected","inside","point","vs","x","y","i","j","length","xi","yi","xj","yj","intersect","searchPickupZipCode","e","target","value","handleOnFocus","pickUpOptionsMethods","deliveryMethods","filter","isPickUp","methodFound","setDeliveryMethodsSelected","setDelivery","deli","stopPropagation","setDeliveryMethodType","deleteDeliveryAddress","event","preventDefault","deliveryMethodTypeSelected","PICKUP","isDeliverySelected","DELIVERY","intl","handleSelect","address","results","latLng","deliveryOptionsMethods","lat","lng","details","includes","name","console","log","selectedAddress","submitResult","delivery_address","find","item","is_primary","deliveryMethodSaved","index","instructions","location","title","deliveryAddressA","types","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","loading","width","display","justifyContent","flexDirection","alignItems","padding","placeholder","className","style","appearance","fontFamily","fontSize","lineHeight","border","borderColor","borderRadius","backgroundColor","color","height","transition","outline","map","suggestion","active","cursor","borderBottom","maxWidth","description","split","deliveryMethodsSelected","formatMessage","id","defaultMessage","userSavedAddresses","setSubmitResult","products","cartProduct"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, deliveryMethodCookieKeyName, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport { ActionButton, ActionsButtons, BannerIcon, Button, ButtonGroup, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Offer, OfferSection, Options, PickUpOptions, Wrapper } from './delivery-selection.style';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { alignContent, borderRadius, display, flexDirection, justifyContent, textAlign, width } from 'styled-system';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { ADD_ADDRESS } from 'graphql/mutation/address';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { Plus } from 'assets/icons/PlusMinus';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport RadioGroupTwo from 'components/radio-group/radio-group-two';\nimport { IconWrapper } from '../checkout-two/checkout-two.style';\n\n\ninterface Props {\n  deliveryMethodSaved: any\n  setDeliveryAddress: any\n  deliveryMethodTypeSelected: any\n  setDeliveryMethodsSelected: any\n  deliveryMethodsSelected: any\n  setDeliveryMethodType: any\n  deliveryMethods: any\n  setSubmitResult: (result: any) => void\n  submitResult: any\n  cartProduct: any // Added this line\n  userSavedAddresses?: any // Added this line\n}\n\nconst DeliverySelection: React.FC<Props> = ({ ...props  }) => {\n\n  const [deliveryMethodSelected, setDeliveryMethodSelected] = React.useState(undefined);\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n  const [notInsideDeliveryAreas, setNotInsideDeliveryAreas] = useState(false);\n\n  const setDeliveryMethodAndSaveCookie =  (deliveryOrPickupMethodSelected) => {\n    const deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : {...deliveryOrPickupMethodSelected, deliveryAddress};\n    setDeliveryMethodSelected(deliveryMethod)\n    props.setDeliveryAddress(deliveryMethod, false)\n\n    // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n    // }\n  };\n\n  function inside(point, vs) {\n    var x = point[0], y = point[1];\n    \n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0], yi = vs[i][1];\n        var xj = vs[j][0], yj = vs[j][1];\n        \n        var intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    \n    return inside;\n};\n\n  const searchPickupZipCode =  (e) => {\n    const zipCode = e.target.value;\n    handleOnFocus(e)\n    setZipCode(zipCode)\n    const pickUpOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n\n    // const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode)\n    const methodFound = zipCode === resistenciaZipCode ? pickUpOptionsMethods : [];\n\n    // e.stopPropagation();\n\n    props.setDeliveryMethodsSelected(methodFound.length > 0 ? methodFound : null)\n\n  };\n\n  const setDelivery =  (e, deli: DeliveryMethodsConstants) => {\n    e.stopPropagation();\n    props.setDeliveryMethodType(deli)\n    props.setDeliveryMethodsSelected(null)\n    setZipCode('')\n  };\n\n  const deleteDeliveryAddress =  () => {\n    props.setDeliveryMethodsSelected(null)\n    setDeliveryAddress('')\n    setNotInsideDeliveryAreas(false)\n  };\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  // deliveryMethodSelected\n  const isPickUpSelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  const intl = useIntl();\n\n  const handleSelect = async (address) => {\n    setDeliveryAddress(address);\n    const results = await geocodeByAddress(address);\n    const latLng = await getLatLng(results[0]);\n    setNotInsideDeliveryAreas(false);\n    let deliveryOptionsMethods = [];\n\n    if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n      deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n      deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n        deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n          if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) { deliveryMethod.name = 'GRATIS'; return true;}\n          return !deliveryMethod.isPickUp;\n        });\n    } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n      deliveryOptionsMethods = props.deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) { deliveryMethod.name = 'GRATIS'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n    } else {\n      setNotInsideDeliveryAreas(true);\n      console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n    }\n    props.setDeliveryMethodsSelected(deliveryOptionsMethods)\n  };\n    \n  const selectedAddress = props.submitResult.delivery_address && props.submitResult.delivery_address.find(\n    (item) => item.is_primary === true\n  );\n\n  return (\n      <>\n        { props.deliveryMethodSaved ? (\n            <ButtonGroup>\n            <RadioGroupThree\n              items={[props.deliveryMethodSaved]}\n              component={(item: any, index: any) => (\n                <RadioCardTWO \n                  id={index}\n                  key={index}\n                  address={item.address}\n                  instructions={item.instructions}\n                  location={item.location}\n                  title={item.title}\n                  name='address'\n                  isChecked={item.is_primary === true}\n                  // onChange={() =>handlePrimary(item, 'address')}\n                  // onEdit={() => handleEditDelete(item, index, 'edit', 'address')}\n                  // onDelete={() =>\n                  //   handleEditDelete(item, index, 'delete', 'address')\n                  // }\n                />\n              )}\n              secondaryComponent={ props.deliveryMethodSaved ? (\n              <Button\n                className='changeButton'\n                variant='text'\n                type='button'\n                onClick={props.setDeliveryAddress(null)}\n              >\n                <IconWrapper>\n                    <Plus width='10px' />\n                  </IconWrapper>\n                <FormattedMessage id='changeDeliveryMethod' defaultMessage='changeDeliveryMethod' />\n              </Button>\n              ) : (null)\n              }\n            />\n          </ButtonGroup>\n        ) : (\n          <DeliveryMethods>\n          <Options>\n              <CardWrapper color={isPickUpSelected ? '#009E7F' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.PICKUP)}><FormattedMessage id=\"pickUpId\" defaultMessage=\"notFoundId\" /></CardWrapper> \n              <CardWrapper color={isDeliverySelected ? '#009E7F' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.DELIVERY)}><FormattedMessage id=\"deliveryId\" defaultMessage=\"notFoundId2\" /></CardWrapper> \n          </Options>\n          <Wrapper>\n          \n              { !!props.deliveryMethodTypeSelected && (\n                <Container>\n                  <Heading  onClick={(e) => handleOnFocus(e)}>\n                      { isPickUpSelected ? (\n                      <FormattedMessage\n                          id=\"pickupModalheading\"\n                          defaultMessage=\"pickupModalheading\"\n                      />\n                      ) : (\n                      <FormattedMessage\n                          id=\"deliveryModalheading\"\n                          defaultMessage=\"deliveryModalheading\"\n                      />\n                      )}\n                    </Heading>\n                    { isPickUpSelected ? (\n                      <div onClick={(e) => handleOnFocus(e)}>\n                        <Input\n                            type='text'\n                            name='name'\n                            onFocus={(e) => handleOnFocus(e)}\n                            // placeholder='Código postal'\n                            value={zipCode}\n                            autoComplete=\"off\"\n                            // we have to change the onChange because the is no one for the controller name actualy\n                            onChange={(e) => searchPickupZipCode(e)}\n                        />\n                      </div>\n                      ) : (\n                      <PlacesAutocomplete\n                        value={deliveryAddressA}\n                        onChange={(e) => setDeliveryAddress(e)}\n                        onSelect={handleSelect}\n                        searchOptions={{\n                          types: [],\n                          componentRestrictions: { country: \"ar\" },\n                        }}\n                      >\n                        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                          <div onClick={(e) => handleOnFocus(e)} >\n                            <div style={{ width: '100%',\n                              display: 'flex',\n                              justifyContent: 'center',\n                              flexDirection: 'row',\n                              alignItems: 'center',\n                              padding: '0px 0px',}}>\n                              <input\n                                {...getInputProps({\n                                  placeholder: \"Calle, altura, localidad\",\n                                  className: \"location-search-input\",\n                                  style: {\n                                    width: '220px',\n                                    padding:'0px 8px',\n                                    appearance: 'none',\n                                    fontFamily: `'Lato', sans-serif`,\n                                    fontSize: '15',\n                                    lineHeight: 'inherit',\n                                    border: '1px solid',\n                                    borderColor: '#f7f7f7',\n                                    borderRadius: '6px',\n                                    backgroundColor: '#f7f7f7',\n                                    color: '#0D1136',\n                                    height: '48px',\n                                    transition: 'all 0.25s ease',\n                                    // mb: 3,\n                                    '&:hover,&:focus': {\n                                      outline: 0,\n                                      borderColor: '#009e7f',\n                                    },\n                                  },\n                                })}\n                              />{ deliveryAddress?.length ? (\n                                <ActionsButtons className='button-wrapper'>\n                                    <ActionButton onClick={() => deleteDeliveryAddress()} className='delete-btn'>\n                                        <CloseIcon />\n                                    </ActionButton>\n                                </ActionsButtons>\n                              ): ''}\n                            </div>\n                            <div className=\"autocomplete-dropdown-container\">\n                              {loading && <div>Loading...</div>}\n                              {suggestions.map((suggestion) => {\n                                const style = suggestion.active\n                                  ? { backgroundColor: \"#fafafa\", cursor: \"pointer\", borderBottom: \"1px solid gray\",justifyContent: \"flex-start\", display: 'flex', maxWidth: '320px' }\n                                  : { backgroundColor: \"#ffffff\", cursor: \"pointer\", borderBottom: \"1px solid gray\",justifyContent: \"flex-start\", display: 'flex', maxWidth: '320px', alignItems: \"center\" };\n                                return (\n                                  <div {...getSuggestionItemProps(suggestion, { style })}>\n                                    <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>{suggestion.description?.split(\",\")[0]}{suggestion.description?.split(\",\")[1]}\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          </div>\n                        )}\n                      </PlacesAutocomplete>\n                      )}\n                    { !props.deliveryMethodsSelected && zipCode.length >= 4 && props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP && (\n                      <DeliveryText>{intl.formatMessage({ id: 'noDittoPickUpLocations', defaultMessage: 'noDittoPickUpLocations' })}</DeliveryText>\n                    )}\n                    {notInsideDeliveryAreas && (\n                      <DeliveryText>{intl.formatMessage({ id: 'noDeliveryThereYet', defaultMessage: 'noDeliveryThereYet' })}</DeliveryText>\n                    )}\n                </Container>\n              )}\n              {/* <OfferSection>\n              <GiftBox />\n              <Offer>\n                  <FormattedMessage\n                  id=\"locationModalFooter\"\n                  defaultMessage=\"Free Delivery For 1st Order\"\n                  values={{ number: 1 }}\n                  />\n              </Offer>\n              </OfferSection> */}\n          </Wrapper>\n      </DeliveryMethods>\n\n        )}\n    \n        { props.userSavedAddresses && props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY && (\n          <ButtonGroup>\n            {\"o selecciona una direccion\"}\n            <RadioGroupThree\n              items={props.userSavedAddresses}\n                component={(item: any, index: any) => (\n                  <RadioCardTWO\n                    id={index}\n                    key={index}\n                    address={item.address}\n                    location={item.location}\n                    instructions={item.instructions}\n                    title={item.title}\n                    name='address'\n                    isChecked={item.id === props.deliveryMethodSaved?.id}\n                    onClick={() => {props.setSubmitResult({\n                      ...props.submitResult,\n                      delivery_address:  `${item.title} -\n                      ${item.address?.split(\",\")[0]} ${item.address?.split(\",\")[1]}, ${item.location}, ${item.instructions}\n                      `,\n                      products: props.cartProduct\n                    }); props.setDeliveryAddress(item, false);}}\n                    // onEdit={() => handleEditDelete(item, index, 'edit', 'address')}\n                    // onDelete={() =>\n                    //   handleEditDelete(item, index, 'delete', 'address')\n                    // }\n                  />\n                )}\n              secondaryComponent={ selectedAddress ? null :\n                (<Button\n                className='addButton'\n                variant='text'\n                type='button'\n                onClick={() => props.setDeliveryAddress(null)}\n                // onClick={() =>\n                //   handleModal(UpdateAddressTwo,\n                //     {\n                //       item:{ address: props.deliveryMethodSaved?.deliveryAddress },\n                //       id\n                //     },\n                //     'add-address-modal')\n                // }\n              >\n                <IconWrapper>\n                  <Plus width='10px' />\n                </IconWrapper>\n                <FormattedMessage id='completeAddress' defaultMessage='Add New' />\n              </Button>)\n              }\n            />\n          </ButtonGroup>\n        )}\n        \n      </>\n    );\n\n};\n\nexport default DeliverySelection;\n\n"]},"metadata":{},"sourceType":"module"}