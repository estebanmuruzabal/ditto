{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/layouts/app-layout.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport Sticky from 'react-stickynode';\nimport { useAppState } from 'contexts/app/app.provider';\nimport Header from './header/header';\nimport { LayoutWrapper } from './layout.style';\nimport { GET_TYPE } from 'graphql/query/type.query';\nimport ErrorMessage from 'components/error-message/error-message';\nconst MobileHeader = dynamic(() => import('./header/mobile-header'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./header/mobile-header')],\n    modules: ['./header/mobile-header']\n  }\n});\n\nconst Layout = ({\n  className,\n  children,\n  // deviceType: { mobile, tablet, desktop },\n  token\n}) => {\n  const isSticky = useAppState('isSticky');\n  const {\n    pathname,\n    query\n  } = useRouter();\n  const type = pathname === '/restaurant' ? 'restaurant' : query.type;\n  const newTypeArry = [];\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_TYPE, {\n    variables: {\n      searchText: ''\n    }\n  });\n\n  if (loading) {\n    return __jsx(ErrorMessage, {\n      message: 'Loading...',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    });\n  }\n\n  ;\n\n  if (error) {\n    return __jsx(ErrorMessage, {\n      message: error.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    });\n  }\n\n  ;\n\n  const isHomeHandler = (typedata, type) => {\n    if (typedata) {\n      typedata.types.items.map((item, index) => {\n        newTypeArry.push(item.slug);\n      });\n\n      if (newTypeArry.includes(`${type}`)) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return;\n    }\n  };\n\n  return __jsx(LayoutWrapper, {\n    className: `layoutWrapper ${className}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(Sticky, {\n    enabled: isSticky,\n    innerZ: 1001,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(MobileHeader, {\n    className: `${isSticky ? 'sticky' : 'unSticky'} ${isHomeHandler(data, type) ? 'home' : ''} desktop`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), __jsx(Header, {\n    className: `${isSticky && isHomeHandler(data, type) ? 'sticky' : 'unSticky'} ${isHomeHandler(data, type) ? 'home' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), children);\n};\n\nexport default Layout;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/layouts/app-layout.tsx"],"names":["React","dynamic","useRouter","useQuery","Sticky","useAppState","Header","LayoutWrapper","GET_TYPE","ErrorMessage","MobileHeader","ssr","Layout","className","children","token","isSticky","pathname","query","type","newTypeArry","data","error","loading","variables","searchText","message","isHomeHandler","typedata","types","items","map","item","index","push","slug","includes"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport Sticky from 'react-stickynode';\nimport { useAppState } from 'contexts/app/app.provider';\nimport Header from './header/header';\nimport { LayoutWrapper } from './layout.style';\nimport { isCategoryPage } from './is-home-page';\nimport { GET_TYPE } from 'graphql/query/type.query';\nimport ErrorMessage from 'components/error-message/error-message';\nconst MobileHeader = dynamic(() => import('./header/mobile-header'), {\n  ssr: false,\n});\n\ntype LayoutProps = {\n  className?: string;\n  token?: string;\n};\n\nconst Layout: React.FunctionComponent<LayoutProps> = ({\n  className,\n  children,\n  // deviceType: { mobile, tablet, desktop },\n  token,\n}) => {\n\n  const isSticky = useAppState('isSticky');\n  const { pathname, query } = useRouter();\n  const type = pathname === '/restaurant' ? 'restaurant' : query.type;\n\n  const newTypeArry = [];\n  const { data, error, loading } = useQuery(\n    GET_TYPE,\n    {\n      variables: {\n        searchText: ''\n      }\n    }\n  );\n\n\n  if (loading) {\n    return <ErrorMessage message={'Loading...'} />\n  };\n\n  if (error) {\n    return (\n      <ErrorMessage message={error.message} />\n    );\n  };\n\n\n  const isHomeHandler = (typedata: any, type: any) =>{\n    if(typedata){\n      typedata.types.items.map((item: any, index: any) => {\n        newTypeArry.push(item.slug)\n      })\n      if(newTypeArry.includes(`${type}`)){\n        return true;\n      }else{\n        return false;\n      }  \n    } else{\n      return;\n    }\n  }\n\n \n  return (\n    <LayoutWrapper className={`layoutWrapper ${className}`}>\n      <Sticky enabled={isSticky} innerZ={1001}>\n        <MobileHeader\n          className={`${isSticky ? 'sticky' : 'unSticky'} ${\n            isHomeHandler(data,type) ? 'home' : ''\n          } desktop`}\n        />\n\n        <Header\n          className={`${isSticky && isHomeHandler(data,type) ? 'sticky' : 'unSticky'} ${\n            isHomeHandler(data,type) ? 'home' : ''\n          }`}\n        />\n      </Sticky>\n      {children}\n    </LayoutWrapper>\n  );\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}