{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, plazaBelgranoPolygon, plazaEspañaPolygon, plazaNueveDeJulioPolygon, plazadoceDeOctubrePolygon, resistenciaZipCode } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { ActionButton, ActionsButtons, BannerIcon, CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Options, PickUpOptions, Wrapper } from './delivery-selection.style';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\n\nvar DeliverySelection = function DeliverySelection(_ref) {\n  var _deliverData$delivery;\n\n  var props = _extends({}, _ref);\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      deliveryMethodSelected = _React$useState2[0],\n      setDeliveryMethod = _React$useState2[1];\n\n  var _useQuery = useQuery(DELIVERY_METHOD),\n      deliverData = _useQuery.data;\n\n  var deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items;\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      zipCode = _React$useState4[0],\n      setZipCode = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      searchResult = _React$useState6[0],\n      setSearchResult = _React$useState6[1];\n\n  var _useState = useState(\"\"),\n      deliveryAddress = _useState[0],\n      setDeliveryAddress = _useState[1];\n\n  var _useState2 = useState(false),\n      notInsideDeliveryAreas = _useState2[0],\n      setNotInsideDeliveryAreas = _useState2[1];\n\n  var setDeliveryMethodAndSaveCookie = function setDeliveryMethodAndSaveCookie(deliveryOrPickupMethodSelected) {\n    var deliveryMethod = isPickUpSelected ? deliveryOrPickupMethodSelected : _objectSpread(_objectSpread({}, deliveryOrPickupMethodSelected), {}, {\n      deliveryAddress: deliveryAddress\n    });\n    setDeliveryMethod(deliveryMethod);\n    props.setDeliveryMethodSaved(deliveryMethod, false); // setCookie(deliveryMethodCookieKeyName, deliveryMethod);\n    // }\n  };\n\n  function inside(point, vs) {\n    var x = point[0],\n        y = point[1];\n    var inside = false;\n\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0],\n          yi = vs[i][1];\n      var xj = vs[j][0],\n          yj = vs[j][1];\n      var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  ;\n\n  var searchPickupZipCode = function searchPickupZipCode(e) {\n    var zipCode = e.target.value;\n    handleOnFocus(e);\n    setZipCode(zipCode);\n    var pickUpOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n      return deliveryMethod.isPickUp === true;\n    }); // const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode)\n\n    var methodFound = zipCode === resistenciaZipCode ? pickUpOptionsMethods : []; // e.stopPropagation();\n\n    setSearchResult(methodFound.length > 0 ? methodFound : null); // setSearchResult(pickUpOptionsMethods)\n  };\n\n  var setDelivery = function setDelivery(e, deli) {\n    // if (deli === DeliveryMethodsConstants.DELIVERY) {\n    //   setDeliveryMethodType(deli)\n    //   props.setDeliveryMethodSaved(DeliveryMethodsConstants.DELIVERY)\n    //   return;  \n    // }\n    e.stopPropagation();\n    props.setDeliveryMethodType(deli);\n    setSearchResult(null);\n    setZipCode('');\n  };\n\n  var deleteDeliveryAddress = function deleteDeliveryAddress() {\n    setSearchResult(null);\n    setDeliveryAddress('');\n    setNotInsideDeliveryAreas(false);\n  };\n\n  var handleOnFocus = function handleOnFocus(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }; // deliveryMethodSelected\n\n\n  var isPickUpSelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  var isDeliverySelected = props.deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  var intl = useIntl();\n\n  var handleSelect = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n      var results, latLng, deliveryOptionsMethods;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDeliveryAddress(address);\n              _context.next = 3;\n              return geocodeByAddress(address);\n\n            case 3:\n              results = _context.sent;\n              _context.next = 6;\n              return getLatLng(results[0]);\n\n            case 6:\n              latLng = _context.sent;\n              setNotInsideDeliveryAreas(false);\n              deliveryOptionsMethods = [];\n\n              if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n                deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) {\n                    deliveryMethod.name = 'GRATIS';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n                deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) {\n                    deliveryMethod.name = 'GRATIS';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n                deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) {\n                    deliveryMethod.name = 'GRATIS';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else if (inside([latLng.lat, latLng.lng], plazaEspañaPolygon)) {\n                deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) {\n                    deliveryMethod.name = 'GRATIS';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else {\n                setNotInsideDeliveryAreas(true);\n                console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n              }\n\n              setSearchResult(deliveryOptionsMethods);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSelect(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // const searchDeliveryZipCode =  (e) => {\n  //   handleOnFocus(e)\n  //   setZipCode(e.target.value)\n  //   const methodFound = deliveryOptionsMethods.filter(method => method.name.includes(zipCode));\n  //   e.stopPropagation();\n  //   // setSearchResult(deli ? methodFound : null)\n  //   setSearchResult(deliveryOptionsMethods)\n  // };\n\n\n  return __jsx(DeliveryMethods, null, __jsx(Options, null, __jsx(CardWrapper, {\n    color: isPickUpSelected ? '#009E7F' : '#e4f4fc',\n    onClick: function onClick(e) {\n      return setDelivery(e, DeliveryMethodsConstants.PICKUP);\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"pickUpId\",\n    defaultMessage: \"notFoundId\"\n  })), __jsx(CardWrapper, {\n    color: isDeliverySelected ? '#009E7F' : '#e4f4fc',\n    onClick: function onClick(e) {\n      return setDelivery(e, DeliveryMethodsConstants.DELIVERY);\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"deliveryId\",\n    defaultMessage: \"notFoundId2\"\n  }))), __jsx(Wrapper, null, !!props.deliveryMethodTypeSelected && __jsx(Container, null, __jsx(Heading, {\n    onClick: function onClick(e) {\n      return handleOnFocus(e);\n    }\n  }, isPickUpSelected ? __jsx(FormattedMessage, {\n    id: \"pickupModalheading\",\n    defaultMessage: \"pickupModalheading\"\n  }) : __jsx(FormattedMessage, {\n    id: \"deliveryModalheading\",\n    defaultMessage: \"deliveryModalheading\"\n  })), isPickUpSelected ? __jsx(\"div\", {\n    onClick: function onClick(e) {\n      return handleOnFocus(e);\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    onFocus: function onFocus(e) {\n      return handleOnFocus(e);\n    } // placeholder='Código postal'\n    ,\n    value: zipCode,\n    autoComplete: \"off\" // we have to change the onChange because the is no one for the controller name actualy\n    ,\n    onChange: function onChange(e) {\n      return searchPickupZipCode(e);\n    }\n  })) : __jsx(PlacesAutocomplete, {\n    value: deliveryAddress,\n    onChange: function onChange(e) {\n      return setDeliveryAddress(e);\n    },\n    onSelect: handleSelect,\n    searchOptions: {\n      types: [],\n      componentRestrictions: {\n        country: \"ar\"\n      }\n    }\n  }, function (_ref3) {\n    var getInputProps = _ref3.getInputProps,\n        suggestions = _ref3.suggestions,\n        getSuggestionItemProps = _ref3.getSuggestionItemProps,\n        loading = _ref3.loading;\n    return __jsx(\"div\", {\n      onClick: function onClick(e) {\n        return handleOnFocus(e);\n      }\n    }, __jsx(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: '0px 0px'\n      }\n    }, __jsx(\"input\", getInputProps({\n      placeholder: \"Calle, altura, localidad\",\n      className: \"location-search-input\",\n      style: {\n        width: '220px',\n        padding: '0px 8px',\n        appearance: 'none',\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '15',\n        lineHeight: 'inherit',\n        border: '1px solid',\n        borderColor: '#f7f7f7',\n        borderRadius: '6px',\n        backgroundColor: '#f7f7f7',\n        color: '#0D1136',\n        height: '48px',\n        transition: 'all 0.25s ease',\n        // mb: 3,\n        '&:hover,&:focus': {\n          outline: 0,\n          borderColor: '#009e7f'\n        }\n      }\n    })), (deliveryAddress === null || deliveryAddress === void 0 ? void 0 : deliveryAddress.length) ? __jsx(ActionsButtons, {\n      className: \"button-wrapper\"\n    }, __jsx(ActionButton, {\n      onClick: function onClick() {\n        return deleteDeliveryAddress();\n      },\n      className: \"delete-btn\"\n    }, __jsx(CloseIcon, null))) : ''), __jsx(\"div\", {\n      className: \"autocomplete-dropdown-container\"\n    }, loading && __jsx(\"div\", null, \"Loading...\"), suggestions.map(function (suggestion) {\n      var _suggestion$descripti, _suggestion$descripti2;\n\n      var style = suggestion.active ? {\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\",\n        borderBottom: \"1px solid gray\",\n        justifyContent: \"flex-start\",\n        display: 'flex',\n        maxWidth: '320px'\n      } : {\n        backgroundColor: \"#ffffff\",\n        cursor: \"pointer\",\n        borderBottom: \"1px solid gray\",\n        justifyContent: \"flex-start\",\n        display: 'flex',\n        maxWidth: '320px',\n        alignItems: \"center\"\n      };\n      return __jsx(\"div\", getSuggestionItemProps(suggestion, {\n        style: style\n      }), __jsx(BannerIcon, null, __jsx(\"img\", {\n        src: DeliveryIcon,\n        alt: \"\"\n      })), (_suggestion$descripti = suggestion.description) === null || _suggestion$descripti === void 0 ? void 0 : _suggestion$descripti.split(\",\")[0], (_suggestion$descripti2 = suggestion.description) === null || _suggestion$descripti2 === void 0 ? void 0 : _suggestion$descripti2.split(\",\")[1]);\n    })));\n  }), __jsx(\"div\", {\n    style: {\n      paddingTop: '20px'\n    }\n  }, (searchResult === null || searchResult === void 0 ? void 0 : searchResult.length) ? searchResult.map(function (deliveryMethod, i) {\n    return __jsx(PickUpOptions, null, __jsx(Checkbox, {\n      keyName: \"\".concat(i, \"-deliveryMethods\"),\n      isChecked: (deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === deliveryMethod.id,\n      labelText: \"\".concat(deliveryMethod.name, \" - \").concat(deliveryMethod.details, \" \"),\n      id: \"deliveryMethod-\".concat(i),\n      onChange: function onChange(e) {\n        setDeliveryMethodAndSaveCookie((deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === deliveryMethod.id ? null : deliveryMethod);\n      }\n    }));\n  }) : ''), !searchResult && zipCode.length >= 4 && props.deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP && __jsx(DeliveryText, null, intl.formatMessage({\n    id: 'noDittoPickUpLocations',\n    defaultMessage: 'noDittoPickUpLocations'\n  })), notInsideDeliveryAreas && __jsx(DeliveryText, null, intl.formatMessage({\n    id: 'noDeliveryThereYet',\n    defaultMessage: 'noDeliveryThereYet'\n  })))));\n};\n\nexport default DeliverySelection;","map":null,"metadata":{},"sourceType":"module"}