{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/progress-box/progress-box.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ProgressBarWrapper, ProgressStep, ProgressBar, StatusTitle, StatusBox, StatusDetails, CheckMarkWrapper } from './progress-box.style';\nimport { CheckMark } from 'assets/icons/CheckMark';\n\nvar ProgressBox = function ProgressBox(_ref) {\n  var status = _ref.status,\n      data = _ref.data;\n  return __jsx(React.Fragment, null, data.map(function (item, index) {\n    return __jsx(ProgressStep, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, __jsx(ProgressBarWrapper, {\n      className: item.step_competed && item.ordering >= index + 1 ? 'checked' : '',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, __jsx(StatusBox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, status >= index + 1 ? __jsx(CheckMarkWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, __jsx(CheckMark, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    })) : index + 1), __jsx(ProgressBar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    })), __jsx(StatusDetails, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, item ? __jsx(StatusTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, item.status) : ''));\n  }));\n};\n\n_c = ProgressBox;\nexport default ProgressBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBox\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/progress-box/progress-box.tsx"],"names":["React","ProgressBarWrapper","ProgressStep","ProgressBar","StatusTitle","StatusBox","StatusDetails","CheckMarkWrapper","CheckMark","ProgressBox","status","data","map","item","index","step_competed","ordering"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,aANF,EAOEC,gBAPF,QAQO,sBARP;AASA,SAASC,SAAT,QAA0B,wBAA1B;;AAOA,IAAMC,WAAoC,GAAG,SAAvCA,WAAuC,OAAsB;AAAA,MAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACjE,SACE,4BACGA,IAAI,CAACC,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,WACR,MAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,kBAAD;AAAoB,MAAA,SAAS,EAAED,IAAI,CAACE,aAAL,IAAsBF,IAAI,CAACG,QAAL,IAAiBF,KAAK,GAAG,CAA/C,GAAmD,SAAnD,GAA+D,EAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,MAAM,IAAII,KAAK,GAAG,CAAlB,GACC,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAKCA,KAAK,GAAG,CANZ,CADF,EAUE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF,EAaE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,GAAG,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcA,IAAI,CAACH,MAAnB,CAAH,GAA8C,EADrD,CAbF,CADQ;AAAA,GAAT,CADH,CADF;AAuBD,CAxBD;;KAAMD,W;AA0BN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport {\n  ProgressBarWrapper,\n  ProgressStep,\n  ProgressBar,\n  StatusTitle,\n  StatusBox,\n  StatusDetails,\n  CheckMarkWrapper,\n} from './progress-box.style';\nimport { CheckMark } from 'assets/icons/CheckMark';\n\ntype ProgressProps = {\n  data?: any;\n  status?: any;\n};\n\nconst ProgressBox: React.FC<ProgressProps> = ({ status, data }) => {\n  return (\n    <>\n      {data.map((item, index) => (\n        <ProgressStep key={index}>\n          <ProgressBarWrapper className={item.step_competed && item.ordering >= index + 1 ? 'checked' : ''}>\n            <StatusBox>\n              {status >= index + 1 ? (\n                <CheckMarkWrapper>\n                  <CheckMark />\n                </CheckMarkWrapper>\n              ) : (\n                index + 1\n              )}\n            </StatusBox>\n            <ProgressBar />\n          </ProgressBarWrapper>\n          <StatusDetails>\n            {item ? <StatusTitle>{item.status}</StatusTitle> : ''}\n          </StatusDetails>\n        </ProgressStep>\n      ))}\n    </>\n  );\n};\n\nexport default ProgressBox;\n"]},"metadata":{},"sourceType":"module"}