{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/AirHumiditySensor.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { WeekDays, fourRelaysOptions, AirHumiditySensorMode, airHumiditySensorModeOptions } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, WeekContainer, DayContainer, TextSpaced, CardButtons, ActionButton, Text, Type, Status, ScheduleTimeContainer, ActionsButtons, Row, ErrorMsg, Porcentage } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';\nimport { getDayShortName, getRelayNameText, getSettingTypeText } from 'utils/sensorUtils';\nimport { CheckMark } from 'assets/icons/CheckMark';\nimport AirHumidityReading from './sensor-readings/AirHumidityReading';\n\nvar AirHumidity = function AirHumidity(_ref) {\n  _s();\n\n  var _setting$relayOneIdRe, _setting$relayOneIdRe2, _setting$relayOneIdRe3, _setting$relayOneIdRe4, _setting$relayOneIdRe5, _setting$scheduledOnT, _relayOneSelected$val, _setting$logs;\n\n  var errorId = _ref.errorId,\n      plant = _ref.plant,\n      settingType = _ref.settingType,\n      handleSettingsChange = _ref.handleSettingsChange,\n      onDeleteSchedule = _ref.onDeleteSchedule,\n      data = _ref.data,\n      openTab = _ref.openTab,\n      setOpenTab = _ref.setOpenTab,\n      handleDeleteSensor = _ref.handleDeleteSensor;\n  var setting = plant.sensors.find(function (setting) {\n    return setting.settingType === settingType;\n  });\n\n  var _useState = useState(false),\n      editIsOn = _useState[0],\n      setEditIsOn = _useState[1];\n\n  var intl = useIntl();\n  var module = plant.sensors.find(function (module) {\n    return module.settingType === settingType;\n  });\n  var selectedMode = airHumiditySensorModeOptions.find(function (option) {\n    return option.value === setting.mode;\n  });\n  var relayOneSelected = fourRelaysOptions.find(function (option) {\n    return option.value === setting.relayOneIdRelated;\n  }); // const tabIsOpen = openTab === settingType;\n\n  var tabIsOpen = true;\n  var hasRelayAsociated = ((_setting$relayOneIdRe = setting.relayOneIdRelated) === null || _setting$relayOneIdRe === void 0 ? void 0 : _setting$relayOneIdRe.length) > 0;\n\n  var handleModal = function handleModal(modalComponent) {\n    var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'add-time-schedule-modal';\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  return __jsx(PlantsSensorContainer, {\n    style: {\n      height: tabIsOpen ? '100%' : '66px'\n    },\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      setOpenTab(tabIsOpen ? '' : settingType);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, __jsx(Type, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, getSettingTypeText(setting === null || setting === void 0 ? void 0 : setting.settingType)), !hasRelayAsociated && __jsx(Type, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 46\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"fillModeAndRelayToWork\",\n    defaultMessage: \"fillModeAndRelayToWork\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 53\n    }\n  }))), __jsx(ListDes, {\n    style: {\n      marginLeft: '-10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, __jsx(CardButtons, {\n    className: \"button-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, editIsOn ? __jsx(ActionButton, {\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      setEditIsOn(!editIsOn);\n    },\n    className: \"edit-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, __jsx(CheckMark, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  })) : __jsx(ActionButton, {\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      setEditIsOn(!editIsOn);\n    },\n    className: \"edit-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, __jsx(PencilIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  })), __jsx(ActionButton, {\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      handleDeleteSensor(plant, settingType);\n    },\n    className: \"delete-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, __jsx(CloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }))))), (setting === null || setting === void 0 ? void 0 : setting.mode) === AirHumiditySensorMode.NONE && !!openTab && __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, __jsx(Status, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"modoRequiredWarningText\",\n    defaultMessage: \"modoRequiredWarningText\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }), \" \")), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"airHumidityId\",\n    defaultMessage: \"airHumidityId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(AirHumidityReading, {\n    module: module,\n    plantId: plant.plantId,\n    latestDataFetched: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"plantName\",\n    defaultMessage: \"plantName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, editIsOn ? __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    value: setting.name,\n    placeholder: intl.formatMessage({\n      id: 'plantNameRequiredNameId',\n      defaultMessage: 'plantNameRequiredNameId'\n    }),\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'name', e.target.value, settingType);\n    },\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\" // intlInputLabelId=\"profileEmailField\"\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, setting === null || setting === void 0 ? void 0 : setting.name))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"modeId\",\n    defaultMessage: \"modeId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'mode', e.value, settingType);\n    },\n    value: selectedMode,\n    options: airHumiditySensorModeOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }) : __jsx(Text, {\n    style: {\n      width: 'max-content'\n    },\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, (selectedMode === null || selectedMode === void 0 ? void 0 : selectedMode.value.length) > 1 ? selectedMode.label : '-'))), (setting === null || setting === void 0 ? void 0 : setting.mode) !== AirHumiditySensorMode.NONE && __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"notifyChangesId\",\n    defaultMessage: \"notifyChangesId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, __jsx(Switch, {\n    disabled: false,\n    checked: setting.whatsappWarningsOn,\n    labelPosition: 'right' // className,\n    ,\n    onUpdate: function onUpdate() {\n      return handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }))), __jsx(ListItem, {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 23\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"manualModeStateId\",\n    defaultMessage: \"manualModeStateId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, __jsx(Switch, {\n    disabled: false,\n    checked: setting.relayOneWorking,\n    labelPosition: 'right' // className,\n    ,\n    onUpdate: function onUpdate() {\n      return handleSettingsChange(plant, 'relayOneWorking', !setting.relayOneWorking, settingType);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }))), ((setting === null || setting === void 0 ? void 0 : setting.mode) === AirHumiditySensorMode.MANUAL || (setting === null || setting === void 0 ? void 0 : setting.mode) === AirHumiditySensorMode.SCHEDULE) && __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: ((_setting$relayOneIdRe2 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe2 === void 0 ? void 0 : _setting$relayOneIdRe2.length) ? 'asociatedRelayId' : 'asociateRelayId',\n    defaultMessage: ((_setting$relayOneIdRe3 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe3 === void 0 ? void 0 : _setting$relayOneIdRe3.length) ? 'asociatedRelayId' : 'asociateRelayId',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType);\n    },\n    value: relayOneSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated) : '-', \"  \", (setting === null || setting === void 0 ? void 0 : setting.relayOneWorking) ? '[ON]' : '[OFF]'))), ((setting === null || setting === void 0 ? void 0 : setting.mode) === AirHumiditySensorMode.MANUAL || (setting === null || setting === void 0 ? void 0 : setting.mode) === AirHumiditySensorMode.SCHEDULE) && __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: ((_setting$relayOneIdRe4 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe4 === void 0 ? void 0 : _setting$relayOneIdRe4.length) ? 'asociatedRelayId' : 'asociateRelayId',\n    defaultMessage: ((_setting$relayOneIdRe5 = setting.relayOneIdRelated) === null || _setting$relayOneIdRe5 === void 0 ? void 0 : _setting$relayOneIdRe5.length) ? 'asociatedRelayId' : 'asociateRelayId',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType);\n    },\n    value: relayOneSelected,\n    options: fourRelaysOptions,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }) : __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated) : '-', \"  \", (setting === null || setting === void 0 ? void 0 : setting.relayOneWorking) ? '[ON]' : '[OFF]'))), setting.mode === AirHumiditySensorMode.SCHEDULE && hasRelayAsociated && __jsx(React.Fragment, null, setting === null || setting === void 0 ? void 0 : (_setting$scheduledOnT = setting.scheduledOnTimes) === null || _setting$scheduledOnT === void 0 ? void 0 : _setting$scheduledOnT.map(function (schedule, i) {\n    return __jsx(WeekContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }, __jsx(ListDes, {\n      style: {\n        flexDirection: 'row',\n        display: 'flex',\n        paddingBottom: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 29\n      }\n    }, WeekDays.map(function (day) {\n      return __jsx(DayContainer, {\n        key: day + '-day-airtemp-1-container',\n        style: {\n          backgroundColor: schedule.daysToRepeat.includes(day) ? '#c2b0b0' : 'transparent'\n        } // onClick={() => setDay(day)}\n        ,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 41\n        }\n      }, getDayShortName(day));\n    })), __jsx(ScheduleTimeContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 29\n      }\n    }, __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 33\n      }\n    }, \" \", __jsx(FormattedMessage, {\n      id: \"desdeId\",\n      defaultMessage: \"desdeId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 46\n      }\n    }), \" \"), __jsx(TextSpaced, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 33\n      }\n    }, schedule.startTime), __jsx(TextSpaced, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 33\n      }\n    }, \" \", __jsx(FormattedMessage, {\n      id: \"aId\",\n      defaultMessage: \"aId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 46\n      }\n    }), \" \"), __jsx(TextSpaced, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 33\n      }\n    }, schedule.endTime), __jsx(ActionsButtons, {\n      className: \"button-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 33\n      }\n    }, __jsx(ActionButton, {\n      onClick: function onClick() {\n        var _data$getUser;\n\n        return handleModal(AddTimeSchedule, {\n          settingType: settingType,\n          plant: plant,\n          id: data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : _data$getUser.id,\n          schedulePosition: i\n        });\n      },\n      className: \"edit-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 37\n      }\n    }, __jsx(PencilIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 41\n      }\n    })), __jsx(ActionButton, {\n      onClick: function onClick() {\n        return onDeleteSchedule(plant, settingType, i);\n      },\n      className: \"delete-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 37\n      }\n    }, __jsx(CloseIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 41\n      }\n    }))), __jsx(TextSpaced, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 33\n      }\n    }, schedule.enabled ? '' : '⏹️'), __jsx(TextSpaced, {\n      bold: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 33\n      }\n    }, schedule.smartLight ? '🔆' : '')));\n  }), __jsx(Button, {\n    size: \"small\",\n    variant: \"outlined\",\n    type: \"button\",\n    style: {\n      marginLeft: '10px'\n    },\n    className: \"add-button\",\n    onClick: function onClick() {\n      var _data$getUser2;\n\n      return handleModal(AddTimeSchedule, {\n        name: 'add-humidity-1-schedule',\n        plant: plant,\n        id: data === null || data === void 0 ? void 0 : (_data$getUser2 = data.getUser) === null || _data$getUser2 === void 0 ? void 0 : _data$getUser2.id,\n        settingType: settingType\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"addTimeScheduleId\",\n    defaultMessage: \"addTimeScheduleId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }))), setting.mode === AirHumiditySensorMode.WHEN_MIN_ACTION_AUTOMATED && __jsx(React.Fragment, null, __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minHumidityId\",\n    defaultMessage: \"minHumidityId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 33\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    name: \"minWarning\",\n    value: setting.minWarning,\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'minWarning', e.target.value, settingType);\n    },\n    backgroundColor: \"#F7F7F7\",\n    height: \"34.5px\",\n    width: \"45px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 37\n    }\n  }), __jsx(Porcentage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 37\n    }\n  }, \"%\")) : __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 33\n    }\n  }, setting.minWarning >= 0 && setting.minWarning <= 100 ? setting === null || setting === void 0 ? void 0 : setting.minWarning : '-', \" %\"), errorId === 'minWarning' && __jsx(ErrorMsg, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"minMaxWarningId\",\n    defaultMessage: \"minMaxWarningId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 37\n    }\n  })))), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 21\n    }\n  }, __jsx(ListTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 25\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: (relayOneSelected === null || relayOneSelected === void 0 ? void 0 : (_relayOneSelected$val = relayOneSelected.value) === null || _relayOneSelected$val === void 0 ? void 0 : _relayOneSelected$val.length) > 0 ? 'asociatedToId' : 'asociateRelayToId',\n    defaultMessage: \"asociateRelayToId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 29\n    }\n  }))), __jsx(ListDes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 25\n    }\n  }, editIsOn ? __jsx(Select, {\n    onChange: function onChange(e) {\n      return handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType);\n    },\n    value: relayOneSelected,\n    options: fourRelaysOptions // inputFocusOnClick={false}\n    // focusInputOnMenuOpen={false}\n    ,\n    isSearchable: false,\n    styles: selectStyle,\n    menuPosition: 'fixed',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 33\n    }\n  }) : __jsx(React.Fragment, null, __jsx(Text, {\n    bold: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 37\n    }\n  }, (setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated.length) > 1 ? getRelayNameText(setting === null || setting === void 0 ? void 0 : setting.relayOneIdRelated) : '-', \"  \", (setting === null || setting === void 0 ? void 0 : setting.relayOneWorking) ? '[ON]' : '[OFF]'))))), (setting === null || setting === void 0 ? void 0 : (_setting$logs = setting.logs) === null || _setting$logs === void 0 ? void 0 : _setting$logs.length) > 0 && hasRelayAsociated && __jsx(HumidityLogsGraph, {\n    data: setting.logs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 69\n    }\n  }));\n};\n\n_s(AirHumidity, \"Vsb+oY6ixxjrb0PLzxU6u6loAvU=\", false, function () {\n  return [useIntl];\n});\n\n_c = AirHumidity;\nexport default AirHumidity;\n\nvar _c;\n\n$RefreshReg$(_c, \"AirHumidity\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/your-plants/sensors/AirHumiditySensor.tsx"],"names":["React","useState","CloseIcon","PencilIcon","Button","Switch","FormattedMessage","useIntl","Select","Input","WeekDays","fourRelaysOptions","AirHumiditySensorMode","airHumiditySensorModeOptions","HumidityLogsGraph","PlantsSensorContainer","ListItem","ListTitle","ListDes","WeekContainer","DayContainer","TextSpaced","CardButtons","ActionButton","Text","Type","Status","ScheduleTimeContainer","ActionsButtons","Row","ErrorMsg","Porcentage","openModal","AddTimeSchedule","getDayShortName","getRelayNameText","getSettingTypeText","CheckMark","AirHumidityReading","AirHumidity","errorId","plant","settingType","handleSettingsChange","onDeleteSchedule","data","openTab","setOpenTab","handleDeleteSensor","setting","sensors","find","editIsOn","setEditIsOn","intl","module","selectedMode","option","value","mode","relayOneSelected","relayOneIdRelated","tabIsOpen","hasRelayAsociated","length","handleModal","modalComponent","modalProps","className","show","config","width","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","e","stopPropagation","justifyContent","marginLeft","NONE","plantId","name","formatMessage","id","defaultMessage","target","selectStyle","label","whatsappWarningsOn","relayOneWorking","MANUAL","SCHEDULE","scheduledOnTimes","map","schedule","i","flexDirection","display","paddingBottom","day","backgroundColor","daysToRepeat","includes","startTime","endTime","getUser","schedulePosition","enabled","smartLight","WHEN_MIN_ACTION_AUTOMATED","minWarning","logs"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { SearchBox } from 'components/search-box/search-box';\nimport Router,{ useRouter } from 'next/router';\nimport LineChart from 'components/line-chart/line-chart';\nimport GraphChart from 'components/graph-chart/graph-chart';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { PencilIcon } from 'assets/icons/PencilIcon';\nimport { Button } from 'components/button/button';\nimport Switch from 'components/switch/switch';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Select from 'react-select';\nimport { Input } from 'components/forms/input';\nimport { SensorsTypes, HumiditySensorMode, WeekDays, fourRelaysOptions, manualModeOptions, AirHumiditySensorMode, airHumiditySensorModeOptions } from 'utils/constant';\nimport HumidityLogsGraph from '../humidity-logs-graph/humidity-logs-graph';\nimport { PlantsSensorContainer, ListItem, ListTitle, ListDes, InputUpper, WeekContainer, DayContainer, ScheduleTime, TextSpaced, CardButtons, ActionButton, Text, ButtonText, Type, Status, ScheduleTimeContainer, ActionsButtons, Row, ErrorMsg, Porcentage } from '../your-plants.style';\nimport { openModal } from '@redq/reuse-modal';\nimport AddTimeSchedule from 'components/add-time-schedule/add-schedule-card';  \nimport { ISetting } from 'utils/types';\nimport { getDayShortName, getRelayNameText, getSettingTypeText } from 'utils/sensorUtils';\nimport { CheckMark } from 'assets/icons/CheckMark';\nimport AirHumidityReading from './sensor-readings/AirHumidityReading';\n\ninterface Props {\n  data?: any;\n  plant: any;\n  settingType: SensorsTypes;\n  openTab: string;\n  errorId: string;\n  setOpenTab: (settingType: string) => void;\n  handleSettingsChange: (plant: any, field: string, value: string | boolean, settingType: SensorsTypes) => void;\n  onDeleteSchedule: (plant: any, settingType: SensorsTypes, position: number) => void;\n  handleDeleteSensor: (plant: any, settingType: string) => void;\n}\n\nconst AirHumidity: React.FC<Props> = ({ errorId, plant, settingType, handleSettingsChange, onDeleteSchedule, data, openTab, setOpenTab, handleDeleteSensor }) => {\n    const setting = plant.sensors.find((setting: ISetting) => setting.settingType === settingType);\n    const [editIsOn, setEditIsOn] = useState(false);\n    const intl = useIntl();\n    const module = plant.sensors.find((module: ISetting) => module.settingType === settingType);\n    const selectedMode = airHumiditySensorModeOptions.find((option) => option.value === setting.mode);\n    const relayOneSelected = fourRelaysOptions.find((option) => option.value === setting.relayOneIdRelated);\n    // const tabIsOpen = openTab === settingType;\n    const tabIsOpen = true;\n    const hasRelayAsociated = setting.relayOneIdRelated?.length > 0;\n    const handleModal = (\n        modalComponent: any,\n        modalProps = {},\n        className: string = 'add-time-schedule-modal'\n        ) => {\n        openModal({\n            show: true,\n            config: {\n            width: 360,\n            height: 'auto',\n            enableResizing: false,\n            disableDragging: true,\n            className: className,\n            },\n            closeOnClickOutside: true,\n            component: modalComponent,\n            componentProps: { item: modalProps },\n        });\n    };\n\n    return (\n        <PlantsSensorContainer style={{ height: tabIsOpen ? '100%' : '66px' }} onClick={(e) => { e.stopPropagation(); setOpenTab(tabIsOpen ? '' : settingType); }}>\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Type bold>{getSettingTypeText(setting?.settingType)}</Type>\n                    { !hasRelayAsociated && (<Type>{<FormattedMessage id=\"fillModeAndRelayToWork\" defaultMessage=\"fillModeAndRelayToWork\" />}</Type>)}\n                </ListTitle>\n                <ListDes style={{ marginLeft: '-10px' }}>\n                    <CardButtons className='button-wrapper'>\n                        { editIsOn ? (\n                            <ActionButton onClick={(e) => { e.stopPropagation(); setEditIsOn(!editIsOn); }} className='edit-btn'>\n                                <CheckMark />\n                            </ActionButton>\n                        ) : (\n                            <ActionButton onClick={(e) => { e.stopPropagation(); setEditIsOn(!editIsOn); }} className='edit-btn'>\n                                <PencilIcon />\n                            </ActionButton>\n                        )}\n                        <ActionButton onClick={(e) => { e.stopPropagation(); handleDeleteSensor(plant, settingType); }} className='delete-btn'>\n                            <CloseIcon />\n                        </ActionButton>\n                    </CardButtons>\n                </ListDes>\n            </ListItem>\n\n\n            { (setting?.mode === AirHumiditySensorMode.NONE && !!openTab) && (\n                <ListItem>\n                    <Status><FormattedMessage id=\"modoRequiredWarningText\" defaultMessage=\"modoRequiredWarningText\" /> </Status>\n                </ListItem>\n            )}\n\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text>\n                <FormattedMessage\n                  id=\"airHumidityId\"\n                  defaultMessage=\"airHumidityId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes>\n                <AirHumidityReading module={module} plantId={plant.plantId} latestDataFetched={data} />\n            </ListDes>\n          </ListItem>\n  \n          <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                    <Text>\n                    <FormattedMessage\n                        id=\"plantName\"\n                        defaultMessage=\"plantName\"\n                    />\n                    </Text>\n                </ListTitle>\n                <ListDes>\n                    { editIsOn ? (\n                        <Input\n                            type='text'\n                            name='name'\n                            value={setting.name}\n                            placeholder={intl.formatMessage({ id: 'plantNameRequiredNameId', defaultMessage: 'plantNameRequiredNameId' })}\n                            onChange={(e: any) => handleSettingsChange(plant, 'name', e.target.value, settingType)}\n                            backgroundColor='#F7F7F7'\n                            height='34.5px'\n                            // intlInputLabelId=\"profileEmailField\"\n                        />\n                    ) : (\n                        <Text bold>{setting?.name}</Text>\n                    )}\n                </ListDes>\n            </ListItem>\n\n          <ListItem style={{ justifyContent: 'flex-start' }}>\n            <ListTitle>\n              <Text>\n                <FormattedMessage\n                  id=\"modeId\"\n                  defaultMessage=\"modeId\"\n                />\n              </Text>\n            </ListTitle>\n            <ListDes>\n                { editIsOn ? (\n                    <Select \n                        onChange={(e: any) => handleSettingsChange(plant, 'mode', e.value, settingType)}\n                        value={selectedMode}\n                        options={airHumiditySensorModeOptions}\n                        styles={selectStyle}\n                        menuPosition={'fixed'}\n                    />\n                ) : (\n                    <Text style={{ width: 'max-content' }} bold>{selectedMode?.value.length > 1 ? selectedMode.label : '-'}</Text>\n                )}\n            </ListDes>\n          </ListItem>\n\n          { (setting?.mode !== AirHumiditySensorMode.NONE) && (\n            <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                <Text>\n                    <FormattedMessage\n                    id=\"notifyChangesId\"\n                    defaultMessage=\"notifyChangesId\"\n                    />\n                </Text>\n                </ListTitle>\n                <ListDes>\n                    <Switch \n                        disabled={false}\n                        checked={setting.whatsappWarningsOn}\n                        labelPosition={'right'}\n                        // className,\n                        onUpdate={() => handleSettingsChange(plant, 'whatsappWarningsOn', !setting.whatsappWarningsOn, settingType)}\n                    />\n                </ListDes>\n            </ListItem>\n\n          )}\n                      <ListItem style={{ justifyContent: 'flex-start' }}>\n                <ListTitle>\n                <Text>\n                    <FormattedMessage\n                    id=\"manualModeStateId\"\n                    defaultMessage=\"manualModeStateId\"\n                    />\n                </Text>\n                </ListTitle>\n                <ListDes>\n                <Switch \n                                disabled={false}\n                                checked={setting.relayOneWorking}\n                                labelPosition={'right'}\n                                // className,\n                                onUpdate={() => handleSettingsChange(plant, 'relayOneWorking', !setting.relayOneWorking, settingType)}\n                            />\n                    </ListDes>\n                </ListItem>\n                { (setting?.mode === AirHumiditySensorMode.MANUAL || setting?.mode === AirHumiditySensorMode.SCHEDULE) && (\n            <ListItem>\n              <ListTitle>\n                <Text>\n                  <FormattedMessage\n                    id={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n                    defaultMessage={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n              { editIsOn ? (\n                    <Select \n                        onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                        value={relayOneSelected}\n                        options={fourRelaysOptions}\n                        styles={selectStyle}\n                        menuPosition={'fixed'}\n                    />\n                ) : (\n                    <Text bold>{setting?.relayOneIdRelated.length > 1 ? getRelayNameText(setting?.relayOneIdRelated) : '-'}  {setting?.relayOneWorking ? '[ON]' : '[OFF]'}</Text>\n                )}\n              </ListDes>\n            </ListItem>\n            \n          )}\n          { (setting?.mode === AirHumiditySensorMode.MANUAL || setting?.mode === AirHumiditySensorMode.SCHEDULE) && (\n            <ListItem>\n              <ListTitle>\n                <Text>\n                  <FormattedMessage\n                    id={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n                    defaultMessage={setting.relayOneIdRelated?.length ? 'asociatedRelayId': 'asociateRelayId'}\n                  />\n                </Text>\n              </ListTitle>\n              <ListDes>\n              { editIsOn ? (\n                    <Select \n                        onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                        value={relayOneSelected}\n                        options={fourRelaysOptions}\n                        styles={selectStyle}\n                        menuPosition={'fixed'}\n                    />\n                ) : (\n                    <Text bold>{setting?.relayOneIdRelated.length > 1 ? getRelayNameText(setting?.relayOneIdRelated) : '-'}  {setting?.relayOneWorking ? '[ON]' : '[OFF]'}</Text>\n                )}\n              </ListDes>\n            </ListItem>\n            \n          )}\n\n          { ((setting.mode === AirHumiditySensorMode.SCHEDULE) && hasRelayAsociated) && (\n            <>\n  \n                { setting?.scheduledOnTimes?.map((schedule: any, i: number) => {\n                    return (\n                        <WeekContainer>\n                            <ListDes style={{ flexDirection: 'row', display: 'flex', paddingBottom: '10px' }} >\n                                {WeekDays.map((day: any) => {\n                                    return (\n                                        <DayContainer\n                                            key={day + '-day-airtemp-1-container'}\n                                            style={{ backgroundColor: schedule.daysToRepeat.includes(day) ? '#c2b0b0' : 'transparent' }}\n                                            // onClick={() => setDay(day)}\n                                        >\n                                            {getDayShortName(day)}\n                                        </DayContainer>\n                                        )\n                                    })\n                                }\n                            </ListDes>\n                            <ScheduleTimeContainer>\n                                <TextSpaced> <FormattedMessage id='desdeId' defaultMessage='desdeId' /> </TextSpaced> \n                                <TextSpaced bold>{schedule.startTime}</TextSpaced>\n                                <TextSpaced> <FormattedMessage id='aId' defaultMessage='aId' /> </TextSpaced> \n                                <TextSpaced bold>{schedule.endTime}</TextSpaced>\n                                <ActionsButtons className='button-wrapper'>\n                                    <ActionButton onClick={() => handleModal( AddTimeSchedule, { settingType: settingType, plant, id: data?.getUser?.id, schedulePosition: i } )} className='edit-btn'>\n                                        <PencilIcon />\n                                    </ActionButton>\n\n                                    <ActionButton onClick={() => onDeleteSchedule(plant, settingType, i)} className='delete-btn'>\n                                        <CloseIcon />\n                                    </ActionButton>\n                                </ActionsButtons>\n                                {/* 💤🤖 ❌🚫⛔️✅🔆⏹️ */}\n                                <TextSpaced bold>{schedule.enabled ? '' : '⏹️'}</TextSpaced>\n                                <TextSpaced bold>{schedule.smartLight ? '🔆' : ''}</TextSpaced>\n                            </ScheduleTimeContainer>\n                        </WeekContainer>\n                    )\n                })}\n\n                <Button\n                    size='small'\n                    variant='outlined'\n                    type='button'\n                    style={{marginLeft: '10px'}}\n                    className='add-button'\n                    onClick={() => handleModal(\n                        AddTimeSchedule,  { name: 'add-humidity-1-schedule', plant, id: data?.getUser?.id, settingType } )}\n                >\n                    <FormattedMessage id='addTimeScheduleId' defaultMessage='addTimeScheduleId' />\n                </Button>\n            </>\n            )}\n\n            { setting.mode === AirHumiditySensorMode.WHEN_MIN_ACTION_AUTOMATED && (\n                <>\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id='minHumidityId'\n                                defaultMessage='minHumidityId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Row>\n                                    <Input\n                                        type='number'\n                                        name='minWarning'\n                                        value={setting.minWarning}\n                                        onChange={(e: any) => handleSettingsChange(plant, 'minWarning', e.target.value, settingType)}\n                                        backgroundColor='#F7F7F7'\n                                        height='34.5px'\n                                        width='45px'\n                                    />\n                                    <Porcentage>%</Porcentage>\n                                </Row>\n                            ) : (\n                                <Text bold>{(setting.minWarning >= 0 && setting.minWarning <= 100) ? setting?.minWarning : '-'} %</Text>\n                            )}\n                            {errorId === 'minWarning' && (\n                                <ErrorMsg>\n                                    <FormattedMessage id=\"minMaxWarningId\" defaultMessage=\"minMaxWarningId\" />\n                                </ErrorMsg>\n                            )}\n                        </ListDes>\n                    </ListItem>\n\n                    <ListItem>\n                        <ListTitle>\n                            <Text>\n                            <FormattedMessage\n                                id={relayOneSelected?.value?.length > 0 ? 'asociatedToId' : 'asociateRelayToId'}\n                                defaultMessage='asociateRelayToId'\n                            />\n                            </Text>\n                        </ListTitle>\n                        <ListDes>\n                            { editIsOn ? (\n                                <Select \n                                    onChange={(e: any) => handleSettingsChange(plant, 'relayOneIdRelated', e.value, settingType)}\n                                    value={relayOneSelected}\n                                    options={fourRelaysOptions}\n                                    // inputFocusOnClick={false}\n                                    // focusInputOnMenuOpen={false}\n                                    isSearchable={false}\n                                    styles={selectStyle}\n                                    menuPosition={'fixed'}\n                                />\n                            ) : (\n                                <>\n                            {/* <Reading> */}\n                            {/* <Reading> */}\n                                    <Text bold>{setting?.relayOneIdRelated.length > 1 ? getRelayNameText(setting?.relayOneIdRelated) : '-'}  {setting?.relayOneWorking ? '[ON]' : '[OFF]'}</Text>\n                                    {/* <Reading> */}\n                            {/* <Reading> */}\n                                </>\n                            )}\n                        </ListDes>\n                    </ListItem>\n                </>\n                )}\n\n            { (setting?.logs?.length > 0 && hasRelayAsociated) && ( <HumidityLogsGraph data={setting.logs} /> )}\n        </PlantsSensorContainer>\n      )\n};\n\nexport default AirHumidity;\n"]},"metadata":{},"sourceType":"module"}