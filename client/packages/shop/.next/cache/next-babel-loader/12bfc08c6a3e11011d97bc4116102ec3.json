{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/components/product-card/product-card-one/product-card-one.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// product card for general\nimport React, { useState } from 'react';\nimport Image from 'components/image/image';\nimport { Button } from 'components/button/button';\nimport { ProductCardWrapper, ProductImageWrapper, ProductInfo, DiscountPercent, OutOfStock, ButtonText, PriceContainer, PriceContainerRow, ProductCartBtn, ProductCartWrapper, ProductPrice, ProductPriceWrapper, SalePrice } from '../product-card.style';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { Counter } from 'components/counter/counter';\nimport { cartAnimation } from 'utils/cart-animation';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ProductQuantityExceededMsg } from '../product-card.style';\nimport CartPopUp from 'features/carts/cart-popup-two';\nimport { CURRENCY } from 'utils/constant';\n\nvar ProductCard = function ProductCard(_ref) {\n  _s();\n\n  var _getItem2, _getItem3;\n\n  var title = _ref.title,\n      image = _ref.image,\n      weight = _ref.weight,\n      price = _ref.price,\n      salePrice = _ref.salePrice,\n      discountInPercent = _ref.discountInPercent,\n      cartProducts = _ref.cartProducts,\n      addToCart = _ref.addToCart,\n      updateCart = _ref.updateCart,\n      value = _ref.value,\n      currency = _ref.currency,\n      onChange = _ref.onChange,\n      increment = _ref.increment,\n      decrement = _ref.decrement,\n      data = _ref.data,\n      deviceType = _ref.deviceType,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, [\"title\", \"image\", \"weight\", \"price\", \"salePrice\", \"discountInPercent\", \"cartProducts\", \"addToCart\", \"updateCart\", \"value\", \"currency\", \"onChange\", \"increment\", \"decrement\", \"data\", \"deviceType\", \"onClick\"]);\n\n  var _useCart = useCart(),\n      addItem = _useCart.addItem,\n      removeItem = _useCart.removeItem,\n      getItem = _useCart.getItem,\n      isInCart = _useCart.isInCart,\n      items = _useCart.items;\n\n  var _useState = useState(false),\n      showProductQuantityExceededMsg = _useState[0],\n      setShowProductQuantityExceededMsg = _useState[1];\n\n  var intl = useIntl();\n\n  var handleAddClick = function handleAddClick(e) {\n    var _getItem;\n\n    var currentQuantity = (_getItem = getItem(data.id)) === null || _getItem === void 0 ? void 0 : _getItem.quantity;\n    var stock = data.product_quantity;\n\n    if (stock <= currentQuantity) {\n      e.stopPropagation();\n      showProductQuantityExceededMsgFor5Sec();\n    } else {\n      e.stopPropagation();\n      addItem(data);\n\n      if (!isInCart(data.id)) {\n        cartAnimation(e);\n      }\n    }\n  };\n\n  var handleRemoveClick = function handleRemoveClick(e) {\n    e.stopPropagation();\n    removeItem(data);\n  };\n\n  var showProductQuantityExceededMsgFor5Sec = function showProductQuantityExceededMsgFor5Sec() {\n    setShowProductQuantityExceededMsg(true);\n    setTimeout(function () {\n      setShowProductQuantityExceededMsg(false);\n    }, 1500);\n  };\n\n  var PriceContent = function PriceContent() {\n    return __jsx(React.Fragment, null, data.product_quantity != 0 ? __jsx(ProductCartWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 38\n      }\n    }, __jsx(ProductCartBtn, {\n      style: {\n        display: 'flex'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, __jsx(PriceContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, __jsx(PriceContainerRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, __jsx(ProductPriceWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, data.discountInPercent ? __jsx(SalePrice, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 46\n      }\n    }, CURRENCY, \" \", data.sale_price) : null, __jsx(ProductPrice, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, CURRENCY, finalPrice)), noRecicledQuantityInCart ? __jsx(React.Fragment, null, __jsx(Counter, {\n      value: getItem(data.id).quantity,\n      onDecrement: handleRemoveClick,\n      onIncrement: handleAddClick,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }), showProductQuantityExceededMsg && __jsx(ProductQuantityExceededMsg, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"productStockLimit\",\n      defaultMessage: \"There is no more availability of this product\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }))) : __jsx(Button, {\n      className: \"cart-button\",\n      variant: \"secondary\",\n      borderRadius: 100,\n      onClick: handleAddClick,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, __jsx(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: data.packagePrice > 0 ? \"addCartButtonNoPackage\" : \"addCartButton\",\n      defaultMessage: \"Cart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 23\n      }\n    })))), data.packagePrice > 0 ? __jsx(PriceContainerRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, __jsx(ProductPriceWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, __jsx(ProductPrice, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, \" \", CURRENCY, \" \", Number(finalPrice - data.packagePrice))), reclicledQuantityInCart ? __jsx(React.Fragment, null, __jsx(Counter, {\n      value: reclicledQuantityInCart,\n      onDecrement: handleRecicledRemoveClick,\n      onIncrement: handleRecicledAddClick,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }), showProductQuantityExceededMsg && __jsx(ProductQuantityExceededMsg, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"productStockLimit\",\n      defaultMessage: \"There is no more availability of this product\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }))) : __jsx(Button, {\n      className: \"cart-button\",\n      variant: \"secondary\",\n      borderRadius: 100,\n      onClick: handleRecicledAddClick,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, __jsx(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addCartButton\",\n      defaultMessage: \"Cart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    })))) : null)), (noRecicledQuantityInCart || reclicledQuantityInCart) && __jsx(CartPopUp, {\n      deviceType: deviceType,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 69\n      }\n    })) : __jsx(ProductCartWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 10\n      }\n    }, __jsx(\"p\", {\n      style: {\n        color: '#ff5e5e'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, intl.formatMessage({\n      id: 'outOfStock',\n      defaultMessage: 'Out of stock'\n    }))));\n  };\n\n  var finalPrice = salePrice ? salePrice : price;\n  var noRecicledQuantityInCart = (_getItem2 = getItem(data.id)) === null || _getItem2 === void 0 ? void 0 : _getItem2.quantity;\n  var reclicledQuantityInCart = (_getItem3 = getItem(data.id)) === null || _getItem3 === void 0 ? void 0 : _getItem3.recicledQuantity;\n  return __jsx(ProductCardWrapper, {\n    onClick: onClick,\n    className: \"product-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, __jsx(ProductImageWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    url: image,\n    className: \"product-image\",\n    style: {\n      position: 'relative'\n    },\n    alt: title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), discountInPercent ? __jsx(React.Fragment, null, __jsx(DiscountPercent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, discountInPercent, \"%\")) : '', data.product_quantity == 0 ? __jsx(React.Fragment, null, __jsx(OutOfStock, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, intl.formatMessage({\n    id: 'outOfStock',\n    defaultMessage: 'Out of stock'\n  }))) : ''), __jsx(ProductInfo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    className: \"product-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"div\", {\n    className: \"product-meta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"productPriceWrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, discountInPercent ? __jsx(\"span\", {\n    className: \"discountedPrice\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, currency, price) : '', __jsx(\"span\", {\n    className: \"product-price\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, currency, finalPrice)), __jsx(PriceContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(ProductCard, \"rF5Klesz1jpfhJe/YfuaWDKnxqc=\", false, function () {\n  return [useCart, useIntl];\n});\n\n_c = ProductCard;\nexport default ProductCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/components/product-card/product-card-one/product-card-one.tsx"],"names":["React","useState","Image","Button","ProductCardWrapper","ProductImageWrapper","ProductInfo","DiscountPercent","OutOfStock","ButtonText","PriceContainer","PriceContainerRow","ProductCartBtn","ProductCartWrapper","ProductPrice","ProductPriceWrapper","SalePrice","useCart","Counter","cartAnimation","FormattedMessage","useIntl","ProductQuantityExceededMsg","CartPopUp","CURRENCY","ProductCard","title","image","weight","price","salePrice","discountInPercent","cartProducts","addToCart","updateCart","value","currency","onChange","increment","decrement","data","deviceType","onClick","props","addItem","removeItem","getItem","isInCart","items","showProductQuantityExceededMsg","setShowProductQuantityExceededMsg","intl","handleAddClick","e","currentQuantity","id","quantity","stock","product_quantity","stopPropagation","showProductQuantityExceededMsgFor5Sec","handleRemoveClick","setTimeout","PriceContent","display","sale_price","finalPrice","noRecicledQuantityInCart","packagePrice","Number","reclicledQuantityInCart","handleRecicledRemoveClick","handleRecicledAddClick","color","formatMessage","defaultMessage","recicledQuantity","position"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,WAHF,EAIEC,eAJF,EAKEC,UALF,EAMEC,UANF,EAOEC,cAPF,EAQEC,iBARF,EASEC,cATF,EAUEC,kBAVF,EAWEC,YAXF,EAYEC,mBAZF,EAaEC,SAbF,QAcO,uBAdP;AAeA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,YAA1C;AAEA,SAASC,0BAAT,QAA2C,uBAA3C;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAuBA,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAmB1C;AAAA;;AAAA;;AAAA,MAlBJC,KAkBI,QAlBJA,KAkBI;AAAA,MAjBJC,KAiBI,QAjBJA,KAiBI;AAAA,MAhBJC,MAgBI,QAhBJA,MAgBI;AAAA,MAfJC,KAeI,QAfJA,KAeI;AAAA,MAdJC,SAcI,QAdJA,SAcI;AAAA,MAbJC,iBAaI,QAbJA,iBAaI;AAAA,MAZJC,YAYI,QAZJA,YAYI;AAAA,MAXJC,SAWI,QAXJA,SAWI;AAAA,MAVJC,UAUI,QAVJA,UAUI;AAAA,MATJC,KASI,QATJA,KASI;AAAA,MARJC,QAQI,QARJA,QAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADDC,KACC;;AAAA,iBACsD1B,OAAO,EAD7D;AAAA,MACI2B,OADJ,YACIA,OADJ;AAAA,MACaC,UADb,YACaA,UADb;AAAA,MACyBC,OADzB,YACyBA,OADzB;AAAA,MACkCC,QADlC,YACkCA,QADlC;AAAA,MAC4CC,KAD5C,YAC4CA,KAD5C;;AAAA,kBAEwE/C,QAAQ,CAAC,KAAD,CAFhF;AAAA,MAEGgD,8BAFH;AAAA,MAEmCC,iCAFnC;;AAIJ,MAAMC,IAAI,GAAG9B,OAAO,EAApB;;AAEA,MAAM+B,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAO;AAAA;;AAC5B,QAAMC,eAAe,eAAGR,OAAO,CAACN,IAAI,CAACe,EAAN,CAAV,6CAAG,SAAkBC,QAA1C;AACA,QAAMC,KAAK,GAAGjB,IAAI,CAACkB,gBAAnB;;AACA,QAAID,KAAK,IAAIH,eAAb,EAA8B;AAC5BD,MAAAA,CAAC,CAACM,eAAF;AACAC,MAAAA,qCAAqC;AACtC,KAHD,MAGO;AACLP,MAAAA,CAAC,CAACM,eAAF;AACAf,MAAAA,OAAO,CAACJ,IAAD,CAAP;;AACA,UAAI,CAACO,QAAQ,CAACP,IAAI,CAACe,EAAN,CAAb,EAAwB;AACtBpC,QAAAA,aAAa,CAACkC,CAAD,CAAb;AACD;AACF;AACF,GAbD;;AAeA,MAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,CAAD,EAAO;AAC/BA,IAAAA,CAAC,CAACM,eAAF;AACAd,IAAAA,UAAU,CAACL,IAAD,CAAV;AACD,GAHD;;AAKA,MAAMoB,qCAAqC,GAAG,SAAxCA,qCAAwC,GAAM;AAClDV,IAAAA,iCAAiC,CAAC,IAAD,CAAjC;AACAY,IAAAA,UAAU,CAAC,YAAM;AACfZ,MAAAA,iCAAiC,CAAC,KAAD,CAAjC;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALD;;AAMA,MAAMa,YAAY,GAAG,SAAfA,YAAe;AAAA,WACnB,4BACGvB,IAAI,CAACkB,gBAAL,IAAyB,CAAzB,GAA8B,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC7B,MAAC,cAAD;AAAgB,MAAA,KAAK,EAAE;AAAEM,QAAAA,OAAO,EAAE;AAAX,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGxB,IAAI,CAACT,iBAAL,GAA0B,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYP,QAAZ,OAAuBgB,IAAI,CAACyB,UAA5B,CAA1B,GAAiF,IADpF,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGzC,QADH,EAEG0C,UAFH,CAFF,CADF,EAQIC,wBAAwB,GACxB,4BACE,MAAC,OAAD;AACI,MAAA,KAAK,EAAErB,OAAO,CAACN,IAAI,CAACe,EAAN,CAAP,CAAiBC,QAD5B;AAEI,MAAA,WAAW,EAAEK,iBAFjB;AAGI,MAAA,WAAW,EAAET,cAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMIH,8BAA8B,IAC9B,MAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,mBAArB;AAAyC,MAAA,cAAc,EAAC,+CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPJ,CADwB,GAcxB,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAC,WAAxC;AAAoD,MAAA,YAAY,EAAE,GAAlE;AAAuE,MAAA,OAAO,EAAEG,cAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AAAkB,MAAA,EAAE,EAAEZ,IAAI,CAAC4B,YAAL,GAAoB,CAApB,GAAwB,wBAAxB,GAAmD,eAAzE;AAA0F,MAAA,cAAc,EAAC,MAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAtBJ,CADF,EA8BI5B,IAAI,CAAC4B,YAAL,GAAoB,CAApB,GACA,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgB5C,QAAhB,OAA2B6C,MAAM,CAACH,UAAU,GAAG1B,IAAI,CAAC4B,YAAnB,CAAjC,CADF,CADF,EAIIE,uBAAuB,GACzB,4BACE,MAAC,OAAD;AACI,MAAA,KAAK,EAAEA,uBADX;AAEI,MAAA,WAAW,EAAEC,yBAFjB;AAGI,MAAA,WAAW,EAAEC,sBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMIvB,8BAA8B,IAC9B,MAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAC,mBADL;AAEE,MAAA,cAAc,EAAC,+CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPJ,CADyB,GAiBzB,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAC,WAAxC;AAAoD,MAAA,YAAY,EAAE,GAAlE;AAAuE,MAAA,OAAO,EAAEuB,sBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,eAArB;AAAqC,MAAA,cAAc,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CArBF,CADA,GA6BK,IA3DT,CADJ,CAD6B,EAiE3B,CAACL,wBAAwB,IAAIG,uBAA7B,KAA0D,MAAC,SAAD;AAAW,MAAA,UAAU,EAAE7B,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjE/B,CAA9B,GAmEE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAG,MAAA,KAAK,EAAE;AAACgC,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BtB,IAAI,CAACuB,aAAL,CAAmB;AAAEnB,MAAAA,EAAE,EAAE,YAAN;AAAoBoB,MAAAA,cAAc,EAAE;AAApC,KAAnB,CAA/B,CADH,CApEL,CADmB;AAAA,GAArB;;AA2EA,MAAMT,UAAU,GAAGpC,SAAS,GAAGA,SAAH,GAAeD,KAA3C;AACA,MAAMsC,wBAAwB,gBAAGrB,OAAO,CAACN,IAAI,CAACe,EAAN,CAAV,8CAAG,UAAkBC,QAAnD;AACA,MAAMc,uBAAuB,gBAAGxB,OAAO,CAACN,IAAI,CAACe,EAAN,CAAV,8CAAG,UAAkBqB,gBAAlD;AACA,SACE,MAAC,kBAAD;AAAoB,IAAA,OAAO,EAAElC,OAA7B;AAAsC,IAAA,SAAS,EAAC,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,GAAG,EAAEf,KADP;AAEE,IAAA,SAAS,EAAC,eAFZ;AAGE,IAAA,KAAK,EAAE;AAAEkD,MAAAA,QAAQ,EAAE;AAAZ,KAHT;AAIE,IAAA,GAAG,EAAEnD,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGK,iBAAiB,GAChB,4BACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBA,iBAAlB,MADF,CADgB,GAKhB,EAZJ,EAcGS,IAAI,CAACkB,gBAAL,IAAyB,CAAzB,GACC,4BACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaP,IAAI,CAACuB,aAAL,CAAmB;AAAEnB,IAAAA,EAAE,EAAE,YAAN;AAAoBoB,IAAAA,cAAc,EAAE;AAApC,GAAnB,CAAb,CADF,CADD,GAKC,EAnBJ,CADF,EAuBE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BjD,KAA/B,CADF,EAGE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,iBAAiB,GAChB;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,QADH,EAEGP,KAFH,CADgB,GAMhB,EAPJ,EAUE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,QADH,EAEG8B,UAFH,CAVF,CADF,EAgBE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CAHF,CAvBF,CADF;AA4FD,CA7ND;;GAAMzC,W;UAoBsDR,O,EAG7CI,O;;;KAvBTI,W;AA+NN,eAAeA,WAAf","sourcesContent":["// product card for general\nimport React, { useState } from 'react';\nimport Image from 'components/image/image';\nimport { Button } from 'components/button/button';\nimport {\n  ProductCardWrapper,\n  ProductImageWrapper,\n  ProductInfo,\n  DiscountPercent,\n  OutOfStock,\n  ButtonText,\n  PriceContainer,\n  PriceContainerRow,\n  ProductCartBtn,\n  ProductCartWrapper,\n  ProductPrice,\n  ProductPriceWrapper,\n  SalePrice,\n} from '../product-card.style';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { Counter } from 'components/counter/counter';\nimport { cartAnimation } from 'utils/cart-animation';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { CartIcon } from 'assets/icons/CartIcon';\nimport { ProductQuantityExceededMsg } from '../product-card.style';\nimport CartPopUp from 'features/carts/cart-popup-two';\nimport { CURRENCY } from 'utils/constant';\n\ntype ProductCardProps = {\n  title: string;\n  image: any;\n  weight: string;\n  currency: string;\n  description: string;\n  price: number;\n  salePrice?: number;\n  discountInPercent?: number;\n  data: any;\n  onClick?: (e: any) => void;\n  onChange?: (e: any) => void;\n  increment?: (e: any) => void;\n  decrement?: (e: any) => void;\n  cartProducts?: any;\n  addToCart?: any;\n  updateCart?: any;\n  value?: any;\n  deviceType?: any;\n};\n\nconst ProductCard: React.FC<ProductCardProps> = ({\n  title,\n  image,\n  weight,\n  price,\n  salePrice,\n  discountInPercent,\n  cartProducts,\n  addToCart,\n  updateCart,\n  value,\n  currency,\n  onChange,\n  increment,\n  decrement,\n  data,\n  deviceType,\n  onClick,\n  ...props\n}) => {\n  const { addItem, removeItem, getItem, isInCart, items } = useCart();\n  const [showProductQuantityExceededMsg, setShowProductQuantityExceededMsg] = useState(false);\n\n  const intl = useIntl();\n\n  const handleAddClick = (e) => {\n    const currentQuantity = getItem(data.id)?.quantity;\n    const stock = data.product_quantity;\n    if (stock <= currentQuantity) {\n      e.stopPropagation();\n      showProductQuantityExceededMsgFor5Sec()\n    } else {\n      e.stopPropagation();\n      addItem(data);\n      if (!isInCart(data.id)) {\n        cartAnimation(e);\n      }\n    }\n  };\n\n  const handleRemoveClick = (e) => {\n    e.stopPropagation();\n    removeItem(data);\n  };\n\n  const showProductQuantityExceededMsgFor5Sec = () => {\n    setShowProductQuantityExceededMsg(true);\n    setTimeout(() => {\n      setShowProductQuantityExceededMsg(false);\n    }, 1500)\n  };\n  const PriceContent = () => (\n    <>\n      {data.product_quantity != 0 ? (<ProductCartWrapper>\n        <ProductCartBtn style={{ display: 'flex' }}>\n            <PriceContainer>\n              <PriceContainerRow>\n                <ProductPriceWrapper>\n                  {data.discountInPercent ? (<SalePrice>{CURRENCY} {data.sale_price}</SalePrice>) : null}\n                  <ProductPrice>\n                    {CURRENCY}\n                    {finalPrice}\n                  </ProductPrice>\n                </ProductPriceWrapper>\n                { noRecicledQuantityInCart ? (\n                  <>\n                    <Counter\n                        value={getItem(data.id).quantity}\n                        onDecrement={handleRemoveClick}\n                        onIncrement={handleAddClick}\n                    />\n                    { showProductQuantityExceededMsg && (\n                      <ProductQuantityExceededMsg>\n                        <FormattedMessage id='productStockLimit' defaultMessage='There is no more availability of this product' />\n                      </ProductQuantityExceededMsg>\n                    )}\n                  </>\n                ) : (\n                  <Button className=\"cart-button\" variant=\"secondary\" borderRadius={100} onClick={handleAddClick}>\n                    <ButtonText>\n                      <FormattedMessage id={data.packagePrice > 0 ? \"addCartButtonNoPackage\" : \"addCartButton\"} defaultMessage=\"Cart\" />\n                    </ButtonText>\n                  </Button>\n                )}\n              </PriceContainerRow>\n              { data.packagePrice > 0 ? (\n                <PriceContainerRow>\n                  <ProductPriceWrapper>\n                    <ProductPrice> {CURRENCY} {Number(finalPrice - data.packagePrice)}</ProductPrice>\n                  </ProductPriceWrapper>\n                  { reclicledQuantityInCart ? (\n                  <>\n                    <Counter\n                        value={reclicledQuantityInCart}\n                        onDecrement={handleRecicledRemoveClick}\n                        onIncrement={handleRecicledAddClick}\n                    />\n                    { showProductQuantityExceededMsg && (\n                      <ProductQuantityExceededMsg>\n                        <FormattedMessage\n                          id='productStockLimit'\n                          defaultMessage='There is no more availability of this product'\n                        />\n                      </ProductQuantityExceededMsg>\n                    )}\n                  </>\n                ) : (\n                  <Button className=\"cart-button\" variant=\"secondary\" borderRadius={100} onClick={handleRecicledAddClick}>\n                    <ButtonText>\n                      <FormattedMessage id=\"addCartButton\" defaultMessage=\"Cart\" />\n                    </ButtonText>\n                  </Button>\n                )}\n                </PriceContainerRow>\n                ) : (null)\n              }\n            </PriceContainer>\n        </ProductCartBtn>\n        { (noRecicledQuantityInCart || reclicledQuantityInCart) && (<CartPopUp deviceType={deviceType}/>)}\n      </ProductCartWrapper>)\n      : (<ProductCartWrapper>\n            <p style={{color: '#ff5e5e'}}>{intl.formatMessage({ id: 'outOfStock', defaultMessage: 'Out of stock' })}</p>\n        </ProductCartWrapper>)\n      }\n    </>\n  )\n  const finalPrice = salePrice ? salePrice : price;\n  const noRecicledQuantityInCart = getItem(data.id)?.quantity;\n  const reclicledQuantityInCart = getItem(data.id)?.recicledQuantity;\n  return (\n    <ProductCardWrapper onClick={onClick} className=\"product-card\">\n      <ProductImageWrapper>\n        <Image\n          url={image}\n          className=\"product-image\"\n          style={{ position: 'relative' }}\n          alt={title}\n        />\n        {discountInPercent ? (\n          <>\n            <DiscountPercent>{discountInPercent}%</DiscountPercent>\n          </>\n        ) : (\n          ''\n        )}\n        {data.product_quantity == 0 ? (\n          <>\n            <OutOfStock>{intl.formatMessage({ id: 'outOfStock', defaultMessage: 'Out of stock' })}</OutOfStock>\n          </>\n        ) : (\n          ''\n        )}\n      </ProductImageWrapper>\n      <ProductInfo>\n        <h3 className=\"product-title\">{title}</h3>\n        {/* <span className=\"product-weight\">{weight}</span> */}\n        <div className=\"product-meta\">\n          <div className=\"productPriceWrapper\">\n            {discountInPercent ? (\n              <span className=\"discountedPrice\">\n                {currency}\n                {price}\n              </span>\n            ) : (\n              ''\n            )}\n\n            <span className=\"product-price\">\n              {currency}\n              {finalPrice}\n            </span>\n          </div>\n          <PriceContent />\n          {/* { data.product_quantity != 0 ? (!isInCart(data.id) ? (\n                <Button\n                    className=\"cart-button\"\n                    variant=\"secondary\"\n                    borderRadius={100}\n                    onClick={handleAddClick}\n                >\n                  <CartIcon/>\n                  <ButtonText>\n                    <FormattedMessage id=\"addCartButton2\" defaultMessage=\"Cart\"/>\n                  </ButtonText>\n                </Button>\n            ) : (\n                <Counter\n                    value={getItem(data.id).quantity}\n                    onDecrement={handleRemoveClick}\n                    onIncrement={handleAddClick}\n                />\n            )\n          ) : (\n            <Button\n              className=\"cart-button\"\n              variant=\"secondary\"\n              borderRadius={100}\n              onClick={(e) => {\n                e.preventDefault();\n              }}\n              disabled\n            >\n                <CartIcon/>\n              <ButtonText>\n                <FormattedMessage id=\"addCartButton\" defaultMessage=\"Cart\"/>\n              </ButtonText>\n            </Button>\n            )\n          } */}\n        </div>\n        {/* { showProductQuantityExceededMsg && (\n          <ProductQuantityExceededMsg>\n            <FormattedMessage\n              id='productStockLimit'\n              defaultMessage='There is no more availability of this product'\n            />\n          </ProductQuantityExceededMsg>\n        )} */}\n      </ProductInfo>\n    </ProductCardWrapper>\n  );\n};\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}