{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/delivery-selection/delivery-selection.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { DeliveryMethodsConstants, deliveryMethodCookieKeyName } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { GiftBox } from 'assets/icons/GiftBox';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport { CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Offer, OfferSection, Options, Wrapper } from './delivery-selection.style';\n\nconst DeliverySelection = (_ref) => {\n  var _deliverData$delivery;\n\n  let props = Object.assign({}, _ref);\n  const [deliveryMethodTypeSelected, setDeliveryMethodType] = React.useState();\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(undefined);\n  const {\n    data: deliverData\n  } = useQuery(DELIVERY_METHOD);\n  const deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items; // const [address, setDeliveryAddress] = useState(\"\");\n\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  useEffect(() => {\n    if (getCookie(deliveryMethodCookieKeyName) && !deliveryMethodSaved) {\n      const deliveryMethodSaved = JSON.parse(getCookie(deliveryMethodCookieKeyName));\n      setDeliveryMethodSaved(deliveryMethodSaved);\n    }\n  }, []);\n\n  const setDeliveryMethodAndSaveCookie = deli => {\n    setDeliveryMethod(deli);\n    setDeliveryMethodSaved(deli); // if (getCookie('first_visit')) {\n\n    setCookie(deliveryMethodCookieKeyName, deli); // }\n  };\n\n  const searchDeliveryZipCode = (e, deli) => {\n    handleOnFocus(e);\n    setZipCode(deli);\n    const deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n      return !deliveryMethod.isPickUp;\n    });\n    const methodFound = deliveryOptionsMethods.filter(method => method.name.includes(zipCode));\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : null);\n  };\n\n  const searchPickupZipCode = (e, deli) => {\n    handleOnFocus(e);\n    setZipCode(deli);\n    const pickUpOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n    const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode));\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : null);\n  };\n\n  const setDelivery = (e, deli) => {\n    e.stopPropagation();\n    setDeliveryMethodType(deli);\n    setSearchResult(null);\n    setZipCode('');\n  };\n\n  const handleOnFocus = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }; // deliveryMethodSelected\n\n\n  const isPickUpSelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n  return __jsx(DeliveryMethods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(Options, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(CardWrapper, {\n    color: isPickUpSelected ? '#0d1136' : '#e4f4fc',\n    onClick: e => setDelivery(e, DeliveryMethodsConstants.PICKUP),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Pickup\"), __jsx(CardWrapper, {\n    color: isDeliverySelected ? '#0d1136' : '#e4f4fc',\n    onClick: e => setDelivery(e, DeliveryMethodsConstants.DELIVERY),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Delivery\")), __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, !!deliveryMethodTypeSelected && __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, __jsx(Heading, {\n    onClick: e => handleOnFocus(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, isPickUpSelected ? __jsx(FormattedMessage, {\n    id: \"pickupModalheading\",\n    defaultMessage: \"Select Your Location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }) : __jsx(FormattedMessage, {\n    id: \"deliveryModalheading\",\n    defaultMessage: \"Select Your Location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    onClick: e => handleOnFocus(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    onFocus: e => handleOnFocus(e),\n    placeholder: \"ZIP Code\",\n    value: zipCode // we have to change the onChange because the is no one for the controller name actualy\n    ,\n    onChange: e => isPickUpSelected ? searchPickupZipCode(e, e.target.value) : searchDeliveryZipCode(e, e.target.value),\n    width: \"197px\",\n    height: \"34.5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  })), (searchResult === null || searchResult === void 0 ? void 0 : searchResult.length) === 0 && zipCode.length > 4 && __jsx(DeliveryText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 27\n    }\n  }, deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP ? 'No Dittos Pickup Locations found, yet, sorry' : 'Sorry, we dont deliver there, yet..'), (searchResult === null || searchResult === void 0 ? void 0 : searchResult.length) ? searchResult.map((result, i) => {\n    return __jsx(Checkbox, {\n      keyName: `${i}-results`,\n      isChecked: (deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === result.id,\n      labelText: `${result.name} - ${result.details}`,\n      id: `result-${i}`,\n      onChange: e => {\n        setDeliveryMethodAndSaveCookie((deliveryMethodSelected === null || deliveryMethodSelected === void 0 ? void 0 : deliveryMethodSelected.id) === result.id ? null : result);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 31\n      }\n    });\n  }) : ''), __jsx(OfferSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, __jsx(GiftBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }), __jsx(Offer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"locationModalFooter\",\n    defaultMessage: \"Free Delivery For 1st Order\",\n    values: {\n      number: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  })))));\n};\n\nexport default DeliverySelection;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/delivery-selection/delivery-selection.tsx"],"names":["React","useEffect","FormattedMessage","DeliveryMethodsConstants","deliveryMethodCookieKeyName","useQuery","DELIVERY_METHOD","GiftBox","Checkbox","getCookie","setCookie","CardWrapper","Container","DeliveryMethods","DeliveryText","Heading","Input","Offer","OfferSection","Options","Wrapper","DeliverySelection","props","deliveryMethodTypeSelected","setDeliveryMethodType","useState","deliveryMethodSelected","setDeliveryMethod","undefined","data","deliverData","deliveryMethods","items","zipCode","setZipCode","searchResult","setSearchResult","deliveryMethodSaved","JSON","parse","setDeliveryMethodSaved","setDeliveryMethodAndSaveCookie","deli","searchDeliveryZipCode","e","handleOnFocus","deliveryOptionsMethods","filter","deliveryMethod","isPickUp","methodFound","method","name","includes","stopPropagation","searchPickupZipCode","pickUpOptionsMethods","details","setDelivery","event","preventDefault","isPickUpSelected","PICKUP","isDeliverySelected","DELIVERY","target","value","length","map","result","i","id","number"],"mappings":";;AAAA,OAAOA,KAAP,IAA0BC,SAA1B,QAA+D,OAA/D;AACA,SAASC,gBAAT,QAA0C,YAA1C;AACA,SAASC,wBAAT,EAAmCC,2BAAnC,QAAsE,gBAAtE;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,eAArC;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,eAAjC,EAAkDC,YAAlD,EAAgEC,OAAhE,EAAyEC,KAAzE,EAAgFC,KAAhF,EAAuFC,YAAvF,EAAqGC,OAArG,EAA8GC,OAA9G,QAA6H,4BAA7H;;AAOA,MAAMC,iBAAkC,GAAG,UAAmB;AAAA;;AAAA,MAAbC,KAAa;AAC5D,QAAM,CAACC,0BAAD,EAA6BC,qBAA7B,IAAsDxB,KAAK,CAACyB,QAAN,EAA5D;AAEA,QAAM,CAACC,sBAAD,EAAyBC,iBAAzB,IAA8C3B,KAAK,CAACyB,QAAN,CAAeG,SAAf,CAApD;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAwBzB,QAAQ,CAACC,eAAD,CAAtC;AACA,QAAMyB,eAAe,GAAGD,WAAH,aAAGA,WAAH,gDAAGA,WAAW,CAAEC,eAAhB,0DAAG,sBAA8BC,KAAtD,CAL4D,CAM5D;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlC,KAAK,CAACyB,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCpC,KAAK,CAACyB,QAAN,CAAe,EAAf,CAAxC;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,SAAS,CAACL,2BAAD,CAAT,IAA0C,CAACiC,mBAA/C,EAAoE;AAClE,YAAMA,mBAAmB,GAAGC,IAAI,CAACC,KAAL,CAAW9B,SAAS,CAACL,2BAAD,CAApB,CAA5B;AACAoC,MAAAA,sBAAsB,CAACH,mBAAD,CAAtB;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMI,8BAA8B,GAAKC,IAAD,IAAU;AAChDf,IAAAA,iBAAiB,CAACe,IAAD,CAAjB;AACAF,IAAAA,sBAAsB,CAACE,IAAD,CAAtB,CAFgD,CAGhD;;AACAhC,IAAAA,SAAS,CAACN,2BAAD,EAA8BsC,IAA9B,CAAT,CAJgD,CAKhD;AACD,GAND;;AAQA,QAAMC,qBAAqB,GAAI,CAACC,CAAD,EAAIF,IAAJ,KAAa;AAC1CG,IAAAA,aAAa,CAACD,CAAD,CAAb;AACAV,IAAAA,UAAU,CAACQ,IAAD,CAAV;AACA,UAAMI,sBAAsB,GAAGf,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAEgB,MAAjB,CAAwBC,cAAc,IAAI;AACvE,aAAO,CAACA,cAAc,CAACC,QAAvB;AACD,KAF8B,CAA/B;AAIA,UAAMC,WAAW,GAAGJ,sBAAsB,CAACC,MAAvB,CAA8BI,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBpB,OAArB,CAAxC,CAApB;AACAW,IAAAA,CAAC,CAACU,eAAF;AACAlB,IAAAA,eAAe,CAACM,IAAI,GAAGQ,WAAH,GAAiB,IAAtB,CAAf;AACD,GAVD;;AAYA,QAAMK,mBAAmB,GAAI,CAACX,CAAD,EAAIF,IAAJ,KAAa;AACxCG,IAAAA,aAAa,CAACD,CAAD,CAAb;AACAV,IAAAA,UAAU,CAACQ,IAAD,CAAV;AACA,UAAMc,oBAAoB,GAAGzB,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAEgB,MAAjB,CAAwBC,cAAc,IAAI;AACrE,aAAOA,cAAc,CAACC,QAAf,KAA4B,IAAnC;AACD,KAF4B,CAA7B;AAIA,UAAMC,WAAW,GAAGM,oBAAoB,CAACT,MAArB,CAA4BI,MAAM,IAAIA,MAAM,CAACM,OAAP,CAAeJ,QAAf,CAAwBpB,OAAxB,CAAtC,CAApB;AAEAW,IAAAA,CAAC,CAACU,eAAF;AACAlB,IAAAA,eAAe,CAACM,IAAI,GAAGQ,WAAH,GAAiB,IAAtB,CAAf;AACD,GAXD;;AAaA,QAAMQ,WAAW,GAAI,CAACd,CAAD,EAAIF,IAAJ,KAAuC;AAC1DE,IAAAA,CAAC,CAACU,eAAF;AACA9B,IAAAA,qBAAqB,CAACkB,IAAD,CAArB;AACAN,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GALD;;AAOA,QAAMW,aAAa,GAAKc,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACL,eAAN;AACD,GAHD,CAzD4D,CA8D5D;;;AACA,QAAMO,gBAAgB,GAAGtC,0BAA0B,KAAKpB,wBAAwB,CAAC2D,MAAjF;AACA,QAAMC,kBAAkB,GAAGxC,0BAA0B,KAAKpB,wBAAwB,CAAC6D,QAAnF;AAEA,SACM,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEH,gBAAgB,GAAG,SAAH,GAAe,SAAnD;AAA8D,IAAA,OAAO,EAAGjB,CAAD,IAAOc,WAAW,CAACd,CAAD,EAAIzC,wBAAwB,CAAC2D,MAA7B,CAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEC,kBAAkB,GAAG,SAAH,GAAe,SAArD;AAAgE,IAAA,OAAO,EAAGnB,CAAD,IAAOc,WAAW,CAACd,CAAD,EAAIzC,wBAAwB,CAAC6D,QAA7B,CAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,EAKI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEM,CAAC,CAACzC,0BAAF,IACA,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAU,IAAA,OAAO,EAAGqB,CAAD,IAAOC,aAAa,CAACD,CAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMiB,gBAAgB,GAClB,MAAC,gBAAD;AACI,IAAA,EAAE,EAAC,oBADP;AAEI,IAAA,cAAc,EAAC,sBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkB,GAMlB,MAAC,gBAAD;AACI,IAAA,EAAE,EAAC,sBADP;AAEI,IAAA,cAAc,EAAC,sBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADF,EAcI;AAAK,IAAA,OAAO,EAAGjB,CAAD,IAAOC,aAAa,CAACD,CAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,OAAO,EAAGA,CAAD,IAAOC,aAAa,CAACD,CAAD,CAHjC;AAII,IAAA,WAAW,EAAC,UAJhB;AAKI,IAAA,KAAK,EAAEX,OALX,CAMI;AANJ;AAOI,IAAA,QAAQ,EAAGW,CAAD,IAAOiB,gBAAgB,GAAGN,mBAAmB,CAACX,CAAD,EAAIA,CAAC,CAACqB,MAAF,CAASC,KAAb,CAAtB,GAA4CvB,qBAAqB,CAACC,CAAD,EAAIA,CAAC,CAACqB,MAAF,CAASC,KAAb,CAPtG;AAQI,IAAA,KAAK,EAAC,OARV;AASI,IAAA,MAAM,EAAC,QATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdJ,EA2BM,CAAA/B,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEgC,MAAd,MAAyB,CAAzB,IAA8BlC,OAAO,CAACkC,MAAR,GAAiB,CAA/C,IACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe5C,0BAA0B,KAAKpB,wBAAwB,CAAC2D,MAAxD,GAAiE,8CAAjE,GAAkH,qCAAjI,CA5BR,EA8BK,CAAA3B,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEgC,MAAd,IAAuBhC,YAAY,CAACiC,GAAb,CAAiB,CAACC,MAAD,EAASC,CAAT,KAAe;AACpD,WACI,MAAC,QAAD;AACI,MAAA,OAAO,EAAG,GAAEA,CAAE,UADlB;AAEI,MAAA,SAAS,EAAE,CAAA5C,sBAAsB,SAAtB,IAAAA,sBAAsB,WAAtB,YAAAA,sBAAsB,CAAE6C,EAAxB,MAA+BF,MAAM,CAACE,EAFrD;AAGI,MAAA,SAAS,EAAG,GAAEF,MAAM,CAACjB,IAAK,MAAKiB,MAAM,CAACZ,OAAQ,EAHlD;AAII,MAAA,EAAE,EAAG,UAASa,CAAE,EAJpB;AAKI,MAAA,QAAQ,EAAE1B,CAAC,IAAI;AACXH,QAAAA,8BAA8B,CAAC,CAAAf,sBAAsB,SAAtB,IAAAA,sBAAsB,WAAtB,YAAAA,sBAAsB,CAAE6C,EAAxB,MAA+BF,MAAM,CAACE,EAAtC,GAA2C,IAA3C,GAAkDF,MAAnD,CAA9B;AACH,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUE,GAXkB,CAAvB,GAYQ,EA1Cb,CAHN,EAiDI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AACA,IAAA,EAAE,EAAC,qBADH;AAEA,IAAA,cAAc,EAAC,6BAFf;AAGA,IAAA,MAAM,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFA,CAjDJ,CALJ,CADN;AAqED,CAvID;;AAyIA,eAAenD,iBAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DeliveryMethodsConstants, deliveryMethodCookieKeyName } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { GiftBox } from 'assets/icons/GiftBox';\nimport Checkbox from 'components/checkbox/checkbox';\nimport { getCookie, setCookie } from 'utils/session';\nimport { CardWrapper, Container, DeliveryMethods, DeliveryText, Heading, Input, Offer, OfferSection, Options, Wrapper } from './delivery-selection.style';\n\ninterface Props {\n  deliveryMethodSaved: any\n  setDeliveryMethodSaved: any\n}\n\nconst DeliverySelection: React.FC<Props> = ({ ...props  }) => {\n  const [deliveryMethodTypeSelected, setDeliveryMethodType] = React.useState();\n\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(undefined);\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  // const [address, setDeliveryAddress] = useState(\"\");\n  const [zipCode, setZipCode] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]);\n  \n  useEffect(() => {\n    if (getCookie(deliveryMethodCookieKeyName) && !deliveryMethodSaved) {\n      const deliveryMethodSaved = JSON.parse(getCookie(deliveryMethodCookieKeyName));\n      setDeliveryMethodSaved(deliveryMethodSaved)\n    }\n  }, []);\n  \n  const setDeliveryMethodAndSaveCookie =  (deli) => {\n    setDeliveryMethod(deli)\n    setDeliveryMethodSaved(deli)\n    // if (getCookie('first_visit')) {\n    setCookie(deliveryMethodCookieKeyName, deli);\n    // }\n  };\n  \n  const searchDeliveryZipCode =  (e, deli) => {\n    handleOnFocus(e)\n    setZipCode(deli)\n    const deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      return !deliveryMethod.isPickUp;\n    });\n\n    const methodFound = deliveryOptionsMethods.filter(method => method.name.includes(zipCode));\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : null)\n  };\n  \n  const searchPickupZipCode =  (e, deli) => {\n    handleOnFocus(e)\n    setZipCode(deli)\n    const pickUpOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      return deliveryMethod.isPickUp === true;\n    });\n\n    const methodFound = pickUpOptionsMethods.filter(method => method.details.includes(zipCode));\n\n    e.stopPropagation();\n    setSearchResult(deli ? methodFound : null)\n  };\n\n  const setDelivery =  (e, deli: DeliveryMethodsConstants) => {\n    e.stopPropagation();\n    setDeliveryMethodType(deli)\n    setSearchResult(null)\n    setZipCode('')\n  };\n\n  const handleOnFocus =  (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n  };\n\n  // deliveryMethodSelected\n  const isPickUpSelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP;\n  const isDeliverySelected = deliveryMethodTypeSelected === DeliveryMethodsConstants.DELIVERY;\n\n  return (\n        <DeliveryMethods>\n            <Options>\n                <CardWrapper color={isPickUpSelected ? '#0d1136' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.PICKUP)}>Pickup</CardWrapper> \n                <CardWrapper color={isDeliverySelected ? '#0d1136' : '#e4f4fc'} onClick={(e) => setDelivery(e, DeliveryMethodsConstants.DELIVERY)}>Delivery</CardWrapper> \n            </Options>\n            <Wrapper>\n            \n                { !!deliveryMethodTypeSelected && (\n                  <Container>\n                    <Heading  onClick={(e) => handleOnFocus(e)}>\n                        { isPickUpSelected ? (\n                        <FormattedMessage\n                            id=\"pickupModalheading\"\n                            defaultMessage=\"Select Your Location\"\n                        />\n                        ) : (\n                        <FormattedMessage\n                            id=\"deliveryModalheading\"\n                            defaultMessage=\"Select Your Location\"\n                        />\n                        )}\n                      </Heading>\n                      <div onClick={(e) => handleOnFocus(e)}>\n                        <Input\n                            type='text'\n                            name='name'\n                            onFocus={(e) => handleOnFocus(e)}\n                            placeholder='ZIP Code'\n                            value={zipCode}\n                            // we have to change the onChange because the is no one for the controller name actualy\n                            onChange={(e) => isPickUpSelected ? searchPickupZipCode(e, e.target.value) : searchDeliveryZipCode(e, e.target.value)}\n                            width='197px'\n                            height='34.5px'\n                        />\n                      </div>\n                      { searchResult?.length === 0 && zipCode.length > 4 && (\n                          <DeliveryText>{deliveryMethodTypeSelected === DeliveryMethodsConstants.PICKUP ? 'No Dittos Pickup Locations found, yet, sorry' : 'Sorry, we dont deliver there, yet..'}</DeliveryText>\n                      )}\n                      {searchResult?.length ? searchResult.map((result, i) => {\n                          return (\n                              <Checkbox\n                                  keyName={`${i}-results`}\n                                  isChecked={deliveryMethodSelected?.id === result.id}\n                                  labelText={`${result.name} - ${result.details}`}\n                                  id={`result-${i}`}\n                                  onChange={e => {\n                                      setDeliveryMethodAndSaveCookie(deliveryMethodSelected?.id === result.id ? null : result)\n                                  }}\n                              />\n                          )}\n                          ) : ('')\n                      }\n                  </Container>\n                )}\n                <OfferSection>\n                <GiftBox />\n                <Offer>\n                    <FormattedMessage\n                    id=\"locationModalFooter\"\n                    defaultMessage=\"Free Delivery For 1st Order\"\n                    values={{ number: 1 }}\n                    />\n                </Offer>\n                </OfferSection>\n            </Wrapper>\n        </DeliveryMethods>\n  );\n\n};\n\nexport default DeliverySelection;\n\n"]},"metadata":{},"sourceType":"module"}