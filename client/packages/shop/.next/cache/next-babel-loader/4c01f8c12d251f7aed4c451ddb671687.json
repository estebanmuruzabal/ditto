{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { BannerIcon, BannerText, DeliveryMethods, DeliveryText, LocationContent, MethodOption, SubHeaderWrapper } from './sub-header.style';\nimport { openModal } from '@redq/reuse-modal';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from 'features/authentication-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\n\nconst LocationMenu = ({\n  cityAndStateText,\n  deliveryMethodSelected,\n  isOpen\n}) => {\n  return __jsx(LocationContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, isOpen ? __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleDown,\n    className: \"fas fa-chevron-down\",\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleUp,\n    className: \"fas fa-chevron-up\",\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }\n  }), __jsx(DeliveryText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, deliveryMethodSelected), \"|\", __jsx(BannerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: DeliveryIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  })), __jsx(BannerText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, cityAndStateText && cityAndStateText));\n};\n\nconst SubHeader = (_ref) => {\n  var _deliverData$delivery;\n\n  let props = Object.assign({}, _ref);\n  const {\n    location\n  } = useLocale();\n  const mobile = useMedia('(max-width: 580px)');\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(DeliveryMethodsConstants.PICKUP);\n  const {\n    data: deliverData\n  } = useQuery(DELIVERY_METHOD);\n  const {\n    authDispatch\n  } = useContext(AuthContext);\n  const [subHeaderModal, setSubHeaderModal] = React.useState(false);\n\n  const setDelivery = (e, deli) => {\n    e.stopPropagation();\n    setDeliveryMethod(deli);\n  };\n\n  const deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items; // const orderDeliveryMethod = deliveryMethods?.filter(method => method.id === myOrder?.delivery_method_id)[0];\n  // const deliveryDateAndTime = `${myOrder?.delivery_pickup_date} ${getDeliverySchedule(orderDeliveryMethod?.details, intl.locale)}`;\n\n  console.log('deliveryMethods', deliveryMethods);\n  const pickedUpOptionIds = deliveryMethods.map(deliveryMethod => {\n    return deliveryMethod.isPickUp ? deliveryMethod : null;\n  });\n  console.log('deliveryMethods', pickedUpOptionIds);\n  const isPickUp = deliveryMethodSelected === DeliveryMethodsConstants.PICKUP;\n  const cityAndStateText = location ? mobile ? `${location.split(', ')[1]}, ${location.split(', ')[2]}` : `${location.split(', ')[0]}, ${location.split(', ')[1]}` : '';\n\n  const openLocationModal = () => {\n    authDispatch({\n      type: 'LOCATION_MODAL'\n    });\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto'\n      }\n    });\n  };\n\n  return __jsx(SubHeaderWrapper, {\n    className: props.className,\n    id: \"layout-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverBigger, {\n    direction: \"left\",\n    className: \"user-pages-dropdown\",\n    openHandler: __jsx(LocationMenu, {\n      isOpen: false,\n      deliveryMethodSelected: deliveryMethodSelected,\n      cityAndStateText: cityAndStateText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 22\n      }\n    }),\n    closeHandler: __jsx(LocationMenu, {\n      isOpen: true,\n      deliveryMethodSelected: deliveryMethodSelected,\n      cityAndStateText: cityAndStateText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }\n    }),\n    content: __jsx(DeliveryMethods, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, __jsx(DeliveryMethods, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, __jsx(MethodOption, {\n      onClick: e => setDelivery(e, DeliveryMethodsConstants.PICKUP),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"Pickup\"), __jsx(MethodOption, {\n      onClick: e => setDelivery(e, DeliveryMethodsConstants.DELIVERY),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, \"Delivery\")), deliveryMethodSelected === DeliveryMethodsConstants.PICKUP ? __jsx(\"div\", {\n      onClick: () => openLocationModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Find the closest PickUp Location\") : __jsx(\"div\", {\n      onClick: () => openLocationModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Check delivery address ZIP CODE\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SubHeader;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx"],"names":["React","useContext","BannerIcon","BannerText","DeliveryMethods","DeliveryText","LocationContent","MethodOption","SubHeaderWrapper","openModal","useLocale","DeliveryIcon","useMedia","PopoverBigger","AuthContext","AuthenticationForm","FontAwesomeIcon","faChevronCircleDown","faChevronCircleUp","DeliveryMethodsConstants","useQuery","DELIVERY_METHOD","LocationMenu","cityAndStateText","deliveryMethodSelected","isOpen","color","SubHeader","props","location","mobile","setDeliveryMethod","useState","PICKUP","data","deliverData","authDispatch","subHeaderModal","setSubHeaderModal","setDelivery","e","deli","stopPropagation","deliveryMethods","items","console","log","pickedUpOptionIds","map","deliveryMethod","isPickUp","split","openLocationModal","type","show","overlayClassName","closeOnClickOutside","component","closeComponent","config","enableResizing","disableDragging","className","width","height","DELIVERY"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { BannerIcon, BannerText, DeliveryMethods, DeliveryText, LocationContent, MethodOption, SubHeaderWrapper } from './sub-header.style';\nimport { openModal } from '@redq/reuse-modal';\nimport { useLocale } from 'contexts/language/language.provider';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport Popover from 'components/popover/popover';\nimport { useMedia } from 'utils/use-media';\nimport { MenuItem } from 'layouts/header/menu/language-switcher/language-switcher.style';\nimport { FormattedMessage } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport LocationModal from 'features/location-modal/location-modal';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from 'features/authentication-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faChevronCircleDown, faChevronCircleUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\n\ninterface Props {\n  className: string\n}\n\n\nconst LocationMenu = ({ cityAndStateText, deliveryMethodSelected, isOpen }) => {\n  \n  return (\n    <LocationContent>\n        { isOpen \n          ? (<FontAwesomeIcon icon={faChevronCircleDown} className=\"fas fa-chevron-down\" style={{ color: \"black\" }} />) \n          : (<FontAwesomeIcon icon={faChevronCircleUp} className=\"fas fa-chevron-up\" style={{ color: \"black\" }} />)\n        }\n        <DeliveryText>{deliveryMethodSelected}</DeliveryText>\n        |\n        <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>\n        <BannerText>{cityAndStateText && cityAndStateText}</BannerText>\n      </LocationContent>\n  );\n};\n\n\nconst SubHeader: React.FC<Props> = ({ ...props  }) => {\n  const { location } = useLocale();\n  const mobile = useMedia('(max-width: 580px)');\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState<DeliveryMethodsConstants>(DeliveryMethodsConstants.PICKUP);\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  const { authDispatch } = useContext<any>(AuthContext);\n  const [subHeaderModal, setSubHeaderModal] = React.useState(false);\n\n  const setDelivery =  (e, deli) => {\n    e.stopPropagation();\n    setDeliveryMethod(deli)\n  };\n\n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  // const orderDeliveryMethod = deliveryMethods?.filter(method => method.id === myOrder?.delivery_method_id)[0];\n  // const deliveryDateAndTime = `${myOrder?.delivery_pickup_date} ${getDeliverySchedule(orderDeliveryMethod?.details, intl.locale)}`;\n  console.log('deliveryMethods', deliveryMethods)\n\n  const pickedUpOptionIds = deliveryMethods.map(deliveryMethod => {\n    return deliveryMethod.isPickUp ? deliveryMethod : null;\n  });\n  console.log('deliveryMethods', pickedUpOptionIds)\n  const isPickUp = deliveryMethodSelected === DeliveryMethodsConstants.PICKUP;\n  const cityAndStateText = location ? mobile ?\n    `${location.split(', ')[1]}, ${location.split(', ')[2]}`\n    : `${location.split(', ')[0]}, ${location.split(', ')[1]}`\n    : '';\n\n  const openLocationModal = () => {\n    authDispatch({\n      type: 'LOCATION_MODAL',\n    });\n\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto',\n      },\n    });\n\n  };\n\n  return (\n    <SubHeaderWrapper className={props.className} id=\"layout-header\">\n      <PopoverBigger\n        direction=\"left\"\n        className=\"user-pages-dropdown\"\n        openHandler={<LocationMenu\n          isOpen={false} deliveryMethodSelected={deliveryMethodSelected} cityAndStateText={cityAndStateText} />\n        }\n        closeHandler={<LocationMenu\n          isOpen={true} deliveryMethodSelected={deliveryMethodSelected} cityAndStateText={cityAndStateText}/>\n        }\n        content={\n          <DeliveryMethods>\n      \n            <DeliveryMethods>\n              <MethodOption onClick={(e) => setDelivery(e, DeliveryMethodsConstants.PICKUP)}>Pickup</MethodOption> \n              <MethodOption onClick={(e) => setDelivery(e, DeliveryMethodsConstants.DELIVERY)}>Delivery</MethodOption> \n            </DeliveryMethods>\n            { deliveryMethodSelected === DeliveryMethodsConstants.PICKUP ? (\n              <div onClick={() => openLocationModal()}>Find the closest PickUp Location</div>\n            ) : (\n              <div onClick={() => openLocationModal()}>Check delivery address ZIP CODE</div>\n            )}\n        </DeliveryMethods>\n        }\n      />\n  </SubHeaderWrapper>\n  );\n\n};\n\nexport default SubHeader;\n"]},"metadata":{},"sourceType":"module"}