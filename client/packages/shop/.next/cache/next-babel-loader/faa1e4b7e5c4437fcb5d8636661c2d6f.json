{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query staffs {\\n    getStaffs {\\n      id\\n      name\\n      email\\n      role\\n      created_at\\n      phones{\\n        number\\n        id\\n        is_primary\\n      }\\n      workInfo{\\n        stoppedWorkTime\\n        startedWorkTime\\n        ratePerHour\\n        totalWorkingMinutesPerWeek\\n        totalSalaryToPayWeekly\\n        advancedSalaryPaid\\n        isWorking\\n        taskRelated\\n      }\\n      tasks{\\n        startDate\\n        finishDate\\n        plannedDate\\n        isRepetitived\\n        completationTimes\\n        isDone\\n        description\\n        workedHours\\n      }\\n      logs{\\n        logDescription\\n        timestamp\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { Modal } from '@redq/reuse-modal';\nimport { GET_LOGGED_IN_USER } from 'graphql/query/customer.query';\nimport { WorkProvider } from 'contexts/work/work.provider';\nimport WorkContent from 'features/user-profile/work/work';\nimport { PageWrapper, SidebarSection, ContentBox } from 'features/user-profile/user-profile.style';\nimport Sidebar from 'features/user-profile/sidebar/sidebar';\nimport { SEO } from 'components/seo';\nimport ErrorMessage from 'components/error-message/error-message';\nimport gql from 'graphql-tag';\nvar GET_STAFFS = gql(_templateObject());\n\nvar WorkPage = function WorkPage(_ref) {\n  var deviceType = _ref.deviceType;\n\n  var _useQuery = useQuery(GET_LOGGED_IN_USER),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  var _useQuery2 = useQuery(GET_STAFFS),\n      staffData = _useQuery2.data,\n      staffError = _useQuery2.error,\n      refetch = _useQuery2.refetch;\n\n  console.log('data.getUser:::', staffData);\n\n  if (!data || loading) {\n    return __jsx(\"div\", null, \"loading...\");\n  }\n\n  if (error) return __jsx(ErrorMessage, {\n    message: error.message\n  });\n  return __jsx(React.Fragment, null, __jsx(SEO, {\n    title: \"Work - Ditto\",\n    description: \"Work Details\"\n  }), __jsx(WorkProvider, {\n    initData: data.getUser\n  }, __jsx(Modal, null, __jsx(PageWrapper, null, __jsx(SidebarSection, null, __jsx(Sidebar, null)), __jsx(ContentBox, null, __jsx(WorkContent, {\n    deviceType: deviceType\n  }))))));\n};\n\nexport default WorkPage;","map":null,"metadata":{},"sourceType":"module"}