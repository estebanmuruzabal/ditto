{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/user-profile/order/order-card/order-card-mobile.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Collapse, { Panel } from 'rc-collapse';\nimport { useIntl } from 'react-intl';\nimport { OrderListHeader, TrackID, Status, OrderMeta, Meta, CardWrapper, OrderDetail, DeliveryInfo, DeliveryAddress, Address, Contact, CostCalculation, PriceRow, Price, Text, OrderTable, LinkPickUp } from './order-card.style';\nimport { CURRENCY } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nvar components = {\n  table: OrderTable\n};\n\nvar OrderCard = function OrderCard(_ref) {\n  _s();\n\n  var _deliverData$delivery;\n\n  var onClick = _ref.onClick,\n      className = _ref.className,\n      columns = _ref.columns,\n      progressData = _ref.progressData,\n      orders = _ref.orders;\n  //   const displayDetail = className === 'active' ? '100%' : '0';\n  var addAllClasses = ['accordion'];\n\n  var _useQuery = useQuery(DELIVERY_METHOD),\n      deliverData = _useQuery.data,\n      deliveryError = _useQuery.error,\n      deliveryLoading = _useQuery.loading,\n      deliveryRefetch = _useQuery.refetch;\n\n  var intl = useIntl();\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  var capitalizeFirstLetter = function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  var getDeliverySchedule = function getDeliverySchedule(details) {\n    if (!details) return '';\n    var word = 'Horario: ';\n    var index = details.indexOf(word); // 8\n\n    var length = word.length; // 7\n\n    return details.slice(index + length);\n  };\n\n  console.log(orders);\n  var deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items;\n  return __jsx(React.Fragment, null, __jsx(Collapse, {\n    accordion: true,\n    className: addAllClasses.join(' '),\n    defaultActiveKey: \"active\",\n    expandIcon: function expandIcon() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, orders.map(function (order) {\n    var orderDeliveryMethod = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (method) {\n      return method.id === (order === null || order === void 0 ? void 0 : order.delivery_method_id);\n    })[0];\n    var deliveryDateAndTime = \"\".concat(order === null || order === void 0 ? void 0 : order.delivery_date, \" \").concat(getDeliverySchedule(orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.details));\n    return __jsx(Panel, {\n      header: __jsx(CardWrapper, {\n        onClick: onClick,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, __jsx(OrderListHeader, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, __jsx(TrackID, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, intl.formatMessage({\n        id: 'order',\n        defaultMessage: 'Order'\n      }), \" \", __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 86\n        }\n      }, \"  #\", order === null || order === void 0 ? void 0 : order.id.slice((order === null || order === void 0 ? void 0 : order.id.length) - 4, order === null || order === void 0 ? void 0 : order.id.length))), __jsx(Status, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, order.status)), __jsx(OrderMeta, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      }, __jsx(Meta, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, intl.formatMessage({\n        id: 'deliveryMethodTitle',\n        defaultMessage: 'Delivery Method:'\n      }), \" \", __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 115\n        }\n      }, orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.name)), (orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.isPickUp) ? __jsx(React.Fragment, null, __jsx(Meta, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, intl.formatMessage({\n        id: 'deliveryTime',\n        defaultMessage: 'Delivery Time'\n      }), __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 108\n        }\n      }, capitalizeFirstLetter(deliveryDateAndTime))), __jsx(Meta, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, intl.formatMessage({\n        id: 'deliveryLocationText',\n        defaultMessage: 'Delivery Location:'\n      }), __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 27\n        }\n      }, (orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.pickUpAddress.includes('http')) ? __jsx(LinkPickUp, {\n        href: orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.pickUpAddress,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 34\n        }\n      }, \"Click/toque aqu\\xED\") : __jsx(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 34\n        }\n      }, orderDeliveryMethod === null || orderDeliveryMethod === void 0 ? void 0 : orderDeliveryMethod.pickUpAddress)))) : __jsx(React.Fragment, null, __jsx(Meta, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, intl.formatMessage({\n        id: 'deliveryDateTitle',\n        defaultMessage: 'Delivery Date:'\n      }), __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 114\n        }\n      }, capitalizeFirstLetter(deliveryDateAndTime))), __jsx(Meta, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }, intl.formatMessage({\n        id: 'deliveryAddress',\n        defaultMessage: 'Delivery Address:'\n      }), \" \", __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 116\n        }\n      }, order === null || order === void 0 ? void 0 : order.delivery_address))), __jsx(Meta, {\n        className: \"price\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, intl.formatMessage({\n        id: 'totalPrice',\n        defaultMessage: 'Total Price:'\n      }), __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 23\n        }\n      }, CURRENCY, order.total)))),\n      headerClass: \"accordion-title\",\n      key: order.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, __jsx(OrderDetail, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, __jsx(DeliveryInfo, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, __jsx(DeliveryAddress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, __jsx(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, intl.formatMessage({\n      id: 'productInfo',\n      defaultMessage: 'Purchased products details can be checked on'\n    }))), __jsx(DeliveryAddress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, __jsx(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, intl.formatMessage({\n      id: 'contactNumber',\n      defaultMessage: 'Contact Number'\n    })), __jsx(Contact, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, order.contact_number)), __jsx(DeliveryAddress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, __jsx(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, intl.formatMessage({\n      id: 'deliveryAddress',\n      defaultMessage: 'Delivery Address'\n    })), __jsx(Address, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, order.delivery_address)), __jsx(CostCalculation, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, __jsx(PriceRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, \"Subtotal\", __jsx(Price, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }\n    }, CURRENCY, order.sub_total)), __jsx(PriceRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, intl.formatMessage({\n      id: 'discount',\n      defaultMessage: 'Discount'\n    }), __jsx(Price, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 23\n      }\n    }, CURRENCY, order.discount || '0')), __jsx(PriceRow, {\n      className: \"grandTotal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, \"Total\", __jsx(Price, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 23\n      }\n    }, CURRENCY, order.total))))));\n  })));\n};\n\n_s(OrderCard, \"agTCYdHRU/S41/h9hio4MyJQnbo=\", false, function () {\n  return [useQuery, useIntl];\n});\n\n_c = OrderCard;\nexport default OrderCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderCard\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/user-profile/order/order-card/order-card-mobile.tsx"],"names":["React","Collapse","Panel","useIntl","OrderListHeader","TrackID","Status","OrderMeta","Meta","CardWrapper","OrderDetail","DeliveryInfo","DeliveryAddress","Address","Contact","CostCalculation","PriceRow","Price","Text","OrderTable","LinkPickUp","CURRENCY","useQuery","DELIVERY_METHOD","components","table","OrderCard","onClick","className","columns","progressData","orders","addAllClasses","deliverData","data","deliveryError","error","deliveryLoading","loading","deliveryRefetch","refetch","intl","push","capitalizeFirstLetter","string","charAt","toUpperCase","slice","getDeliverySchedule","details","word","index","indexOf","length","console","log","deliveryMethods","items","join","map","order","orderDeliveryMethod","filter","method","id","delivery_method_id","deliveryDateAndTime","delivery_date","formatMessage","defaultMessage","status","name","isPickUp","pickUpAddress","includes","delivery_address","total","contact_number","sub_total","discount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from 'rc-table';\nimport Collapse, { Panel } from 'rc-collapse';\nimport ReactToPrint from \"react-to-print\";\nimport Progress from 'components/progress-box/progress-box';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport {\n  OrderListHeader,\n  TrackID,\n  Status,\n  OrderMeta,\n  Meta,\n  CardWrapper,\n  OrderDetail,\n  DeliveryInfo,\n  DeliveryAddress,\n  Address,\n  Contact,\n  CostCalculation,\n  PriceRow,\n  Price,\n  ProgressWrapper,\n  Text,\n  OrderTable,\n  LinkPickUp,\n  OrderTableMobile,\n} from './order-card.style';\n\nimport { CURRENCY } from 'utils/constant';\nimport moment from 'moment';\nimport { date } from 'yup';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\n\ntype MobileOrderCardProps = {\n  orderId?: any;\n  onClick?: (e: any) => void;\n  className?: any;\n  status?: any;\n  date?: any;\n  deliveryTime?: any;\n  amount?: number;\n  tableData?: any;\n  columns?: any;\n  progressData?: any;\n  progressStatus?: any;\n  address?: string;\n  subtotal?: number;\n  discount?: number;\n  deliveryMethod?: any;\n  deliveryFee?: number;\n  grandTotal?: number;\n  orders?: any;\n};\n\nconst components = {\n  table: OrderTable,\n};\n\nconst OrderCard: React.FC<MobileOrderCardProps> = ({\n  onClick,\n  className,\n  columns,\n  progressData,\n  orders,\n}) => {\n  //   const displayDetail = className === 'active' ? '100%' : '0';\n  const addAllClasses: string[] = ['accordion'];\n  const { data: deliverData, error: deliveryError, loading: deliveryLoading, refetch: deliveryRefetch } = useQuery(DELIVERY_METHOD)\n  \n  const intl = useIntl();\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  const getDeliverySchedule = (details) => {\n    if (!details) return '';\n    const word = 'Horario: ';\n\n    const index = details.indexOf(word);   // 8\n    const length = word.length;\t\t\t// 7\n\n    return details.slice(index + length);\n  }\n  console.log(orders)\n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n\n  return (\n    <>\n      <Collapse\n        accordion={true}\n        className={addAllClasses.join(' ')}\n        defaultActiveKey=\"active\"\n        expandIcon={() => { }}\n      >\n        {orders.map((order: any) => {\n          const orderDeliveryMethod = deliveryMethods?.filter(method => method.id === order?.delivery_method_id)[0];\n          const deliveryDateAndTime = `${order?.delivery_date} ${getDeliverySchedule(orderDeliveryMethod?.details)}`;\n          return (\n            <Panel\n              header={\n                <CardWrapper onClick={onClick}>\n                  <OrderListHeader>\n                    <TrackID>\n                      {intl.formatMessage({ id: 'order', defaultMessage: 'Order' })} <span>  #{order?.id.slice(order?.id.length - 4, order?.id.length)}</span>\n                    </TrackID>\n                    <Status>{order.status}</Status>\n                  </OrderListHeader>\n\n                  <OrderMeta>\n                    <Meta>{intl.formatMessage({ id: 'deliveryMethodTitle', defaultMessage: 'Delivery Method:' })} <span>{orderDeliveryMethod?.name}</span></Meta>\n                    {orderDeliveryMethod?.isPickUp ? (\n                      <>\n                        <Meta>{intl.formatMessage({ id: 'deliveryTime', defaultMessage: 'Delivery Time' })}<span>{capitalizeFirstLetter(deliveryDateAndTime)}</span></Meta>\n                        <Meta>{intl.formatMessage({ id: 'deliveryLocationText', defaultMessage: 'Delivery Location:' })}\n                          <span>\n                            { orderDeliveryMethod?.pickUpAddress.includes('http')\n                              ? (<LinkPickUp href={orderDeliveryMethod?.pickUpAddress} target=\"_blank\" rel=\"noopener noreferrer\">Click/toque aquí</LinkPickUp>) \n                              : (<Text>{orderDeliveryMethod?.pickUpAddress}</Text>)\n                            }\n                          </span>\n                        </Meta>\n                      </>\n                    ) : (\n                        <>\n                        <Meta>{intl.formatMessage({ id: 'deliveryDateTitle', defaultMessage: 'Delivery Date:' })}<span>{capitalizeFirstLetter(deliveryDateAndTime)}</span></Meta>\n                        <Meta>{intl.formatMessage({ id: 'deliveryAddress', defaultMessage: 'Delivery Address:' })} <span>{order?.delivery_address}</span></Meta>\n                      </>\n                    )}\n\n                    <Meta className=\"price\">\n                      {intl.formatMessage({ id: 'totalPrice', defaultMessage: 'Total Price:' })}\n                      <span>\n                        {CURRENCY}\n                        {order.total}\n                      </span>\n                    </Meta>\n                  </OrderMeta>\n                </CardWrapper>\n              }\n              headerClass=\"accordion-title\"\n              key={order.id}\n            >\n              <OrderDetail>\n                <DeliveryInfo>\n                  <DeliveryAddress>\n                    <h3>{intl.formatMessage({ id: 'productInfo', defaultMessage: 'Purchased products details can be checked on' })}</h3>\n                  </DeliveryAddress>\n                  <DeliveryAddress>\n                    <h3>{intl.formatMessage({ id: 'contactNumber', defaultMessage: 'Contact Number' })}</h3>\n                    <Contact>{order.contact_number}</Contact>\n                  </DeliveryAddress>\n                  <DeliveryAddress>\n                    <h3>{intl.formatMessage({ id: 'deliveryAddress', defaultMessage: 'Delivery Address' })}</h3>\n                    <Address>{order.delivery_address}</Address>\n                  </DeliveryAddress>\n                  <CostCalculation>\n                    <PriceRow>\n                      Subtotal\n                      <Price>\n                        {CURRENCY}\n                        {order.sub_total}\n                      </Price>\n                    </PriceRow>\n                    <PriceRow>\n                      {intl.formatMessage({ id: 'discount', defaultMessage: 'Discount' })}\n                      <Price>\n                        {CURRENCY}\n                        {order.discount || '0'}\n                      </Price>\n                    </PriceRow>\n                    <PriceRow className=\"grandTotal\">\n                      Total\n                      <Price>\n                        {CURRENCY}\n                        {order.total}\n                      </Price>\n                    </PriceRow>\n                  </CostCalculation>\n                </DeliveryInfo>\n\n                {/*<ProgressWrapper>\n                  <Progress data={progressData} status={order.status} />\n                </ProgressWrapper>\n\n                <OrderTableMobile>\n                  <Table\n                    columns={columns}\n                    data={order.products}\n                    rowKey={(record) => record.id}\n                    components={components}\n                    scroll={{ x: 450 }}\n                    // scroll={{ y: 250 }}\n                  />\n                </OrderTableMobile>*/}\n              </OrderDetail>\n            </Panel>\n          )}\n        )}\n      </Collapse>\n    </>\n  );\n};\n\nexport default OrderCard;\n"]},"metadata":{},"sourceType":"module"}