{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport Cart from './cart';\nimport CartPopupButton, { BoxedCartButton } from 'components/cart-popup/cart-popup-button';\nimport { CURRENCY } from 'utils/constant';\nimport { CartSlidePopup } from './cart.style';\nimport { FormattedMessage } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\nconst CartPopupStyle = createGlobalStyle`\n  .cartPopup{\n    top: auto !important;\n    left: auto !important;\n    bottom: 50px !important;\n    right: 50px !important;\n    box-shadow: ${themeGet('shadows.big', '0 21px 36px rgba(0, 0, 0, 0.16)')};\n    transform-origin: bottom right;\n\n    @media (max-width: 580px) {\n      max-width: none!important;\n      width: 100% !important;\n      bottom: 0 !important;\n      left: 0!important;\n      background: ${themeGet('colors.white', '#ffffff')};\n      overflow: initial !important;\n      transform-origin: bottom center;\n    }\n  }\n`;\n\nconst CartPopUp = ({\n  deviceType: {\n    mobile,\n    tablet,\n    desktop\n  }\n}) => {\n  const {\n    isOpen,\n    cartItemsCount,\n    toggleCart,\n    calculatePrice\n  } = useCart();\n\n  const handleModal = () => {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40\n        }\n      },\n      closeOnClickOutside: true,\n      component: Cart,\n      closeComponent: () => __jsx(\"div\", null),\n      componentProps: {\n        onCloseBtnClick: closeModal,\n        scrollbarHeight: 330\n      }\n    });\n  };\n\n  let cartSliderClass = isOpen === true ? 'cartPopupFixed' : '';\n  return __jsx(React.Fragment, null, mobile ? __jsx(React.Fragment, null, __jsx(CartPopupStyle, null), __jsx(CartPopupButton, {\n    className: \"product-cart\",\n    itemCount: cartItemsCount,\n    itemPostfix: cartItemsCount > 1 ? __jsx(FormattedMessage, {\n      id: \"cartItems\",\n      defaultMessage: \"items\"\n    }) : __jsx(FormattedMessage, {\n      id: \"cartItem\",\n      defaultMessage: \"item\"\n    }),\n    price: calculatePrice(),\n    pricePrefix: \"$\",\n    onClick: handleModal\n  })) : __jsx(React.Fragment, null, __jsx(CartSlidePopup, {\n    className: cartSliderClass\n  }, isOpen && __jsx(Cart, {\n    onCloseBtnClick: toggleCart,\n    scrollbarHeight: \"100vh\"\n  })), __jsx(BoxedCartButton, {\n    className: \"product-cart\",\n    itemCount: cartItemsCount,\n    itemPostfix: cartItemsCount > 1 ? __jsx(FormattedMessage, {\n      id: \"cartItems\",\n      defaultMessage: \"items\"\n    }) : __jsx(FormattedMessage, {\n      id: \"cartItem\",\n      defaultMessage: \"item\"\n    }),\n    price: calculatePrice(),\n    pricePrefix: CURRENCY,\n    onClick: toggleCart\n  })));\n};\n\nexport default CartPopUp;","map":null,"metadata":{},"sourceType":"module"}