{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/address-card/address-card-two.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { ADD_ADDRESS, UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { plazaBelgranoPolygon, plazadoceDeOctubrePolygon, plazaEspa√±aPolygon, plazaNueveDeJulioPolygon } from 'utils/constant';\n// Wrap our form with the using withFormik HoC\nvar FormEnhancer = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: function mapPropsToValues(props) {\n    console.log('props:::', props);\n    var ID = props.item.id;\n    var addressItem = props.item.item;\n    return {\n      id: ID || null,\n      addressId: addressItem.id || null,\n      title: addressItem.title || '',\n      address: addressItem.address || '',\n      instructions: addressItem.instructions || '',\n      location: addressItem.location || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required('Required!'),\n    address: Yup.string().required('Required'),\n    location: Yup.string().required('Required')\n  }),\n  handleSubmit: function handleSubmit(values) {// do submitting things\n  }\n});\n\nvar UpdateAddressTwo = function UpdateAddressTwo(props) {\n  _s();\n\n  var _deliverData$delivery, _values$address;\n\n  var isValid = props.isValid,\n      item = props.item,\n      values = props.values,\n      touched = props.touched,\n      errors = props.errors,\n      dirty = props.dirty,\n      handleChange = props.handleChange,\n      handleBlur = props.handleBlur,\n      handleReset = props.handleReset,\n      isSubmitting = props.isSubmitting;\n\n  var _useQuery = useQuery(DELIVERY_METHOD),\n      deliverData = _useQuery.data;\n\n  var deliveryMethods = deliverData === null || deliverData === void 0 ? void 0 : (_deliverData$delivery = deliverData.deliveryMethods) === null || _deliverData$delivery === void 0 ? void 0 : _deliverData$delivery.items;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchResult = _React$useState2[0],\n      setSearchResult = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      deliveryAddress = _React$useState4[0],\n      setDeliveryAddress = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      notInsideDeliveryAreas = _React$useState6[0],\n      setNotInsideDeliveryAreas = _React$useState6[1];\n\n  var _React$useState7 = React.useState(undefined),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      deliveryMethodSelected = _React$useState8[0],\n      setDeliveryMethod = _React$useState8[1];\n\n  var ID = item.id;\n  var newAddressid = null;\n  var addressItem = item.item;\n  var addressValue = {\n    id: ID,\n    addressId: addressItem.id,\n    title: values.title,\n    address: values.address,\n    location: values.location,\n    instructions: values.instructions,\n    is_primary: true\n  };\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var intl = useIntl();\n\n  var _useMutation = useMutation(UPDATE_ADDRESS),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateAddressMutation = _useMutation2[0];\n\n  var _useMutation3 = useMutation(ADD_ADDRESS),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      addAddressMutation = _useMutation4[0];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var id, addressId, title, address, location, instructions, _yield$addAddressMuta, data, updateAddressData;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!isValid) {\n                _context.next = 18;\n                break;\n              }\n\n              id = addressValue.id, addressId = addressValue.addressId, title = addressValue.title, address = addressValue.address, location = addressValue.location, instructions = addressValue.instructions; // \n\n              if (!(Object.keys(addressItem).length === 0 || Object.keys(addressItem).length === 1)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 5;\n              return addAddressMutation({\n                variables: {\n                  id: id,\n                  title: title,\n                  address: address,\n                  location: location,\n                  instructions: instructions\n                }\n              });\n\n            case 5:\n              _yield$addAddressMuta = _context.sent;\n              data = _yield$addAddressMuta.data;\n              newAddressid = data.addDeliveryAddress.id;\n              addressValue.id = data.addDeliveryAddress.id;\n              dispatch({\n                type: 'ADD_ADDRESS',\n                payload: addressValue\n              });\n              closeModal();\n              _context.next = 18;\n              break;\n\n            case 13:\n              _context.next = 15;\n              return updateAddressMutation({\n                variables: {\n                  id: id,\n                  addressId: addressId,\n                  title: title,\n                  address: address,\n                  location: location,\n                  instructions: instructions\n                }\n              });\n\n            case 15:\n              updateAddressData = _context.sent;\n              dispatch({\n                type: 'UPDATE_ADDRESS',\n                payload: {\n                  value: addressValue,\n                  id: addressItem.id\n                }\n              });\n              closeModal();\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function inside(point, vs) {\n    var x = point[0],\n        y = point[1];\n    var inside = false;\n\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0],\n          yi = vs[i][1];\n      var xj = vs[j][0],\n          yj = vs[j][1];\n      var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  ;\n\n  var handleSelect = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(address) {\n      var results, latLng, deliveryOptionsMethods;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return geocodeByAddress(address);\n\n            case 2:\n              results = _context2.sent;\n              _context2.next = 5;\n              return getLatLng(results[0]);\n\n            case 5:\n              latLng = _context2.sent;\n              setNotInsideDeliveryAreas(false);\n              deliveryOptionsMethods = [];\n\n              if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n                deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) {\n                    deliveryMethod.name = 'Delivery Gratis';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n                deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) {\n                    deliveryMethod.name = 'Delivery Gratis';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n                deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) {\n                    deliveryMethod.name = 'Delivery Gratis';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else if (inside([latLng.lat, latLng.lng], plazaEspa√±aPolygon)) {\n                deliveryOptionsMethods = deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.filter(function (deliveryMethod) {\n                  if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) {\n                    deliveryMethod.name = 'Delivery Gratis';\n                    return true;\n                  }\n\n                  return !deliveryMethod.isPickUp;\n                });\n              } else {\n                setNotInsideDeliveryAreas(true);\n                console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n              }\n\n              console.log('setDeliveryAddress(address?.split(', ')[0]);', address === null || address === void 0 ? void 0 : address.split(',')[0]);\n              setDeliveryAddress(address === null || address === void 0 ? void 0 : address.split(',')[0]);\n              setSearchResult(deliveryOptionsMethods);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSelect(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  console.log(values);\n  return __jsx(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, __jsx(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, intl.formatMessage({\n    id: (addressItem === null || addressItem === void 0 ? void 0 : addressItem.id) ? 'editAddressId' : 'addNewAddressId',\n    defaultMessage: 'Address name'\n  })), __jsx(FieldWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"title\",\n    type: \"text\",\n    width: \"100%\",\n    placeholder: intl.formatMessage({\n      id: 'addressRefId',\n      defaultMessage: 'Address name'\n    }),\n    error: touched.title && errors.title,\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"address\",\n    type: \"text\",\n    disabled: true,\n    width: \"100%\",\n    placeholder: intl.formatMessage({\n      id: 'addressId',\n      defaultMessage: 'Address'\n    }),\n    error: touched.address && errors.address,\n    value: (_values$address = values.address) === null || _values$address === void 0 ? void 0 : _values$address.split(',')[0],\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  })), __jsx(FieldWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"location\",\n    type: \"text\",\n    placeholder: intl.formatMessage({\n      id: 'locationId',\n      defaultMessage: 'Localidad'\n    }),\n    width: \"100%\",\n    error: touched.location && errors.location,\n    value: values.location,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    id: \"instructions\",\n    as: \"textarea\",\n    width: \"100%\",\n    placeholder: intl.formatMessage({\n      id: 'instructionsId',\n      defaultMessage: 'Delivery instructions'\n    }),\n    error: touched.instructions && errors.instructions,\n    value: values.instructions,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  })), __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"submit\",\n    style: {\n      width: '100%',\n      height: '44px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"savedAddressId\",\n    defaultMessage: \"Save Address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(UpdateAddressTwo, \"d3vbPuod25BlX7xFHkqkV7ZQB2E=\", false, function () {\n  return [useQuery, useIntl, useMutation, useMutation];\n});\n\n_c = UpdateAddressTwo;\nexport default _c2 = FormEnhancer(UpdateAddressTwo);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UpdateAddressTwo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/components/address-card/address-card-two.tsx"],"names":["React","useContext","Yup","withFormik","Form","closeModal","TextField","Button","useMutation","useQuery","ADD_ADDRESS","UPDATE_ADDRESS","FieldWrapper","Heading","ProfileContext","FormattedMessage","useIntl","geocodeByAddress","getLatLng","DELIVERY_METHOD","plazaBelgranoPolygon","plazadoceDeOctubrePolygon","plazaEspa√±aPolygon","plazaNueveDeJulioPolygon","FormEnhancer","mapPropsToValues","props","console","log","ID","item","id","addressItem","addressId","title","address","instructions","location","validationSchema","object","shape","string","required","handleSubmit","values","UpdateAddressTwo","isValid","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","deliverData","data","deliveryMethods","items","useState","searchResult","setSearchResult","deliveryAddress","setDeliveryAddress","notInsideDeliveryAreas","setNotInsideDeliveryAreas","undefined","deliveryMethodSelected","setDeliveryMethod","newAddressid","addressValue","is_primary","state","dispatch","intl","updateAddressMutation","addAddressMutation","Object","keys","length","variables","addDeliveryAddress","type","payload","updateAddressData","value","inside","point","vs","x","y","i","j","xi","yi","xj","yj","intersect","handleSelect","results","latLng","deliveryOptionsMethods","lat","lng","filter","deliveryMethod","isPickUp","details","includes","name","split","formatMessage","defaultMessage","width","height"],"mappings":";;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAA6C,OAA7C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,EAAkCC,IAAlC,QAA8C,QAA9C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,qBAAtC;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,0BAA5C;AACA,SAAmCC,YAAnC,EAAiDC,OAAjD,QAA+E,sBAA/E;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,YAA1C;AACA,SAA6BC,gBAA7B,EAA+CC,SAA/C,QAAgE,2BAAhE;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAEA,SAAsCC,oBAAtC,EAA4DC,yBAA5D,EAAuFC,kBAAvF,EAA2GC,wBAA3G,QAA2I,gBAA3I;AAmBA;AACA,IAAMC,YAAY,GAAGrB,UAAU,CAA0B;AACvD;AACAsB,EAAAA,gBAAgB,EAAE,0BAACC,KAAD,EAAW;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAxB;AACA,QAAMG,EAAE,GAAGH,KAAK,CAACI,IAAN,CAAWC,EAAtB;AACA,QAAMC,WAAW,GAAGN,KAAK,CAACI,IAAN,CAAWA,IAA/B;AACA,WAAO;AACLC,MAAAA,EAAE,EAAEF,EAAE,IAAI,IADL;AAELI,MAAAA,SAAS,EAAED,WAAW,CAACD,EAAZ,IAAkB,IAFxB;AAGLG,MAAAA,KAAK,EAAEF,WAAW,CAACE,KAAZ,IAAqB,EAHvB;AAILC,MAAAA,OAAO,EAAEH,WAAW,CAACG,OAAZ,IAAuB,EAJ3B;AAKLC,MAAAA,YAAY,EAAEJ,WAAW,CAACI,YAAZ,IAA4B,EALrC;AAMLC,MAAAA,QAAQ,EAAEL,WAAW,CAACK,QAAZ,IAAwB;AAN7B,KAAP;AAQD,GAdsD;AAevDC,EAAAA,gBAAgB,EAAEpC,GAAG,CAACqC,MAAJ,GAAaC,KAAb,CAAmB;AACnCN,IAAAA,KAAK,EAAEhC,GAAG,CAACuC,MAAJ,GAAaC,QAAb,CAAsB,WAAtB,CAD4B;AAEnCP,IAAAA,OAAO,EAAEjC,GAAG,CAACuC,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CAF0B;AAGnCL,IAAAA,QAAQ,EAAEnC,GAAG,CAACuC,MAAJ,GAAaC,QAAb,CAAsB,UAAtB;AAHyB,GAAnB,CAfqC;AAoBvDC,EAAAA,YAAY,EAAE,sBAACC,MAAD,EAAY,CACxB;AACD;AAtBsD,CAA1B,CAA/B;;AAyBA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACnB,KAAD,EAAkD;AAAA;;AAAA;;AAAA,MAEvEoB,OAFuE,GAarEpB,KAbqE,CAEvEoB,OAFuE;AAAA,MAGvEhB,IAHuE,GAarEJ,KAbqE,CAGvEI,IAHuE;AAAA,MAIvEc,MAJuE,GAarElB,KAbqE,CAIvEkB,MAJuE;AAAA,MAKvEG,OALuE,GAarErB,KAbqE,CAKvEqB,OALuE;AAAA,MAMvEC,MANuE,GAarEtB,KAbqE,CAMvEsB,MANuE;AAAA,MAOvEC,KAPuE,GAarEvB,KAbqE,CAOvEuB,KAPuE;AAAA,MAQvEC,YARuE,GAarExB,KAbqE,CAQvEwB,YARuE;AAAA,MASvEC,UATuE,GAarEzB,KAbqE,CASvEyB,UATuE;AAAA,MAWvEC,WAXuE,GAarE1B,KAbqE,CAWvE0B,WAXuE;AAAA,MAYvEC,YAZuE,GAarE3B,KAbqE,CAYvE2B,YAZuE;;AAAA,kBAc3C5C,QAAQ,CAACU,eAAD,CAdmC;AAAA,MAc3DmC,WAd2D,aAcjEC,IAdiE;;AAgBzE,MAAMC,eAAe,GAAGF,WAAH,aAAGA,WAAH,gDAAGA,WAAW,CAAEE,eAAhB,0DAAG,sBAA8BC,KAAtD;;AAhByE,wBAiBjCzD,KAAK,CAAC0D,QAAN,CAAe,EAAf,CAjBiC;AAAA;AAAA,MAiBlEC,YAjBkE;AAAA,MAiBpDC,eAjBoD;;AAAA,yBAkB3B5D,KAAK,CAAC0D,QAAN,CAAe,EAAf,CAlB2B;AAAA;AAAA,MAkBlEG,eAlBkE;AAAA,MAkBjDC,kBAlBiD;;AAAA,yBAmBb9D,KAAK,CAAC0D,QAAN,CAAe,KAAf,CAnBa;AAAA;AAAA,MAmBlEK,sBAnBkE;AAAA,MAmB1CC,yBAnB0C;;AAAA,yBAoBrBhE,KAAK,CAAC0D,QAAN,CAAeO,SAAf,CApBqB;AAAA;AAAA,MAoBlEC,sBApBkE;AAAA,MAoB1CC,iBApB0C;;AAsBzE,MAAMtC,EAAE,GAAGC,IAAI,CAACC,EAAhB;AACA,MAAIqC,YAAY,GAAG,IAAnB;AACA,MAAMpC,WAAW,GAAGF,IAAI,CAACA,IAAzB;AACA,MAAMuC,YAAY,GAAG;AACnBtC,IAAAA,EAAE,EAAEF,EADe;AAEnBI,IAAAA,SAAS,EAAED,WAAW,CAACD,EAFJ;AAGnBG,IAAAA,KAAK,EAAEU,MAAM,CAACV,KAHK;AAInBC,IAAAA,OAAO,EAAES,MAAM,CAACT,OAJG;AAKnBE,IAAAA,QAAQ,EAAEO,MAAM,CAACP,QALE;AAMnBD,IAAAA,YAAY,EAAEQ,MAAM,CAACR,YANF;AAOnBkC,IAAAA,UAAU,EAAE;AAPO,GAArB;;AAzByE,oBAkC7CrE,UAAU,CAACa,cAAD,CAlCmC;AAAA,MAkCjEyD,KAlCiE,eAkCjEA,KAlCiE;AAAA,MAkC1DC,QAlC0D,eAkC1DA,QAlC0D;;AAmCzE,MAAMC,IAAI,GAAGzD,OAAO,EAApB;;AAnCyE,qBAqCzCR,WAAW,CAACG,cAAD,CArC8B;AAAA;AAAA,MAqClE+D,qBArCkE;;AAAA,sBAsC5ClE,WAAW,CAACE,WAAD,CAtCiC;AAAA;AAAA,MAsClEiE,kBAtCkE;;AAwCzE,MAAMhC,YAAY;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBACfG,OADe;AAAA;AAAA;AAAA;;AAEVf,cAAAA,EAFU,GAE+CsC,YAF/C,CAEVtC,EAFU,EAENE,SAFM,GAE+CoC,YAF/C,CAENpC,SAFM,EAEKC,KAFL,GAE+CmC,YAF/C,CAEKnC,KAFL,EAEYC,OAFZ,GAE+CkC,YAF/C,CAEYlC,OAFZ,EAEqBE,QAFrB,GAE+CgC,YAF/C,CAEqBhC,QAFrB,EAE+BD,YAF/B,GAE+CiC,YAF/C,CAE+BjC,YAF/B,EAGjB;;AAHiB,oBAIbwC,MAAM,CAACC,IAAP,CAAY7C,WAAZ,EAAyB8C,MAAzB,KAAoC,CAApC,IAAyCF,MAAM,CAACC,IAAP,CAAY7C,WAAZ,EAAyB8C,MAAzB,KAAoC,CAJhE;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAKOH,kBAAkB,CAAC;AACvCI,gBAAAA,SAAS,EAAE;AACThD,kBAAAA,EAAE,EAAFA,EADS;AAETG,kBAAAA,KAAK,EAALA,KAFS;AAGTC,kBAAAA,OAAO,EAAPA,OAHS;AAITE,kBAAAA,QAAQ,EAARA,QAJS;AAKTD,kBAAAA,YAAY,EAAZA;AALS;AAD4B,eAAD,CALzB;;AAAA;AAAA;AAKRmB,cAAAA,IALQ,yBAKRA,IALQ;AAcfa,cAAAA,YAAY,GAAGb,IAAI,CAACyB,kBAAL,CAAwBjD,EAAvC;AACAsC,cAAAA,YAAY,CAACtC,EAAb,GAAkBwB,IAAI,CAACyB,kBAAL,CAAwBjD,EAA1C;AACAyC,cAAAA,QAAQ,CAAC;AACPS,gBAAAA,IAAI,EAAE,aADC;AAEPC,gBAAAA,OAAO,EAAEb;AAFF,eAAD,CAAR;AAIAhE,cAAAA,UAAU;AApBK;AAAA;;AAAA;AAAA;AAAA,qBAsBiBqE,qBAAqB,CAAC;AACpDK,gBAAAA,SAAS,EAAE;AACThD,kBAAAA,EAAE,EAAFA,EADS;AAETE,kBAAAA,SAAS,EAATA,SAFS;AAGTC,kBAAAA,KAAK,EAALA,KAHS;AAITC,kBAAAA,OAAO,EAAPA,OAJS;AAKTE,kBAAAA,QAAQ,EAARA,QALS;AAMTD,kBAAAA,YAAY,EAAZA;AANS;AADyC,eAAD,CAtBtC;;AAAA;AAsBT+C,cAAAA,iBAtBS;AAgCfX,cAAAA,QAAQ,CAAC;AACPS,gBAAAA,IAAI,EAAE,gBADC;AAEPC,gBAAAA,OAAO,EAAE;AAAEE,kBAAAA,KAAK,EAAEf,YAAT;AAAuBtC,kBAAAA,EAAE,EAAEC,WAAW,CAACD;AAAvC;AAFF,eAAD,CAAR;AAKA1B,cAAAA,UAAU;;AArCK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZsC,YAAY;AAAA;AAAA;AAAA,KAAlB;;AA0CA,WAAS0C,MAAT,CAAgBC,KAAhB,EAAuBC,EAAvB,EAA2B;AACzB,QAAIC,CAAC,GAAGF,KAAK,CAAC,CAAD,CAAb;AAAA,QAAkBG,CAAC,GAAGH,KAAK,CAAC,CAAD,CAA3B;AAEA,QAAID,MAAM,GAAG,KAAb;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGJ,EAAE,CAACT,MAAH,GAAY,CAAhC,EAAmCY,CAAC,GAAGH,EAAE,CAACT,MAA1C,EAAkDa,CAAC,GAAGD,CAAC,EAAvD,EAA2D;AACvD,UAAIE,EAAE,GAAGL,EAAE,CAACG,CAAD,CAAF,CAAM,CAAN,CAAT;AAAA,UAAmBG,EAAE,GAAGN,EAAE,CAACG,CAAD,CAAF,CAAM,CAAN,CAAxB;AACA,UAAII,EAAE,GAAGP,EAAE,CAACI,CAAD,CAAF,CAAM,CAAN,CAAT;AAAA,UAAmBI,EAAE,GAAGR,EAAE,CAACI,CAAD,CAAF,CAAM,CAAN,CAAxB;AAEA,UAAIK,SAAS,GAAKH,EAAE,GAAGJ,CAAN,IAAaM,EAAE,GAAGN,CAAnB,IACRD,CAAC,GAAG,CAACM,EAAE,GAAGF,EAAN,KAAaH,CAAC,GAAGI,EAAjB,KAAwBE,EAAE,GAAGF,EAA7B,IAAmCD,EAD/C;AAEA,UAAII,SAAJ,EAAeX,MAAM,GAAG,CAACA,MAAV;AAClB;;AAED,WAAOA,MAAP;AACH;;AAAA;;AAED,MAAMY,YAAY;AAAA,yEAAG,kBAAO9D,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGlB,gBAAgB,CAACkB,OAAD,CADnB;;AAAA;AACb+D,cAAAA,OADa;AAAA;AAAA,qBAEEhF,SAAS,CAACgF,OAAO,CAAC,CAAD,CAAR,CAFX;;AAAA;AAEbC,cAAAA,MAFa;AAGnBnC,cAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACIoC,cAAAA,sBAJe,GAIU,EAJV;;AAMnB,kBAAIf,MAAM,CAAC,CAACc,MAAM,CAACE,GAAR,EAAaF,MAAM,CAACG,GAApB,CAAD,EAA2BjF,yBAA3B,CAAV,EAAiE;AAC/D+E,gBAAAA,sBAAsB,GAAG5C,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAE+C,MAAjB,CAAwB,UAAAC,cAAc,EAAI;AACjE,sBAAI,CAACA,cAAc,CAACC,QAAhB,IAA4BD,cAAc,CAACE,OAAf,CAAuBC,QAAvB,CAAgC,OAAhC,CAAhC,EAA0E;AAAEH,oBAAAA,cAAc,CAACI,IAAf,GAAsB,iBAAtB;AAAyC,2BAAO,IAAP;AAAa;;AAClI,yBAAO,CAACJ,cAAc,CAACC,QAAvB;AACD,iBAHwB,CAAzB;AAID,eALD,MAKO,IAAIpB,MAAM,CAAC,CAACc,MAAM,CAACE,GAAR,EAAaF,MAAM,CAACG,GAApB,CAAD,EAA2BlF,oBAA3B,CAAV,EAA4D;AACjEgF,gBAAAA,sBAAsB,GAAG5C,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAE+C,MAAjB,CAAwB,UAAAC,cAAc,EAAI;AACjE,sBAAI,CAACA,cAAc,CAACC,QAAhB,IAA4BD,cAAc,CAACE,OAAf,CAAuBC,QAAvB,CAAgC,QAAhC,CAAhC,EAA2E;AAAEH,oBAAAA,cAAc,CAACI,IAAf,GAAsB,iBAAtB;AAAyC,2BAAO,IAAP;AAAa;;AACnI,yBAAO,CAACJ,cAAc,CAACC,QAAvB;AACD,iBAHwB,CAAzB;AAID,eALM,MAKA,IAAIpB,MAAM,CAAC,CAACc,MAAM,CAACE,GAAR,EAAaF,MAAM,CAACG,GAApB,CAAD,EAA2B/E,wBAA3B,CAAV,EAAgE;AACnE6E,gBAAAA,sBAAsB,GAAG5C,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAE+C,MAAjB,CAAwB,UAAAC,cAAc,EAAI;AACjE,sBAAI,CAACA,cAAc,CAACC,QAAhB,IAA4BD,cAAc,CAACE,OAAf,CAAuBC,QAAvB,CAAgC,WAAhC,CAAhC,EAA8E;AAAEH,oBAAAA,cAAc,CAACI,IAAf,GAAsB,iBAAtB;AAAyC,2BAAO,IAAP;AAAa;;AACtI,yBAAO,CAACJ,cAAc,CAACC,QAAvB;AACD,iBAHwB,CAAzB;AAIH,eALM,MAKA,IAAIpB,MAAM,CAAC,CAACc,MAAM,CAACE,GAAR,EAAaF,MAAM,CAACG,GAApB,CAAD,EAA2BhF,kBAA3B,CAAV,EAA0D;AAC/D8E,gBAAAA,sBAAsB,GAAG5C,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAE+C,MAAjB,CAAwB,UAAAC,cAAc,EAAI;AACjE,sBAAI,CAACA,cAAc,CAACC,QAAhB,IAA4BD,cAAc,CAACE,OAAf,CAAuBC,QAAvB,CAAgC,QAAhC,CAAhC,EAA2E;AAAEH,oBAAAA,cAAc,CAACI,IAAf,GAAsB,iBAAtB;AAAyC,2BAAO,IAAP;AAAa;;AACnI,yBAAO,CAACJ,cAAc,CAACC,QAAvB;AACD,iBAHwB,CAAzB;AAID,eALM,MAKA;AACLzC,gBAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACArC,gBAAAA,OAAO,CAACC,GAAR,CAAYyD,MAAM,CAAC,CAACc,MAAM,CAACE,GAAR,EAAaF,MAAM,CAACG,GAApB,CAAD,EAA2B/E,wBAA3B,CAAlB;AACD;;AACDI,cAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAiD,QAAjD,EAA2DO,OAA3D,aAA2DA,OAA3D,uBAA2DA,OAAO,CAAE0E,KAAT,CAAe,GAAf,EAAoB,CAApB,CAA3D;AACA/C,cAAAA,kBAAkB,CAAC3B,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAE0E,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAD,CAAlB;AACAjD,cAAAA,eAAe,CAACwC,sBAAD,CAAf;;AAhCmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZH,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAkCEtE,EAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAZ;AACA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAU6B,IAAI,CAACqC,aAAL,CAAmB;AAAE/E,IAAAA,EAAE,EAAE,CAAAC,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAED,EAAb,IAAkB,eAAlB,GAAoC,iBAA1C;AAA6DgF,IAAAA,cAAc,EAAE;AAA7E,GAAnB,CAAV,CADF,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,WAAW,EAAEtC,IAAI,CAACqC,aAAL,CAAmB;AAAE/E,MAAAA,EAAE,EAAE,cAAN;AAAsBgF,MAAAA,cAAc,EAAE;AAAtC,KAAnB,CAJf;AAKE,IAAA,KAAK,EAAEhE,OAAO,CAACb,KAAR,IAAiBc,MAAM,CAACd,KALjC;AAME,IAAA,KAAK,EAAEU,MAAM,CAACV,KANhB;AAOE,IAAA,QAAQ,EAAEgB,YAPZ;AAQE,IAAA,MAAM,EAAEC,UARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAcE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA0EI,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,WAAW,EAAEsB,IAAI,CAACqC,aAAL,CAAmB;AAAE/E,MAAAA,EAAE,EAAE,WAAN;AAAmBgF,MAAAA,cAAc,EAAE;AAAnC,KAAnB,CALf;AAME,IAAA,KAAK,EAAEhE,OAAO,CAACZ,OAAR,IAAmBa,MAAM,CAACb,OANnC;AAOE,IAAA,KAAK,qBAAES,MAAM,CAACT,OAAT,oDAAE,gBAAgB0E,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAPT;AAQE,IAAA,QAAQ,EAAE3D,YARZ;AASE,IAAA,MAAM,EAAEC,UATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1EJ,CAdF,EAoGE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAEsB,IAAI,CAACqC,aAAL,CAAmB;AAAE/E,MAAAA,EAAE,EAAE,YAAN;AAAoBgF,MAAAA,cAAc,EAAE;AAApC,KAAnB,CAHf;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,KAAK,EAAEhE,OAAO,CAACV,QAAR,IAAoBW,MAAM,CAACX,QALpC;AAME,IAAA,KAAK,EAAEO,MAAM,CAACP,QANhB;AAOE,IAAA,QAAQ,EAAEa,YAPZ;AAQE,IAAA,MAAM,EAAEC,UARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApGF,EAgHE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,WAAW,EAAEsB,IAAI,CAACqC,aAAL,CAAmB;AAAE/E,MAAAA,EAAE,EAAE,gBAAN;AAAwBgF,MAAAA,cAAc,EAAE;AAAxC,KAAnB,CAJf;AAKE,IAAA,KAAK,EAAEhE,OAAO,CAACX,YAAR,IAAwBY,MAAM,CAACZ,YALxC;AAME,IAAA,KAAK,EAAEQ,MAAM,CAACR,YANhB;AAOE,IAAA,QAAQ,EAAEc,YAPZ;AAQE,IAAA,MAAM,EAAEC,UARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhHF,EA6HE,MAAC,MAAD;AACE,IAAA,OAAO,EAAER,YADX;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAE;AAAEqE,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,gBAArB;AAAsC,IAAA,cAAc,EAAC,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CA7HF,CADF;AAuID,CA5QD;;GAAMpE,gB;UAc0BpC,Q,EAqBjBO,O,EAEmBR,W,EACHA,W;;;KAtCzBqC,gB;AA8QN,qBAAerB,YAAY,CAACqB,gBAAD,CAA3B","sourcesContent":["import DeliveryIcon from 'assets/images/locationIcon.webp';\nimport React, { useContext, useEffect } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, FormikProps, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { ADD_ADDRESS, UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { BannerIcon, DeliveryText, FieldWrapper, Heading, PickUpOptions } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { DELIVERY_METHOD } from 'graphql/query/delivery';\nimport { getCookie } from 'utils/session';\nimport { deliveryMethodCookieKeyName, plazaBelgranoPolygon, plazadoceDeOctubrePolygon, plazaEspa√±aPolygon, plazaNueveDeJulioPolygon } from 'utils/constant';\nimport Checkbox from 'components/checkbox/checkbox';\n\n// Shape of form values\ninterface FormValues {\n  id: any | null;\n  addressId: any | null,\n  title: string;\n  address: string;\n  location?: string;\n  instructions?: string;\n}\n\n// The type of props MyForm receives\ninterface MyFormProps {\n  item?: any | null;\n  id?: any | null;\n}\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik<MyFormProps, FormValues>({\n  // Transform outer props into form values\n  mapPropsToValues: (props) => {\n    console.log('props:::', props)\n    const ID = props.item.id;\n    const addressItem = props.item.item;\n    return {\n      id: ID || null,\n      addressId: addressItem.id || null,\n      title: addressItem.title || '',\n      address: addressItem.address || '',\n      instructions: addressItem.instructions || '',\n      location: addressItem.location || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required('Required!'),\n    address: Yup.string().required('Required'),\n    location: Yup.string().required('Required'),\n  }),\n  handleSubmit: (values) => {\n    // do submitting things\n  },\n});\n\nconst UpdateAddressTwo = (props: FormikProps<FormValues> & MyFormProps) => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n\n    handleReset,\n    isSubmitting,\n  } = props;\n  const { data: deliverData } = useQuery(DELIVERY_METHOD)\n  \n  const deliveryMethods = deliverData?.deliveryMethods?.items;\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [deliveryAddress, setDeliveryAddress] = React.useState(\"\");\n  const [notInsideDeliveryAreas, setNotInsideDeliveryAreas] = React.useState(false);\n  const [deliveryMethodSelected, setDeliveryMethod] = React.useState(undefined);\n\n  const ID = item.id;\n  let newAddressid = null;\n  const addressItem = item.item;\n  const addressValue = {\n    id: ID,\n    addressId: addressItem.id, \n    title: values.title,\n    address: values.address,\n    location: values.location,\n    instructions: values.instructions,\n    is_primary: true\n  };\n  const { state, dispatch } = useContext(ProfileContext);\n  const intl = useIntl();\n\n  const [updateAddressMutation] = useMutation(UPDATE_ADDRESS);\n  const [addAddressMutation] = useMutation(ADD_ADDRESS);\n\n  const handleSubmit = async () => {\n    if (isValid) {\n      const {id, addressId, title, address, location, instructions} = addressValue;\n      // \n      if (Object.keys(addressItem).length === 0 || Object.keys(addressItem).length === 1) {\n        const {data}  = await addAddressMutation({\n          variables: { \n            id,\n            title,\n            address, \n            location,\n            instructions\n           },\n        });\n        newAddressid = data.addDeliveryAddress.id;\n        addressValue.id = data.addDeliveryAddress.id;\n        dispatch({\n          type: 'ADD_ADDRESS',\n          payload: addressValue \n        });\n        closeModal();\n      }else{\n        const updateAddressData = await updateAddressMutation({\n          variables: { \n            id,\n            addressId,\n            title,\n            address, \n            location,\n            instructions\n           }\n        });\n        dispatch({\n          type: 'UPDATE_ADDRESS',\n          payload: { value: addressValue, id: addressItem.id }\n\n        });\n        closeModal();\n      }\n    }\n  };\n\n  function inside(point, vs) {\n    var x = point[0], y = point[1];\n    \n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0], yi = vs[i][1];\n        var xj = vs[j][0], yj = vs[j][1];\n        \n        var intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    \n    return inside;\n};\n\nconst handleSelect = async (address) => {\n  const results = await geocodeByAddress(address);\n  const latLng = await getLatLng(results[0]);\n  setNotInsideDeliveryAreas(false);\n  let deliveryOptionsMethods = [];\n\n  if (inside([latLng.lat, latLng.lng], plazadoceDeOctubrePolygon)) {\n    deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Lunes')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n      return !deliveryMethod.isPickUp;\n    });\n  } else if (inside([latLng.lat, latLng.lng], plazaBelgranoPolygon)) {\n    deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Martes')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n      return !deliveryMethod.isPickUp;\n    });\n  } else if (inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon)) {\n      deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n        if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Miercoles')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n        return !deliveryMethod.isPickUp;\n      });\n  } else if (inside([latLng.lat, latLng.lng], plazaEspa√±aPolygon)) {\n    deliveryOptionsMethods = deliveryMethods?.filter(deliveryMethod => {\n      if (!deliveryMethod.isPickUp && deliveryMethod.details.includes('Jueves')) { deliveryMethod.name = 'Delivery Gratis'; return true;}\n      return !deliveryMethod.isPickUp;\n    });\n  } else {\n    setNotInsideDeliveryAreas(true);\n    console.log(inside([latLng.lat, latLng.lng], plazaNueveDeJulioPolygon));\n  }\n  console.log('setDeliveryAddress(address?.split(',')[0]);', address?.split(',')[0])\n  setDeliveryAddress(address?.split(',')[0]);\n  setSearchResult(deliveryOptionsMethods)\n};\n  console.log(values)\n  return (\n    <Form>\n      <Heading>{intl.formatMessage({ id: addressItem?.id ? 'editAddressId' : 'addNewAddressId', defaultMessage: 'Address name' })}</Heading>\n      <FieldWrapper>\n        <TextField\n          id=\"title\"\n          type=\"text\"\n          width='100%'\n          placeholder={intl.formatMessage({ id: 'addressRefId', defaultMessage: 'Address name' })}\n          error={touched.title && errors.title}\n          value={values.title}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n          {/* <PlacesAutocomplete\n            value={deliveryAddress?.split(',')[0]}\n            // onChange={handleChange}\n            onChange={(e) => { setDeliveryAddress(e); handleChange(e);}}\n            onSelect={handleSelect}\n            searchOptions={{\n              types: [],\n              componentRestrictions: { country: \"ar\" },\n            }}\n          >\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n              <div>\n                <input\n                  {...getInputProps({\n                    placeholder: \"Direcci√≥n\",\n                    className: \"location-search-input\",\n                    style: {\n                      width: '300px',\n                      padding:'0px 8px',\n                      appearance: 'none',\n                      fontFamily: `'Lato', sans-serif`,\n                      fontSize: '15',\n                      lineHeight: 'inherit',\n                      border: '1px solid',\n                      borderColor: '#f7f7f7',\n                      borderRadius: '6px',\n                      backgroundColor: 'white',\n                      color: '#0D1136',\n                      height: '48px',\n                      transition: 'all 0.25s ease',\n                      // mb: 3,\n                      '&:hover,&:focus': {\n                        outline: 0,\n                        borderColor: '#009e7f',\n                      },\n                    },\n                  })}\n                />\n                <div className=\"autocomplete-dropdown-container\">\n                  {loading && <div>Loading...</div>}\n                  {suggestions.map((suggestion) => {\n                    const style = suggestion.active\n                      ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                      : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                    return (\n                      <div {...getSuggestionItemProps(suggestion, { style })}>\n                        <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>{suggestion.description}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </PlacesAutocomplete> */}\n          {/* {searchResult?.length ? searchResult.map((deliveryMethod, i) => {\n              return (\n                <PickUpOptions>\n                  <Checkbox\n                      keyName={`${i}-deliveryMethods`}\n                      isChecked={deliveryMethodSelected?.id === deliveryMethod.id}\n                      labelText={`${deliveryMethod.name} - ${deliveryMethod.details} `}\n                      id={`deliveryMethod-${i}`}\n                      onChange={e => {\n                          setDeliveryMethod(deliveryMethodSelected?.id === deliveryMethod.id ? null : deliveryMethod)\n                      }}\n                  />\n                </PickUpOptions>\n              )}\n              ) : ('')\n          } */}\n          {/* {notInsideDeliveryAreas && (\n            <DeliveryText>{intl.formatMessage({ id: 'noDeliveryThereYet', defaultMessage: 'noDeliveryThereYet' })}</DeliveryText>\n          )} */}\n          <TextField\n            id=\"address\"\n            type=\"text\"\n            disabled={true}\n            width='100%'\n            placeholder={intl.formatMessage({ id: 'addressId', defaultMessage: 'Address' })}\n            error={touched.address && errors.address}\n            value={values.address?.split(',')[0]}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"location\"\n          type=\"text\"\n          placeholder={intl.formatMessage({ id: 'locationId', defaultMessage: 'Localidad' })}\n          width='100%'\n          error={touched.location && errors.location}\n          value={values.location}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n      <FieldWrapper>\n        <TextField\n          id=\"instructions\"\n          as=\"textarea\"\n          width='100%'\n          placeholder={intl.formatMessage({ id: 'instructionsId', defaultMessage: 'Delivery instructions' })}\n          error={touched.instructions && errors.instructions}\n          value={values.instructions}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n\n      <Button\n        onClick={handleSubmit}\n        type=\"submit\"\n        style={{ width: '100%', height: '44px' }}\n      >\n        <FormattedMessage id=\"savedAddressId\" defaultMessage=\"Save Address\" />\n      </Button>\n    </Form>\n  );\n};\n\nexport default FormEnhancer(UpdateAddressTwo);\n"]},"metadata":{},"sourceType":"module"}