{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/user-profile/work/work.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Col } from 'react-styled-flexboxgrid';\nimport { openModal } from '@redq/reuse-modal';\nimport RadioCard from 'components/radio-card/radio-card';\nimport { WorkContext } from 'contexts/work/work.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { DELETE_ADDRESS, SETPRIMARY_ADDRESS } from 'graphql/mutation/address';\nimport { UPDATE_USER_TODO_TASKS, UPDATE_USER_WORK_INFO } from 'graphql/mutation/user';\nimport { CHANGE_PASSWORD } from 'graphql/mutation/changePassword';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_PHONENUMBER, SETPRIMARY_PHONENUMBER } from 'graphql/mutation/phone';\nimport { SettingsForm, SettingsFormContent, HeadingSection, Title, Row, ButtonGroup } from './work.style';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\nimport { UPDATE_ME } from 'graphql/mutation/me';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Label } from 'components/forms/label';\nimport Switch from 'components/switch/switch';\nimport moment from 'moment';\n\nconst WorkContent = ({\n  deviceType\n}) => {\n  var _state$workInfo, _state$workInfo2, _state$workInfo3, _state$workInfo4, _state$workInfo5, _state$workInfo7, _state$workInfo7$rate, _state$workInfo8, _state$workInfo9, _state$workInfo9$tota;\n\n  const {\n    state,\n    dispatch\n  } = useContext(WorkContext);\n  const {\n    0: userinfoMsg,\n    1: setUserinfoMsg\n  } = useState('');\n  const {\n    0: isChambeanding,\n    1: setChamba\n  } = useState(false);\n  const {\n    0: passwordChangeMsg,\n    1: setPasswordChangeMsg\n  } = useState('');\n  const {\n    authState: {\n      isAuthenticated\n    },\n    authDispatch\n  } = React.useContext(AuthContext);\n  const [updateMeMutation] = useMutation(UPDATE_ME);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n  const [updateUserTodoMutation] = useMutation(UPDATE_USER_TODO_TASKS);\n  const [updateUserInfoMutation] = useMutation(UPDATE_USER_WORK_INFO);\n  const [changePasswordMutation] = useMutation(CHANGE_PASSWORD);\n  const [deletePhoneNumberMutation] = useMutation(DELETE_PHONENUMBER);\n  const [setprimaryPhoneNumberMutation] = useMutation(SETPRIMARY_PHONENUMBER);\n  const [setprimaryAddressMutation] = useMutation(SETPRIMARY_ADDRESS);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const intl = useIntl();\n  const {\n    delivery_address,\n    card,\n    name,\n    email,\n    id,\n    phones\n  } = state;\n\n  const updateUserWorkInfoMutation = async logDescription => {\n    const {\n      workInfo,\n      id\n    } = state;\n    const {\n      isWorking,\n      startedWorkTime,\n      stoppedWorkTime,\n      ratePerHour,\n      totalWorkingMinutesPerWeek,\n      totalSalaryToPayWeekly,\n      advancedSalaryPaid,\n      taskRelated\n    } = workInfo;\n    await updateUserInfoMutation({\n      variables: {\n        id,\n        isWorking,\n        startedWorkTime,\n        stoppedWorkTime,\n        ratePerHour,\n        logDescription,\n        totalWorkingMinutesPerWeek,\n        totalSalaryToPayWeekly,\n        advancedSalaryPaid,\n        taskRelated,\n        role: state.role\n      }\n    });\n    setUserinfoMsg('Update user work info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000);\n  };\n\n  const stopWorking = () => {\n    const user = state;\n    if (!user.workInfo) user.workInfo = {};\n    user.workInfo.isWorking = false;\n    user.workInfo.stoppedWorkTime = new Date().toLocaleString('en-US', {\n      timeZone: 'America/Argentina/Buenos_Aires'\n    });\n    const startedWorkTime = moment(new Date(user.workInfo.startedWorkTime));\n    const stoppedWorkTime = moment(new Date(user.workInfo.stoppedWorkTime));\n    const workedInMinutes = stoppedWorkTime.diff(startedWorkTime, 'minutes');\n    const ratePerMinute = user.workInfo.ratePerHour / 60;\n    user.workInfo.totalWorkingMinutesPerWeek += workedInMinutes;\n    user.workInfo.totalSalaryToPayWeekly = Number(user.workInfo.totalWorkingMinutesPerWeek) * Number(ratePerMinute) - Number(user.workInfo.advancedSalaryPaid); // user.logs.push({\n    //   logDescription: ,\n    //   timestamp: new Date().toLocaleString('en-US', { timeZone: 'America/Argentina/Buenos_Aires' })\n    // });\n\n    dispatch({\n      type: 'HANDLE_WORK_CHANGE',\n      payload: {\n        workInfo: user.workInfo,\n        logs: user.logs\n      }\n    });\n    updateUserWorkInfoMutation(`finished working.`);\n  };\n\n  const startWorking = () => {\n    const user = state;\n    if (!user.workInfo) user.workInfo = {};\n    user.workInfo.isWorking = true;\n    user.workInfo.startedWorkTime = new Date().toLocaleString('en-US', {\n      timeZone: 'America/Argentina/Buenos_Aires'\n    });\n    user.workInfo.stoppedWorkTime = null;\n    user.workInfo.ratePerHour = 300; // user.logs.push({\n    //   logDescription: ,\n    //   timestamp: new Date().toLocaleString('en-US', { timeZone: 'America/Argentina/Buenos_Aires' })\n    // })\n\n    dispatch({\n      type: 'HANDLE_WORK_CHANGE',\n      payload: {\n        workInfo: user.workInfo,\n        logs: user.logs\n      }\n    });\n    updateUserWorkInfoMutation(`started working.`);\n  };\n\n  const handleTaskChange = async (task, action) => {\n    const {\n      id,\n      tasks\n    } = state;\n    const completationTimes = task.isRepetitived ? (Number(task.completationTimes) + 1).toString() : task.completationTimes;\n    const taskIndex = tasks === null || tasks === void 0 ? void 0 : tasks.findIndex(t => t.taskId === task.taskId);\n    let taskUpdated;\n\n    switch (action) {\n      case 'stop':\n        const finishDate = new Date().toLocaleString('en-US', {\n          timeZone: 'America/Argentina/Buenos_Aires'\n        });\n        const workedHours = getDurationTimeInHours(task.startDate, finishDate);\n        taskUpdated = {\n          id,\n          taskId: task.taskId,\n          description: task.description,\n          startDate: task.startDate,\n          finishDate,\n          plannedDate: task.plannedDate,\n          isRepetitived: task.isRepetitived,\n          completationTimes,\n          workedHours: workedHours,\n          isDone: true\n        };\n        break;\n\n      case 'start':\n        const startDate = new Date().toLocaleString('en-US', {\n          timeZone: 'America/Argentina/Buenos_Aires'\n        });\n        taskUpdated = {\n          id,\n          taskId: task.taskId,\n          description: task.description,\n          startDate: startDate,\n          finishDate: task.finishDate,\n          plannedDate: task.plannedDate,\n          isRepetitived: task.isRepetitived,\n          completationTimes,\n          workedHours: task.workedHours,\n          isDone: task.isDone\n        };\n        break;\n\n      default:\n        taskUpdated = task;\n        break;\n    }\n\n    tasks[taskIndex] = taskUpdated;\n    dispatch({\n      type: 'HANDLE_TODO_TASKS',\n      payload: {\n        tasks\n      }\n    });\n    return await updateUserTodoMutation({\n      variables: _objectSpread({}, taskUpdated)\n    });\n  };\n\n  const getDurationTimeInHours = (start, finish) => {\n    const startDate = moment(new Date(start));\n    const finishDate = moment(new Date(finish));\n    const duration = moment.duration(finishDate.diff(startDate));\n    const hours = duration.asHours();\n    const minutes = duration.asHours();\n    return `${parseInt()}`;\n  }; // Add or edit modal\n\n\n  const handleModal = (modalComponent, modalProps = {}, className = 'add-address-modal') => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  console.log(\"working info changed:\", state);\n  const h = ((_state$workInfo = state.workInfo) === null || _state$workInfo === void 0 ? void 0 : _state$workInfo.totalWorkingMinutesPerWeek) / 60 | 0;\n  const m = ((_state$workInfo2 = state.workInfo) === null || _state$workInfo2 === void 0 ? void 0 : _state$workInfo2.totalWorkingMinutesPerWeek) % 60 | 0;\n  const subtotalSalario = Number((_state$workInfo3 = state.workInfo) === null || _state$workInfo3 === void 0 ? void 0 : _state$workInfo3.totalWorkingMinutesPerWeek) / 60 * Number((_state$workInfo4 = state.workInfo) === null || _state$workInfo4 === void 0 ? void 0 : _state$workInfo4.ratePerHour);\n  const pendingTasks = state === null || state === void 0 ? void 0 : state.tasks.filter(task => task.startDate.length === 0 && task.finishDate.length === 0 && task.isDone === false || task.isRepetitived);\n  const inProgressTasks = state === null || state === void 0 ? void 0 : state.tasks.filter(task => task.startDate.length > 1 && task.finishDate.length === 0);\n  return __jsx(SettingsForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 5\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }, __jsx(HeadingSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"workPageTitle\",\n    defaultMessage: \"Ditto Farm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }))), __jsx(Col, {\n    style: {\n      alignItems: 'flex-end',\n      marginBottom: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    style: {\n      marginBottom: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, __jsx(Switch, {\n    label: `Usted se encuentra: ${((_state$workInfo5 = state.workInfo) === null || _state$workInfo5 === void 0 ? void 0 : _state$workInfo5.isWorking) ? 'Chambeando' : 'Vagando'}`,\n    disabled: false,\n    labelPosition: 'right' // className,\n    ,\n    onUpdate: () => {\n      var _state$workInfo6;\n\n      return ((_state$workInfo6 = state.workInfo) === null || _state$workInfo6 === void 0 ? void 0 : _state$workInfo6.isWorking) ? stopWorking() : startWorking();\n    } // style\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  })), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    style: {\n      marginRight: '15px',\n      minWidth: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileNameField\",\n    defaultMessage: \"Your Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  })), __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, state.name)), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    style: {\n      marginRight: '15px',\n      minWidth: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"workedHours\",\n    defaultMessage: \"workedHours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  })), __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, `${h}:${Number(m) >= 9 ? m : '0' + m} hs`)), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    style: {\n      marginRight: '15px',\n      minWidth: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"salaryPerHour\",\n    defaultMessage: \"salaryPerHour\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  })), __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, `$${((_state$workInfo7 = state.workInfo) === null || _state$workInfo7 === void 0 ? void 0 : (_state$workInfo7$rate = _state$workInfo7.ratePerHour) === null || _state$workInfo7$rate === void 0 ? void 0 : _state$workInfo7$rate.toFixed(2)) || '-'}`)), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    style: {\n      marginRight: '15px',\n      minWidth: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"subtotalSalary\",\n    defaultMessage: \"Salary Subtotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  })), __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, `$${subtotalSalario}`)), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    style: {\n      marginRight: '15px',\n      minWidth: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"advancedSalaryPaid\",\n    defaultMessage: \"advancedSalaryPaid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 15\n    }\n  })), __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }, `$${(_state$workInfo8 = state.workInfo) === null || _state$workInfo8 === void 0 ? void 0 : _state$workInfo8.advancedSalaryPaid}`)), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    style: {\n      marginRight: '15px',\n      minWidth: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"totalSalaryToPayWeekly\",\n    defaultMessage: \"totalSalaryToPayWeekly\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  })), __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, `$${((_state$workInfo9 = state.workInfo) === null || _state$workInfo9 === void 0 ? void 0 : (_state$workInfo9$tota = _state$workInfo9.totalSalaryToPayWeekly) === null || _state$workInfo9$tota === void 0 ? void 0 : _state$workInfo9$tota.toFixed(2)) || '-'}`)), (inProgressTasks === null || inProgressTasks === void 0 ? void 0 : inProgressTasks.length) > 0 && __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, __jsx(HeadingSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 19\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"inProgressTasks\",\n    defaultMessage: \"inProgressTasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 21\n    }\n  }))), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  }, __jsx(RadioGroupThree, {\n    items: inProgressTasks,\n    component: (task, index) => __jsx(RadioCard, {\n      id: index,\n      key: index,\n      title: task.description,\n      content: `Comenzaste: ${moment(new Date(task.startDate)).format('HH:mm A - DD MMM')}.`,\n      checked: task.isDone,\n      onChange: () => handleTaskChange(task, 'nothing'),\n      name: \"contact\",\n      hasEdit: false,\n      onDelete: () => handleTaskChange(task, 'stop'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 23\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 19\n    }\n  }))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 15\n    }\n  }, __jsx(HeadingSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 19\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"pendingTasks\",\n    defaultMessage: \"pendingTasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 21\n    }\n  }))), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 17\n    }\n  }, __jsx(RadioGroupThree, {\n    items: pendingTasks,\n    component: (task, index) => {\n      var _task$plannedDate, _task$plannedDate2;\n\n      const plannedDateDay = moment(task.plannedDate, 'MM/D/YYYY').day();\n      const plannedDate = moment(task.plannedDate, 'MM/D/YYYY');\n      const today = moment(new Date(), 'MM/D/YYYY');\n      const todayDay = moment(new Date(), 'MM/D/YYYY').day();\n      let message = null;\n\n      if (((_task$plannedDate = task.plannedDate) === null || _task$plannedDate === void 0 ? void 0 : _task$plannedDate.length) > 1 && task.isRepetitived && plannedDateDay === todayDay) {\n        message = `Tarea repetitiva: ${moment(new Date(task.plannedDate)).format('HH:mm A - ddd')}`;\n      } else if (((_task$plannedDate2 = task.plannedDate) === null || _task$plannedDate2 === void 0 ? void 0 : _task$plannedDate2.length) > 1 && !task.isRepetitived && plannedDate.isSame(today, 'date')) {\n        message = `Tarea unica, fecha: ${moment(new Date(task.plannedDate)).format('HH:mm A - DD MMM')}`;\n      }\n\n      return __jsx(RadioCard, {\n        id: index,\n        key: index,\n        disabled: !!!message,\n        title: task.description,\n        content: message,\n        checked: task.isDone,\n        onChange: () => handleTaskChange(task, 'contact'),\n        name: \"contact\",\n        onEdit: () => handleTaskChange(task, 'start'),\n        hasDelete: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 25\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 19\n    }\n  }))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, __jsx(HeadingSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 19\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"doneTasks\",\n    defaultMessage: \"doneTasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 21\n    }\n  }))), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }\n  }, __jsx(RadioGroupThree, {\n    items: state === null || state === void 0 ? void 0 : state.tasks.filter(task => task.isDone === true),\n    component: (task, index) => __jsx(RadioCard, {\n      id: index,\n      key: index,\n      title: task.description,\n      content: `Comenzaste: ${moment(new Date(task.startDate)).format('HH:mm A - DD MMM')}. Terminaste: ${moment(new Date(task.finishDate)).format('HH:mm A - MM/DD')}. Tardaste: ${task.workedHours}hs`,\n      checked: task.isDone,\n      onChange: () => handleTaskChange(task, 'nothing'),\n      name: \"contact\",\n      hasDelete: false,\n      hasEdit: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 23\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nexport default WorkContent;","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/features/user-profile/work/work.tsx"],"names":["React","useContext","useState","useMutation","Col","openModal","RadioCard","WorkContext","AuthContext","DELETE_ADDRESS","SETPRIMARY_ADDRESS","UPDATE_USER_TODO_TASKS","UPDATE_USER_WORK_INFO","CHANGE_PASSWORD","DELETE_CARD","DELETE_PHONENUMBER","SETPRIMARY_PHONENUMBER","SettingsForm","SettingsFormContent","HeadingSection","Title","Row","ButtonGroup","RadioGroupThree","UPDATE_ME","FormattedMessage","useIntl","Label","Switch","moment","WorkContent","deviceType","state","dispatch","userinfoMsg","setUserinfoMsg","isChambeanding","setChamba","passwordChangeMsg","setPasswordChangeMsg","authState","isAuthenticated","authDispatch","updateMeMutation","deletePaymentCardMutation","updateUserTodoMutation","updateUserInfoMutation","changePasswordMutation","deletePhoneNumberMutation","setprimaryPhoneNumberMutation","setprimaryAddressMutation","deleteAddressMutation","intl","delivery_address","card","name","email","id","phones","updateUserWorkInfoMutation","logDescription","workInfo","isWorking","startedWorkTime","stoppedWorkTime","ratePerHour","totalWorkingMinutesPerWeek","totalSalaryToPayWeekly","advancedSalaryPaid","taskRelated","variables","role","setTimeout","stopWorking","user","Date","toLocaleString","timeZone","workedInMinutes","diff","ratePerMinute","Number","type","payload","logs","startWorking","handleTaskChange","task","action","tasks","completationTimes","isRepetitived","toString","taskIndex","findIndex","t","taskId","taskUpdated","finishDate","workedHours","getDurationTimeInHours","startDate","description","plannedDate","isDone","start","finish","duration","hours","asHours","minutes","parseInt","handleModal","modalComponent","modalProps","className","show","config","width","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","console","log","h","m","subtotalSalario","pendingTasks","filter","length","inProgressTasks","alignItems","marginBottom","marginRight","minWidth","toFixed","index","format","plannedDateDay","day","today","todayDay","message","isSame"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Col } from 'react-styled-flexboxgrid';\nimport { openModal } from '@redq/reuse-modal';\nimport Router, { useRouter } from 'next/router';\nimport RadioCardTWO from 'components/radio-card/radio-card-two';\nimport RadioCard from 'components/radio-card/radio-card';\nimport { WorkContext } from 'contexts/work/work.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { DELETE_ADDRESS, SETPRIMARY_ADDRESS } from 'graphql/mutation/address';\nimport { UPDATE_USER_TODO_TASKS, UPDATE_USER_WORK_INFO } from 'graphql/mutation/user';\nimport { CHANGE_PASSWORD } from 'graphql/mutation/changePassword';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_PHONENUMBER, SETPRIMARY_PHONENUMBER } from 'graphql/mutation/phone';\nimport StripePaymentForm from 'features/payment/stripe-form';\nimport {\n  SettingsForm,\n  SettingsFormContent,\n  HeadingSection,\n  Title,\n  Row,\n  ButtonGroup,\n  SuccessMsg,\n  ErrorMsg\n} from './work.style';\nimport RadioGroupTwo from 'components/radio-group/radio-group-two';\nimport RadioGroupThree from 'components/radio-group/radio-group-three';\n\nimport PaymentGroup from 'components/payment-group/payment-group';\nimport UpdateAddressTwo from 'components/address-card/address-card-two';\nimport UpdateContact from 'components/contact-card/contact-card';\nimport { Button } from 'components/button/button';\nimport { Input } from 'components/forms/input';\nimport { UPDATE_ME } from 'graphql/mutation/me';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Label } from 'components/forms/label';\nimport { ItemCount } from 'components/cart-popup/cart-popup.style';\nimport Switch from 'components/switch/switch';\nimport moment from 'moment';\n\ntype WorkContentProps = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst WorkContent: React.FC<WorkContentProps> = ({ deviceType }) => {\n  const { state, dispatch } = useContext(WorkContext);\n  const [userinfoMsg, setUserinfoMsg] = useState('');\n  const [isChambeanding, setChamba] = useState(false);\n  const [passwordChangeMsg, setPasswordChangeMsg] = useState('');\n  const {\n    authState: { isAuthenticated },\n    authDispatch,\n  } = React.useContext<any>(AuthContext);\n  const [updateMeMutation] = useMutation(UPDATE_ME);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n\n  const [updateUserTodoMutation] = useMutation(UPDATE_USER_TODO_TASKS);\n  const [updateUserInfoMutation] = useMutation(UPDATE_USER_WORK_INFO);\n  const [changePasswordMutation] = useMutation(CHANGE_PASSWORD);\n  const [deletePhoneNumberMutation] = useMutation(DELETE_PHONENUMBER);\n  const [setprimaryPhoneNumberMutation] = useMutation(SETPRIMARY_PHONENUMBER);\n  const [setprimaryAddressMutation] = useMutation(SETPRIMARY_ADDRESS);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const intl = useIntl();\n \n\n  const { \n    delivery_address, \n    card,\n    name,\n    email,\n    id,\n    phones\n  } = state;\n  \n  const updateUserWorkInfoMutation = async (logDescription: string) => {\n    const { workInfo, id } = state;\n    const { isWorking, startedWorkTime, stoppedWorkTime, ratePerHour, totalWorkingMinutesPerWeek, totalSalaryToPayWeekly, advancedSalaryPaid, taskRelated} = workInfo;\n    \n    await updateUserInfoMutation({\n      variables: {\n         id,\n         isWorking,\n         startedWorkTime,\n         stoppedWorkTime,\n         ratePerHour,\n         logDescription,\n         totalWorkingMinutesPerWeek,\n         totalSalaryToPayWeekly,\n         advancedSalaryPaid,\n         taskRelated,\n         role: state.role\n        }\n    });\n    setUserinfoMsg('Update user work info successfully');\n    setTimeout(function () {\n      setUserinfoMsg('');\n    }, 8000)\n  };\n\n\n  const stopWorking = () => {\n    const user = state;\n    if (!user.workInfo) user.workInfo = {};\n    user.workInfo.isWorking = false;\n    user.workInfo.stoppedWorkTime = new Date().toLocaleString('en-US', { timeZone: 'America/Argentina/Buenos_Aires' });\n\n    const startedWorkTime = moment(new Date(user.workInfo.startedWorkTime));\n    const stoppedWorkTime = moment(new Date(user.workInfo.stoppedWorkTime));\n\n    const workedInMinutes = stoppedWorkTime.diff(startedWorkTime, 'minutes');\n    const ratePerMinute = user.workInfo.ratePerHour / 60;\n\n    user.workInfo.totalWorkingMinutesPerWeek += workedInMinutes;\n    user.workInfo.totalSalaryToPayWeekly = Number(user.workInfo.totalWorkingMinutesPerWeek) * Number(ratePerMinute) - Number(user.workInfo.advancedSalaryPaid);\n\n    // user.logs.push({\n    //   logDescription: ,\n    //   timestamp: new Date().toLocaleString('en-US', { timeZone: 'America/Argentina/Buenos_Aires' })\n    // });\n\n    dispatch({\n      type: 'HANDLE_WORK_CHANGE',\n      payload: { workInfo: user.workInfo, logs: user.logs },\n    });\n    updateUserWorkInfoMutation(`finished working.`);\n  }\n\n  const startWorking = () => {\n    const user = state;\n    if (!user.workInfo) user.workInfo = {};\n    user.workInfo.isWorking = true;\n    user.workInfo.startedWorkTime = new Date().toLocaleString('en-US', { timeZone: 'America/Argentina/Buenos_Aires' });\n    user.workInfo.stoppedWorkTime = null;\n\n    user.workInfo.ratePerHour = 300;\n    // user.logs.push({\n    //   logDescription: ,\n    //   timestamp: new Date().toLocaleString('en-US', { timeZone: 'America/Argentina/Buenos_Aires' })\n    // })\n\n    dispatch({\n      type: 'HANDLE_WORK_CHANGE',\n      payload: { workInfo: user.workInfo, logs: user.logs },\n    });\n    updateUserWorkInfoMutation(`started working.`);\n  };\n\n\n  \n  const handleTaskChange = async (task: any, action: string) => {\n    const { id, tasks } = state;\n    const completationTimes =  task.isRepetitived ? (Number(task.completationTimes)+ 1).toString() : task.completationTimes;\n    const taskIndex = tasks?.findIndex(t => t.taskId === task.taskId);\n    let taskUpdated;\n\n    switch (action) {\n      case 'stop':\n        const finishDate = new Date().toLocaleString('en-US', { timeZone: 'America/Argentina/Buenos_Aires' });\n        const workedHours = getDurationTimeInHours(task.startDate, finishDate);\n\n        taskUpdated = {\n          id,\n          taskId: task.taskId,\n          description: task.description,\n          startDate: task.startDate,\n          finishDate,\n          plannedDate: task.plannedDate,\n          isRepetitived: task.isRepetitived,\n          completationTimes,\n          workedHours: workedHours,\n          isDone: true\n        }\n        break;\n      case 'start':\n        const startDate = new Date().toLocaleString('en-US', { timeZone: 'America/Argentina/Buenos_Aires' });\n        taskUpdated = {\n          id,\n          taskId: task.taskId,\n          description: task.description,\n          startDate: startDate,\n          finishDate: task.finishDate,\n          plannedDate: task.plannedDate,\n          isRepetitived: task.isRepetitived,\n          completationTimes,\n          workedHours: task.workedHours,\n          isDone: task.isDone\n        }\n        break;\n      default:\n        taskUpdated = task;\n        break;\n      }\n\n      tasks[taskIndex] = taskUpdated;\n      dispatch({\n        type: 'HANDLE_TODO_TASKS',\n        payload: { tasks },\n      });\n\n      return await updateUserTodoMutation({\n        variables: {\n          ...taskUpdated,\n        },\n      });\n    }\n\n  const getDurationTimeInHours = (start: string, finish: string) => {\n    const startDate = moment(new Date(start));\n    const finishDate = moment(new Date(finish));\n\n    const duration = moment.duration(finishDate.diff(startDate));\n    const hours = duration.asHours();\n    const minutes = duration.asHours();\n    return `${parseInt()}`;\n  };\n\n  // Add or edit modal\n  const handleModal = (\n    modalComponent: any,\n    modalProps = {},\n    className: string = 'add-address-modal'\n  ) => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className,\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: { item: modalProps },\n    });\n  };\n\n  console.log(\"working info changed:\", state)\n  const h = state.workInfo?.totalWorkingMinutesPerWeek / 60 | 0;\n  const m = state.workInfo?.totalWorkingMinutesPerWeek % 60 | 0;\n  const subtotalSalario = Number(state.workInfo?.totalWorkingMinutesPerWeek) / 60 * Number(state.workInfo?.ratePerHour);\n  const pendingTasks = state?.tasks.filter((task) => (task.startDate.length === 0 && task.finishDate.length === 0 && task.isDone === false) || task.isRepetitived)\n  const inProgressTasks = state?.tasks.filter((task) => (task.startDate.length > 1 && task.finishDate.length === 0));\n\n  return (\n    <SettingsForm>\n      <SettingsFormContent>\n        <HeadingSection>\n          <Title>\n            <FormattedMessage\n              id='workPageTitle'\n              defaultMessage='Ditto Farm'\n            />\n          </Title>\n        </HeadingSection>\n        <Col style={{ alignItems: 'flex-end', marginBottom: '50px' }}>\n          <Row style={{ marginBottom: '15px' }}>\n            <Switch \n              label={`Usted se encuentra: ${state.workInfo?.isWorking ? 'Chambeando' : 'Vagando'}`}\n              disabled={false}\n              labelPosition={'right'}\n              // className,\n              onUpdate={() => state.workInfo?.isWorking ? stopWorking() :startWorking() }\n              // style\n            />\n          </Row>\n\n          <Row>\n          <Label style={{ marginRight: '15px', minWidth: '200px'}}>\n                <FormattedMessage\n                  id='profileNameField'\n                  defaultMessage='Your Name'\n                />\n              </Label>\n              <Label>\n                {state.name}\n              </Label>\n          </Row>\n\n          <Row>\n              <Label style={{ marginRight: '15px', minWidth: '200px'}}>\n                <FormattedMessage\n                  id='workedHours'\n                  defaultMessage='workedHours'\n                />\n              </Label>\n              <Label>\n                {`${h}:${Number(m) >= 9 ? m : '0' + m} hs`}\n              </Label>\n          </Row>\n\n\n          <Row>\n            <Label style={{ marginRight: '15px', minWidth: '200px'}}>\n              <FormattedMessage\n                id='salaryPerHour'\n                defaultMessage='salaryPerHour'\n              />\n            </Label>\n            <Label>\n            {`$${state.workInfo?.ratePerHour?.toFixed(2) || '-'}`}\n            </Label>\n          </Row>\n\n          <Row>\n            <Label style={{ marginRight: '15px', minWidth: '200px'}}>\n              <FormattedMessage\n                id='subtotalSalary'\n                defaultMessage='Salary Subtotal'\n              />\n            </Label>\n            <Label>\n              {`$${subtotalSalario}`}\n            </Label>\n          </Row>\n\n          <Row>\n            <Label style={{ marginRight: '15px', minWidth: '200px'}}>\n              <FormattedMessage\n                id='advancedSalaryPaid'\n                defaultMessage='advancedSalaryPaid'\n              />\n            </Label>\n            <Label>\n              {`$${state.workInfo?.advancedSalaryPaid}`}\n            </Label>\n          </Row>\n\n          <Row>\n            <Label style={{ marginRight: '15px', minWidth: '200px'}}>\n                <FormattedMessage\n                  id='totalSalaryToPayWeekly'\n                  defaultMessage='totalSalaryToPayWeekly'\n                />\n              </Label>\n              <Label>\n                {`$${state.workInfo?.totalSalaryToPayWeekly?.toFixed(2) || '-'}`}\n              </Label>\n          </Row>\n\n          { inProgressTasks?.length > 0 && (\n            <Row>\n            <Col xs={12} sm={12} md={12} lg={12}>\n              <SettingsFormContent>\n                <HeadingSection>\n                  <Title>\n                    <FormattedMessage id='inProgressTasks' defaultMessage='inProgressTasks' />\n                  </Title>\n                </HeadingSection>\n                <ButtonGroup>\n                  <RadioGroupThree\n                    items={inProgressTasks}\n                    component={(task: any, index: any) => (\n                      <RadioCard\n                        id={index}\n                        key={index}\n                        title={task.description}\n                        content={`Comenzaste: ${moment(new Date(task.startDate)).format('HH:mm A - DD MMM')}.`}\n                        checked={task.isDone}\n                        onChange={() => handleTaskChange(task, 'nothing')}\n                        name='contact'\n                        hasEdit={false}\n                        onDelete={() => handleTaskChange(task, 'stop')}\n                      />\n                    )}\n                  />\n                </ButtonGroup>\n              </SettingsFormContent>\n            </Col>\n          </Row>\n          )}\n\n          <Row>\n            <Col xs={12} sm={12} md={12} lg={12}>\n              <SettingsFormContent>\n                <HeadingSection>\n                  <Title>\n                    <FormattedMessage id='pendingTasks' defaultMessage='pendingTasks' />\n                  </Title>\n                </HeadingSection>\n                <ButtonGroup>\n                  <RadioGroupThree\n                    items={pendingTasks}\n                    component={(task: any, index: any) => {\n                      const plannedDateDay = moment(task.plannedDate, 'MM/D/YYYY').day();\n                      const plannedDate = moment(task.plannedDate, 'MM/D/YYYY');\n                      const today = moment(new Date(), 'MM/D/YYYY');\n                      const todayDay = moment(new Date(), 'MM/D/YYYY').day();\n                      let message = null;\n\n                      if (task.plannedDate?.length > 1 && task.isRepetitived && plannedDateDay === todayDay) {\n                        message = `Tarea repetitiva: ${moment(new Date(task.plannedDate)).format('HH:mm A - ddd')}`\n                      } else if (task.plannedDate?.length > 1 && !task.isRepetitived && plannedDate.isSame(today, 'date')){\n                        message = `Tarea unica, fecha: ${moment(new Date(task.plannedDate)).format('HH:mm A - DD MMM')}`\n                      }\n                      return (\n                        <RadioCard\n                          id={index}\n                          key={index}\n                          disabled={!!!message}\n                          title={task.description}\n                          content={message}\n                          checked={task.isDone}\n                          onChange={() => handleTaskChange(task, 'contact')}\n                          name='contact'\n                          onEdit={() => handleTaskChange(task,'start')}\n                          hasDelete={false}\n                        />\n                      )}\n                    }\n                  />\n                </ButtonGroup>\n              </SettingsFormContent>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={12} sm={12} md={12} lg={12}>\n              <SettingsFormContent>\n                <HeadingSection>\n                  <Title>\n                    <FormattedMessage id='doneTasks' defaultMessage='doneTasks' />\n                  </Title>\n                </HeadingSection>\n                <ButtonGroup>\n                  <RadioGroupThree\n                    items={state?.tasks.filter((task) => (task.isDone === true))}\n                    component={(task: any, index: any) => (\n                      <RadioCard\n                        id={index}\n                        key={index}\n                        title={task.description}\n                        content={`Comenzaste: ${moment(new Date(task.startDate)).format('HH:mm A - DD MMM')}. Terminaste: ${moment(new Date(task.finishDate)).format('HH:mm A - MM/DD')}. Tardaste: ${task.workedHours}hs`}\n                        checked={task.isDone}\n                        onChange={() => handleTaskChange(task, 'nothing')}\n                        name='contact'\n                        hasDelete={false}\n                        hasEdit={false}\n                      />\n                    )}\n                  />\n                </ButtonGroup>\n              </SettingsFormContent>\n            </Col>\n          </Row>\n\n        </Col>\n      </SettingsFormContent>\n    </SettingsForm>\n  );\n};\n\nexport default WorkContent;\n"]},"metadata":{},"sourceType":"module"}