{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport { useIntl } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants, deliveryMethodCookieKeyName } from 'utils/constant';\nimport { getCookie } from 'utils/session';\nimport DeliverySelection from 'features/delivery-selection/delivery-selection';\nimport { BannerIcon, BannerText, DeliveryText, LocationContent, SubHeaderWrapper } from './sub-header.style';\n\nvar LocationMenu = function LocationMenu(_ref) {\n  _s();\n\n  var _deliveryMethodSaved$, _deliveryMethodSaved$2, _deliveryMethodSaved$3, _deliveryMethodSaved$4, _deliveryMethodSaved$5, _deliveryMethodSaved$6, _deliveryMethodSaved$7, _deliveryMethodSaved$8, _deliveryMethodSaved$9, _deliveryMethodSaved$10, _deliveryMethodSaved$11, _deliveryMethodSaved$12, _deliveryMethodSaved$13;\n\n  var deliveryMethodSaved = _ref.deliveryMethodSaved,\n      isOpen = _ref.isOpen;\n  console.log('deliveryMethodSaved', deliveryMethodSaved);\n  var mobile = useMedia('(max-width: 580px)');\n  var address = mobile ? (_deliveryMethodSaved$ = deliveryMethodSaved.deliveryOrPickupMethodSelected) === null || _deliveryMethodSaved$ === void 0 ? void 0 : (_deliveryMethodSaved$2 = _deliveryMethodSaved$.details) === null || _deliveryMethodSaved$2 === void 0 ? void 0 : (_deliveryMethodSaved$3 = _deliveryMethodSaved$2.split('|')) === null || _deliveryMethodSaved$3 === void 0 ? void 0 : _deliveryMethodSaved$3[0].substring(0, deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$4 = deliveryMethodSaved.deliveryOrPickupMethodSelected) === null || _deliveryMethodSaved$4 === void 0 ? void 0 : (_deliveryMethodSaved$5 = _deliveryMethodSaved$4.details) === null || _deliveryMethodSaved$5 === void 0 ? void 0 : (_deliveryMethodSaved$6 = _deliveryMethodSaved$5.split('|')) === null || _deliveryMethodSaved$6 === void 0 ? void 0 : (_deliveryMethodSaved$7 = _deliveryMethodSaved$6[0]) === null || _deliveryMethodSaved$7 === void 0 ? void 0 : _deliveryMethodSaved$7.lengtha) : deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$8 = deliveryMethodSaved.deliveryOrPickupMethodSelected) === null || _deliveryMethodSaved$8 === void 0 ? void 0 : (_deliveryMethodSaved$9 = _deliveryMethodSaved$8.details) === null || _deliveryMethodSaved$9 === void 0 ? void 0 : (_deliveryMethodSaved$10 = _deliveryMethodSaved$9.split('|')) === null || _deliveryMethodSaved$10 === void 0 ? void 0 : _deliveryMethodSaved$10[0];\n  var time = deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : (_deliveryMethodSaved$11 = deliveryMethodSaved.deliveryOrPickupMethodSelected) === null || _deliveryMethodSaved$11 === void 0 ? void 0 : (_deliveryMethodSaved$12 = _deliveryMethodSaved$11.details) === null || _deliveryMethodSaved$12 === void 0 ? void 0 : (_deliveryMethodSaved$13 = _deliveryMethodSaved$12.split('|')) === null || _deliveryMethodSaved$13 === void 0 ? void 0 : _deliveryMethodSaved$13[1];\n  var intl = useIntl();\n  var defaultText = intl.formatMessage({\n    id: 'defaultDeliveryPickupText',\n    defaultMessage: 'check here'\n  });\n  return __jsx(LocationContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, isOpen ? __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleDown,\n    className: \"fas fa-chevron-down\",\n    style: {\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleUp,\n    className: \"fas fa-chevron-up\",\n    style: {\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }\n  }), __jsx(DeliveryText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, deliveryMethodSaved.deliveryOrPickupMethodSelected ? (deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.isPickUp) ? DeliveryMethodsConstants.PICKUP : DeliveryMethodsConstants.DELIVERY : defaultText), (deliveryMethodSaved === null || deliveryMethodSaved === void 0 ? void 0 : deliveryMethodSaved.name) && address && __jsx(React.Fragment, null, \"|\", __jsx(BannerIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: DeliveryIcon,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  })), __jsx(BannerText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"\".concat(deliveryMethodSaved.name, \" - \").concat(address))));\n};\n\n_s(LocationMenu, \"k8fZ0goWa3ys2FoQVG00wM7JIiY=\", false, function () {\n  return [useMedia, useIntl];\n});\n\n_c = LocationMenu;\n\nvar SubHeader = function SubHeader(_ref2) {\n  _s2();\n\n  var props = _extends({}, _ref2);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      deliveryMethodSaved = _React$useState2[0],\n      setDeliveryMethodSaved = _React$useState2[1];\n\n  useEffect(function () {\n    if (getCookie(deliveryMethodCookieKeyName) && !deliveryMethodSaved) {\n      var _deliveryMethodSaved = JSON.parse(getCookie(deliveryMethodCookieKeyName));\n\n      setDeliveryMethodSaved(_deliveryMethodSaved);\n    }\n  }, [deliveryMethodSaved]);\n  return __jsx(SubHeaderWrapper, {\n    className: props.className,\n    id: \"layout-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverBigger, {\n    direction: \"left\",\n    className: \"user-pages-dropdown\",\n    openHandler: __jsx(LocationMenu, {\n      isOpen: false,\n      deliveryMethodSaved: deliveryMethodSaved,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 22\n      }\n    }),\n    closeHandler: __jsx(LocationMenu, {\n      isOpen: true,\n      deliveryMethodSaved: deliveryMethodSaved,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }\n    }),\n    content: __jsx(DeliverySelection, {\n      deliveryMethodSaved: deliveryMethodSaved,\n      setDeliveryMethodSaved: setDeliveryMethodSaved,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 18\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s2(SubHeader, \"vNaCvSloukDt6BqP2KTyuInVnbc=\");\n\n_c2 = SubHeader;\nexport default SubHeader;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LocationMenu\");\n$RefreshReg$(_c2, \"SubHeader\");","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/ditto/client/packages/shop/src/features/sub-header/sub-header.tsx"],"names":["React","useEffect","DeliveryIcon","useMedia","useIntl","PopoverBigger","FontAwesomeIcon","faChevronCircleDown","faChevronCircleUp","DeliveryMethodsConstants","deliveryMethodCookieKeyName","getCookie","DeliverySelection","BannerIcon","BannerText","DeliveryText","LocationContent","SubHeaderWrapper","LocationMenu","deliveryMethodSaved","isOpen","console","log","mobile","address","deliveryOrPickupMethodSelected","details","split","substring","lengtha","time","intl","defaultText","formatMessage","id","defaultMessage","color","isPickUp","PICKUP","DELIVERY","name","SubHeader","props","useState","setDeliveryMethodSaved","JSON","parse","className"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAA0BC,SAA1B,QAA+D,OAA/D;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAA2BC,OAA3B,QAA0C,YAA1C;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAgE,mCAAhE;AACA,SAASC,wBAAT,EAAmCC,2BAAnC,QAAsE,gBAAtE;AACA,SAASC,SAAT,QAAqC,eAArC;AACA,OAAOC,iBAAP,MAA8B,gDAA9B;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,YAAjC,EAA+CC,eAA/C,EAAgEC,gBAAhE,QAAwF,oBAAxF;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAqC;AAAA;;AAAA;;AAAA,MAAlCC,mBAAkC,QAAlCA,mBAAkC;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,mBAAnC;AACA,MAAMI,MAAM,GAAGpB,QAAQ,CAAC,oBAAD,CAAvB;AACA,MAAMqB,OAAO,GAAGD,MAAM,4BAClBJ,mBAAmB,CAACM,8BADF,oFAClB,sBAAoDC,OADlC,qFAClB,uBAA6DC,KAA7D,CAAmE,GAAnE,CADkB,2DAClB,uBAA0E,CAA1E,EAA6EC,SAA7E,CAAuF,CAAvF,EAA0FT,mBAA1F,aAA0FA,mBAA1F,iDAA0FA,mBAAmB,CAAEM,8BAA/G,qFAA0F,uBAAqDC,OAA/I,qFAA0F,uBAA8DC,KAA9D,CAAoE,GAApE,CAA1F,qFAA0F,uBAA2E,CAA3E,CAA1F,2DAA0F,uBAA+EE,OAAzK,CADkB,GAElBV,mBAFkB,aAElBA,mBAFkB,iDAElBA,mBAAmB,CAAEM,8BAFH,qFAElB,uBAAqDC,OAFnC,sFAElB,uBAA8DC,KAA9D,CAAoE,GAApE,CAFkB,4DAElB,wBAA2E,CAA3E,CAFJ;AAGA,MAAMG,IAAI,GAAGX,mBAAH,aAAGA,mBAAH,kDAAGA,mBAAmB,CAAEM,8BAAxB,uFAAG,wBAAqDC,OAAxD,uFAAG,wBAA8DC,KAA9D,CAAoE,GAApE,CAAH,4DAAG,wBAA2E,CAA3E,CAAb;AAEA,MAAMI,IAAI,GAAG3B,OAAO,EAApB;AAEA,MAAM4B,WAAW,GAAGD,IAAI,CAACE,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE,2BAAN;AAAmCC,IAAAA,cAAc,EAAE;AAAnD,GAAnB,CAApB;AACA,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMf,MAAM,GACH,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEb,mBAAvB;AAA4C,IAAA,SAAS,EAAC,qBAAtD;AAA4E,IAAA,KAAK,EAAE;AAAE6B,MAAAA,KAAK,EAAE;AAAT,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAEH,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAE5B,iBAAvB;AAA0C,IAAA,SAAS,EAAC,mBAApD;AAAwE,IAAA,KAAK,EAAE;AAAE4B,MAAAA,KAAK,EAAE;AAAT,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHT,EAQI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAejB,mBAAmB,CAACM,8BAApB,GAAqD,CAAAN,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,YAAAA,mBAAmB,CAAEkB,QAArB,IAAgC5B,wBAAwB,CAAC6B,MAAzD,GAAkE7B,wBAAwB,CAAC8B,QAAhJ,GAA2JP,WAA1K,CARJ,EASM,CAAAb,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,YAAAA,mBAAmB,CAAEqB,IAArB,KAA6BhB,OAA7B,IACA,iCAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY;AAAK,IAAA,GAAG,EAAEtB,YAAV;AAAwB,IAAA,GAAG,EAAC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,CAFF,EAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgBiB,mBAAmB,CAACqB,IAApC,gBAA8ChB,OAA9C,EAHF,CAVN,CADF;AAmBD,CA9BD;;GAAMN,Y;UAEWf,Q,EAMFC,O;;;KARTc,Y;;AAiCN,IAAMuB,SAA0B,GAAG,SAA7BA,SAA6B,QAAmB;AAAA;;AAAA,MAAbC,KAAa;;AAAA,wBACE1C,KAAK,CAAC2C,QAAN,EADF;AAAA;AAAA,MAC7CxB,mBAD6C;AAAA,MACxByB,sBADwB;;AAGpD3C,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIU,SAAS,CAACD,2BAAD,CAAT,IAA0C,CAACS,mBAA/C,EAAoE;AAClE,UAAMA,oBAAmB,GAAG0B,IAAI,CAACC,KAAL,CAAWnC,SAAS,CAACD,2BAAD,CAApB,CAA5B;;AACAkC,MAAAA,sBAAsB,CAACzB,oBAAD,CAAtB;AACD;AACF,GALQ,EAKN,CAACA,mBAAD,CALM,CAAT;AAOA,SACE,MAAC,gBAAD;AAAkB,IAAA,SAAS,EAAEuB,KAAK,CAACK,SAAnC;AAA8C,IAAA,EAAE,EAAC,eAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAGE,IAAA,WAAW,EAAE,MAAC,YAAD;AACX,MAAA,MAAM,EAAE,KADG;AACI,MAAA,mBAAmB,EAAE5B,mBADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHf;AAME,IAAA,YAAY,EAAE,MAAC,YAAD;AACZ,MAAA,MAAM,EAAE,IADI;AACE,MAAA,mBAAmB,EAAEA,mBADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANhB;AASE,IAAA,OAAO,EAAE,MAAC,iBAAD;AAAmB,MAAA,mBAAmB,EAAEA,mBAAxC;AAA6D,MAAA,sBAAsB,EAAEyB,sBAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAgBD,CA1BD;;IAAMH,S;;MAAAA,S;AA4BN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport DeliveryIcon from 'assets/images/locationIcon.webp';\nimport { useMedia } from 'utils/use-media';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PopoverBigger from 'components/popover-bigger/popover-bigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryMethodsConstants, deliveryMethodCookieKeyName } from 'utils/constant';\nimport { getCookie, setCookie } from 'utils/session';\nimport DeliverySelection from 'features/delivery-selection/delivery-selection';\nimport { BannerIcon, BannerText, DeliveryText, LocationContent, SubHeaderWrapper } from './sub-header.style';\n\ninterface Props {\n  className: string\n}\n\n\nconst LocationMenu = ({ deliveryMethodSaved, isOpen }) => {\n  console.log('deliveryMethodSaved', deliveryMethodSaved)\n  const mobile = useMedia('(max-width: 580px)');\n  const address = mobile \n    ? deliveryMethodSaved.deliveryOrPickupMethodSelected?.details?.split('|')?.[0].substring(0, deliveryMethodSaved?.deliveryOrPickupMethodSelected?.details?.split('|')?.[0]?.lengtha)\n    : deliveryMethodSaved?.deliveryOrPickupMethodSelected?.details?.split('|')?.[0]\n  const time = deliveryMethodSaved?.deliveryOrPickupMethodSelected?.details?.split('|')?.[1]\n\n  const intl = useIntl();\n\n  const defaultText = intl.formatMessage({ id: 'defaultDeliveryPickupText', defaultMessage: 'check here' })\n  return (\n    <LocationContent>\n        { isOpen \n          ? (<FontAwesomeIcon icon={faChevronCircleDown} className=\"fas fa-chevron-down\" style={{ color: \"black\" }} />) \n          : (<FontAwesomeIcon icon={faChevronCircleUp} className=\"fas fa-chevron-up\" style={{ color: \"black\" }} />)\n        }\n        { \n\n        }\n        <DeliveryText>{deliveryMethodSaved.deliveryOrPickupMethodSelected ? deliveryMethodSaved?.isPickUp ? DeliveryMethodsConstants.PICKUP : DeliveryMethodsConstants.DELIVERY : defaultText}</DeliveryText>\n        { deliveryMethodSaved?.name && address && (\n          <>\n              |\n            <BannerIcon><img src={DeliveryIcon} alt=\"\" /></BannerIcon>\n            <BannerText>{`${deliveryMethodSaved.name} - ${address}`}</BannerText>\n          </>\n        )}\n      </LocationContent>\n  );\n};\n\n\nconst SubHeader: React.FC<Props> = ({ ...props  }) => {\n  const [deliveryMethodSaved, setDeliveryMethodSaved] = React.useState();\n\n  useEffect(() => {\n    if (getCookie(deliveryMethodCookieKeyName) && !deliveryMethodSaved) {\n      const deliveryMethodSaved = JSON.parse(getCookie(deliveryMethodCookieKeyName));\n      setDeliveryMethodSaved(deliveryMethodSaved)\n    }\n  }, [deliveryMethodSaved]);\n\n  return (\n    <SubHeaderWrapper className={props.className} id=\"layout-header\">\n      <PopoverBigger\n        direction=\"left\"\n        className=\"user-pages-dropdown\"\n        openHandler={<LocationMenu\n          isOpen={false} deliveryMethodSaved={deliveryMethodSaved} />\n        }\n        closeHandler={<LocationMenu\n          isOpen={true} deliveryMethodSaved={deliveryMethodSaved}/>\n        }\n        content={<DeliverySelection deliveryMethodSaved={deliveryMethodSaved} setDeliveryMethodSaved={setDeliveryMethodSaved} />}\n      />\n    </SubHeaderWrapper>\n  );\n\n};\n\nexport default SubHeader;\n"]},"metadata":{},"sourceType":"module"}