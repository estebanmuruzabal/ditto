{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport { closeModal } from '@redq/reuse-modal';\nimport { Button } from 'components/button/button';\nimport { QuickViewWrapper, ProductDetailsWrapper, ProductPreview, DiscountPercent, ProductInfoWrapper, ProductInfo, ProductTitlePriceWrapper, ProductTitle, ProductWeight, ProductDescription, ButtonText, ProductMeta, ProductCartWrapper, ProductPriceWrapper, ProductPrice, SalePrice, ProductCartBtn, MetaSingle, MetaItem, ModalClose } from './quick-view.style';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { CartIcon } from 'assets/icons/CartIcon';\nimport { CURRENCY } from 'utils/constant';\nimport ReadMore from 'components/truncate/truncate';\nimport CarouselWithCustomDots from 'components/multi-carousel/multi-carousel';\nimport { useLocale } from 'contexts/language/language.provider';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { Counter } from 'components/counter/counter';\nimport { FormattedMessage } from 'react-intl';\n\nconst QuickView = ({\n  modalProps,\n  deviceType,\n  onModalClose\n}) => {\n  const {\n    addItem,\n    removeItem,\n    isInCart,\n    getItem\n  } = useCart();\n  const {\n    id,\n    type,\n    title,\n    unit,\n    price,\n    discountInPercent,\n    salePrice,\n    description,\n    gallery,\n    categories\n  } = modalProps;\n  const {\n    isRtl\n  } = useLocale();\n\n  const handleAddClick = e => {\n    e.stopPropagation();\n    addItem(modalProps);\n  };\n\n  const handleRemoveClick = e => {\n    e.stopPropagation();\n    removeItem(modalProps);\n  };\n\n  function onCategoryClick(slug) {\n    Router.push({\n      pathname: `/${type.toLowerCase()}`,\n      query: {\n        category: slug\n      }\n    }).then(() => window.scrollTo(0, 0));\n    closeModal();\n  }\n\n  return __jsx(React.Fragment, null, __jsx(ModalClose, {\n    onClick: onModalClose\n  }, __jsx(CloseIcon, null)), __jsx(QuickViewWrapper, null, __jsx(ProductDetailsWrapper, {\n    className: \"product-card\",\n    dir: \"ltr\"\n  }, !isRtl && __jsx(ProductPreview, null, __jsx(CarouselWithCustomDots, {\n    items: gallery,\n    deviceType: deviceType\n  }), !!discountInPercent && __jsx(React.Fragment, null, __jsx(DiscountPercent, null, discountInPercent, \"%\"))), __jsx(ProductInfoWrapper, {\n    dir: isRtl ? 'rtl' : 'ltr'\n  }, __jsx(ProductInfo, null, __jsx(ProductTitlePriceWrapper, null, __jsx(ProductTitle, null, title), __jsx(ProductPriceWrapper, null, discountInPercent ? __jsx(SalePrice, null, CURRENCY, price) : '', __jsx(ProductPrice, null, CURRENCY, salePrice ? salePrice : price))), __jsx(ProductWeight, null, unit), __jsx(ProductDescription, null, __jsx(ReadMore, {\n    character: 600\n  }, description)), __jsx(ProductCartWrapper, null, __jsx(ProductCartBtn, null, !isInCart(id) ? __jsx(Button, {\n    className: \"cart-button\",\n    variant: \"secondary\",\n    borderRadius: 100,\n    onClick: handleAddClick\n  }, __jsx(CartIcon, null), __jsx(ButtonText, null, __jsx(FormattedMessage, {\n    id: \"addCartButton\",\n    defaultMessage: \"Cart\"\n  }))) : __jsx(Counter, {\n    value: getItem(id).quantity,\n    onDecrement: handleRemoveClick,\n    onIncrement: handleAddClick\n  }))), __jsx(ProductMeta, null, __jsx(MetaSingle, null, categories ? categories.map(item => __jsx(MetaItem, {\n    onClick: () => onCategoryClick(item.slug),\n    key: item.id\n  }, item.title)) : '')))), isRtl && __jsx(ProductPreview, null, __jsx(CarouselWithCustomDots, {\n    items: gallery,\n    deviceType: deviceType\n  }), !!discountInPercent && __jsx(React.Fragment, null, __jsx(DiscountPercent, null, discountInPercent, \"%\"))))));\n};\n\nexport default QuickView;","map":null,"metadata":{},"sourceType":"module"}