{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport { ProductsRow, ProductsCol, ButtonWrapper, LoaderWrapper, LoaderItem, ProductCardWrapper } from './product-list.style';\nimport { CURRENCY } from 'utils/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport { NetworkStatus } from 'apollo-client';\nimport Placeholder from 'components/placeholder/placeholder';\nimport Fade from 'react-reveal/Fade';\nimport NoResultFound from 'components/no-result/no-result';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from 'components/button/button';\nimport { GET_PRODUCTS } from 'graphql/query/products.query';\nimport { SHOP_IMAGE_HOST } from 'utils/images-path';\nvar ErrorMessage = dynamic(function () {\n  return import('components/error-message/error-message');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/error-message/error-message')];\n    },\n    modules: ['components/error-message/error-message']\n  }\n});\nvar QuickView = dynamic(function () {\n  return import('features/quick-view/quick-view');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('features/quick-view/quick-view')];\n    },\n    modules: ['features/quick-view/quick-view']\n  }\n});\nvar GeneralCard = dynamic(function () {\n  return import('components/product-card/product-card-one/product-card-one');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/product-card/product-card-one/product-card-one')];\n    },\n    modules: ['components/product-card/product-card-one/product-card-one']\n  }\n});\nvar BookCard = dynamic(function () {\n  return import('components/product-card/product-card-two/product-card-two');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/product-card/product-card-two/product-card-two')];\n    },\n    modules: ['components/product-card/product-card-two/product-card-two']\n  }\n});\nvar FurnitureCard = dynamic(function () {\n  return import('components/product-card/product-card-three/product-card-three');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/product-card/product-card-three/product-card-three')];\n    },\n    modules: ['components/product-card/product-card-three/product-card-three']\n  }\n});\nvar MedicineCard = dynamic(function () {\n  return import('components/product-card/product-card-five/product-card-five');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/product-card/product-card-five/product-card-five')];\n    },\n    modules: ['components/product-card/product-card-five/product-card-five']\n  }\n});\nexport var Products = function Products(_ref) {\n  var deviceType = _ref.deviceType,\n      _ref$fetchLimit = _ref.fetchLimit,\n      fetchLimit = _ref$fetchLimit === void 0 ? 20 : _ref$fetchLimit,\n      _ref$loadMore = _ref.loadMore,\n      loadMore = _ref$loadMore === void 0 ? true : _ref$loadMore,\n      type = _ref.type;\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: router.query.type,\n      text: router.query.text,\n      category: router.query.category,\n      offset: 0,\n      limit: fetchLimit\n    },\n    notifyOnNetworkStatusChange: true\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus;\n\n  var loadingMore = networkStatus === NetworkStatus.fetchMore; // Quick View Modal\n\n  var handleModalClose = function handleModalClose() {\n    var pathname = router.pathname,\n        query = router.query,\n        asPath = router.asPath;\n    var as = asPath;\n    router.push({\n      pathname: pathname,\n      query: query\n    }, as, {\n      shallow: true\n    });\n    closeModal();\n  };\n\n  var handleQuickViewModal = function handleQuickViewModal(modalProps, deviceType, onModalClose) {\n    var pathname = router.pathname,\n        query = router.query;\n    var as = \"/product/\".concat(modalProps.slug);\n\n    if (pathname === '/product/[slug]') {\n      router.push(pathname, as);\n      return;\n    }\n\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: false,\n      component: QuickView,\n      componentProps: {\n        modalProps: modalProps,\n        deviceType: deviceType,\n        onModalClose: onModalClose\n      },\n      closeComponent: 'div',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 900,\n        y: 30,\n        height: 'auto',\n        transition: {\n          mass: 1,\n          tension: 0,\n          friction: 0\n        }\n      }\n    });\n    router.push({\n      pathname: pathname,\n      query: query\n    }, {\n      pathname: as\n    }, {\n      shallow: true\n    });\n  };\n\n  if (error) return __jsx(ErrorMessage, {\n    message: error.message\n  });\n\n  if (loading && !loadingMore) {\n    return __jsx(LoaderWrapper, null, __jsx(LoaderItem, null, __jsx(Placeholder, {\n      uniqueKey: \"1\"\n    })), __jsx(LoaderItem, null, __jsx(Placeholder, {\n      uniqueKey: \"2\"\n    })), __jsx(LoaderItem, null, __jsx(Placeholder, {\n      uniqueKey: \"3\"\n    })));\n  }\n\n  if (!data || !data.products || data.products.items.length === 0) {\n    return __jsx(NoResultFound, null);\n  }\n\n  var handleLoadMore = function handleLoadMore() {\n    fetchMore({\n      variables: {\n        offset: Number(data.products.items.length),\n        limit: fetchLimit\n      },\n      updateQuery: function updateQuery(previousResult, _ref2) {\n        var fetchMoreResult = _ref2.fetchMoreResult;\n\n        if (!fetchMoreResult) {\n          return previousResult;\n        }\n\n        return {\n          products: {\n            __typename: previousResult.products.__typename,\n            items: [].concat(_toConsumableArray(previousResult.products.items), _toConsumableArray(fetchMoreResult.products.items)),\n            hasMore: fetchMoreResult.products.hasMore\n          }\n        };\n      }\n    });\n  };\n\n  var renderCard = function renderCard(productType, props) {\n    var _props$author;\n\n    switch (productType) {\n      case 'book':\n        return __jsx(BookCard, {\n          title: props.title,\n          image: props.image,\n          name: props === null || props === void 0 ? void 0 : (_props$author = props.author) === null || _props$author === void 0 ? void 0 : _props$author.name,\n          data: props,\n          deviceType: deviceType,\n          onClick: function onClick() {\n            return router.push('/product/[slug]', \"/product/\".concat(props.slug));\n          }\n        });\n\n      case 'medicine':\n        return __jsx(MedicineCard, {\n          title: props.title,\n          currency: CURRENCY,\n          image: props.image,\n          price: props.price,\n          weight: props.unit,\n          data: props\n        });\n\n      case 'furniture':\n        return __jsx(FurnitureCard, {\n          title: props.title,\n          image: props.gallery[0].url,\n          discountInPercent: props.discount_in_percent,\n          onClick: function onClick() {\n            return handleQuickViewModal(props, deviceType, handleModalClose);\n          }\n        });\n\n      default:\n        return __jsx(GeneralCard, {\n          title: props.name,\n          description: props.description,\n          image: SHOP_IMAGE_HOST + props.images[0],\n          weight: props.unit,\n          currency: CURRENCY,\n          price: props.price,\n          salePrice: props.sale_price,\n          discountInPercent: props.discount_in_percent,\n          data: props,\n          deviceType: deviceType,\n          onClick: function onClick() {\n            return router.push('/product/[slug]', \"/product/\".concat(props.slug));\n          }\n        });\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ProductsRow, null, data.products.items.map(function (item, index) {\n    return __jsx(ProductsCol, {\n      key: index,\n      style: type === 'book' ? {\n        paddingLeft: 0,\n        paddingRight: 1\n      } : {}\n    }, __jsx(ProductCardWrapper, null, __jsx(Fade, {\n      duration: 800,\n      delay: index * 10,\n      style: {\n        height: '100%'\n      }\n    }, renderCard(type, item))));\n  })), loadMore && data.products.hasMore && __jsx(ButtonWrapper, null, __jsx(Button, {\n    onClick: handleLoadMore,\n    loading: loadingMore,\n    variant: \"secondary\",\n    style: {\n      fontSize: 14\n    },\n    border: \"1px solid #f1f1f1\"\n  }, __jsx(FormattedMessage, {\n    id: \"loadMoreButton\",\n    defaultMessage: \"Load More\"\n  }))));\n};\nexport default Products;","map":null,"metadata":{},"sourceType":"module"}