{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { Button } from 'components/button/button';\nimport RadioCard from 'components/radio-card/radio-card';\nimport RadioGroup from 'components/radio-group/radio-group';\nimport UpdateAddress from 'components/address-card/address-card';\nimport UpdateContact from 'components/contact-card/contact-card';\nimport { DELETE_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation } from '@apollo/react-hooks';\nimport CheckoutWrapper, { CheckoutContainer, OrderSummary, OrderSummaryItem, OrderLabel, OrderAmount, DeliverySchedule, Heading, DeliveryAddress, ButtonGroup, Contact, PaymentOption, CheckoutSubmit, CouponBoxWrapper, ErrorMsg } from './checkout-one.style';\nimport CouponBox, { CouponDisplay } from 'components/coupon-box/coupon-box';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { APPLY_COUPON } from 'graphql/mutation/coupon'; // The type of props Checkout Form receives\n\nvar Checkout = function Checkout(_ref) {\n  var token = _ref.token,\n      deviceType = _ref.deviceType;\n\n  var _useCart = useCart(),\n      removeCoupon = _useCart.removeCoupon,\n      coupon = _useCart.coupon,\n      applyCoupon = _useCart.applyCoupon,\n      clearCart = _useCart.clearCart,\n      cartItemsCount = _useCart.cartItemsCount,\n      calculatePrice = _useCart.calculatePrice,\n      calculateDiscount = _useCart.calculateDiscount,\n      calculateSubTotalPrice = _useCart.calculateSubTotalPrice,\n      isRestaurant = _useCart.isRestaurant,\n      toggleRestaurant = _useCart.toggleRestaurant;\n\n  var _useState = useState(''),\n      couponCode = _useState[0],\n      setCouponCode = _useState[1];\n\n  var _useState2 = useState(''),\n      couponError = _useState2[0],\n      setError = _useState2[1];\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState(false),\n      isValid = _useState4[0],\n      setIsValid = _useState4[1];\n\n  var address = state.address,\n      contact = state.contact,\n      card = state.card,\n      schedules = state.schedules;\n\n  var _useMutation = useMutation(DELETE_CONTACT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      deleteContactMutation = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_ADDRESS),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteAddressMutation = _useMutation4[0];\n\n  var _useMutation5 = useMutation(DELETE_CARD),\n      _useMutation6 = _slicedToArray(_useMutation5, 1),\n      deletePaymentCardMutation = _useMutation6[0];\n\n  var _useMutation7 = useMutation(APPLY_COUPON),\n      _useMutation8 = _slicedToArray(_useMutation7, 1),\n      appliedCoupon = _useMutation8[0];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n\n              if (isValid) {\n                clearCart();\n                Router.push('/order-received');\n              }\n\n              setLoading(false);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (calculatePrice() > 0 && cartItemsCount > 0 && address.length && contact.length && card.length && schedules.length) {\n      setIsValid(true);\n    }\n  }, [state]);\n  useEffect(function () {\n    return function () {\n      if (isRestaurant) {\n        toggleRestaurant();\n        clearCart();\n      }\n    };\n  }, []); // Add or edit modal\n\n  var handleModal = function handleModal(modalComponent) {\n    var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'add-address-modal';\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  var handleEditDelete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(item, type, name) {\n      var modalComponent;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(type === 'edit')) {\n                _context2.next = 5;\n                break;\n              }\n\n              modalComponent = name === 'address' ? UpdateAddress : UpdateContact;\n              handleModal(modalComponent, item);\n              _context2.next = 21;\n              break;\n\n            case 5:\n              _context2.t0 = name;\n              _context2.next = _context2.t0 === 'payment' ? 8 : _context2.t0 === 'contact' ? 12 : _context2.t0 === 'address' ? 16 : 20;\n              break;\n\n            case 8:\n              dispatch({\n                type: 'DELETE_CARD',\n                payload: item.id\n              });\n              _context2.next = 11;\n              return deletePaymentCardMutation({\n                variables: {\n                  cardId: JSON.stringify(item.id)\n                }\n              });\n\n            case 11:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 12:\n              dispatch({\n                type: 'DELETE_CONTACT',\n                payload: item.id\n              });\n              _context2.next = 15;\n              return deleteContactMutation({\n                variables: {\n                  contactId: JSON.stringify(item.id)\n                }\n              });\n\n            case 15:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 16:\n              dispatch({\n                type: 'DELETE_ADDRESS',\n                payload: item.id\n              });\n              _context2.next = 19;\n              return deleteAddressMutation({\n                variables: {\n                  addressId: JSON.stringify(item.id)\n                }\n              });\n\n            case 19:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 20:\n              return _context2.abrupt(\"return\", false);\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleEditDelete(_x, _x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleApplyCoupon = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$appliedCoupon, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return appliedCoupon({\n                variables: {\n                  code: couponCode\n                }\n              });\n\n            case 2:\n              _yield$appliedCoupon = _context3.sent;\n              data = _yield$appliedCoupon.data;\n\n              if (data.applyCoupon && data.applyCoupon.discountInPercent) {\n                applyCoupon(data.applyCoupon);\n                setCouponCode('');\n              } else {\n                setError('Invalid Coupon');\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleApplyCoupon() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleOnUpdate = function handleOnUpdate(e) {\n    setCouponCode(e.currentTarget.value);\n  };\n\n  return __jsx(\"form\", null, __jsx(CheckoutWrapper, null, __jsx(CheckoutContainer, null, __jsx(OrderSummary, null, __jsx(OrderSummaryItem, {\n    style: {\n      marginBottom: 15\n    }\n  }, __jsx(OrderLabel, null, __jsx(FormattedMessage, {\n    id: \"subTotal\",\n    defaultMessage: \"Subtotal\"\n  }), \" (\", cartItemsCount, ' ', __jsx(FormattedMessage, {\n    id: \"itemsText\",\n    defaultMessage: \"items\"\n  }), \")\"), __jsx(OrderAmount, null, \"$\", calculateSubTotalPrice())), __jsx(OrderSummaryItem, {\n    style: {\n      marginBottom: 30\n    }\n  }, __jsx(OrderLabel, null, __jsx(FormattedMessage, {\n    id: \"shippingFeeText\",\n    defaultMessage: \"Shipping Fee\"\n  })), __jsx(OrderAmount, null, \"$0.00\")), __jsx(OrderSummaryItem, {\n    style: {\n      marginBottom: 30\n    },\n    className: \"voucherWrapper\"\n  }, __jsx(OrderLabel, null, __jsx(FormattedMessage, {\n    id: \"voucherText\",\n    defaultMessage: \"Voucher\"\n  })), coupon ? __jsx(CouponDisplay, {\n    code: coupon.code,\n    sign: \"-\",\n    currency: \"$\",\n    price: calculateDiscount(),\n    onClick: function onClick(e) {\n      e.preventDefault();\n      removeCoupon();\n    }\n  }) : __jsx(React.Fragment, null, __jsx(CouponBoxWrapper, null, __jsx(CouponBox, {\n    onClick: handleApplyCoupon,\n    value: couponCode,\n    onChange: handleOnUpdate,\n    style: {\n      maxWidth: 350,\n      height: 50\n    }\n  }), couponError && __jsx(ErrorMsg, null, __jsx(FormattedMessage, {\n    id: \"couponError\",\n    defaultMessage: couponError\n  }))))), __jsx(OrderSummaryItem, null, __jsx(OrderLabel, null, __jsx(FormattedMessage, {\n    id: \"totalText\",\n    defaultMessage: \"Total\"\n  })), __jsx(OrderAmount, null, \"$\", calculatePrice()))), __jsx(DeliverySchedule, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"deliverySchedule\",\n    defaultMessage: \"Select Your Delivery Schedule\"\n  })), __jsx(RadioGroup, {\n    items: schedules,\n    component: function component(item) {\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: item.title,\n        content: item.time_slot,\n        name: \"schedule\",\n        checked: item.type === 'primary',\n        withActionButtons: false,\n        onChange: function onChange() {\n          return dispatch({\n            type: 'SET_PRIMARY_SCHEDULE',\n            payload: item.id.toString()\n          });\n        }\n      });\n    }\n  })), __jsx(DeliveryAddress, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"checkoutDeliveryAddress\",\n    defaultMessage: \"Select Your Delivery Address\"\n  })), __jsx(ButtonGroup, null, __jsx(RadioGroup, {\n    items: address,\n    component: function component(item) {\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: item.name,\n        content: item.info,\n        name: \"address\",\n        checked: item.type === 'primary',\n        onChange: function onChange() {\n          return dispatch({\n            type: 'SET_PRIMARY_ADDRESS',\n            payload: item.id.toString()\n          });\n        },\n        onEdit: function onEdit() {\n          return handleEditDelete(item, 'edit', 'address');\n        },\n        onDelete: function onDelete() {\n          return handleEditDelete(item, 'delete', 'address');\n        }\n      });\n    },\n    secondaryComponent: // <Button\n    //   title=\"Add Address\"\n    //   iconPosition=\"right\"\n    //   colors=\"primary\"\n    //   size=\"small\"\n    //   variant=\"outlined\"\n    //   type=\"button\"\n    //   intlButtonId=\"addAddressBtn\"\n    //   onClick={() =>\n    //     handleModal(UpdateAddress, 'add-address-modal')\n    //   }\n    // />\n    __jsx(Button, {\n      size: \"big\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: function onClick() {\n        return handleModal(UpdateAddress, 'add-address-modal');\n      },\n      style: {\n        borderStyle: 'dashed'\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addAddressBtn\",\n      defaultMessage: \"Add Address\"\n    }))\n  }))), __jsx(Contact, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"contactNumberText\",\n    defaultMessage: \"Select Your Contact Number\"\n  })), __jsx(ButtonGroup, null, __jsx(RadioGroup, {\n    items: contact,\n    component: function component(item) {\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: item.type,\n        content: item.number,\n        checked: item.type === 'primary',\n        onChange: function onChange() {\n          return dispatch({\n            type: 'SET_PRIMARY_CONTACT',\n            payload: item.id.toString()\n          });\n        },\n        name: \"contact\",\n        onEdit: function onEdit() {\n          return handleEditDelete(item, 'edit', 'contact');\n        },\n        onDelete: function onDelete() {\n          return handleEditDelete(item, 'delete', 'contact');\n        }\n      });\n    },\n    secondaryComponent: // <Button\n    //   title='Add Contact'\n    //   iconPosition='right'\n    //   colors='primary'\n    //   size='small'\n    //   variant='outlined'\n    //   type='button'\n    //   intlButtonId='addContactBtn'\n    //   onClick={() =>\n    //     handleModal(UpdateContact, 'add-contact-modal')\n    //   }\n    // />\n    __jsx(Button, {\n      size: \"big\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: function onClick() {\n        return handleModal(UpdateContact, 'add-contact-modal');\n      },\n      style: {\n        borderStyle: 'dashed'\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addContactBtn\",\n      defaultMessage: \"Add Contact\"\n    }))\n  }))), __jsx(PaymentOption, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"selectPaymentText\",\n    defaultMessage: \"Select Payment Option\"\n  }))), __jsx(CheckoutSubmit, null, __jsx(Button, {\n    type: \"button\",\n    onClick: handleSubmit,\n    disabled: !isValid,\n    size: \"big\",\n    loading: loading,\n    width: \"100%\"\n  }, __jsx(FormattedMessage, {\n    id: \"processCheckout\",\n    defaultMessage: \"Proceed to Checkout\"\n  }))))));\n};\n\nexport default Checkout;","map":null,"metadata":{},"sourceType":"module"}