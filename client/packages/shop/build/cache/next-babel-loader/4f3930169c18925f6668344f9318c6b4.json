{"ast":null,"code":"var _jsxFileName = \"/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/contexts/create-context.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, createContext } from 'react';\nexport function useCreateContext(reducer, initialState) {\n  const defaultDispatch = () => initialState;\n\n  const stateCtx = createContext(initialState);\n  const dispatchCtx = createContext(defaultDispatch);\n\n  function useStateCtx(property) {\n    const state = useContext(stateCtx);\n    return state[property]; // only one depth selector for comparison\n  }\n\n  function useDispatchCtx() {\n    return useContext(dispatchCtx);\n  }\n\n  function Provider(props) {\n    const [state, dispatch] = React.useReducer(reducer, initialState);\n    return __jsx(dispatchCtx.Provider, {\n      value: dispatch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, __jsx(stateCtx.Provider, {\n      value: state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, props.children));\n  }\n\n  return [useStateCtx, useDispatchCtx, Provider];\n} // const [useTextState, useTextDispatch, TextProvider] = useCreateContext(initialState, reducer);\n// export const TextContext = ctx;\n// export function App() {\n//   return (\n//     <TextProvider>\n//       <Component />\n//     </TextProvider>\n//   )\n// }\n// export function Component() {\n//   const state = useTextState('state')\n//   const dispatch = useTextDispatch()\n// const increment = useCallback(() => dispatch({ type: 'increment' }), [dispatch]);\n//   return (\n//     <div>\n//       {state}\n//       <button onClick={increment}>Toggle</button>\n//     </div>\n//   )\n// }","map":{"version":3,"sources":["/Users/estebanmuruzabal/work/Mahdi-Fashion/client/packages/shop/src/contexts/create-context.tsx"],"names":["React","useContext","createContext","useCreateContext","reducer","initialState","defaultDispatch","stateCtx","dispatchCtx","useStateCtx","property","state","useDispatchCtx","Provider","props","dispatch","useReducer","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AAEA,OAAO,SAASC,gBAAT,CACLC,OADK,EAELC,YAFK,EAGL;AACA,QAAMC,eAA2C,GAAG,MAAMD,YAA1D;;AACA,QAAME,QAAQ,GAAGL,aAAa,CAACG,YAAD,CAA9B;AACA,QAAMG,WAAW,GAAGN,aAAa,CAACI,eAAD,CAAjC;;AAEA,WAASG,WAAT,CAAgDC,QAAhD,EAA6D;AAC3D,UAAMC,KAAK,GAAGV,UAAU,CAACM,QAAD,CAAxB;AACA,WAAOI,KAAK,CAACD,QAAD,CAAZ,CAF2D,CAEnC;AACzB;;AAED,WAASE,cAAT,GAA0B;AACxB,WAAOX,UAAU,CAACO,WAAD,CAAjB;AACD;;AAED,WAASK,QAAT,CAAkBC,KAAlB,EAAsD;AACpD,UAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBf,KAAK,CAACgB,UAAN,CAExBZ,OAFwB,EAEfC,YAFe,CAA1B;AAGA,WACE,MAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEU,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD,CAAU,QAAV;AAAmB,MAAA,KAAK,EAAEJ,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCG,KAAK,CAACG,QAAxC,CADF,CADF;AAKD;;AACD,SAAO,CAACR,WAAD,EAAcG,cAAd,EAA8BC,QAA9B,CAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useContext, createContext } from 'react';\n\nexport function useCreateContext<StateType, ActionType>(\n  reducer: React.Reducer<StateType, ActionType>,\n  initialState: StateType\n) {\n  const defaultDispatch: React.Dispatch<ActionType> = () => initialState;\n  const stateCtx = createContext(initialState);\n  const dispatchCtx = createContext(defaultDispatch);\n\n  function useStateCtx<K extends keyof StateType>(property: K) {\n    const state = useContext(stateCtx);\n    return state[property]; // only one depth selector for comparison\n  }\n\n  function useDispatchCtx() {\n    return useContext(dispatchCtx);\n  }\n\n  function Provider(props: React.PropsWithChildren<{}>) {\n    const [state, dispatch] = React.useReducer<\n      React.Reducer<StateType, ActionType>\n    >(reducer, initialState);\n    return (\n      <dispatchCtx.Provider value={dispatch}>\n        <stateCtx.Provider value={state}>{props.children}</stateCtx.Provider>\n      </dispatchCtx.Provider>\n    );\n  }\n  return [useStateCtx, useDispatchCtx, Provider] as const;\n}\n\n// const [useTextState, useTextDispatch, TextProvider] = useCreateContext(initialState, reducer);\n// export const TextContext = ctx;\n// export function App() {\n//   return (\n//     <TextProvider>\n//       <Component />\n//     </TextProvider>\n//   )\n// }\n// export function Component() {\n//   const state = useTextState('state')\n//   const dispatch = useTextDispatch()\n// const increment = useCallback(() => dispatch({ type: 'increment' }), [dispatch]);\n//   return (\n//     <div>\n//       {state}\n//       <button onClick={increment}>Toggle</button>\n//     </div>\n//   )\n// }\n"]},"metadata":{},"sourceType":"module"}