{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FormattedMessage } from 'react-intl';\nimport { Text, TextHighlighted, Container, ThumbsContainer, Thumb, ThumbInner, Img } from './upload.style';\nimport { UploadIcon } from 'assets/icons/UploadIcon';\n\nconst Uploader = ({\n  onChange,\n  imageURL,\n  intlUploadText\n}) => {\n  const {\n    0: files,\n    1: setFiles\n  } = useState(imageURL ? [{\n    name: 'demo',\n    preview: imageURL\n  }] : []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/*',\n    multiple: false,\n    onDrop: useCallback(acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n      onChange(acceptedFiles);\n    }, [onChange])\n  });\n  const thumbs = files.map(file => __jsx(Thumb, {\n    key: file.name\n  }, __jsx(ThumbInner, null, __jsx(Img, {\n    src: file.preview,\n    alt: file.name\n  }))));\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n  return __jsx(\"section\", {\n    className: \"container uploader\"\n  }, __jsx(Container, getRootProps(), __jsx(\"input\", getInputProps()), __jsx(UploadIcon, null), __jsx(Text, null, intlUploadText ? __jsx(FormattedMessage, {\n    id: intlUploadText\n  }) : __jsx(React.Fragment, null, __jsx(TextHighlighted, null, \"Drag/Upload\"), \" your file here\"))), thumbs && __jsx(ThumbsContainer, null, thumbs));\n};\n\nexport default Uploader;","map":null,"metadata":{},"sourceType":"module"}