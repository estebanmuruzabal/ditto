{"version":3,"sources":["settings/constants.ts","context/auth.tsx","theme/index.ts","components/InlineLoader/InlineLoader.tsx","routes.tsx","serviceWorker.ts","index.tsx"],"names":["DASHBOARD","TYPES","USERS","PRODUCTS","CATEGORY","PAYMENT_OPTIONS","DELIVERY_METHODS","LOGIN","ORDERS","CUSTOMERS","COUPONS","HOMECARDS","SETTINGS","STAFF_MEMBERS","SITE_SETTINGS","CURRENCY","ADMIN","MANAGER","MEMBER","DELIVERY_BOY","CLIENT","RUNNING","EXPIRED","AUTH_LOGIN","gql","AuthContext","React","createContext","AuthProvider","props","useMutation","onCompleted","data","makeAuthenticated","setUser","localStorage","setItem","login","access_token","onError","error","setError","toString","console","loginUser","useState","getItem","isAuthenticated","user","Provider","value","authenticate","phone","password","cb","phoneNumber","stringPassword","variables","signout","removeItem","children","theme","createTheme","lightThemePrimitives","primaryFontFamily","primary","primary700","name","typography","font11","fontFamily","fontSize","fontWeight","lineHeight","fontBold11","font12","fontBold12","font13","fontBold13","font14","fontBold14","font16","fontBold16","font18","fontBold18","font21","fontBold21","font24","fontBold24","font30","fontBold30","font350","font450","sizing","scale25","scale30","borders","borderE6","borderColor","borderStyle","borderWidth","borderEA","colors","primary400","red400","red700","greyE6","textDark","textNormal","borderF1","backgroundF7","lightGreen","warning","blue400","purple400","buttonBorderRadius","Container","styled","display","justifyContent","alignItems","height","width","padding","position","Dots","background","$theme","opacity","borderRadius","transform","margin","animationDuration","animationIterationCount","animationName","from","to","animationDelay","delay","Dot","InLineLoader","memo","color","Types","lazy","Products","AdminLayout","Dashboard","Category","PaymentOptions","DeliveryMethods","HomeCards","Orders","Settings","SiteSettingForm","StaffMembers","Customers","Coupons","Login","NotFound","AUTH_CHECK","PrivateRoute","rest","useQuery","authRefactch","refetch","useContext","cp","token","authCheck","then","res","userAuthCheck","status","render","location","pathname","state","Routes","fallback","exact","path","component","Boolean","window","hostname","match","httpLink","HttpLink","uri","process","authLink","ApolloLink","operation","forward","setContext","headers","client","ApolloClient","link","concat","cache","InMemoryCache","App","engine","Styletron","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67b28720.chunk.js","sourcesContent":["// **************** ROUTE CONSTANT START **************************\n// General Page Section\nexport const DASHBOARD = '/';\nexport const TYPES = '/types';\nexport const USERS = '/users';\nexport const PRODUCTS = '/products';\nexport const CATEGORY = '/categories';\nexport const PAYMENT_OPTIONS = '/payment-options';\nexport const DELIVERY_METHODS = '/delivery-methods';\nexport const LOGIN = '/login';\nexport const LOGOUT = '/logout';\nexport const ORDERS = '/orders';\nexport const CUSTOMERS = '/customers';\nexport const COUPONS = '/coupons';\nexport const HOMECARDS = '/home-cards';\nexport const SETTINGS = '/settings';\nexport const STAFF_MEMBERS = '/staff-members';\nexport const SITE_SETTINGS = '/site-settings';\n// **************** ROUTE CONSTANT END **************************\n\nexport const CURRENCY = '$';\n\n// **************** Roles CONSTANT Start **************************\nexport const ADMIN = 'ADMIN';\nexport const MANAGER = 'MANAGER';\nexport const MEMBER = 'MEMBER';\nexport const DELIVERY_BOY = 'DELIVERY_BOY';\nexport const STAFF = 'STAFF';\nexport const CLIENT = 'CLIENT';\n// **************** Roles CONSTANT End **************************\n\n// **************** Coupon Status CONSTANT START **************************\nexport const CREATED = 'created';\nexport const RUNNING = 'running';\nexport const EXPIRED = 'expired';\nexport const DELETED = 'deleted';\n// **************** Coupon Status CONSTANT End **************************","import React from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\n\n\nconst AUTH_LOGIN = gql`\n  mutation LoginUser(\n    $phone: String!\n    $password: String!\n  ) {\n    login(\n      phone: $phone\n      password: $password\n    ) {\n      user {\n        name\n        phones {\n          number\n        }\n      }\n      access_token\n    }\n  }\n`;\n\n\n\ntype AuthProps = {\n  isAuthenticated: boolean;\n  authenticate: Function;\n  error: string;\n  user: any;\n  signout: Function;\n};\n\nexport const AuthContext = React.createContext({} as AuthProps);\n\nconst isValidToken = () => {\n  const token = localStorage.getItem('admin_access_token');\n  // JWT decode & check token validity & expiration.\n  if (token) return true;\n  return false;\n};\n\nconst AuthProvider = (props: any) => {\n  const [loginUser] = useMutation(AUTH_LOGIN,\n      {\n        onCompleted: (data) => {\n          makeAuthenticated(true);\n          setUser(data);\n          localStorage.setItem('admin_access_token', `${data.login.access_token}`);\n        },\n        onError: (error) => {\n          makeAuthenticated(false);\n          setError(error.toString());\n          console.error(\"Error creating a post\", error)\n        },\n      });\n\n  const [isAuthenticated, makeAuthenticated] = React.useState(isValidToken());\n  const [user, setUser] = React.useState({});\n  const [error, setError] = React.useState(null);\n\n  function authenticate({ phone, password }, cb) {\n    let phoneNumber: string = phone.toString();\n    let stringPassword: string = password.toString();\n    loginUser({ variables: { phone: phoneNumber, password: stringPassword } });\n    cb();\n  }\n  function signout(cb) {\n    makeAuthenticated(false);\n    localStorage.removeItem('admin_access_token');\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        authenticate,\n        error,\n        user,\n        signout,\n      }}\n    >\n      <>{props.children}</>\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","import { createTheme, lightThemePrimitives } from 'baseui';\n\nexport const theme = createTheme(\n  {\n    ...lightThemePrimitives,\n    primaryFontFamily: \"'Lato', sans-serif\",\n    primary: '#00C58D',\n    primary700: '#00bd87',\n  },\n  {\n    name: 'custom-typography',\n    typography: {\n      primaryFontFamily: \"'Lato', sans-serif\",\n      font11: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '11px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold11: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '11px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font12: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '12px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold12: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '12px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font13: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '13px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold13: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '13px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font14: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '14px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold14: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font16: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '16px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold16: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '16px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font18: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '18px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold18: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '18px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font21: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '21px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold21: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '21px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font24: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '24px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold24: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '24px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font30: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '30px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold30: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '30px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font350: {\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight: '24px',\n      },\n      font450: {\n        fontSize: '15px',\n        fontWeight: 700,\n        lineHeight: '22px',\n      },\n    },\n    sizing: {\n      scale25: '25px',\n      scale30: '30px',\n    },\n    borders: {\n      borderE6: {\n        borderColor: '#E6E6E6',\n        borderStyle: 'solid',\n        borderWidth: '1px',\n      },\n      borderEA: {\n        borderColor: '#eaeaea',\n        borderStyle: 'solid',\n        borderWidth: '1px',\n      },\n    },\n    colors: {\n      primary: '#00C58D',\n      primary700: '#00bd87',\n      primary400: '#03D3B5',\n      red400: '#FC5C63',\n      red700: '#FC6687',\n      greyE6: '#E6E6E6',\n      textDark: '#161F6A',\n      textNormal: '#666D92',\n      borderE6: '#E6E6E6',\n      borderF1: '#f1f1f1',\n      backgroundF7: '#f7f7f7',\n      lightGreen: '#00d4b5',\n      warning: '#f4c243',\n      blue400: '#2067fa',\n      purple400: '#8A6AFC',\n    },\n    buttonBorderRadius: '3px',\n  }\n);\n","import React, { FC, memo } from \"react\";\nimport { styled } from \"baseui\";\n\nconst Container = styled(\"div\", () => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: \"500px\",\n  width: \"100%\",\n  padding: \"5%\",\n  position: \"relative\"\n}));\n\nconst Dots = styled(\"div\", props => ({\n  display: \"inline-block\",\n  background: props.$theme.colors.primary,\n  height: \"5px\",\n  width: \"5px\",\n  opacity: 0,\n  borderRadius: \"50%\",\n  transform: \"translateX(-300px)\",\n  margin: \"0 2px 0 2px\",\n  animationDuration: \"4s\",\n  animationIterationCount: \"infinite\",\n  animationName: {\n    from: {\n      transform: \"translateX(0px)\",\n      opacity: \"0.8\"\n    },\n    to: {\n      transform: \"translateX(300px)\",\n      opacity: \"0\"\n    }\n  },\n  animationDelay: props.delay && props.delay\n}));\n\nexport interface InLineLoaderProps {\n  color?: string;\n}\n\nconst Dot = delay => {\n  return <Dots delay={delay} />;\n};\n\nexport const InLineLoader: FC<InLineLoaderProps> = memo(props => {\n  const { color = \"#4092de\" } = props;\n\n  return (\n    <Container color={color}>\n      <Dot delay=\".8s\" />\n      <Dot delay=\".7s\" />\n      <Dot delay=\".6s\" />\n      <Dot delay=\".5s\" />\n      <Dot delay=\".4s\" />\n      <Dot delay=\".3s\" />\n      <Dot delay=\".2s\" />\n      <Dot delay=\".1s\" />\n    </Container>\n  );\n});\n","import React, { useContext, lazy, Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport {\n  LOGIN,\n  TYPES,\n  PRODUCTS,\n  CATEGORY,\n  DASHBOARD,\n  ORDERS,\n  SETTINGS,\n  CUSTOMERS,\n  COUPONS,\n  STAFF_MEMBERS,\n  USERS,\n  SITE_SETTINGS, PAYMENT_OPTIONS, DELIVERY_METHODS, HOMECARDS,\n} from './settings/constants';\nimport AuthProvider, { AuthContext } from './context/auth';\nimport { InLineLoader } from './components/InlineLoader/InlineLoader';\nimport {gql} from \"apollo-boost\";\nimport {useQuery} from \"@apollo/react-hooks\";\nconst Types = lazy(() => import('./containers/Types/Types'));\n// const Users = lazy(() => import('./containers/Users/Users'));\nconst Products = lazy(() => import('./containers/Products/Products'));\nconst AdminLayout = lazy(() => import('./containers/Layout/Layout'));\nconst Dashboard = lazy(() => import('./containers/Dashboard/Dashboard'));\nconst Category = lazy(() => import('./containers/Category/Category'));\nconst PaymentOptions = lazy(() => import('./containers/PaymentOptions/PaymentOptions'));\nconst DeliveryMethods = lazy(() => import('./containers/DeliveryMethods/DeliveryMethods'));\nconst HomeCards = lazy(() => import('./containers/HomeCards/HomeCards'));\nconst Orders = lazy(() => import('./containers/Orders/Orders'));\nconst Settings = lazy(() => import('./containers/Settings/Settings'));\nconst SiteSettingForm = lazy(() =>\n  import('./containers/SiteSettingForm/SiteSettingForm')\n);\nconst StaffMembers = lazy(() =>\n  import('./containers/StaffMembers/StaffMembers')\n);\nconst Customers = lazy(() => import('./containers/Customers/Customers'));\nconst Coupons = lazy(() => import('./containers/Coupons/Coupons'));\nconst Login = lazy(() => import('./containers/Login/Login'));\nconst NotFound = lazy(() => import('./containers/NotFound/NotFound'));\n\n/**\n *\n *  A wrapper for <Route> that redirects to the login\n * screen if you're not yet authenticated.\n *\n */\nconst AUTH_CHECK = gql`\n  query AuthCheck {\n    userAuthCheck {\n      status\n      message\n    }\n  }\n`;\n\nconst authCheck = (cp) => {\n  const token = localStorage.getItem('admin_access_token');\n  if (token) {\n    return cp(token);\n  }\n  return false;\n}\n\n\nfunction PrivateRoute({ children, ...rest }) {\n  const {data, error: authError, refetch: authRefactch} = useQuery(AUTH_CHECK)\n  const { isAuthenticated, signout } = useContext(AuthContext);\n\n\n  authCheck(function (token) {\n      if (token) {\n        authRefactch().then(res => {\n          if (res.data && !res.data.userAuthCheck.status) {\n            signout();\n          }\n        });\n      }\n  })\n\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n      {\n        return isAuthenticated ? (\n            children\n        ) : (\n            <Redirect\n                to={{\n                  pathname: '/login',\n                  state: { from: location },\n                }}\n            />\n        )\n      }\n      }\n    />\n  );\n}\n\nconst Routes = () => {\n  return (\n    <AuthProvider>\n      <Suspense fallback={<InLineLoader />}>\n        <Switch>\n          <PrivateRoute exact={true} path={DASHBOARD}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Dashboard />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={TYPES}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Types />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={USERS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                {/* <Users /> */}\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={PRODUCTS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Products />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={CATEGORY}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Category />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={PAYMENT_OPTIONS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <PaymentOptions />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={DELIVERY_METHODS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <DeliveryMethods />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={ORDERS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Orders />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={CUSTOMERS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Customers />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={COUPONS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Coupons />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={HOMECARDS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <HomeCards />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={STAFF_MEMBERS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <StaffMembers />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={SETTINGS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Settings />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <Route path={SITE_SETTINGS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <SiteSettingForm />\n              </Suspense>\n            </AdminLayout>\n          </Route>\n\n          <Route path={LOGIN}>\n            <Login />\n          </Route>\n          <Route component={NotFound} />\n        </Switch>\n      </Suspense>\n    </AuthProvider>\n  );\n};\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider } from 'baseui';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { theme } from './theme';\nimport Routes from './routes';\nimport {ApolloClient, ApolloLink, HttpLink, InMemoryCache} from 'apollo-boost';\nimport * as serviceWorker from './serviceWorker';\nimport './theme/global.css';\n\nconst httpLink = new HttpLink({ uri: process.env.REACT_APP_API_URL });\n\nconst authLink = new ApolloLink((operation, forward) => {\n  // Retrieve the authorization token from local storage.\n  const token = localStorage.getItem('admin_access_token');\n\n  // Use the setContext method to set the HTTP headers.\n  operation.setContext({\n    headers: {\n      'x-access-token': token ? token : ''\n    }\n  });\n\n  // Call the next link in the middleware chain.\n  return forward(operation);\n});\n\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  const engine = new Styletron();\n\n  return (\n    <ApolloProvider client={client as any}>\n      <StyletronProvider value={engine}>\n        <BaseProvider theme={theme}>\n          <BrowserRouter>\n            <Routes />\n          </BrowserRouter>\n        </BaseProvider>\n      </StyletronProvider>\n    </ApolloProvider>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}