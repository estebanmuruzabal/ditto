{"version":3,"sources":["components/Select/Select.tsx","containers/StaffMembers/ActionWrapper.tsx","containers/StaffMembers/StaffMembers.style.tsx","containers/StaffMembers/StaffMembers.tsx"],"names":["getContainerFontStyle","$theme","typography","fontBold14","props","overrides","SelectArrow","Popover","Body","style","zIndex","Placeholder","color","colors","textDark","SingleValue","lineHeight","DropdownListItem","fontSize","fontWeight","OptionContent","$selected","textNormal","DropdownOption","Icon","icon","width","height","Component","AllIcons","hasOwnProperty","GET_DELIVERY_METHODS","gql","DELETE_DELIVERY_METHOD","ActionWrapper","itemData","itemsOffset","dispatch","useDrawerDispatch","openDrawer","React","useCallback","type","drawerComponent","data","useMutation","update","cache","deliveryMethods","readQuery","query","variables","offset","writeQuery","__typename","items","filter","item","id","hasMore","length","totalCount","deleteDeliveryMethod","onClick","marginRight","cursor","confirm","TableWrapper","styled","StyledTable","withStyle","BaseStyledTable","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","alignContent","StyledHeadCell","BaseStyledHeadCell","fontFamily","alignItems","boxShadow","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","alignSelf","StyledBodyCell","BaseStyledCell","GET_STAFFS","Col","Column","marginBottom","Row","Rows","roleSelectOptions","value","label","StaffMembers","useState","role","setRole","search","setSearch","useQuery","error","refetch","message","fluid","md","xs","Select","options","labelKey","valueKey","placeholder","searchable","onChange","searchBy","Input","event","currentTarget","clearable","Button","startEnhancer","BaseButton","$gridTemplateColumns","getStaffs","map","index","Fragment","key","name","workInfo","isWorking","toString","ratePerHour","totalSalaryToPayWeekly","advancedSalaryPaid","totalWorkingMinutesPerWeek","Number","NoResult","hideButton","gridColumnStart","gridColumnEnd"],"mappings":"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","file":"static/js/26.74391cdf.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Select } from 'baseui/select';\nimport { CaretDownIcon } from '../../assets/icons/CaretDownIcon';\n\nexport const getContainerFontStyle = ({ $theme }) => {\n  return $theme.typography.fontBold14;\n};\n\nexport default ({ ...props }) => {\n  return (\n    <Select\n      overrides={{\n        SelectArrow: () => {\n          return <CaretDownIcon />;\n        },\n        Popover: {\n          props: {\n            overrides: {\n              Body: {\n                style: { zIndex: 1 },\n              },\n            },\n          },\n        },\n        Placeholder: {\n          style: ({ $theme }) => ({\n            color: $theme.colors.textDark,\n            ...getContainerFontStyle({ $theme }),\n          }),\n        },\n        SingleValue: {\n          style: ({ $theme }) => ({\n            ...getContainerFontStyle({ $theme }),\n            color: $theme.colors.textDark,\n            lineHeight: '1.5',\n          }),\n        },\n        DropdownListItem: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n        OptionContent: {\n          style: ({ $theme, $selected }) => {\n            return {\n              ...$theme.typography.fontBold14,\n              color: $selected\n                ? $theme.colors.textDark\n                : $theme.colors.textNormal,\n            };\n          },\n        },\n        DropdownOption: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n      }}\n      {...props}\n    />\n  );\n};\n","import React from 'react';\nimport {useDrawerDispatch} from '../../context/DrawerContext';\nimport {\n    IconWrapper,\n    ActionStyle,\n} from '../Types/Types.style';\nimport {AllIcons} from \"../../assets/icons/all-icons\";\nimport gql from 'graphql-tag';\nimport {useMutation} from \"@apollo/react-hooks\";\n\n\ntype Props = {\n    itemData: any;\n    itemsOffset: number;\n};\n\nconst Icon = ({icon, width = '18px', height = '18px'}) => {\n    let Component = AllIcons.hasOwnProperty(icon) ? AllIcons[icon] : 'span';\n    return <Component width={width} height={height}/>;\n}\n\nconst GET_DELIVERY_METHODS = gql`\n    query GetDeliveryMethods(\n        $searchText: String\n        $offset: Int\n    ) {\n        deliveryMethods(\n            searchText: $searchText\n            offset: $offset\n        ) {\n            items {\n                id\n                name\n                details\n                created_at\n            }\n            totalCount\n            hasMore\n        }\n    }\n`;\n\nconst DELETE_DELIVERY_METHOD = gql`\n    mutation DeleteDeliveryMethod($id: ID!) {\n        deleteDeliveryMethod(id: $id) {\n            message\n            status\n        }\n    }\n`;\n\n\nconst ActionWrapper: React.FC<Props> =\n    ({\n         itemData,\n        itemsOffset,\n         ...props\n     }) => {\n        const dispatch = useDrawerDispatch();\n        const openDrawer = React.useCallback(\n            () => {\n                dispatch({\n                    type: 'OPEN_DRAWER',\n                    drawerComponent: 'STAFF_EDIT_MEMBER_FORM',\n                    data: itemData,\n                })\n            },\n            [dispatch, itemData]\n        );\n\n        const updateItemsQuery = (cache) => {\n            const {deliveryMethods} = cache.readQuery({\n                query: GET_DELIVERY_METHODS,\n                variables: itemsOffset !== 0 ? {offset: itemsOffset} : {},\n            });\n\n            cache.writeQuery({\n                query: GET_DELIVERY_METHODS,\n                variables: itemsOffset !== 0 ? {offset: itemsOffset} : {},\n                data: {\n                    deliveryMethods: {\n                        __typename: deliveryMethods.__typename,\n                        items: deliveryMethods.items.filter((item) => {\n                            return item.id !== itemData.id;\n                        }),\n                        hasMore: deliveryMethods.items.length - 1 >= 12,\n                        totalCount: deliveryMethods.items.length - 1,\n                    },\n                },\n            });\n        };\n\n        const [deleteDeliveryMethod] = useMutation(DELETE_DELIVERY_METHOD, {\n            update: updateItemsQuery\n        });\n        const itemDelete = () => {\n            // eslint-disable-next-line no-restricted-globals\n            if (confirm('Are you sure? You can not undo this.')) {\n                deleteDeliveryMethod({\n                    variables: {id: itemData.id},\n                });\n            }\n        }\n\n        return (\n            <div>\n                <ActionStyle>\n                    <IconWrapper onClick={openDrawer} style={{marginRight: '10px', cursor: 'pointer'}}>\n                        <Icon icon=\"ArrowNext\"/>\n                    </IconWrapper>\n                </ActionStyle>\n                <ActionStyle>\n                    <IconWrapper onClick={itemDelete} style={{color: '#c50707', cursor: 'pointer'}}>\n                        <Icon width=\"15px\" height=\"15px\" icon=\"CloseIcon\"/>\n                    </IconWrapper>\n                </ActionStyle>\n            </div>\n        );\n    };\n\nexport default ActionWrapper;\n","import { styled, withStyle } from 'baseui';\nimport {\n  StyledTable as BaseStyledTable,\n  StyledHeadCell as BaseStyledHeadCell,\n  StyledBodyCell as BaseStyledCell,\n} from 'baseui/table-grid';\n\nexport const TableWrapper = styled('div', () => ({\n  width: '100%',\n  height: '450px',\n}));\n\nexport const StyledTable = withStyle(BaseStyledTable, () => ({\n  borderTopLeftRadius: '0 !important',\n  borderTopRightRadius: '0 !important',\n  borderBottomLeftRadius: '0 !important',\n  borderBottomRightRadius: '0 !important',\n  alignContent: 'start',\n}));\nexport const StyledHeadCell = withStyle(BaseStyledHeadCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 700,\n  color: '#161F6A !important',\n  alignItems: 'center',\n  boxShadow: 'rgba(0, 0, 0, 0.16) 0px 1px 4px',\n  borderTopColor: 'rgba(0, 0, 0, 0.12)',\n  borderRightColor: 'rgba(0, 0, 0, 0.12)',\n  borderBottomColor: 'rgba(0, 0, 0, 0.12)',\n  borderLeftColor: 'rgba(0, 0, 0, 0.12)',\n  alignSelf: 'start',\n}));\n\nexport const StyledBodyCell = withStyle(BaseStyledCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 400,\n  color: '#161F6A !important',\n  alignSelf: 'center',\n}));\n","import React, { useCallback, useState } from 'react';\nimport dayjs from 'dayjs';\nimport { withStyle } from 'baseui';\nimport {\n  Grid,\n  Row as Rows,\n  Col as Column,\n} from '../../components/FlexBox/FlexBox';\nimport { useDrawerDispatch } from '../../context/DrawerContext';\nimport Select from '../../components/Select/Select';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport ActionWrapper from \"./ActionWrapper\";\n\nimport { Plus } from '../../assets/icons/PlusMinus';\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { Wrapper, Header, Heading } from '../../components/WrapperStyle';\n\nimport {\n  TableWrapper,\n  StyledTable,\n  StyledHeadCell,\n  StyledBodyCell,\n} from './StaffMembers.style';\nimport NoResult from '../../components/NoResult/NoResult';\n\n// query getStaffs($role: String, $searchBy: String) {\n//   getStaffs(role: $role, searchBy: $searchBy) {\n\nconst GET_STAFFS = gql`\n  query staffs {\n    getStaffs {\n      id\n      name\n      email\n      role\n      created_at\n      phones{\n        number\n        id\n        is_primary\n      }\n      workInfo{\n        stoppedWorkTime\n        startedWorkTime\n        ratePerHour\n        totalWorkingMinutesPerWeek\n        totalSalaryToPayWeekly\n        advancedSalaryPaid\n        isWorking\n        taskRelated\n      }\n      tasks{\n        id\n        startDate\n        finishDate\n        isDone\n        description\n        workedHours\n      }\n      logs{\n        logDescription\n        timestamp\n      }\n    }\n  }\n`;\n\nconst Col = withStyle(Column, () => ({\n  '@media only screen and (max-width: 767px)': {\n    marginBottom: '20px',\n\n    ':last-child': {\n      marginBottom: 0,\n    },\n  },\n}));\n\nconst Row = withStyle(Rows, () => ({\n  '@media only screen and (min-width: 768px)': {\n    alignItems: 'center',\n  },\n}));\n\nconst roleSelectOptions = [\n  { value: 'admin', label: 'Admin' },\n  { value: 'manager', label: 'Manager' },\n  { value: 'member', label: 'Member' },\n  { value: 'delivery boy', label: 'Delivery boy' },\n  { value: 'client', label: 'Client' },\n];\n\nexport default function StaffMembers() {\n  const dispatch = useDrawerDispatch();\n  const [offset, setOffset] = useState(0);\n  const openDrawer = useCallback(\n    () =>\n      dispatch({ type: 'OPEN_DRAWER', drawerComponent: 'STAFF_MEMBER_FORM' }),\n    [dispatch]\n  );\n  const [role, setRole] = useState([]);\n  const [search, setSearch] = useState('');\n\n  const { data, error, refetch } = useQuery(GET_STAFFS);\n  if (error) {\n    return <div>Error! {error.message}</div>;\n  }\n  function handleCategory({ value }) {\n    setRole(value);\n    if (value.length) {\n      refetch({ role: value[0].value, searchBy: search });\n    } else {\n      refetch({\n        role: null,\n      });\n    }\n  }\n  function handleSearch(event) {\n    const value = event.currentTarget.value;\n    setSearch(value);\n    refetch({ searchBy: value });\n  }\n\n  return (\n    <Grid fluid={true}>\n      <Row>\n        <Col md={12}>\n          <Header\n            style={{\n              marginBottom: 40,\n              boxShadow: '0 0 5px rgba(0, 0 ,0, 0.05)',\n            }}\n          >\n            <Col md={3} xs={12}>\n              <Heading>Staff Members</Heading>\n            </Col>\n\n            <Col md={9} xs={12}>\n              <Row>\n                <Col md={3} xs={12}>\n                  <Select\n                    options={roleSelectOptions}\n                    labelKey=\"label\"\n                    valueKey=\"value\"\n                    placeholder=\"Role\"\n                    value={role}\n                    searchable={false}\n                    onChange={handleCategory}\n                  />\n                </Col>\n\n                <Col md={5} xs={12}>\n                  <Input\n                    value={search}\n                    placeholder=\"Ex: Quick Search By Name\"\n                    onChange={handleSearch}\n                    clearable\n                  />\n                </Col>\n\n                <Col md={4} xs={12}>\n                  <Button\n                    onClick={openDrawer}\n                    startEnhancer={() => <Plus />}\n                    overrides={{\n                      BaseButton: {\n                        style: () => ({\n                          width: '100%',\n                          borderTopLeftRadius: '3px',\n                          borderTopRightRadius: '3px',\n                          borderBottomLeftRadius: '3px',\n                          borderBottomRightRadius: '3px',\n                        }),\n                      },\n                    }}\n                  >\n                    Add Members\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n          </Header>\n\n          <Wrapper style={{ boxShadow: '0 0 5px rgba(0, 0 , 0, 0.05)' }}>\n            <TableWrapper>\n             <StyledTable $gridTemplateColumns=\"minmax(150px, auto) minmax(75px, auto) minmax(75px, auto) minmax(75px, auto) minmax(75px, auto) minmax(150px, auto) minmax(150px, max-content) minmax(75px, auto)\">\n                <StyledHeadCell>Name</StyledHeadCell>\n                <StyledHeadCell>Role</StyledHeadCell>\n                <StyledHeadCell>isWorking</StyledHeadCell>\n                <StyledHeadCell>Hourly rate</StyledHeadCell>\n                <StyledHeadCell>Weekly Salary</StyledHeadCell>\n                <StyledHeadCell>Salary in Advanced</StyledHeadCell>\n                <StyledHeadCell>Working Hours</StyledHeadCell>\n                <StyledHeadCell>Action</StyledHeadCell>\n  \n                {data ? (\n                  data.getStaffs.length ? (\n                    data.getStaffs\n                      .map((item, index) => (\n                        <React.Fragment key={index}>\n                          <StyledBodyCell>{item.name || '-'}</StyledBodyCell>\n                          <StyledBodyCell>{item.role || '-'}</StyledBodyCell>\n                          <StyledBodyCell>{item.workInfo?.isWorking.toString() || '-'}</StyledBodyCell>\n                          <StyledBodyCell>{item.workInfo?.ratePerHour || '-'}</StyledBodyCell>\n                          <StyledBodyCell>{item.workInfo?.totalSalaryToPayWeekly || '-'}</StyledBodyCell>\n                          <StyledBodyCell>{item.workInfo?.advancedSalaryPaid || '-'}</StyledBodyCell>\n                          {/* <StyledBodyCell>{item.workInfo?.totalWorkingMinutesPerWeek ? `${h}:${Number(m) >= 9 ? m : '0' + m} hs` : '-'}</StyledBodyCell> */}\n                          <StyledBodyCell>{item.workInfo?.totalWorkingMinutesPerWeek ? `${item.workInfo?.totalWorkingMinutesPerWeek / 60 | 0}:${Number(item.workInfo?.totalWorkingMinutesPerWeek % 60 | 0) >= 9 ? item.workInfo?.totalWorkingMinutesPerWeek % 60 | 0 : '0' + item.workInfo?.totalWorkingMinutesPerWeek % 60} hs` : '-'}</StyledBodyCell>\n                          <StyledBodyCell>\n                            <ActionWrapper itemsOffset={offset} itemData={item}/>\n                          </StyledBodyCell>\n                        </React.Fragment>\n                      ))\n                  ) : (\n                    <NoResult\n                      hideButton={false}\n                      style={{\n                        gridColumnStart: '1',\n                        gridColumnEnd: 'one',\n                      }}\n                    />\n                  )\n                ) : null}\n              </StyledTable>\n            </TableWrapper>\n          </Wrapper>\n        </Col>\n      </Row>\n    </Grid>\n  );\n}\n"],"sourceRoot":""}