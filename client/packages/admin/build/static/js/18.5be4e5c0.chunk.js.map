{"version":3,"sources":["components/FlexBox/FlexBox.ts","components/Input/Input.tsx","helpers/images-path.ts","components/FormFields/FormFields.tsx","components/DrawerBox/DrawerBox.tsx","containers/DrawerItems/DrawerItems.style.tsx","assets/icons/UploadIcon.tsx","helpers/convert-image-base64.ts","components/Uploader/Uploader.tsx","components/Textarea/Textarea.tsx","containers/SiteSettingForm/SiteSettingForm.tsx","components/Button/Button.tsx","components/Button/Button.style.tsx"],"names":["Grid","styled","Grids","Row","Rows","margin","marginBottom","Col","Cols","padding","Input","props","overrides","style","$theme","color","colors","textDark","typography","fontBold14","getInputFontStyle","ADMIN_IMAGE_HOST","process","NEXT_PUBLIC_APP_IMAGE_URL","Title","font18","marginTop","textAlign","Label","Msg","fontBold12","red400","marginLeft","FormFields","children","Block","width","display","flexDirection","FormLabel","FormTitle","Error","DrawerBox","height","borderRadius","backgroundColor","Form","backgroundF7","paddingBottom","DrawerTitleWrapper","alignItems","justifyContent","position","DrawerTitle","fontBold18","FieldDetails","font14","textNormal","ButtonGroup","bottom","right","boxShadow","UploadIcon","xmlns","viewBox","transform","data-name","d","fill","getBase64Value","image","callback","reader","FileReader","readAsDataURL","onload","result","Text","fontFamily","primaryFontFamily","TextHighlighted","primary","fontWeight","Container","flex","borderWidth","borderColor","borderStyle","outline","transition","cursor","ThumbsContainer","flexWrap","Thumb","borders","borderEA","marginRight","boxSizing","thumbInner","minWidth","overflow","img","Uploader","onChange","imageURL","useState","name","preview","files","setFiles","useDropzone","accept","multiple","onDrop","useCallback","acceptedFiles","map","file","Object","assign","URL","createObjectURL","getRootProps","getInputProps","thumbs","key","src","alt","useEffect","forEach","revokeObjectURL","className","Textarea","GET_SETTING","gql","UPDATE_SITE_SETTING","Thumbcus","Thumbfav","fav","SiteSettingsForm","useQuery","data","error","refetch","useMutation","updateSiteSetting","useForm","register","handleSubmit","setValue","React","image_data","setImageData","setImage","favicon_data","setFaviconData","favicon","setFavicon","title","setTitle","keyword","setKeyword","description","setDescription","siteData","setSiteData","settingData","JSON","parse","getSiteSetting","value","site_title","site_keyword","site_description","fluid","onSubmit","settingsValue","variables","stringify","md","size","type","imageBase64Value","url","FavThumb","inputRef","required","maxLength","e","target","BaseButton","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","Button","$size","$shape","SIZE","compact","large","paddingLeft","sizing","scale25","paddingRight","getPaddingStyles","buttonBorderRadius","SHAPE","pill","round","getBorderRadiiStyles"],"mappings":"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","file":"static/js/18.5be4e5c0.chunk.js","sourcesContent":["import { styled } from 'baseui';\nimport { Grid as Grids, Row as Rows, Col as Cols } from 'react-flexbox-grid';\n\n// export const Grid = styled(Grids, ({ $theme }) => ({\n//   &.container,\n//   &.container-fluid {\n//     padding: 0 15px;\n//   }\n// }));\n\nexport const Grid = styled(Grids, () => ({}));\n\nexport const Row = styled(Rows, () => ({\n  margin: '0 -15px 30px',\n\n  ':last-child': {\n    marginBottom: '0px',\n  },\n}));\n\nexport const Col = styled(Cols, () => ({\n  padding: '0 15px',\n}));\n","import React from 'react';\nimport { Input as BaseInput, SIZE } from 'baseui/input';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold14,\n  };\n};\n\nconst Input = ({ ...props }) => {\n  return (\n    <BaseInput\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\nexport default Input;\n","export const ADMIN_IMAGE_HOST = process.env.REACT_APP_IMAGE_URL;\nexport const SHOP_IMAGE_HOST = process.env.NEXT_PUBLIC_APP_IMAGE_URL;\n","import React from \"react\";\nimport { Block } from \"baseui/block\";\nimport { styled } from \"baseui\";\n\nconst Title = styled(\"h3\", ({ $theme }) => ({\n  ...$theme.typography.font18,\n  marginTop: \"0\",\n  marginBottom: \"0\",\n  color: $theme.colors.textDark,\n  textAlign: \"center\"\n}));\n\nconst Label = styled(\"label\", ({ $theme }) => ({\n  ...$theme.typography.fontBold14,\n  marginBottom: \"10px\",\n  color: $theme.colors.textDark\n}));\n\nconst Msg = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold12,\n  color: $theme.colors.red400,\n  marginTop: \"5px\",\n  marginLeft: \"auto\"\n}));\n\nexport const FormFields = ({ children }) => {\n  return (\n    <Block\n      overrides={{\n        Block: {\n          style: {\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            margin: \"20px 0\",\n\n            \":first-child\": {\n              marginTop: 0\n            },\n\n            \":last-child\": {\n              marginBottom: 0\n            },\n\n            \":only-child\": {\n              margin: 0\n            }\n          }\n        }\n      }}\n    >\n      {children}\n    </Block>\n  );\n};\n\nexport const FormLabel = ({ children }) => {\n  return <Label>{children}</Label>;\n};\n\nexport const FormTitle = ({ children }) => {\n  return <Title>{children}</Title>;\n};\n\nexport const Error = ({ children }) => {\n  return <Msg>{children}</Msg>;\n};\n","import React from \"react\";\nimport { Block } from \"baseui/block\";\n\nconst DrawerBox = ({ overrides, children }: any) => {\n  return (\n    <Block\n      overrides={{\n        Block: {\n          style: {\n            width: \"100%\",\n            height: \"auto\",\n            padding: \"30px\",\n            borderRadius: \"3px\",\n            backgroundColor: \"#ffffff\"\n          }\n        },\n        ...overrides\n      }}\n    >\n      {children}\n    </Block>\n  );\n};\n\nexport default DrawerBox;\n","import { styled } from \"baseui\";\n\nexport const Form = styled(\"form\", ({ $theme }) => ({\n  // minHeight: '100vh',\n  backgroundColor: $theme.colors.backgroundF7,\n  paddingBottom: \"100px\"\n}));\n\nexport const DrawerTitleWrapper = styled(\"div\", ({ $theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  margin: \"-55px 0 30px\",\n  position: \"fixed\"\n}));\n\nexport const DrawerTitle = styled(\"h3\", ({ $theme }) => ({\n  ...$theme.typography.fontBold18,\n  margin: 0,\n  color: $theme.colors.textDark\n}));\n\nexport const FieldDetails = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.font14,\n  padding: \"28px 0 15px\",\n  color: $theme.colors.textNormal,\n  display: \"block\",\n\n  \"@media only screen and (max-width: 991px)\": {\n    padding: \"30px 0\"\n  }\n}));\n\nexport const ButtonGroup = styled(\"div\", ({ $theme }) => ({\n  padding: \"30px 60px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  position: \"fixed\",\n  bottom: \"0\",\n  right: \"0\",\n  width: \"100%\",\n  backgroundColor: \"#ffffff\",\n  boxShadow: \"0 0 3px rgba(0, 0, 0, 0.1)\",\n\n  \"@media only screen and (max-width: 767px)\": {\n    padding: \"20px 30px\"\n  }\n}));\n","import React from 'react';\nexport const UploadIcon = ({\n  color = 'currentColor',\n  width = '41px',\n  height = '30px',\n}) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 40.909 30'\n    >\n      <g transform='translate(0 -73.091)'>\n        <path\n          data-name='Path 2125'\n          d='M39.129,89.827A8.064,8.064,0,0,0,34.58,86.94,5.446,5.446,0,0,0,30,78.546a5.207,5.207,0,0,0-3.537,1.321,10.921,10.921,0,0,0-10.1-6.776,10.511,10.511,0,0,0-7.713,3.2A10.508,10.508,0,0,0,5.454,84q0,.277.043.916A9.528,9.528,0,0,0,0,93.546a9.193,9.193,0,0,0,2.8,6.743,9.191,9.191,0,0,0,6.744,2.8H32.728a8.172,8.172,0,0,0,6.4-13.264Zm-12.06-.575a.656.656,0,0,1-.479.2H21.818v7.5a.691.691,0,0,1-.681.681H17.045a.691.691,0,0,1-.682-.681v-7.5H11.59a.655.655,0,0,1-.681-.681.8.8,0,0,1,.213-.512L18.6,80.783a.722.722,0,0,1,.98,0l7.5,7.5a.663.663,0,0,1,.191.49A.656.656,0,0,1,27.07,89.252Z'\n          transform='translate(0)'\n          fill='#e6e6e6'\n        />\n      </g>\n    </svg>\n  );\n};\n","export const getBase64Value = (\n    image: File | Blob,\n    callback: (imageBase64Value: string) => void\n) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(image);\n    reader.onload = () => {\n      callback(reader.result as string);\n    };\n}","import React, { useEffect, useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { styled } from 'baseui';\nimport { UploadIcon } from '../../assets/icons/UploadIcon';\n\nconst Text = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font14,\n  fontFamily: $theme.typography.primaryFontFamily,\n  color: $theme.colors.textDark,\n  marginTop: '15px',\n  textAlign: 'center',\n}));\n\nconst TextHighlighted = styled('span', ({ $theme }) => ({\n  color: $theme.colors.primary,\n  fontWeight: 'bold',\n}));\n\nconst Container = styled('div', ({ props }) => ({\n  flex: '1',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '30px',\n  borderWidth: '2px',\n  borderRadius: '2px',\n  borderColor: '#E6E6E6',\n  borderStyle: 'dashed',\n  backgroundColor: '#ffffff',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border 0.24s ease-in-out',\n  cursor: 'pointer',\n}));\n\nconst ThumbsContainer = styled('aside', () => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: '16px',\n}));\n\nconst Thumb = styled('div', ({ $theme }) => ({\n  ...$theme.borders.borderEA,\n  display: 'inline-flex',\n  borderRadius: '2px',\n  marginBottom: '8px',\n  marginRight: '8px',\n  width: '100px',\n  height: '100px',\n  padding: '4px',\n  boxSizing: 'border-box',\n}));\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden',\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%',\n};\n\nfunction Uploader({ onChange, imageURL }: any) {\n  const [files, setFiles] = useState(\n    imageURL ? [{ name: 'demo', preview: imageURL }] : []\n  );\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: 'image/*',\n    multiple: false,\n    onDrop: useCallback(\n      (acceptedFiles) => {\n        setFiles(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n        onChange(acceptedFiles);\n      },\n      [onChange]\n    ),\n  });\n\n  const thumbs = files.map((file) => (\n    <Thumb key={file.name}>\n      <div style={thumbInner}>\n        <img src={file.preview} style={img} alt={file.name} />\n      </div>\n    </Thumb>\n  ));\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  return (\n    <section className='container uploader'>\n      <Container {...getRootProps()}>\n        <input {...getInputProps()} />\n        <UploadIcon />\n        <Text>\n          <TextHighlighted>Drag/Upload</TextHighlighted> your image here.\n        </Text>\n      </Container>\n      {thumbs && <ThumbsContainer>{thumbs}</ThumbsContainer>}\n    </section>\n  );\n}\n\nexport default Uploader;\n","import React from 'react';\nimport { Textarea as BaseTextarea, SIZE } from 'baseui/textarea';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold14,\n  };\n};\n\nexport const Textarea = ({ ...props }) => {\n  return (\n    <BaseTextarea\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\n","import React  from 'react';\nimport { useForm } from 'react-hook-form';\nimport Uploader from '../../components/Uploader/Uploader';\nimport Input from '../../components/Input/Input';\nimport { Textarea } from '../../components/Textarea/Textarea';\nimport Button from '../../components/Button/Button';\nimport DrawerBox from '../../components/DrawerBox/DrawerBox';\nimport { Grid, Row, Col } from '../../components/FlexBox/FlexBox';\nimport { Form, FieldDetails } from '../DrawerItems/DrawerItems.style';\nimport { FormFields, FormLabel } from '../../components/FormFields/FormFields';\nimport {gql} from \"apollo-boost\";\nimport {useMutation, useQuery} from \"@apollo/react-hooks\";\nimport {getBase64Value} from \"../../helpers/convert-image-base64\";\nimport {styled} from \"baseui\";\nimport {ADMIN_IMAGE_HOST} from \"../../helpers/images-path\";\n\nconst GET_SETTING = gql`\n  query GetSetting {\n    getSiteSetting(key: \"site-settings\") {\n      id\n      key\n      value\n    }\n  }\n`;\n\n\nconst UPDATE_SITE_SETTING = gql`\n  mutation UpdateSiteSetting($key: String!, $value: String!) {\n    updateSiteSetting(key: $key, value: $value) {\n      id\n      key\n      value\n    }\n  }\n`\nconst ThumbsContainer = styled('aside', () => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: '16px',\n}));\n\nconst Thumbcus = styled('div', ({ $theme }) => ({\n  ...$theme.borders.borderEA,\n  display: 'inline-flex',\n  borderRadius: '2px',\n  marginBottom: '8px',\n  marginRight: '8px',\n  width: '150px',\n  height: '100px',\n  padding: '4px',\n  boxSizing: 'border-box',\n}));\n\nconst Thumbfav = styled('div', ({ $theme }) => ({\n  ...$theme.borders.borderEA,\n  display: 'inline-flex',\n  borderRadius: '2px',\n  marginBottom: '8px',\n  marginRight: '8px',\n  width: '50px',\n  height: '50px',\n  padding: '4px',\n  boxSizing: 'border-box',\n}));\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden',\n};\n\nconst img = {\n  display: 'block',\n  width: '140px',\n  height: '100%',\n}\n\nconst fav = {\n  display: 'block',\n  width: '45px',\n  height: '100%',\n}\nconst cThumb = (url) => {\n  return  <Thumbcus key=\"site-image\">\n    <div style={thumbInner}>\n      <img src={url} style={img} alt=\"site-image\" />\n    </div>\n  </Thumbcus>;\n};\nconst FavThumb = (url) => {\n  return  <Thumbfav key=\"site-fav\">\n    <div style={thumbInner}>\n      <img src={url} style={fav} alt=\"site-fav\" />\n    </div>\n  </Thumbfav>;\n};\n\ntype Props = {};\ntype ValueType = {\n  favicon: string,\n  image: string,\n  site_title: string,\n  site_keyword: string,\n  site_description: string,\n};\nconst SiteSettingsForm: React.FC<Props> = () => {\n  const { data, error, refetch } = useQuery(GET_SETTING);\n  const [updateSiteSetting] = useMutation(UPDATE_SITE_SETTING);\n  const { register, handleSubmit, setValue } = useForm();\n  const [image_data, setImageData] = React.useState<any | null>(null);\n  const [image, setImage] = React.useState('');\n  const [favicon_data, setFaviconData] = React.useState<any | null>(null);\n  const [favicon, setFavicon] = React.useState('');\n  const [title, setTitle] = React.useState('');\n  const [keyword, setKeyword] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [siteData, setSiteData] = React.useState<ValueType>();\n  const settingData = (): ValueType => {\n    const settingData = JSON.parse(data.getSiteSetting.value);\n    setFavicon(settingData.favicon);\n    setImage(settingData.image);\n    setTitle(settingData.site_title);\n    setKeyword(settingData.site_keyword);\n    setDescription(settingData.site_description);\n    setSiteData(settingData);\n\n    return settingData;\n  }\n\n  React.useEffect(() => {\n    if (data) {\n     settingData();\n    }\n  }, [data]);\n\n  const handleUploader = (files) => {\n    setImageData({name: files[0].name, size: files[0].size, type: files[0].type});\n    getBase64Value(files[0], imageBase64Value => {\n      setImage(imageBase64Value)\n    })\n  };\n  const handleFaviconUploader = (files) => {\n    setFaviconData({name: files[0].name, size: files[0].size, type: files[0].type});\n    getBase64Value(files[0], imageBase64Value => {\n      setFavicon(imageBase64Value)\n    })\n  };\n\n\n  React.useEffect(() => {\n    register({ name: 'site_title' });\n    register({ name: 'site_keyword' });\n    register({ name: 'reactSelect' });\n    register({ name: 'reactDropzone' });\n  }, [register]);\n\n\n  const onSubmit = (data) => {\n\n    const settingsValue = {\n      image: image,\n      image_data: image_data,\n      favicon: favicon,\n      favicon_data: favicon_data,\n      site_title: title,\n      site_keyword: keyword,\n      site_description: description,\n    };\n\n    updateSiteSetting({\n      variables: { key: 'site-settings', value: JSON.stringify(settingsValue) },\n    });\n  };\n\n\n\n  return (\n    <Grid fluid={true}>\n      <Form onSubmit={handleSubmit(onSubmit)} style={{ paddingBottom: 0 }}>\n        <Row>\n          <Col md={4}>\n            <FieldDetails>Upload your site logo here</FieldDetails>\n          </Col>\n\n          <Col md={8}>\n            <DrawerBox>\n              <Uploader onChange={handleUploader} imageURL={siteData ? ADMIN_IMAGE_HOST+siteData.image : null} />\n              <div style={{ display: !image_data ? \"block\" : \"none\" }}>\n                <p>Site Logo:</p>\n                <ThumbsContainer>{cThumb(siteData ? ADMIN_IMAGE_HOST+siteData.image : null)}</ThumbsContainer>\n              </div>\n            </DrawerBox>\n          </Col>\n          <Col md={4}>\n            <FieldDetails>Upload your site favicon here</FieldDetails>\n          </Col>\n\n          <Col md={8}>\n            <DrawerBox>\n              <Uploader onChange={handleFaviconUploader} imageURL={siteData ? ADMIN_IMAGE_HOST+siteData.favicon : null} />\n              <div style={{ display: !favicon_data ? \"block\" : \"none\" }}>\n                <p>Site Favicon:</p>\n                <ThumbsContainer>{FavThumb(siteData ? ADMIN_IMAGE_HOST+siteData.favicon : null)}</ThumbsContainer>\n              </div>\n            </DrawerBox>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={4}>\n            <FieldDetails>\n              Add your site description and necessary information from here\n            </FieldDetails>\n          </Col>\n\n          <Col md={8}>\n            <DrawerBox>\n              <FormFields>\n                <FormLabel>Site Title</FormLabel>\n                <Input\n                  name='site_title'\n                  inputRef={register({ required: true, maxLength: 60 })}\n                  onChange={(e) => setTitle(e.target.value)}\n                  value={title}\n                />\n              </FormFields>\n\n              <FormFields>\n                <FormLabel>Site Keyword</FormLabel>\n                <Input\n                  name='site_keyword'\n                  inputRef={register({ required: true })}\n                  onChange={(e) => setKeyword(e.target.value)}\n                  value={keyword}\n                />\n              </FormFields>\n\n              <FormFields>\n                <FormLabel>Site Description</FormLabel>\n                <Textarea\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </FormFields>\n\n              <FormFields>\n                <Button\n                  type='submit'\n                  overrides={{\n                    BaseButton: {\n                      style: ({ $theme }) => ({\n                        width: '50%',\n                        marginLeft: 'auto',\n                        borderTopLeftRadius: '3px',\n                        borderTopRightRadius: '3px',\n                        borderBottomLeftRadius: '3px',\n                        borderBottomRightRadius: '3px',\n                      }),\n                    },\n                  }}\n                >\n                  Submit\n                </Button>\n              </FormFields>\n            </DrawerBox>\n          </Col>\n        </Row>\n      </Form>\n    </Grid>\n  );\n};\n\nexport default SiteSettingsForm;\n","import React from 'react';\nimport { Button as BaseButton, SIZE, SHAPE, KIND } from 'baseui/button';\nimport { getPaddingStyles, getBorderRadiiStyles } from './Button.style';\n\nconst Button = ({ children, overrides, ...props }: any) => {\n  return (\n    <BaseButton\n      {...props}\n      overrides={{\n        BaseButton: {\n          style: ({ $theme, $size, $shape }) => {\n            return {\n              ...getPaddingStyles({ $theme, $size }),\n              ...getBorderRadiiStyles({ $theme, $size, $shape }),\n            };\n          },\n        },\n        ...overrides,\n      }}\n    >\n      {children}\n    </BaseButton>\n  );\n};\n\nexport { SIZE, SHAPE, KIND };\nexport default Button;\n","import { SIZE, SHAPE } from 'baseui/button';\n\nexport const getPaddingStyles = ({ $theme, $size }) => {\n  switch ($size) {\n    case SIZE.compact:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    case SIZE.large:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    default:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n  }\n};\n\nexport const getBorderRadiiStyles = ({ $theme, $size, $shape }) => {\n  let value = $theme.buttonBorderRadius;\n\n  if ($shape === SHAPE.pill) {\n    if ($size === SIZE.compact) {\n      value = '30px';\n    } else if ($size === SIZE.large) {\n      value = '42px';\n    } else {\n      value = '38px';\n    }\n  } else if ($shape === SHAPE.round) {\n    value = '50%';\n  }\n\n  return {\n    borderTopRightRadius: value,\n    borderBottomRightRadius: value,\n    borderTopLeftRadius: value,\n    borderBottomLeftRadius: value,\n  };\n};\n"],"sourceRoot":""}