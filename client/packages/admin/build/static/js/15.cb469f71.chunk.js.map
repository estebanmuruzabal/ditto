{"version":3,"sources":["assets/icons/ArrowDown.tsx","assets/icons/ArrowUp.tsx","assets/icons/CartIconBig.tsx","assets/icons/CoinIcon.tsx","assets/icons/DeliveryIcon.tsx","assets/icons/IosArrowDown.tsx","assets/icons/IosArrowUp.tsx","assets/icons/Refund.tsx","assets/icons/Revenue.tsx","assets/icons/UserIcon.tsx","components/Charts/Chart.tsx","components/Box/Box.style.tsx","components/Box/Box.tsx","components/Widgets/RadialBarChart/RadialBarChart.style.tsx","components/Widgets/RadialBarChart/RadialBarChart.tsx","components/Widgets/LineChart/LineChart.tsx","components/Widgets/ColumnChart/ColumnChart.style.tsx","components/Widgets/ColumnChart/ColumnChart.tsx","components/Widgets/DonutChart/DonutChart.style.tsx","components/Widgets/DonutChart/DonutChart.tsx","components/Widgets/GraphChart/GraphChart.tsx","components/Widgets/GradiantGraphChart/GradiantGraphChart.style.tsx","components/ProgressBar/ProgressBar.tsx","components/Widgets/GradiantGraphChart/GradiantGraphChart.tsx","components/Widgets/MapWidget/MapWidget.style.tsx","components/Widgets/MapWidget/MapWidget.tsx","components/Widgets/StickerCard/StickerCard.style.tsx","components/Widgets/StickerCard/StickerCard.tsx","containers/Dashboard/Dashboard.tsx","components/FlexBox/FlexBox.ts"],"names":["ArrowDown","color","width","height","xmlns","viewBox","data-name","d","transform","fill","ArrowUp","CartIconBig","rx","CoinIcon","DeliveryIcon","IosArrowDown","IosArrowUp","Refund","opacity","Revenue","UserIcon","Charts","props","TitleWrapper","styled","padding","display","alignItems","justifyContent","BoxHeading","$theme","typography","fontBold16","fontFamily","primaryFontFamily","colors","textDark","lineHeight","margin","BoxWrapper","flexDirection","backgroundColor","borderRadius","boxShadow","overflow","BoxContentWrapper","flexWrap","BoxTitleWrapper","children","style","BoxTitle","title","Box","BoxContent","ChartLabels","Label","Color","marginRight","flexShrink","Content","Title","font13","textNormal","marginBottom","Text","fontBold21","RadialBarChart","widgetTitle","series","label","helperText","options","plotOptions","radialBar","hollow","size","background","track","show","strokeWidth","dropShadow","enabled","top","left","blur","dataLabels","states","hover","filter","type","value","stroke","lineCap","labels","Chart","map","item","index","key","LineChart","categories","seriesName","chart","toolbar","curve","xaxis","axisBorder","axisTicks","crosshairs","tickWidth","position","dashArray","tooltip","yaxis","fontSize","grid","borderColor","markers","strokeColor","name","data","ContentWrapper","marginTop","LabelText","font14","SeriesText","BarChart","prefix","totalValue","text","percentage","bar","columnWidth","endingShape","lines","marginLeft","Img","icon","legend","pie","donut","expandOnClick","numberWithCommas","num","toString","replace","GrpahChart","zoom","offsetX","ProgressBar","GradiantGraphChart","topRowTitle","bottomRowData","gradient","opacityFrom","opacityTo","paddingTop","valueText","successValue","overrides","Bar","BarProgress","TopPart","Progressbox","minHeight","ProgressSingle","paddingRight","ProgressBarTitleWrapper","ProgressTitle","fontBold14","ProgressNumber","fontBold12","BottomPart","borderTop","MapLengendBox","minWidth","MapLengendBoxSingle","MapLengendTitle","whiteSpace","MapLengendValue","MapLengendColor","TotalValueBox","MapWidget","totalText","reduce","a","total","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","$value","content","Math","round","fontBold13","right","Card","TopInfo","SubTitle","IconBox","Price","Note","Link","purple400","textDecoration","StickerCard","subtitle","price","indicator","indicatorText","note","link","linkText","href","target","GET_CUSTOMERS","gql","GET_ORDERS","Col","withStyle","Column","Dashboard","useStyletron","css","moment","Date","getFullYear","getMonth","getDate","useState","lastMonthTotalRevenue","lastMonthOrders","last2MonthTotalRevenue","mb30","useQuery","ordersData","ordersError","error","customerErrors","useEffect","message","allOrders","length","groupsByDate","totalSalesByDate","forEach","val","date","datetime","format","push","Array","console","log","groupByDate","fluid","md","lg","sm","xs","className","toLocaleString","GraphChart","DonutChart","ColumnChart","Grid","Grids","Row","Rows","Container","borderWidth","borderStyle","outline","transition","Cols"],"mappings":"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","file":"static/js/15.cb469f71.chunk.js","sourcesContent":["import React from 'react';\nexport const ArrowDown = ({\n  color = 'currentColor',\n  width = '18px',\n  height = '18px',\n}) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 11.996 12'\n    >\n      <path\n        data-name='Path 2462'\n        d='M18.276,12.1,12.7,6.524a.424.424,0,0,0-.6,0L6.524,12.1a.424.424,0,0,0,0,.6.424.424,0,0,0,.6,0l4.854-4.854V17.977a.423.423,0,1,0,.847,0V7.846L17.677,12.7a.424.424,0,0,0,.6,0A.434.434,0,0,0,18.276,12.1Z'\n        transform='translate(18.396 18.4) rotate(180)'\n        fill={color}\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nexport const ArrowUp = ({\n  color = 'currentColor',\n  width = '18px',\n  height = '18px',\n}) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 11.996 12'\n    >\n      <path\n        data-name='Path 2462'\n        d='M18.276,12.1,12.7,6.524a.424.424,0,0,0-.6,0L6.524,12.1a.424.424,0,0,0,0,.6.424.424,0,0,0,.6,0l4.854-4.854V17.977a.423.423,0,1,0,.847,0V7.846L17.677,12.7a.424.424,0,0,0,.6,0A.434.434,0,0,0,18.276,12.1Z'\n        transform='translate(-6.4 -6.4)'\n        fill={color}\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nexport const CartIconBig = ({ width = '48px', height = '48px' }) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 48 48'\n    >\n      <g data-name='Group 2994' transform='translate(-601 -757)'>\n        <rect\n          data-name='Rectangle 541'\n          width='48'\n          height='48'\n          rx='20'\n          transform='translate(601 757)'\n          fill='#facaca'\n        />\n        <g transform='translate(610.988 768.246)'>\n          <g data-name='Group 2985' transform='translate(3.013 0.754)'>\n            <path\n              data-name='Path 3641'\n              d='M6.071,15.424H23.177a.726.726,0,0,0,.724-.674l.778-10.885a.726.726,0,0,0-.724-.778h-8.6V1.48a.726.726,0,1,0-1.452,0V3.087H5.832c-.051-.618-2.058-.416-.7-.077-.113-.517-.571-.277-.71,0L5.29,14.073a3.058,3.058,0,0,0,.78,6.016h.121a3.058,3.058,0,1,0,5.2,0h6.849a3.059,3.059,0,1,0,5.175-.042.726.726,0,0,0-.241-1.41H6.071a1.607,1.607,0,0,1,0-3.213ZM13.9,4.539V9.058L12.8,7.964a.726.726,0,0,0-1.027,1.027l2.333,2.333a.726.726,0,0,0,1.027,0L17.47,8.991a.726.726,0,0,0-1.027-1.027L15.35,9.058V4.539h7.825L22.5,13.972H6.739L5.953,4.539Zm6.946,15.55A1.607,1.607,0,1,1,19.237,21.7,1.608,1.608,0,0,1,20.844,20.089Zm-12.051,0A1.607,1.607,0,1,1,7.186,21.7,1.608,1.608,0,0,1,8.792,20.089Z'\n              transform='translate(-3.013 -0.754)'\n              fill='#ff6e6e'\n            />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n};\n","import React from 'react';\nexport const CoinIcon = ({ width = '18px', height = '18px' }) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 48 48'\n    >\n      <g data-name='Group 2993' transform='translate(-608 -807)'>\n        <path\n          data-name='Path 3646'\n          d='M20,0h8A20,20,0,0,1,48,20v8A20,20,0,0,1,28,48H20A20,20,0,0,1,0,28V20A20,20,0,0,1,20,0Z'\n          transform='translate(608 807)'\n          fill='#ffe8b2'\n        />\n        <g transform='translate(620 819)'>\n          <g data-name='Group 2982' transform='translate(0)'>\n            <g data-name='Group 2981'>\n              <path\n                data-name='Path 3639'\n                d='M20.485,3.515A12,12,0,0,0,3.515,20.485,12,12,0,0,0,20.485,3.515ZM12,22.594A10.594,10.594,0,1,1,22.594,12,10.606,10.606,0,0,1,12,22.594Z'\n                transform='translate(0 0)'\n                fill='#ffb300'\n              />\n            </g>\n          </g>\n          <g data-name='Group 2984' transform='translate(8.284 4.519)'>\n            <g data-name='Group 2983'>\n              <path\n                data-name='Path 3640'\n                d='M181.2,103.179H179.7a1.556,1.556,0,1,1,0-3.112h3.013a.7.7,0,1,0,0-1.406h-1.556V97.1a.7.7,0,0,0-1.406,0V98.66h-.05a2.962,2.962,0,1,0,0,5.925H181.2a1.556,1.556,0,0,1,0,3.113H178.19a.7.7,0,0,0,0,1.406h1.556v1.556a.7.7,0,0,0,1.406,0V109.1h.05a2.963,2.963,0,0,0,0-5.925Z'\n                transform='translate(-176.734 -96.401)'\n                fill='#ffb300'\n              />\n            </g>\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n};\n","import React from 'react';\nexport const DeliveryIcon = ({\n   width = '48px',\n   height = '48px',\n   color = 'currentColor',\n}) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 48 48'\n    >\n      <g data-name='Group 2996' transform='translate(-1787 -804)'>\n        <rect\n          data-name='Rectangle 541'\n          width='48'\n          height='48'\n          rx='20'\n          transform='translate(1787 804)'\n          fill='#f8dac2'\n        />\n        <path\n          data-name='delivery-truck (1)'\n          d='M19.621,630.473a2.216,2.216,0,0,0-1.564.645,2.171,2.171,0,0,0,0,3.108,2.225,2.225,0,0,0,1.564.645,2.2,2.2,0,0,0,0-4.4Zm0,3.421a1.222,1.222,0,1,1,0-2.443,1.222,1.222,0,0,1,0,2.443Zm.567-10.747a.475.475,0,0,0-.327-.127H17.354a.49.49,0,0,0-.489.489v4.007a.49.49,0,0,0,.489.489h3.978a.49.49,0,0,0,.489-.489v-2.683a.489.489,0,0,0-.161-.362Zm.655,3.88h-3v-3.035H19.67l1.173,1.056ZM7.687,630.473a2.216,2.216,0,0,0-1.564.645,2.171,2.171,0,0,0,0,3.108,2.225,2.225,0,0,0,1.564.645,2.2,2.2,0,0,0,0-4.4Zm0,3.421a1.222,1.222,0,1,1,0-2.443,1.222,1.222,0,0,1,0,2.443Zm-3.26-2.82H3.445v-1.3a.489.489,0,0,0-.977,0v1.789a.49.49,0,0,0,.489.489H4.428a.489.489,0,0,0,0-.977Zm2.478-2.663a.49.49,0,0,0-.489-.489H.489a.489.489,0,0,0,0,.977H6.417A.487.487,0,0,0,6.905,628.411Zm-5.425-1.764,5.928.034A.493.493,0,0,0,7.9,626.2a.484.484,0,0,0-.484-.494l-5.928-.034h0a.489.489,0,0,0,0,.977Zm1-2.219H8.406a.489.489,0,1,0,0-.977H2.478a.489.489,0,1,0,0,.977Zm21.341-.66h0l-3.5-2.9a.481.481,0,0,0-.313-.112H15.892V619a.49.49,0,0,0-.489-.489H2.957a.49.49,0,0,0-.489.489v3.577a.489.489,0,0,0,.977,0v-3.089H14.92v11.587H10.913a.489.489,0,0,0,0,.977H16.88a.489.489,0,0,0,0-.977H15.9v-9.339h3.939l3.186,2.639-.034,6.69H22.48a.489.489,0,0,0,0,.977h.992a.486.486,0,0,0,.489-.484L24,624.15A.516.516,0,0,0,23.819,623.768Z'\n          transform='translate(1799 201.49)'\n          fill='#ff811d'\n        />\n      </g>\n    </svg>\n  );\n};\n","import React from 'react';\nexport const IosArrowDown = ({\n  color = 'currentColor',\n  width = '18px',\n  height = '18px',\n}) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 7 10'\n    >\n      <path\n        d='M166.5,118.477a.454.454,0,0,0-.639,0l-2.115,2.108v-8.034a.452.452,0,0,0-.9,0v8.034l-2.115-2.112a.457.457,0,0,0-.639,0,.45.45,0,0,0,0,.636l2.883,2.862a.507.507,0,0,0,.142.094.431.431,0,0,0,.174.035.453.453,0,0,0,.316-.129l2.883-2.862A.442.442,0,0,0,166.5,118.477Z'\n        transform='translate(-159.962 -112.1)'\n        fill={color}\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nexport const IosArrowUp = ({\n  color = 'currentColor',\n  width = '18px',\n  height = '18px',\n}) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 7 10'\n    >\n      <path\n        d='M166.5,115.723a.454.454,0,0,1-.639,0l-2.115-2.108v8.034a.452.452,0,0,1-.9,0v-8.034l-2.115,2.112a.457.457,0,0,1-.639,0,.45.45,0,0,1,0-.636l2.883-2.862a.507.507,0,0,1,.142-.094.431.431,0,0,1,.174-.035.453.453,0,0,1,.316.129l2.883,2.862A.442.442,0,0,1,166.5,115.723Z'\n        transform='translate(-159.962 -112.1)'\n        fill={color}\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nexport const Refund = ({\n  color = 'currentColor',\n  width = '18px',\n  height = '18px',\n}) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 56 56'\n    >\n      <g data-name='Group 2541' transform='translate(-1719 -150)'>\n        <path\n          data-name='Path 2087'\n          d='M28,0A28,28,0,1,1,0,28,28,28,0,0,1,28,0Z'\n          transform='translate(1719 150)'\n          fill='#2170ff'\n          opacity='0.2'\n        />\n        <g data-name='Group 2543' transform='translate(1733 164)'>\n          <g data-name='Group 2544' transform='translate(4.304 4.304)'>\n            <g data-name='Group 2543' transform='translate(0 0)'>\n              <path\n                data-name='Path 2096'\n                d='M5368.315,4398.011a9.7,9.7,0,1,1,9.7-9.7A9.708,9.708,0,0,1,5368.315,4398.011Zm0-18.171a8.475,8.475,0,1,0,8.476,8.475A8.484,8.484,0,0,0,5368.315,4379.84Z'\n                transform='translate(-5358.62 -4378.62)'\n                fill='#2170ff'\n              />\n              <path\n                data-name='Path 2097'\n                d='M5371.153,4381.62a9.534,9.534,0,1,0,9.533,9.533A9.545,9.545,0,0,0,5371.153,4381.62Zm0,18.171a8.638,8.638,0,1,1,8.638-8.638A8.647,8.647,0,0,1,5371.153,4399.791Z'\n                transform='translate(-5361.456 -4381.458)'\n                fill='#2170ff'\n              />\n            </g>\n          </g>\n          <g data-name='Group 2546' transform='translate(10.041 8.13)'>\n            <g data-name='Group 2545' transform='translate(0)'>\n              <path\n                data-name='Path 2098'\n                d='M5468.736,4461.133a.611.611,0,0,1-.61-.61v-.375c-1.949-.181-3.348-1.2-3.348-2.465a.611.611,0,0,1,1.222,0c0,.5.847,1.09,2.126,1.239v-3.194c-1.642-.465-3.348-1.128-3.348-2.886,0-1.263,1.4-2.284,3.348-2.465V4450a.61.61,0,1,1,1.22,0v.374c1.949.181,3.348,1.2,3.348,2.465a.61.61,0,0,1-1.22,0c0-.495-.848-1.091-2.127-1.238v3.194c1.643.466,3.348,1.126,3.348,2.886,0,1.263-1.4,2.284-3.348,2.465v.375A.61.61,0,0,1,5468.736,4461.133Zm.61-2.21c1.28-.148,2.127-.744,2.127-1.239,0-.7-.562-1.128-2.127-1.611Zm-1.22-7.318c-1.279.147-2.126.743-2.126,1.238,0,.7.562,1.128,2.126,1.611Z'\n                transform='translate(-5464.777 -4449.392)'\n                fill='#2170ff'\n              />\n              <path\n                data-name='Path 2099'\n                d='M5472.021,4457.758v-3.5c1.465.118,2.452.8,2.452,1.417a.448.448,0,1,0,.9,0c0-1.214-1.438-2.183-3.348-2.314v-.525a.448.448,0,1,0-.9,0v.525c-1.911.131-3.348,1.1-3.348,2.314,0,1.626,1.545,2.26,3.348,2.763v3.495c-1.465-.118-2.452-.8-2.452-1.416a.448.448,0,1,0-.9,0c0,1.213,1.437,2.183,3.348,2.316v.523a.448.448,0,1,0,.9,0v-.523c1.91-.133,3.348-1.1,3.348-2.316C5475.369,4458.895,5473.824,4458.26,5472.021,4457.758Zm-.9-.249c-1.819-.537-2.452-1.026-2.452-1.83,0-.618.987-1.3,2.452-1.417Zm.9,4.428v-3.246c1.818.538,2.452,1.025,2.452,1.83C5474.474,4461.139,5473.486,4461.82,5472.021,4461.937Z'\n                transform='translate(-5467.616 -4452.229)'\n                fill='#2170ff'\n              />\n            </g>\n          </g>\n          <g data-name='Group 2548' transform='translate(2.391 0)'>\n            <g data-name='Group 2547' transform='translate(0)'>\n              <path\n                data-name='Path 2100'\n                d='M5334.839,4327a.61.61,0,1,1,0-1.221,12.786,12.786,0,1,0-9.167-21.685l.844-.281a.6.6,0,0,1,.194-.031.61.61,0,0,1,.192,1.19l-2.869.956a.626.626,0,0,1-.193.031.61.61,0,0,1-.6-.7l.478-3.348a.613.613,0,0,1,.6-.522.667.667,0,0,1,.087,0,.611.611,0,0,1,.518.691l-.173,1.2A14,14,0,1,1,5334.839,4327Z'\n                transform='translate(-5323.23 -4299)'\n                fill='#2170ff'\n              />\n              <path\n                data-name='Path 2101'\n                d='M5347.463,4306.052a13.838,13.838,0,0,0-20.106.568l.246-1.718a.449.449,0,0,0-.888-.128l-.478,3.348a.451.451,0,0,0,.443.513.449.449,0,0,0,.144-.025l2.869-.956a.448.448,0,0,0-.284-.851l-1.442.48a12.941,12.941,0,1,1,9.712,21.493.449.449,0,0,0,0,.9,13.838,13.838,0,0,0,9.785-23.623Z'\n                transform='translate(-5326.069 -4301.836)'\n                fill='#2170ff'\n              />\n            </g>\n          </g>\n          <g data-name='Group 2550' transform='translate(11.005 26.567)'>\n            <g data-name='Group 2549' transform='translate(0 0)'>\n              <path\n                data-name='Path 2102'\n                d='M5483.667,4791.79a.585.585,0,0,1-.087-.006c-.165-.024-.333-.05-.493-.08a.61.61,0,0,1,.106-1.21.563.563,0,0,1,.108.009c.147.025.3.051.451.072a.61.61,0,0,1-.085,1.215Z'\n                transform='translate(-5482.584 -4790.493)'\n                fill='#2170ff'\n              />\n              <path\n                data-name='Path 2103'\n                d='M5486.569,4793.572c-.153-.021-.307-.045-.457-.073a.448.448,0,1,0-.159.882c.161.03.325.055.487.078a.373.373,0,0,0,.065.006.449.449,0,0,0,.063-.894Z'\n                transform='translate(-5485.422 -4793.329)'\n                fill='#2170ff'\n              />\n            </g>\n          </g>\n          <g data-name='Group 2552' transform='translate(8.34 25.795)'>\n            <g data-name='Group 2551' transform='translate(0 0)'>\n              <path\n                data-name='Path 2104'\n                d='M5434.763,4777.729a.579.579,0,0,1-.19-.032c-.305-.1-.611-.212-.909-.333a.611.611,0,1,1,.459-1.131c.272.11.552.213.83.305a.611.611,0,0,1-.19,1.191Z'\n                transform='translate(-5433.283 -4776.188)'\n                fill='#2170ff'\n              />\n              <path\n                data-name='Path 2105'\n                d='M5437.738,4779.53c-.281-.092-.565-.2-.84-.308a.448.448,0,1,0-.339.83c.3.12.6.231.9.331a.449.449,0,0,0,.279-.853Z'\n                transform='translate(-5436.119 -4779.026)'\n                fill='#2170ff'\n              />\n            </g>\n          </g>\n          <g data-name='Group 2554' transform='translate(0.141 15.345)'>\n            <g data-name='Group 2553' transform='translate(0 0)'>\n              <path\n                data-name='Path 2106'\n                d='M5282.4,4585.042a.614.614,0,0,1-.6-.481c-.069-.312-.126-.634-.174-.952a.613.613,0,0,1,.516-.693.771.771,0,0,1,.089,0,.614.614,0,0,1,.6.521c.042.29.1.583.158.87a.607.607,0,0,1-.082.459.614.614,0,0,1-.384.267A.653.653,0,0,1,5282.4,4585.042Z'\n                transform='translate(-5281.624 -4582.911)'\n                fill='#2170ff'\n              />\n              <path\n                data-name='Path 2107'\n                d='M5285.676,4587.172c-.062-.29-.116-.586-.16-.88a.448.448,0,0,0-.887.13c.046.314.1.631.17.942a.45.45,0,0,0,.438.354.389.389,0,0,0,.1-.012A.446.446,0,0,0,5285.676,4587.172Z'\n                transform='translate(-5284.462 -4585.747)'\n                fill='#2170ff'\n              />\n            </g>\n          </g>\n          <g data-name='Group 2556' transform='translate(0.262 9.839)'>\n            <g data-name='Group 2555' transform='translate(0 0)'>\n              <path\n                data-name='Path 2108'\n                d='M5284.464,4483.11a.72.72,0,0,1-.121-.011.611.611,0,0,1-.478-.719c.063-.316.138-.632.223-.943a.614.614,0,0,1,.589-.45.635.635,0,0,1,.161.023.611.611,0,0,1,.428.751c-.077.282-.146.572-.2.86A.611.611,0,0,1,5284.464,4483.11Z'\n                transform='translate(-5283.853 -4480.987)'\n                fill='#2170ff'\n              />\n              <path\n                data-name='Path 2109'\n                d='M5287.632,4484a.449.449,0,0,0-.552.314c-.083.306-.156.619-.22.931a.448.448,0,0,0,.352.528.461.461,0,0,0,.087.009.452.452,0,0,0,.441-.36c.059-.292.127-.585.206-.87A.45.45,0,0,0,5287.632,4484Z'\n                transform='translate(-5286.689 -4483.826)'\n                fill='#2170ff'\n              />\n            </g>\n          </g>\n          <g data-name='Group 2558' transform='translate(0.829 18.034)'>\n            <g data-name='Group 2557' transform='translate(0 0)'>\n              <path\n                data-name='Path 2110'\n                d='M5295.269,4634.7a.61.61,0,0,1-.557-.358c-.132-.293-.257-.594-.368-.9a.612.612,0,0,1,.36-.785.6.6,0,0,1,.211-.039.613.613,0,0,1,.573.4c.1.275.215.55.335.818a.611.611,0,0,1-.306.807A.592.592,0,0,1,5295.269,4634.7Z'\n                transform='translate(-5294.306 -4632.626)'\n                fill='#2170ff'\n              />\n              <path\n                data-name='Path 2111'\n                d='M5298.513,4636.747c-.122-.271-.236-.549-.34-.829a.448.448,0,0,0-.84.311c.11.3.233.6.363.886a.45.45,0,0,0,.409.264.469.469,0,0,0,.185-.04A.447.447,0,0,0,5298.513,4636.747Z'\n                transform='translate(-5297.143 -4635.463)'\n                fill='#2170ff'\n              />\n            </g>\n          </g>\n          <g data-name='Group 2560' transform='translate(0 12.575)'>\n            <g data-name='Group 2559' transform='translate(0)'>\n              <path\n                data-name='Path 2112'\n                d='M5279.609,4533.781a.612.612,0,0,1-.611-.606c0-.039,0-.077,0-.116,0-.282.01-.569.027-.85a.608.608,0,0,1,.607-.574h.038a.612.612,0,0,1,.573.646c-.015.258-.023.52-.023.778,0,.035,0,.07,0,.107a.612.612,0,0,1-.606.615h0Z'\n                transform='translate(-5278.998 -4531.634)'\n                fill='#2170ff'\n              />\n              <path\n                data-name='Path 2113'\n                d='M5282.5,4534.634a.449.449,0,0,0-.475.421c-.016.277-.025.561-.025.84v.117a.448.448,0,0,0,.449.443h0a.45.45,0,0,0,.446-.451v-.108c0-.262.006-.526.022-.787A.447.447,0,0,0,5282.5,4534.634Z'\n                transform='translate(-5281.836 -4534.47)'\n                fill='#2170ff'\n              />\n            </g>\n          </g>\n          <g data-name='Group 2562' transform='translate(5.893 24.485)'>\n            <g data-name='Group 2561' transform='translate(0 0)'>\n              <path\n                data-name='Path 2114'\n                d='M5389.413,4753.693a.618.618,0,0,1-.306-.083c-.28-.161-.556-.335-.82-.515a.61.61,0,1,1,.685-1.011c.243.165.5.323.748.47a.612.612,0,0,1,.223.834A.615.615,0,0,1,5389.413,4753.693Z'\n                transform='translate(-5388.019 -4751.979)'\n                fill='#2170ff'\n              />\n              <path\n                data-name='Path 2115'\n                d='M5392.479,4755.533c-.257-.149-.512-.309-.759-.476a.449.449,0,0,0-.5.743c.264.178.537.348.811.509a.454.454,0,0,0,.225.061.449.449,0,0,0,.226-.836Z'\n                transform='translate(-5390.858 -4754.817)'\n                fill='#2170ff'\n              />\n            </g>\n          </g>\n          <g data-name='Group 2564' transform='translate(2.054 20.521)'>\n            <g data-name='Group 2563' transform='translate(0 0)'>\n              <path\n                data-name='Path 2116'\n                d='M5318.141,4680.616a.613.613,0,0,1-.493-.25c-.19-.26-.375-.529-.544-.8a.61.61,0,1,1,1.032-.65c.158.248.324.494.5.731a.611.611,0,0,1-.493.971Z'\n                transform='translate(-5317.009 -4678.629)'\n                fill='#2170ff'\n              />\n              <path\n                data-name='Path 2117'\n                d='M5321.343,4682.579c-.175-.239-.344-.489-.5-.74a.448.448,0,1,0-.758.479c.169.27.35.535.537.792a.449.449,0,0,0,.724-.53Z'\n                transform='translate(-5319.85 -4681.467)'\n                fill='#2170ff'\n              />\n            </g>\n          </g>\n          <g data-name='Group 2566' transform='translate(3.769 22.7)'>\n            <g data-name='Group 2565' transform='translate(0 0)'>\n              <path\n                data-name='Path 2118'\n                d='M5350,4720.845a.609.609,0,0,1-.408-.156c-.238-.216-.473-.442-.7-.673a.61.61,0,0,1,.877-.849c.205.211.419.417.637.614a.61.61,0,0,1-.408,1.064Z'\n                transform='translate(-5348.718 -4718.981)'\n                fill='#2170ff'\n              />\n              <path\n                data-name='Path 2119'\n                d='M5353.132,4722.74c-.221-.2-.437-.408-.644-.623a.448.448,0,1,0-.644.625c.221.228.453.452.688.664a.443.443,0,0,0,.3.116.449.449,0,0,0,.3-.782Z'\n                transform='translate(-5351.555 -4721.819)'\n                fill='#2170ff'\n              />\n            </g>\n          </g>\n          <g data-name='Group 2568' transform='translate(1.091 7.652)'>\n            <g data-name='Group 2567' transform='translate(0)'>\n              <path\n                data-name='Path 2120'\n                d='M5299.792,4442.2a.61.61,0,0,1-.566-.385.609.609,0,0,1,.005-.466c.067-.153.136-.308.208-.457a.616.616,0,0,1,.552-.348.607.607,0,0,1,.261.058.614.614,0,0,1,.29.814c-.066.136-.128.276-.19.415A.608.608,0,0,1,5299.792,4442.2Z'\n                transform='translate(-5299.182 -4440.542)'\n                fill='#2170ff'\n              />\n              <path\n                data-name='Path 2121'\n                d='M5303.023,4443.585a.449.449,0,0,0-.6.212c-.07.148-.139.3-.2.45a.449.449,0,0,0,.824.356c.061-.141.125-.282.191-.421A.45.45,0,0,0,5303.023,4443.585Z'\n                transform='translate(-5302.022 -4443.379)'\n                fill='#2170ff'\n              />\n            </g>\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n};\n","import React from 'react';\nexport const Revenue = ({\n  color = 'currentColor',\n  width = '18px',\n  height = '18px',\n}) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 56 56'\n    >\n      <g data-name='Group 2541' transform='translate(-1719 -150)'>\n        <path\n          data-name='Path 2087'\n          d='M28,0A28,28,0,1,1,0,28,28,28,0,0,1,28,0Z'\n          transform='translate(1719 150)'\n          fill='#00c58d'\n          opacity='0.2'\n        />\n        <g data-name='Group 2542' transform='translate(1734.867 165.867)'>\n          <path\n            data-name='Path 2088'\n            d='M3854.718,4669.131a.507.507,0,0,0-.359-.15l-.048,0-8.585.831a.511.511,0,0,0-.31.864l1.58,1.58-12.093,12.093a.507.507,0,0,0,0,.718l3.877,3.877a.511.511,0,0,0,.718,0l2.112-2.111a.508.508,0,0,0,.148-.359.507.507,0,0,0-.867-.358l-1.753,1.752-3.159-3.159,12.093-12.094a.506.506,0,0,0,0-.717l-1.177-1.178,6.9-.668-.667,6.9-1.178-1.177a.506.506,0,0,0-.718,0l-9.166,9.165a.508.508,0,1,0,.719.718l8.806-8.806,1.579,1.579a.5.5,0,0,0,.353.146h0a.507.507,0,0,0,.512-.455l.831-8.585A.5.5,0,0,0,3854.718,4669.131Z'\n            transform='translate(-3830.598 -4668.98)'\n            fill='#00c58d'\n          />\n          <path\n            data-name='Path 2089'\n            d='M3806.064,5023.59a.51.51,0,0,0-.718,0,.509.509,0,0,0,0,.72l3.877,3.876a.5.5,0,0,0,.359.147h0a.5.5,0,0,0,.386-.177.509.509,0,0,0-.026-.688Z'\n            transform='translate(-3802.428 -5006.836)'\n            fill='#00c58d'\n          />\n          <path\n            data-name='Path 2090'\n            d='M3776.51,5053.146a.508.508,0,0,0-.867.36.5.5,0,0,0,.149.358l3.877,3.877a.5.5,0,0,0,.358.147h0a.506.506,0,0,0,.359-.865Z'\n            transform='translate(-3774.258 -5035.007)'\n            fill='#00c58d'\n          />\n          <path\n            data-name='Path 2091'\n            d='M3746.954,5082.7a.508.508,0,1,0-.718.718l3.876,3.876a.5.5,0,0,0,.358.147h0a.506.506,0,0,0,.36-.865Z'\n            transform='translate(-3746.086 -5063.178)'\n            fill='#00c58d'\n          />\n          <path\n            data-name='Path 2092'\n            d='M4054.57,4973.039a4.424,4.424,0,1,0,4.424,4.424A4.43,4.43,0,0,0,4054.57,4973.039Zm0,7.833a3.409,3.409,0,1,1,3.408-3.409A3.413,3.413,0,0,1,4054.57,4980.873Z'\n            transform='translate(-4035.901 -4958.794)'\n            fill='#00c58d'\n          />\n          <path\n            data-name='Path 2093'\n            d='M4114.442,5005.083a.522.522,0,0,0,.108.011.508.508,0,0,0,.507-.507v-.255a1.265,1.265,0,0,0-1.017-1.246v-.282a.508.508,0,0,0-1.016,0v.309a1.4,1.4,0,0,0,.38,2.745h.255a.383.383,0,0,1,0,.767h-.382a.257.257,0,0,1-.256-.256.508.508,0,0,0-1.015,0,1.267,1.267,0,0,0,1.018,1.246v.281a.508.508,0,1,0,1.016,0v-.308a1.4,1.4,0,0,0,.4-2.5Zm-.251-.137,0,0a1.388,1.388,0,0,0-.535-.106h-.255a.383.383,0,0,1,0-.767h.381a.256.256,0,0,1,.256.256v.255A.5.5,0,0,0,4114.19,5004.945Z'\n            transform='translate(-4094.863 -4986.681)'\n            fill='#00c58d'\n          />\n          <path\n            data-name='Path 2094'\n            d='M3770.35,4697.666a4.424,4.424,0,1,0-4.424-4.424A4.428,4.428,0,0,0,3770.35,4697.666Zm0-7.832a3.409,3.409,0,1,1-3.408,3.408A3.412,3.412,0,0,1,3770.35,4689.834Z'\n            transform='translate(-3764.996 -4687.888)'\n            fill='#00c58d'\n          />\n          <path\n            data-name='Path 2095'\n            d='M3829.184,4721.638h.255a.383.383,0,0,1,0,.767h-.382a.256.256,0,0,1-.256-.256.508.508,0,0,0-1.015,0,1.267,1.267,0,0,0,1.018,1.246v.282a.508.508,0,0,0,1.015,0v-.309a1.4,1.4,0,0,0,.4-2.5.474.474,0,0,0,.108.011.508.508,0,0,0,.508-.508v-.254a1.266,1.266,0,0,0-1.018-1.246v-.282a.508.508,0,0,0-1.016,0v.309a1.4,1.4,0,0,0,.381,2.745Zm.791-.909a1.391,1.391,0,0,0-.536-.107h-.255a.383.383,0,1,1,0-.766h.382a.256.256,0,0,1,.256.256v.254A.5.5,0,0,0,3829.975,4720.729Z'\n            transform='translate(-3823.958 -4715.777)'\n            fill='#00c58d'\n          />\n        </g>\n      </g>\n    </svg>\n  );\n};\n","import React from 'react';\nexport const UserIcon = ({ width = '48px', height = '48px' }) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 48 48'\n    >\n      <g data-name='Group 2995' transform='translate(-612 -752)'>\n        <path\n          data-name='Path 3647'\n          d='M20,0h8A20,20,0,0,1,48,20v8A20,20,0,0,1,28,48H20A20,20,0,0,1,0,28V20A20,20,0,0,1,20,0Z'\n          transform='translate(612 752)'\n          fill='#d1f9f5'\n        />\n        <path\n          data-name='Path 3642'\n          d='M-707.226-726.091a.506.506,0,0,1-.23.677.506.506,0,0,1-.677-.23,11.921,11.921,0,0,1-.919-2.574,12.016,12.016,0,0,1-.311-2.719,11.963,11.963,0,0,1,3.515-8.485,11.962,11.962,0,0,1,8.485-3.515,11.962,11.962,0,0,1,8.485,3.515,11.963,11.963,0,0,1,3.515,8.485,12.016,12.016,0,0,1-.311,2.719,11.929,11.929,0,0,1-.919,2.574.506.506,0,0,1-.677.23.506.506,0,0,1-.23-.677,10.888,10.888,0,0,0,.84-2.352,11.01,11.01,0,0,0,.283-2.493A10.952,10.952,0,0,0-689.6-738.7a10.952,10.952,0,0,0-7.768-3.218,10.952,10.952,0,0,0-7.768,3.218,10.952,10.952,0,0,0-3.218,7.768,11.017,11.017,0,0,0,.283,2.493,10.9,10.9,0,0,0,.84,2.352Zm19.154,2.746a12.05,12.05,0,0,1-4.152,3.254,11.947,11.947,0,0,1-5.139,1.155,11.947,11.947,0,0,1-5.139-1.155,12.051,12.051,0,0,1-4.16-3.264.5.5,0,0,1-.109-.386h0a3.522,3.522,0,0,1,1.1-2.245,6.632,6.632,0,0,1,2.253-1.223c.4-.146.832-.281,1.256-.412a11.4,11.4,0,0,0,1.621-.582l.064-.035a.85.85,0,0,0,.408-.456.62.62,0,0,0-.045-.475l-.01-.021-.009-.016-.014-.026c-.067-.114-.163-.254-.267-.406a6.317,6.317,0,0,1-.928-1.8,1.354,1.354,0,0,1-.656-.588,3.944,3.944,0,0,1-.424-1.009,3.77,3.77,0,0,1-.116-.57c0-.005,0-.01,0-.016a1.387,1.387,0,0,1,0-.268.947.947,0,0,1,.3-.627.989.989,0,0,1,.43-.23l-.015-.432a4.265,4.265,0,0,1,2.5-4.277,4.8,4.8,0,0,1,1.967-.414,4.8,4.8,0,0,1,1.967.415,4.264,4.264,0,0,1,2.5,4.277v0h0l-.015.43a.987.987,0,0,1,.431.231.947.947,0,0,1,.295.625,1.409,1.409,0,0,1,0,.285l0,.016a3.824,3.824,0,0,1-.114.558,3.921,3.921,0,0,1-.423,1.007,1.353,1.353,0,0,1-.656.587,6.321,6.321,0,0,1-.929,1.8c-.11.162-.212.312-.279.428l-.018.035a.626.626,0,0,0-.045.479.85.85,0,0,0,.409.457l.064.033a11.415,11.415,0,0,0,1.625.584c.423.131.857.265,1.252.41a6.631,6.631,0,0,1,2.253,1.223,3.521,3.521,0,0,1,1.1,2.245.5.5,0,0,1-.117.4Zm-4.583,2.339a11.025,11.025,0,0,0,3.664-2.814,2.462,2.462,0,0,0-.747-1.422,5.756,5.756,0,0,0-1.916-1.017c-.4-.146-.8-.271-1.2-.394a12.03,12.03,0,0,1-1.783-.647c-.028-.014-.065-.035-.111-.061a1.843,1.843,0,0,1-.868-1.023,1.62,1.62,0,0,1,.1-1.243c.009-.018.024-.045.046-.082.1-.176.206-.33.319-.495a5.142,5.142,0,0,0,.874-1.816h0l.005-.022a.505.505,0,0,1,.6-.357c.012-.008.026-.076.082-.164a2.907,2.907,0,0,0,.3-.737,2.755,2.755,0,0,0,.083-.4v-.013a.49.49,0,0,0,0-.062h-.021a.853.853,0,0,0-.164,0,.5.5,0,0,1-.075,0,.505.505,0,0,1-.487-.523l.032-.917h0a3.3,3.3,0,0,0-1.905-3.321,3.788,3.788,0,0,0-1.551-.327,3.79,3.79,0,0,0-1.551.327,3.3,3.3,0,0,0-1.907,3.323l.031.91a.532.532,0,0,1,0,.071.505.505,0,0,1-.55.456.864.864,0,0,0-.173,0h-.022a.5.5,0,0,0,0,.053v.009a2.721,2.721,0,0,0,.084.408,2.922,2.922,0,0,0,.3.74c.056.088.068.157.08.164h0a.506.506,0,0,1,.606.38,5.138,5.138,0,0,0,.873,1.813c.107.158.207.3.3.469l.017.027.03.053.017.031a1.619,1.619,0,0,1,.1,1.243,1.842,1.842,0,0,1-.863,1.022c-.036.021-.075.042-.116.062a11.985,11.985,0,0,1-1.779.646c-.4.123-.808.25-1.2.4a5.758,5.758,0,0,0-1.917,1.017,2.462,2.462,0,0,0-.747,1.422,11.027,11.027,0,0,0,3.664,2.814,10.94,10.94,0,0,0,4.708,1.056,10.94,10.94,0,0,0,4.708-1.056Z'\n          transform='translate(1333.363 1506.936)'\n          fill='#27c7b7'\n        />\n      </g>\n    </svg>\n  );\n};\n","import React from 'react';\nimport Chart from 'react-apexcharts';\n\nconst Charts = ({ ...props }) => {\n  return <Chart {...props} />;\n};\n\nexport default Charts;\n","import { styled } from \"baseui\";\n\nexport const TitleWrapper = styled(\"div\", () => ({\n  padding: \"30px\",\n  display: \"flex\",\n  alignItems: \"flex-start\",\n  justifyContent: \"space-betwween\"\n}));\n\nexport const BoxHeading = styled(\"h3\", ({ $theme }) => ({\n  ...$theme.typography.fontBold16,\n  fontFamily: $theme.typography.primaryFontFamily,\n  color: $theme.colors.textDark,\n  lineHeight: \"1.3\",\n  margin: 0,\n\n  \"@media only screen and (max-width: 767px)\": {\n    display: \"block\"\n  }\n}));\n\nconst BoxWrapper = styled(\"div\", () => ({\n  width: \"100%\",\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  backgroundColor: \"#ffffff\",\n  borderRadius: \"3px\",\n  boxShadow: \"0 21px 36px rgba(0, 0, 0, 0.03)\",\n  overflow: \"hidden\"\n}));\n\nexport const BoxContentWrapper = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  flexWrap: \"wrap\"\n}));\n\nexport default BoxWrapper;\n","import React from 'react';\nimport BoxWrapper, {\n  BoxHeading,\n  TitleWrapper,\n  BoxContentWrapper,\n} from './Box.style';\n\ntype BoxTitleProps = {\n  title: string;\n};\n\ntype BoxProps = {\n  children: React.ReactNode;\n  style?: any;\n};\n\nexport const BoxTitleWrapper: React.FC<BoxProps> = ({ children, style }) => {\n  return <TitleWrapper style={style}>{children}</TitleWrapper>;\n};\n\nexport const BoxTitle: React.FC<BoxTitleProps> = ({ title }) => {\n  return <BoxHeading>{title}</BoxHeading>;\n};\n\nexport const Box = ({ children }: any) => {\n  return <BoxWrapper>{children}</BoxWrapper>;\n};\n\nexport const BoxContent: React.FC<BoxProps> = ({ children, style }) => {\n  return <BoxContentWrapper style={style}>{children}</BoxContentWrapper>;\n};\n","import { styled } from 'baseui';\n\nexport const ChartLabels = styled('div', () => ({\n  width: '100%',\n  padding: '15px 10px 30px',\n  display: 'flex',\n  justifyContent: 'space-around',\n  alignItems: 'flex-start',\n}));\n\nexport const Label = styled('div', () => ({\n  padding: '0 10px',\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'flex-start',\n}));\n\nexport const Color = styled('span', () => ({\n  width: '15px',\n  height: '15px',\n  borderRadius: '50%',\n  marginRight: '10px',\n  display: 'flex',\n  flexShrink: '0',\n}));\n\nexport const Content = styled('div', () => ({\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nexport const Title = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textNormal,\n  marginBottom: '10px',\n}));\n\nexport const Text = styled('span', ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textDark,\n}));\n","import React from \"react\";\nimport Chart from \"../../Charts/Chart\";\nimport { Box, BoxTitle, BoxTitleWrapper, BoxContent } from \"../../Box/Box\";\nimport {\n  ChartLabels,\n  Label,\n  Color,\n  Content,\n  Title,\n  Text\n} from \"./RadialBarChart.style\";\n\nconst RadialBarChart = ({\n  widgetTitle,\n  series,\n  colors,\n  label,\n  helperText\n}: any) => {\n  const options = {\n    options: {\n      colors: colors,\n      plotOptions: {\n        radialBar: {\n          hollow: {\n            margin: 0,\n            size: \"20%\",\n            background: \"transparent\"\n          },\n\n          track: {\n            show: true,\n            background: \"#F2F3FC\",\n            strokeWidth: \"100%\",\n            opacity: 1,\n            margin: 15,\n            dropShadow: {\n              enabled: false,\n              top: 0,\n              left: 0,\n              blur: 3,\n              opacity: 0.5\n            }\n          },\n\n          dataLabels: {\n            show: false\n          }\n        }\n      },\n      states: {\n        hover: {\n          filter: {\n            type: \"darken\",\n            value: 0.8\n          }\n        }\n      },\n      stroke: {\n        lineCap: \"round\"\n      },\n      labels: label\n    },\n    series: series\n  };\n\n  return (\n    <Box>\n      <BoxTitleWrapper>\n        <BoxTitle title={widgetTitle} />\n      </BoxTitleWrapper>\n\n      <BoxContent style={{ display: \"block\" }}>\n        <Chart\n          options={options.options}\n          series={options.series}\n          type=\"radialBar\"\n          width=\"100%\"\n        />\n\n        <ChartLabels>\n          {label &&\n            label.map((item, index) => (\n              <Label key={index}>\n                <Color style={{ backgroundColor: colors[index] }} />\n                <Content>\n                  <Title>{helperText[index]}</Title>\n                  <Text>{label[index]}</Text>\n                </Content>\n              </Label>\n            ))}\n        </ChartLabels>\n      </BoxContent>\n    </Box>\n  );\n};\n\nexport default RadialBarChart;\n","import React from \"react\";\nimport Chart from \"../../Charts/Chart\";\nimport { Box, BoxTitle, BoxTitleWrapper, BoxContent } from \"../../Box/Box\";\n\nconst LineChart = ({\n  widgetTitle,\n  series,\n  color,\n  categories,\n  seriesName = \"\"\n}: any) => {\n  const options = {\n    options: {\n      chart: {\n        type: \"line\",\n        dropShadow: {\n          enabled: true,\n          color: color,\n          top: 18,\n          left: 0,\n          blur: 3.5,\n          opacity: 0.15\n        },\n        toolbar: {\n          show: false\n        }\n      },\n      stroke: {\n        width: 7,\n        curve: \"smooth\"\n      },\n      xaxis: {\n        categories: categories,\n        labels: {\n          show: false\n        },\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        crosshairs: {\n          show: true,\n          width: 5,\n          tickWidth: 0,\n          position: \"back\",\n          opacity: 1,\n          stroke: {\n            color: \"#b6b6b6\",\n            width: 0,\n            dashArray: 0\n          },\n          fill: {\n            type: \"solid\",\n            color: \"#F2F3FC\"\n          }\n        },\n        tooltip: {\n          enabled: false\n        }\n      },\n      yaxis: {\n        show: true,\n        labels: {\n          show: true,\n          style: {\n            color: \"#161F6A\",\n            fontSize: \"14px\",\n            fontFamily: \"'Lato', sans-serif\"\n          }\n        }\n      },\n      grid: {\n        borderColor: \"#F7F7F7\"\n      },\n      colors: color,\n      markers: {\n        size: 0,\n        opacity: 1,\n        colors: color,\n        strokeColor: \"#fff\",\n        strokeWidth: 4,\n        hover: {\n          size: 8\n        }\n      }\n    },\n    series: [\n      {\n        name: seriesName,\n        data: series\n      }\n    ]\n  };\n\n  return (\n    <Box>\n      <BoxTitleWrapper>\n        <BoxTitle title={widgetTitle} />\n      </BoxTitleWrapper>\n\n      <BoxContent style={{ display: \"block\" }}>\n        <Chart\n          options={options.options}\n          series={options.series}\n          height=\"350\"\n          width=\"97%\"\n        />\n      </BoxContent>\n    </Box>\n  );\n};\n\nexport default LineChart;\n","import { styled } from 'baseui';\n\nexport const ContentWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'flex-start',\n\n  '@media only screen and (max-width: 990px)': {\n    flexDirection: 'column',\n  },\n}));\n\nexport const Legend = styled('div', () => ({\n  display: 'flex',\n  alignItems: 'center',\n}));\n\nexport const Label = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textNormal,\n}));\n\nexport const Color = styled('span', () => ({\n  width: '15px',\n  height: '15px',\n  borderRadius: '50%',\n  marginRight: '15px',\n  display: 'flex',\n}));\n\nexport const Content = styled('div', () => ({\n  display: 'flex',\n  flexDirection: 'column',\n\n  '@media only screen and (max-width: 767px)': {\n    marginTop: '20px',\n  },\n}));\n\nexport const LabelText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font14,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textDark,\n  marginTop: '10px',\n}));\n\nexport const SeriesText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: '#00C58D',\n}));\n","import React from 'react';\nimport Chart from '../../Charts/Chart';\nimport { Box, BoxTitle, BoxTitleWrapper, BoxContent } from '../../Box/Box';\nimport {\n  ContentWrapper,\n  Content,\n  LabelText,\n  SeriesText,\n} from './ColumnChart.style';\nimport { ArrowUp } from '../../../assets/icons/ArrowUp';\nimport { ArrowDown } from '../../../assets/icons/ArrowDown';\n\nconst BarChart = ({\n  widgetTitle,\n  series,\n  colors,\n  prefix,\n  totalValue,\n  text,\n  position,\n  percentage,\n  categories,\n}: any) => {\n  const options = {\n    options: {\n      chart: {\n        toolbar: {\n          show: false,\n        },\n      },\n      plotOptions: {\n        bar: {\n          columnWidth: '65%',\n          endingShape: 'flat',\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        show: false,\n        width: 2,\n      },\n      // responsive: [\n      //   {\n      //     breakpoint: 720,\n      //     options: {\n      //       plotOptions: {\n      //         bar: {\n      //           horizontal: true\n      //         }\n      //       }\n      //     }\n      //   }\n      // ],\n      grid: {\n        borderColor: '#F7F7F7',\n        xaxis: {\n          lines: {\n            show: false,\n          },\n        },\n      },\n      colors: colors,\n      xaxis: {\n        labels: {\n          show: true,\n          style: {\n            colors: '#161F6A',\n            fontSize: '14px',\n            fontFamily: \"'Lato', sans-serif\",\n          },\n        },\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        categories: categories,\n      },\n      yaxis: {\n        show: true,\n        labels: {\n          show: true,\n          style: {\n            color: '#161F6A',\n            fontSize: '14px',\n            fontFamily: \"'Lato', sans-serif\",\n          },\n        },\n      },\n    },\n    series: [\n      {\n        name: 'Sale',\n        data: series,\n      },\n    ],\n  };\n\n  return (\n    <Box>\n      <BoxTitleWrapper>\n        <ContentWrapper>\n          <BoxTitle title={widgetTitle} />\n          <Content>\n            <SeriesText>\n              {prefix}\n              {totalValue}\n            </SeriesText>\n            <LabelText>\n              {position === 'up' ? (\n                <span style={{ color: '#00C58D' }}>\n                  <ArrowUp />\n                </span>\n              ) : position === 'down' ? (\n                <span style={{ color: '#fc4a71' }}>\n                  {' '}\n                  <ArrowDown />\n                </span>\n              ) : (\n                ''\n              )}\n              <span style={{ marginLeft: 5 }}>\n                <span style={{ color: '#00C58D' }}>{percentage}</span>\n                &nbsp;\n                {text}\n              </span>\n            </LabelText>\n          </Content>\n        </ContentWrapper>\n      </BoxTitleWrapper>\n\n      <BoxContent style={{ display: 'block' }}>\n        <Chart\n          options={options.options}\n          series={options.series}\n          height='350'\n          width='100%'\n          type='bar'\n        />\n      </BoxContent>\n    </Box>\n  );\n};\n\nexport default BarChart;\n","import { styled } from 'baseui';\n\nexport const ChartLabels = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n}));\n\nexport const Img = styled('span', () => ({\n  width: '56px',\n  height: '56px',\n  marginRight: '15px',\n  display: 'flex',\n}));\n\nexport const Content = styled('div', () => ({\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nexport const LabelText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textNormal,\n  marginTop: '10px',\n}));\n\nexport const SeriesText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textDark,\n}));\n","import React from \"react\";\nimport Chart from \"../../Charts/Chart\";\nimport { Box, BoxTitleWrapper, BoxContent } from \"../../Box/Box\";\nimport {\n  ChartLabels,\n  Img,\n  Content,\n  LabelText,\n  SeriesText\n} from \"./DonutChart.style\";\n\nconst BarChart = ({ series, icon, labels, prefix, colors }: any) => {\n  const options = {\n    options: {\n      colors: colors,\n      dataLabels: {\n        enabled: false\n      },\n      labels: labels,\n      legend: {\n        show: false\n      },\n      stroke: {\n        show: false\n      },\n      states: {\n        hover: {\n          filter: {\n            type: \"darken\",\n            value: 0.8\n          }\n        }\n      },\n      plotOptions: {\n        pie: {\n          donut: {},\n          expandOnClick: false\n        }\n      }\n    },\n    series: series\n  };\n\n  const numberWithCommas = num => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  return (\n    <Box>\n      <BoxTitleWrapper>\n        <ChartLabels>\n          <Img>{icon[0]}</Img>\n          <Content>\n            <SeriesText style={{ color: colors[0] }}>\n              {prefix}\n              {numberWithCommas(series[0])}\n            </SeriesText>\n            <LabelText>{labels[0]}</LabelText>\n          </Content>\n        </ChartLabels>\n      </BoxTitleWrapper>\n\n      <BoxContent style={{ display: \"block\" }}>\n        <Chart\n          options={options.options}\n          series={options.series}\n          // height=\"350\"\n          width=\"100%\"\n          type=\"donut\"\n        />\n      </BoxContent>\n\n      <BoxTitleWrapper>\n        <ChartLabels style={{ flexDirection: \"row-reverse\" }}>\n          <Img style={{ marginRight: \"0\", marginLeft: \"15px\" }}>{icon[1]}</Img>\n          <Content style={{ alignItems: \"flex-end\" }}>\n            <SeriesText style={{ color: colors[1] }}>\n              {prefix}\n              {numberWithCommas(series[1])}\n            </SeriesText>\n            <LabelText>{labels[1]}</LabelText>\n          </Content>\n        </ChartLabels>\n      </BoxTitleWrapper>\n    </Box>\n  );\n};\n\nexport default BarChart;\n","import React from 'react';\nimport Chart from '../../Charts/Chart';\nimport { Box, BoxTitleWrapper, BoxContent, BoxTitle } from '../../Box/Box';\n\nconst GrpahChart = ({\n  widgetTitle,\n  series,\n  icon,\n  labels,\n  prefix,\n  colors,\n}: any) => {\n  const options = {\n    options: {\n      chart: {\n        zoom: {\n          enabled: false,\n        },\n        toolbar: {\n          show: false,\n        },\n      },\n      colors: colors,\n      dataLabels: {\n        enabled: false,\n      },\n      fill: {\n        type: 'solid',\n      },\n      stroke: {\n        show: false,\n        curve: 'smooth',\n      },\n      legend: {\n        show: true,\n      },\n      xaxis: {\n        type: 'datetime',\n        categories: labels,\n        labels: {\n          show: true,\n          offsetX: -25,\n          style: {\n            colors: '#161F6A',\n            fontSize: '14px',\n            fontFamily: \"'Lato', sans-serif\",\n          },\n        },\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        crosshairs: {\n          show: true,\n          width: 1,\n          tickWidth: 0,\n          position: 'back',\n          opacity: 1,\n          stroke: {\n            color: 'transparent',\n            width: 0,\n            dashArray: 0,\n          },\n          fill: {\n            type: 'solid',\n            color: '#F2F3FC',\n          },\n        },\n        tooltip: {\n          enabled: false,\n        },\n      },\n      yaxis: {\n        show: true,\n        labels: {\n          show: true,\n          style: {\n            color: '#161F6A',\n            fontSize: '14px',\n            fontFamily: \"'Lato', sans-serif\",\n          },\n        },\n      },\n      grid: {\n        borderColor: '#F7F7F7',\n        xaxis: {\n          lines: {\n            show: true,\n          },\n        },\n      },\n      markers: {\n        size: 0,\n        opacity: 1,\n        colors: colors,\n        strokeColor: '#fff',\n        strokeWidth: 4,\n        hover: {\n          size: 8,\n        },\n      },\n    },\n    series: [\n      {\n        name: '',\n        data: series,\n      },\n    ],\n  };\n\n  return (\n    <Box>\n      <BoxTitleWrapper>\n        <BoxTitle title={widgetTitle} />\n      </BoxTitleWrapper>\n\n      <BoxContent style={{ display: 'block', width: '100%' }}>\n        <Chart\n          options={options.options}\n          series={options.series}\n          width='100%'\n          type='area'\n        />\n      </BoxContent>\n    </Box>\n  );\n};\n\nexport default GrpahChart;\n","import { styled } from 'baseui';\n\nexport const TopbarInfo = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nexport const Img = styled('span', () => ({\n  width: '56px',\n  height: '56px',\n  marginRight: '15px',\n  display: 'flex',\n}));\n\nexport const Content = styled('div', () => ({\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nexport const LabelText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textNormal,\n}));\n\nexport const SeriesText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textDark,\n  marginTop: '7px',\n}));\n","import * as React from 'react';\nimport { ProgressBar as BWProgressBar } from 'baseui/progress-bar';\n\nconst ProgressBar = ({ ...props }) => {\n  return <BWProgressBar {...props} />;\n};\n\nexport default ProgressBar;\n","import React from \"react\";\nimport Chart from \"../../Charts/Chart\";\nimport { Box, BoxTitleWrapper, BoxContent } from \"../../Box/Box\";\nimport { Content, LabelText, SeriesText } from \"./GradiantGraphChart.style\";\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\n\nconst GradiantGraphChart = ({\n  series,\n  topRowTitle,\n  bottomRowData,\n  labels,\n  colors\n}: any) => {\n  const options = {\n    options: {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      colors: colors,\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          opacityFrom: 1,\n          opacityTo: 0.7\n        }\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        curve: \"smooth\",\n        colors: colors\n      },\n      legend: {\n        show: true\n      },\n      xaxis: {\n        show: false,\n        type: \"datetime\",\n        categories: labels,\n        labels: {\n          show: false\n        },\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        crosshairs: {\n          show: false\n        },\n        tooltip: {\n          enabled: false\n        }\n      },\n      yaxis: {\n        show: false\n      },\n      grid: {\n        show: false\n      },\n      markers: {\n        size: 0,\n        opacity: 1,\n        colors: [\"#18D8BC\"],\n        strokeColor: \"#fff\",\n        strokeWidth: 4,\n        hover: {\n          size: 8\n        }\n      }\n    },\n    series: [\n      {\n        name: \"\",\n        data: series\n      }\n    ]\n  };\n\n  return (\n    <Box>\n      <BoxTitleWrapper>\n        <Content style={{ marginLeft: \"auto\" }}>\n          <LabelText>{topRowTitle}</LabelText>\n          <SeriesText style={{ color: colors[0] }}>\n            {bottomRowData[0].value - bottomRowData[1].value}%\n          </SeriesText>\n        </Content>\n      </BoxTitleWrapper>\n\n      <BoxContent style={{ display: \"block\" }}>\n        <Chart\n          options={options.options}\n          series={options.series}\n          width=\"100%\"\n          type=\"area\"\n        />\n      </BoxContent>\n\n      <BoxTitleWrapper\n        style={{ justifyContent: \"space-between\", paddingTop: \"0\" }}\n      >\n        {bottomRowData &&\n          bottomRowData.map((item, index) => (\n            <Content key={index}>\n              <LabelText>{item.label}</LabelText>\n              <SeriesText>{item.valueText}</SeriesText>\n              <ProgressBar\n                value={item.value}\n                successValue={100}\n                overrides={{\n                  Bar: {\n                    style: () => {\n                      return {\n                        backgroundColor: \"#F2F2F2\",\n                        marginLeft: \"0px\",\n                        marginRight: \"0px\"\n                      };\n                    }\n                  },\n                  BarProgress: {\n                    style: () => {\n                      return {\n                        backgroundColor: item.color\n                      };\n                    }\n                  }\n                }}\n              />\n            </Content>\n          ))}\n      </BoxTitleWrapper>\n    </Box>\n  );\n};\n\nexport default GradiantGraphChart;\n","import { styled } from \"baseui\";\n\nexport const Text = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  color: $theme.colors.textDark\n}));\n\nexport const TopPart = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  padding: \"50px 35px\",\n  margin: \"auto 0\",\n\n  \"@media only screen and (max-width: 600px)\": {\n    flexDirection: \"column\"\n  }\n}));\n\nexport const Progressbox = styled(\"div\", () => ({\n  width: \"60%\",\n  minHeight: \"150px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n\n  \"@media only screen and (max-width: 600px)\": {\n    width: \"100%\"\n  }\n}));\n\nexport const ProgressSingle = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  marginBottom: \"20px\",\n  paddingRight: \"50px\",\n\n  \":last-child\": {\n    marginBottom: \"0\"\n  }\n}));\n\nexport const ProgressBarTitleWrapper = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  alignItems: \"baseline\"\n}));\n\nexport const ProgressTitle = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold14,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  color: $theme.colors.textDark\n}));\n\nexport const ProgressNumber = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold12,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  color: $theme.colors.textDark,\n  marginLeft: \"10px\"\n}));\n\nexport const BottomPart = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  borderTop: \"1px solid #E5E9ED\"\n}));\n\nexport const MapLengendBox = styled(\"div\", () => ({\n  minWidth: \"100%\",\n  display: \"flex\",\n  flexShrink: \"0\",\n  padding: \"0 20px\",\n  justifyContent: \"space-around\",\n\n  \"@media only screen and (max-width: 1023px)\": {\n    flexWrap: \"wrap\",\n    width: \"100%\"\n  }\n}));\n\nexport const MapLengendBoxSingle = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"space-between\",\n  padding: \"35px 15px\",\n\n  \"@media only screen and (max-width: 1023px)\": {\n    width: \"50%\"\n  }\n}));\n\nexport const MapLengendTitle = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.font13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1\",\n  color: $theme.colors.textNormal,\n  marginBottom: \"10px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  whiteSpace: \"nowrap\"\n}));\n\nexport const MapLengendValue = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1\",\n  color: $theme.colors.textDark\n}));\n\nexport const MapLengendColor = styled(\"span\", () => ({\n  width: \"10px\",\n  height: \"10px\",\n  display: \"inline-block\",\n  borderRadius: \"5px\",\n  marginRight: \"5px\"\n}));\n\nexport const TotalValueBox = styled(\"div\", ({ $theme }) => ({\n  width: \"40%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  padding: \"50px 30px 50px 0\",\n\n  \"@media only screen and (max-width: 600px)\": {\n    width: \"100%\",\n    paddingTop: \"0\"\n  }\n}));\n","import React from \"react\";\nimport { Box } from \"../../Box/Box\";\n\nimport {\n  TopPart,\n  Progressbox,\n  ProgressSingle,\n  ProgressTitle,\n  MapLengendTitle,\n  MapLengendValue,\n  ProgressBarTitleWrapper,\n  ProgressNumber,\n  TotalValueBox,\n  BottomPart,\n  MapLengendBox,\n  MapLengendBoxSingle,\n  MapLengendColor\n} from \"./MapWidget.style\";\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\n\nconst MapWidget = ({ data, totalText }: any) => {\n  const numberWithCommas = num => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  const numberToPercent = (num, total) => {\n    return (num * 100) / total;\n  };\n\n  return (\n    <Box>\n      <TopPart>\n        <TotalValueBox>\n          <MapLengendTitle>{totalText}</MapLengendTitle>\n          <MapLengendValue>\n            {numberWithCommas(data.reduce((a, { value }) => a + value, 0))}\n          </MapLengendValue>\n        </TotalValueBox>\n\n        <Progressbox>\n          {data.map((item, index) => (\n            <ProgressSingle key={index}>\n              <ProgressBarTitleWrapper>\n                <ProgressTitle>{item.name}</ProgressTitle>\n                <ProgressNumber>\n                  ({numberWithCommas(item.value)})\n                </ProgressNumber>\n              </ProgressBarTitleWrapper>\n              <ProgressBar\n                value={numberToPercent(\n                  item.value,\n                  data.reduce((a, { value }) => a + value, 0)\n                )}\n                successValue={100}\n                overrides={{\n                  Bar: {\n                    style: () => {\n                      return {\n                        backgroundColor: \"#F2F2F2\",\n                        marginLeft: \"0px\",\n                        marginRight: \"0px\",\n                        height: \"10px\",\n                        borderTopLeftRadius: \"5px\",\n                        borderTopRightRadius: \"5px\",\n                        borderBottomLeftRadius: \"5px\",\n                        borderBottomRightRadius: \"5px\",\n                        position: \"relative\"\n                      };\n                    }\n                  },\n                  BarProgress: {\n                    style: ({ $theme, $value }) => {\n                      return {\n                        backgroundColor: item.color,\n                        borderTopLeftRadius: \"5px\",\n                        borderTopRightRadius: \"5px\",\n                        borderBottomLeftRadius: \"5px\",\n                        borderBottomRightRadius: \"5px\",\n                        \":after\": {\n                          content: $value > 5 ? `\"${Math.round($value)}%\"` : \"\",\n                          ...$theme.typography.fontBold13,\n                          fontFamily: $theme.typography.primaryFontFamily,\n                          lineHeight: \"1.2\",\n                          color: $theme.colors.textDark,\n                          position: \"absolute\",\n                          top: \"-2px\",\n                          right: \"-40px\"\n                        }\n                      };\n                    }\n                  }\n                }}\n              />\n            </ProgressSingle>\n          ))}\n        </Progressbox>\n      </TopPart>\n      <BottomPart>\n        <MapLengendBox>\n          {data.map((item, index) => (\n            <MapLengendBoxSingle key={index}>\n              <MapLengendTitle>\n                <MapLengendColor style={{ backgroundColor: item.color }} />\n                {item.name}\n              </MapLengendTitle>\n              <MapLengendValue>{numberWithCommas(item.value)}</MapLengendValue>\n            </MapLengendBoxSingle>\n          ))}\n        </MapLengendBox>\n      </BottomPart>\n    </Box>\n  );\n};\n\nexport default MapWidget;\n","import { styled } from \"baseui\";\n\nexport const Card = styled(\"div\", () => ({\n  width: \"100%\",\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"30px\",\n  borderRadius: \"6px\",\n  backgroundColor: \"#ffffff\"\n}));\n\nexport const TopInfo = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginBottom: \"50px\"\n}));\n\nexport const TitleWrapper = styled(\"div\", () => ({\n  width: \"calc(100% - 60px)\",\n  display: \"flex\",\n  flexDirection: \"column\"\n}));\n\nexport const Title = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold16,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  color: $theme.colors.textDark,\n  marginBottom: \"10px\"\n}));\n\nexport const SubTitle = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  color: $theme.colors.textNormal,\n  marginBottom: \"0px\"\n}));\n\nexport const IconBox = styled(\"div\", ({ $theme }) => ({\n  width: \"48px\",\n  height: \"48px\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n}));\n\nexport const Price = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  color: $theme.colors.textDark,\n  marginBottom: \"10px\"\n}));\n\nexport const Text = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold14,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  marginBottom: \"50px\"\n}));\n\nexport const Note = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.font14,\n  fontFamily: $theme.typography.primaryFontFamily,\n  color: $theme.colors.textNormal,\n  lineHeight: \"1.2\"\n}));\n\nexport const Link = styled(\"a\", ({ $theme }) => ({\n  ...$theme.typography.fontBold13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  color: $theme.colors.purple400,\n  lineHeight: \"1.2\",\n  textDecoration: \"none\"\n}));\n","import React from 'react';\nimport {\n  Card,\n  TopInfo,\n  TitleWrapper,\n  Title,\n  SubTitle,\n  IconBox,\n  Price,\n  Note,\n  Text,\n  Link,\n} from './StickerCard.style';\nimport { IosArrowUp } from '../../../assets/icons/IosArrowUp';\nimport { IosArrowDown } from '../../../assets/icons/IosArrowDown';\n\nconst StickerCard = ({\n  title,\n  subtitle,\n  icon,\n  price,\n  indicator,\n  indicatorText,\n  note,\n  link,\n  linkText,\n}: any) => {\n  return (\n    <Card>\n      <TopInfo>\n        <TitleWrapper>\n          <Title>{title}</Title>\n          <SubTitle>{subtitle}</SubTitle>\n        </TitleWrapper>\n\n        <IconBox>{icon}</IconBox>\n      </TopInfo>\n\n      <Price>{price}</Price>\n      {indicator !== '' ? (\n        indicator === 'up' ? (\n          <Text style={{ color: '#03D3B5' }}>\n            <IosArrowUp width='9px' height='11px' /> {indicatorText}\n            <Note> {note}</Note>\n          </Text>\n        ) : indicator === 'down' ? (\n          <Text style={{ color: '#FC6687' }}>\n            <IosArrowDown width='9px' height='11px' /> {indicatorText}\n            <Note> {note}</Note>\n          </Text>\n        ) : (\n          ''\n        )\n      ) : (\n        ''\n      )}\n      {link !== '' && (\n        <Link href={link} target='_blank'>\n          {linkText}\n        </Link>\n      )}\n    </Card>\n  );\n};\n\nexport default StickerCard;\n","import React, { useEffect, useState } from 'react';\nimport { withStyle, useStyletron } from 'baseui';\nimport { Grid, Row, Col as Column } from '../../components/FlexBox/FlexBox';\nimport RadialBarChart from '../../components/Widgets/RadialBarChart/RadialBarChart';\nimport LineChart from '../../components/Widgets/LineChart/LineChart';\nimport ColumnChart from '../../components/Widgets/ColumnChart/ColumnChart';\nimport DonutChart from '../../components/Widgets/DonutChart/DonutChart';\nimport GraphChart from '../../components/Widgets/GraphChart/GraphChart';\nimport GradiantGraphChart from '../../components/Widgets/GradiantGraphChart/GradiantGraphChart';\nimport MapWidget from '../../components/Widgets/MapWidget/MapWidget';\nimport StickerCard from '../../components/Widgets/StickerCard/StickerCard';\n\nimport { Revenue } from '../../assets/icons/Revenue';\nimport { Refund } from '../../assets/icons/Refund';\nimport { CoinIcon } from '../../assets/icons/CoinIcon';\nimport { CartIconBig } from '../../assets/icons/CartIconBig';\nimport { UserIcon } from '../../assets/icons/UserIcon';\nimport { DeliveryIcon } from '../../assets/icons/DeliveryIcon';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nconst GET_CUSTOMERS = gql`\n  query getUsers {\n    getUsers {\n      id\n      name\n      email\n      role\n      created_at\n      phones{\n        number\n        id\n        is_primary\n      }\n      workInfo{\n        stoppedWorkTime\n        startedWorkTime\n        ratePerHour\n        totalWorkingMinutesPerWeek\n        totalSalaryToPayWeekly\n        advancedSalaryPaid\n        isWorking\n        taskRelated\n      }\n      tasks{\n        taskId\n        startDate\n        finishDate\n        plannedDate\n        isRepetitived\n        completationTimes\n        isDone\n        description\n        workedHours\n      }\n      logs{\n        logDescription\n        timestamp\n      }\n    }\n  }\n`;\n\n\nexport const GET_ORDERS = gql`\n  query AllOrders {\n    allOrders {\n      id\n      order_code\n      customer_id\n      contact_number\n      datetime\n      delivery_address\n      payment_method\n      payment_status\n      delivery_method_id\n      status\n      discount_amount\n      sub_total\n      total\n      delivery_pickup_date\n      order_tracking {\n        status\n        ordering\n        is_current\n        step_competed\n      }\n      order_products {\n        product_id\n        image\n        quantity\n        recicledQuantity\n        unit\n        name\n        price\n      }\n    }\n  }\n`;\n\nconst Col = withStyle(Column, () => ({\n  '@media only screen and (max-width: 574px)': {\n    marginBottom: '30px',\n\n    ':last-child': {\n      marginBottom: 0,\n    },\n  },\n}));\n\nconst Dashboard = () => {\n  const [css] = useStyletron();\n  const date30DaysBeforeToday = moment([new Date().getFullYear(), new Date().getMonth() - 1, new Date().getDate()]);\n  const date60DaysBeforeToday = moment([new Date().getFullYear(), new Date().getMonth() - 2, new Date().getDate()]);\n  const [lastMonthTotalRevenue, setLastMonthTotalRevenue] = useState(0);\n  const [lastMonthOrders, setLastMonthOrders] = useState(0);\n  const [last2MonthTotalRevenue, setLast2MonthTotalRevenue] = useState(0);\n  const [last2MonthOrders, setLast2MonthOrders] = useState(0);\n    \n\n  const mb30 = css({\n    '@media only screen and (max-width: 990px)': {\n      marginBottom: '16px',\n    },\n  });\n\n  const { data: ordersData, error: ordersError } = useQuery(GET_ORDERS);  \n  const { data: customersDate, error: customerErrors } = useQuery(GET_CUSTOMERS);\n\n  useEffect(() => {\n    // setLast2MonthsOrdersRevenueAndTotalQnty();\n  }, [ordersData]);\n\n\n  if (ordersError || customerErrors) {\n      const error = customerErrors || ordersError;\n      return <div>Error! {error.message}</div>;\n  }\n\n\n  const getLastMonthTotalOrders = () => {\n    return ordersData.orders.items.find(order => {\n      const lastMonth = moment(order.datetime, 'MM/D/YYYY').day();\n      \n      \n    })\n  }\n\n  const setLast2MonthsOrdersRevenueAndTotalQnty = (): any => {\n    ordersData?.allOrders.map(order => {\n      const orderDate = moment(order.datetime, 'MM/D/YYYY');\n      \n      const orderIsInsideLast30Days = date30DaysBeforeToday.isBefore(orderDate);\n      const orderIsInsideLast60Days = date60DaysBeforeToday.isBefore(orderDate) && orderDate.isBefore(date30DaysBeforeToday);\n      \n      if (orderIsInsideLast30Days) {\n        setLastMonthOrders((prevState) => prevState + 1)\n        setLastMonthTotalRevenue((prevState) => prevState + order.total)\n      } else if (orderIsInsideLast60Days) {\n        setLast2MonthOrders((prevState) => prevState + 1)\n        setLast2MonthTotalRevenue((prevState) => prevState + order.total)\n      }\n    })\n  }\n\n  const groupByDate = () => {\n    let groupsByDate = {};\n    let totalSalesByDate = {};\n\n    ordersData?.allOrders?.forEach((val) => {\n      const date = moment(val.datetime).format('MM/D/YYYY');\n      let totalSale = 0;\n        if (date in groupsByDate) {\n          groupsByDate[date].push(val);\n          totalSalesByDate[date].push(totalSale + val.total)\n        } else {\n          groupsByDate[date] = new Array(val);\n          totalSalesByDate[date] = new Array(val.total)\n        }\n    });\n\n    console.log(groupsByDate);\n    console.log(totalSalesByDate);\n    return groupsByDate;\n  }\n\n  ordersData?.allOrders?.length && groupByDate();\n\n      // series={[lastSalesAmount[6], lastSalesAmount[5], lastSalesAmount[4], lastSalesAmount[3], lastSalesAmount[2], lastSalesAmount[1], lastSalesAmount[0]]}\n            // labels={[\n            //   lastSalesDate[6],\n            //   lastSalesDate[5],\n            //   lastSalesDate[4],\n            //   lastSalesDate[3],\n            //   lastSalesDate[2],\n            //   lastSalesDate[1],\n            //   lastSalesDate[0],\n            // ]}\n  return (\n    <Grid fluid={true}>\n      <Row>\n        <Col md={5} lg={4} sm={6}>\n          <RadialBarChart\n            widgetTitle='Target'\n            series={[43, 75]}\n            label={['$1,342', '$8,908']}\n            colors={['#03D3B5', '#666d92']}\n            helperText={['Weekly Targets', 'Monthly Targets']}\n          />\n        </Col>\n        <Col md={7} lg={8} sm={6}>\n          <LineChart\n            widgetTitle='User Hit Rate'\n            color={['#03D3B5']}\n            categories={[\n              'January',\n              'February',\n              'March',\n              'April',\n              'May',\n              'June',\n              'July',\n              'August',\n              'September',\n              'October',\n              'November',\n              'December',\n            ]}\n            seriesName='Unique visitors'\n            series={[\n              200,\n              150,\n              430,\n              320,\n              600,\n              468,\n              309,\n              500,\n              273,\n              370,\n              260,\n              180,\n            ]}\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={3} sm={6} xs={12} className={mb30}>\n          <StickerCard\n            title='Total Revenue'\n            subtitle='(Last 30 Days)'\n            icon={<CoinIcon />}\n            price={`$${lastMonthTotalRevenue.toLocaleString()}`}\n            indicator={last2MonthTotalRevenue > lastMonthTotalRevenue ? 'down' : 'up'}\n            indicatorText='Revenue up'\n            note='(previous 30 days)'\n            link='#'\n            linkText='Full Details'\n          />\n        </Col>\n        <Col lg={3} sm={6} xs={12} className={mb30}>\n          <StickerCard\n            title='Total Order'\n            subtitle='(Last 30 Days)'\n            icon={<CartIconBig />}\n            price={`${lastMonthOrders.toLocaleString()}`}\n            indicator={last2MonthTotalRevenue > lastMonthTotalRevenue ? 'down' : 'up'}\n            indicatorText='Order down'\n            note='(previous 30 days)'\n            link='#'\n            linkText='Full Details'\n          />\n        </Col>\n        <Col lg={3} sm={6} xs={12}>\n          <StickerCard\n            title='New Customer'\n            subtitle='(Last 30 Days)'\n            icon={<UserIcon />}\n            price='5,678'\n            indicator='up'\n            indicatorText='Customer up'\n            note='(previous 30 days)'\n            link='#'\n            linkText='Full Details'\n          />\n        </Col>\n        <Col lg={3} sm={6} xs={12}>\n          <StickerCard\n            title='Total Delivery'\n            subtitle='(Last 30 Days)'\n            icon={<DeliveryIcon />}\n            price='78,000'\n            indicator='up'\n            indicatorText='Delivery up'\n            note='(previous 30 days)'\n            link='#'\n            linkText='Full Details'\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={7} lg={8}>\n          <GraphChart\n            widgetTitle='Sales From Social Media'\n            colors={['#03D3B5']}\n            series={[25, 30, 14, 30, 55, 60, 48]}\n            labels={[\n              '2019-05-12',\n              '2019-05-13',\n              '2019-05-14',\n              '2019-05-15',\n              '2019-05-16',\n              '2019-05-17',\n              '2019-05-18',\n            ]}\n                // series={[lastSalesAmount[6], lastSalesAmount[5], lastSalesAmount[4], lastSalesAmount[3], lastSalesAmount[2], lastSalesAmount[1], lastSalesAmount[0]]}\n            // labels={[\n            //   lastSalesDate[6],\n            //   lastSalesDate[5],\n            //   lastSalesDate[4],\n            //   lastSalesDate[3],\n            //   lastSalesDate[2],\n            //   lastSalesDate[1],\n            //   lastSalesDate[0],\n            // ]}\n          />\n        </Col>\n\n        <Col md={5} lg={4}>\n          <DonutChart\n            widgetTitle='Target'\n            series={[30634, 6340]}\n            labels={['Todays Revenue', 'Todays Refund']}\n            colors={['#03D3B5', '#666d92']}\n            helperText={['Weekly Targets', 'Monthly Targets']}\n            icon={[<Revenue />, <Refund />]}\n            prefix='$'\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={12} lg={12}>\n          <ColumnChart\n            widgetTitle='Sale History'\n            colors={['#03D3B5']}\n            prefix='$'\n            totalValue='1,92,564'\n            position='up'\n            percentage='1.38%'\n            text='More than last year'\n            series={[44, 55, 41, 67, 22, 43, 21, 33, 45, 31, 87, 65]}\n            categories={[\n              'January',\n              'February',\n              'March',\n              'April',\n              'May',\n              'June',\n              'July',\n              'August',\n              'September',\n              'October',\n              'November',\n              'December',\n            ]}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col md={5} lg={4}>\n          <GradiantGraphChart\n            colors={['#03D3B5']}\n            series={[25, 30, 14, 30, 55, 60, 48]}\n            labels={[\n              '2019-05-12',\n              '2019-05-13',\n              '2019-05-14',\n              '2019-05-15',\n              '2019-05-16',\n              '2019-05-17',\n              '2019-05-18',\n            ]}\n            topRowTitle='Performance'\n            bottomRowData={[\n              {\n                label: 'Last Week Profit',\n                valueText: '+29.7%',\n                value: 29.7,\n                color: '#03D3B5',\n              },\n              {\n                label: 'This Week Losses',\n                valueText: '-53.4%',\n                value: 53.4,\n                color: '#FC747A',\n              },\n            ]}\n          />\n        </Col>\n\n        <Col md={7} lg={8}>\n          <MapWidget\n            data={[\n              {\n                name: 'Williamburgs',\n                value: 69922,\n                color: '#2170FF',\n              },\n              {\n                name: 'Brooklyn',\n                value: 41953,\n                color: '#29CAE4',\n              },\n              {\n                name: 'New York',\n                value: 23307,\n                color: '#666D92',\n              },\n              {\n                name: 'Jersey City',\n                value: 20200,\n                color: '#03D3B5',\n              },\n            ]}\n            totalText='Total Client'\n          />\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default Dashboard;\n","import { styled } from 'baseui';\nimport { Grid as Grids, Row as Rows, Col as Cols } from 'react-flexbox-grid';\n\n// export const Grid = styled(Grids, ({ $theme }) => ({\n//   &.container,\n//   &.container-fluid {\n//     padding: 0 15px;\n//   }\n// }));\n\nexport const Grid = styled(Grids, () => ({}));\n\nexport const Row = styled(Rows, () => ({\n  margin: '0 -15px 30px',\n\n  ':last-child': {\n    marginBottom: '0px',\n  },\n}));\n\nexport const Container = styled('div', ({ props }) => ({\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '3px',\n  borderWidth: '2px',\n  borderRadius: '2px',\n  borderColor: '#E6E6E6',\n  borderStyle: 'dashed',\n  backgroundColor: '#ffffff',\n  color: '#00c58d',\n  outline: 'none',\n  transition: 'border 0.24s ease-in-out',\n}));\n\nexport const Col = styled(Cols, () => ({\n  padding: '0 15px',\n}));\n"],"sourceRoot":""}