{"version":3,"sources":["components/FlexBox/FlexBox.ts","components/Input/Input.tsx","components/Select/Select.tsx","components/WrapperStyle.tsx","assets/icons/CaretDownIcon.tsx","components/NoResult/NoResult.style.tsx","components/NoResult/NoResult.tsx","components/NoResult/no-result.svg","containers/Orders/Orders.style.tsx","containers/Orders/Orders.tsx","components/Button/Button.tsx","components/Button/Button.style.tsx"],"names":["Grid","styled","Grids","Row","Rows","margin","marginBottom","Container","props","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","Col","Cols","Input","overrides","style","$theme","colors","textDark","typography","fontBold14","getInputFontStyle","getContainerFontStyle","SelectArrow","Popover","Body","zIndex","Placeholder","SingleValue","lineHeight","DropdownListItem","fontSize","fontWeight","OptionContent","$selected","textNormal","DropdownOption","Wrapper","Header","display","justifyContent","flex","flexWrap","Heading","fontBold18","paddingTop","CaretDownIcon","width","height","xmlns","viewBox","data-name","d","transform","fill","NoResultWrapper","h3","p","ImageWrapper","marginTop","maxWidth","img","ButtonWrapper","cursor","fontFamily","textDecoration","textTransform","border","NoResult","id","onClick","hideButton","src","NoResultSvg","alt","module","exports","TableWrapper","StyledTable","withStyle","BaseStyledTable","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","alignContent","StyledHeadCell","BaseStyledHeadCell","boxShadow","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","alignSelf","StyledCell","BaseStyledCell","borderBottom","GET_ORDERS","gql","themedUseStyletron","createThemedUseStyletron","Status","content","borders","borderE6","marginRight","Column","prevButtonDisabledStyles","nextButtonDisabledStyles","marginLeft","statusSelectOptions","value","label","Orders","useCss","theme","sent","primary","failed","red400","processing","paid","blue400","useState","status","setStatus","search","setSearch","offset","setOffset","useQuery","data","error","refetch","message","handlePreviousDisabled","orders","totalCount","handleNextDisabled","hasMore","fluid","md","xs","Select","options","labelKey","valueKey","placeholder","searchable","onChange","length","event","currentTarget","searchText","clearable","$gridTemplateColumns","items","map","item","index","console","log","Fragment","key","className","toLowerCase","customer_name","contact_number","delivery_address","delivery_method_name","payment_method","payment_status","delivery_pickup_date","total","order_products","product","quantity","recicledQuantity","name","price","gridColumnStart","gridColumnEnd","textAlign","Button","disabled","children","BaseButton","$size","$shape","SIZE","compact","large","paddingLeft","sizing","scale25","paddingRight","getPaddingStyles","buttonBorderRadius","SHAPE","pill","round","getBorderRadiiStyles"],"mappings":"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","file":"static/js/18.6e949989.chunk.js","sourcesContent":["import { styled } from 'baseui';\nimport { Grid as Grids, Row as Rows, Col as Cols } from 'react-flexbox-grid';\n\n// export const Grid = styled(Grids, ({ $theme }) => ({\n//   &.container,\n//   &.container-fluid {\n//     padding: 0 15px;\n//   }\n// }));\n\nexport const Grid = styled(Grids, () => ({}));\n\nexport const Row = styled(Rows, () => ({\n  margin: '0 -15px 30px',\n\n  ':last-child': {\n    marginBottom: '0px',\n  },\n}));\n\nexport const Container = styled('div', ({ props }) => ({\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '3px',\n  borderWidth: '2px',\n  borderRadius: '2px',\n  borderColor: '#E6E6E6',\n  borderStyle: 'dashed',\n  backgroundColor: '#ffffff',\n  color: '#00c58d',\n  outline: 'none',\n  transition: 'border 0.24s ease-in-out',\n}));\n\nexport const Col = styled(Cols, () => ({\n  padding: '0 15px',\n}));\n","import React from 'react';\nimport { Input as BaseInput, SIZE } from 'baseui/input';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold14,\n  };\n};\n\nconst Input = ({ ...props }) => {\n  return (\n    <BaseInput\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\nexport default Input;\n","import * as React from 'react';\nimport { Select } from 'baseui/select';\nimport { CaretDownIcon } from '../../assets/icons/CaretDownIcon';\n\nexport const getContainerFontStyle = ({ $theme }) => {\n  return $theme.typography.fontBold14;\n};\n\nexport default ({ ...props }) => {\n  return (\n    <Select\n      overrides={{\n        SelectArrow: () => {\n          return <CaretDownIcon />;\n        },\n        Popover: {\n          props: {\n            overrides: {\n              Body: {\n                style: { zIndex: 1 },\n              },\n            },\n          },\n        },\n        Placeholder: {\n          style: ({ $theme }) => ({\n            color: $theme.colors.textDark,\n            ...getContainerFontStyle({ $theme }),\n          }),\n        },\n        SingleValue: {\n          style: ({ $theme }) => ({\n            ...getContainerFontStyle({ $theme }),\n            color: $theme.colors.textDark,\n            lineHeight: '1.5',\n          }),\n        },\n        DropdownListItem: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n        OptionContent: {\n          style: ({ $theme, $selected }) => {\n            return {\n              ...$theme.typography.fontBold14,\n              color: $selected\n                ? $theme.colors.textDark\n                : $theme.colors.textNormal,\n            };\n          },\n        },\n        DropdownOption: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n      }}\n      {...props}\n    />\n  );\n};\n","import { styled } from 'baseui';\n\nexport const Wrapper = styled('div', () => ({\n  backgroundColor: '#ffffff',\n}));\n\nexport const Header = styled('header', () => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  flex: '0 1 auto',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  padding: '40px',\n  /* margin-bottom: 40px, */\n  backgroundColor: '#ffffff',\n\n  '@media only screen and (max-width: 990px)': {\n    padding: '20px',\n  },\n}));\n\nexport const Heading = styled('h2', ({ $theme }) => ({\n  ...$theme.typography.fontBold18,\n  color: $theme.colors.textDark,\n  margin: 0,\n}));\n\nexport const ButtonWrapper = styled('div', ({ $theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  paddingTop: '20px',\n}));\n","import React from 'react';\nexport const CaretDownIcon = ({\n  color = 'currentColor',\n  width = '18px',\n  height = '18px',\n}) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 10 5'\n    >\n      <path\n        data-name='_ionicons_svg_md-arrow-dropdown (2)'\n        d='M128,192l5,5,5-5Z'\n        transform='translate(-128 -192)'\n        fill={color}\n      />\n    </svg>\n  );\n};\n","import { styled } from 'baseui';\n\nexport const NoResultWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '50px 20px',\n\n  h3: {\n    fontSize: '24px',\n    fontWeight: 700,\n    color: '#161f6a',\n    margin: '0 0 15px',\n  },\n\n  p: {\n    fontSize: '16px',\n    fontWeight: 400,\n    color: '#707070',\n    margin: 0,\n  },\n}));\n\nexport const ImageWrapper = styled('div', () => ({\n  marginTop: '50px',\n  width: '100%',\n  maxWidth: '600px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  img: {\n    maxWidth: '100%',\n  },\n}));\n\nexport const ButtonWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: '70px',\n}));\n\nexport const Button = styled('button', () => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: '#ffffff',\n  backgroundColor: '#009e7f',\n  height: '50px',\n  borderRadius: '3px',\n  fontFamily: `'Lato', sans-serif`,\n  fontSize: '16px',\n  fontWeight: 700,\n  textDecoration: 'none',\n  textTransform: 'capitalize',\n  padding: '0 30px',\n  border: 0,\n  transition: 'all 0.3s ease',\n}));\n","import React from \"react\";\nimport NoResultSvg from \"./no-result.svg\";\nimport { NoResultWrapper, ImageWrapper, ButtonWrapper } from \"./NoResult.style\";\nimport Button from \"../Button/Button\";\n// import { ArrowPrev } from '../AllSvgIcon';\n\ntype NoResultProps = {\n  id?: string;\n  onClick?: () => void;\n  hideButton?: boolean;\n  style?: any;\n};\n\nconst NoResult: React.FC<NoResultProps> = ({\n  id,\n  onClick,\n  hideButton = true,\n  style\n}) => {\n  return (\n    <NoResultWrapper id={id} style={style}>\n      <h3>Sorry, No result found :(</h3>\n\n      <ImageWrapper>\n        <img src={NoResultSvg} alt=\"No Result\" />\n      </ImageWrapper>\n\n      {hideButton ? (\n        <ButtonWrapper>\n          <div onClick={onClick}>\n            <Button>\n              Try Again Later\n              {/* <ArrowPrev /> Go Back */}\n            </Button>\n          </div>\n        </ButtonWrapper>\n      ) : null}\n    </NoResultWrapper>\n  );\n};\n\nexport default NoResult;\n","module.exports = __webpack_public_path__ + \"static/media/no-result.e1457eaf.svg\";","import { styled, withStyle } from 'baseui';\nimport {\n  StyledTable as BaseStyledTable,\n  StyledHeadCell as BaseStyledHeadCell,\n  StyledBodyCell as BaseStyledCell,\n} from 'baseui/table-grid';\n\nexport const TableWrapper = styled('div', () => ({\n  width: '100%',\n  height: '1175px',\n}));\n\nexport const StyledTable = withStyle(BaseStyledTable, () => ({\n  borderTopLeftRadius: '0 !important',\n  borderTopRightRadius: '0 !important',\n  borderBottomLeftRadius: '0 !important',\n  borderBottomRightRadius: '0 !important',\n  alignContent: 'start',\n}));\n\nexport const StyledHeadCell = withStyle(BaseStyledHeadCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 700,\n  color: '#161F6A !important',\n  alignItems: 'center',\n  boxShadow: 'rgba(0, 0, 0, 0.16) 0px 1px 4px',\n  borderTopColor: 'rgba(0, 0, 0, 0.12)',\n  borderRightColor: 'rgba(0, 0, 0, 0.12)',\n  borderBottomColor: 'rgba(0, 0, 0, 0.12)',\n  borderLeftColor: 'rgba(0, 0, 0, 0.12)',\n  alignSelf: 'start',\n  height: '50px'\n}));\n\nexport const StyledCell = withStyle(BaseStyledCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 400,\n  color: '#161F6A !important',\n  alignSelf: 'center',\n  borderBottom: '1px solid #ccc',\n  height: '100%',\n}));\n\nexport const StyledHeadCellCenter = withStyle(BaseStyledHeadCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 700,\n  color: '#161F6A !important',\n  alignItems: 'center',\n  boxShadow: 'rgba(0, 0, 0, 0.16) 0px 1px 4px',\n  borderTopColor: 'rgba(0, 0, 0, 0.12)',\n  borderRightColor: 'rgba(0, 0, 0, 0.12)',\n  borderBottomColor: 'rgba(0, 0, 0, 0.12)',\n  borderLeftColor: 'rgba(0, 0, 0, 0.12)',\n  alignSelf: 'start',\n  justifyContent: 'center',\n}));\n\nexport const StyledCellCenter = withStyle(BaseStyledCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 400,\n  color: '#161F6A !important',\n  alignSelf: 'center',\n  justifyContent: 'center',\n}));\n","import React, {useState} from 'react';\nimport {styled, withStyle, createThemedUseStyletron} from 'baseui';\nimport dayjs from 'dayjs';\nimport {\n    Grid,\n    Row as Rows,\n    Col as Column,\n} from '../../components/FlexBox/FlexBox';\nimport Select from '../../components/Select/Select';\nimport Input from '../../components/Input/Input';\n\nimport gql from 'graphql-tag';\nimport {useQuery} from '@apollo/react-hooks';\nimport {Wrapper, Header, Heading} from '../../components/WrapperStyle';\n\nimport {\n    TableWrapper,\n    StyledTable,\n    StyledHeadCell,\n    StyledCell,\n} from './Orders.style';\nimport NoResult from '../../components/NoResult/NoResult';\nimport Button from \"../../components/Button/Button\";\nimport ActionWrapper from \"../Orders/ActionWrapper\";\nimport {StyledBodyCell} from \"../Types/Types.style\";\n// import { useIntl } from 'react-intl';\n\nconst GET_ORDERS = gql`\n    query GetOrders(\n        $status: String,\n        $searchText: String\n        $offset: Int\n    ) {\n        orders(\n            status: $status,\n            searchText: $searchText,\n            offset: $offset,\n        ) {\n            items {\n                id\n                order_code\n                customer_id\n                contact_number\n                datetime\n                customer_name\n                delivery_method_name\n                delivery_pickup_date\n                delivery_address\n                payment_method\n                payment_status\n                order_products {\n                    product_id\n                    image\n                    quantity\n                    recicledQuantity\n                    unit\n                    name\n                    price\n                }\n                status\n                coupon_code\n                discount_amount\n                sub_total\n                total\n                delivery_method_id\n                order_tracking {\n                    status\n                    ordering\n                    is_current\n                    step_competed\n                }\n            }\n            totalCount\n            hasMore\n        }\n    }\n`;\n\ntype CustomThemeT = { red400: string; textNormal: string; colors: any };\nconst themedUseStyletron = createThemedUseStyletron<CustomThemeT>();\n\nconst Status = styled('div', ({$theme}) => ({\n    ...$theme.typography.fontBold14,\n    color: $theme.colors.textDark,\n    display: 'flex',\n    alignItems: 'center',\n    lineHeight: '1',\n    textTransform: 'capitalize',\n    ':before': {\n        content: '\"\"',\n        width: '10px',\n        height: '10px',\n        display: 'inline-block',\n        borderTopLeftRadius: '10px',\n        borderTopRightRadius: '10px',\n        borderBottomRightRadius: '10px',\n        borderBottomLeftRadius: '10px', \n        backgroundColor: $theme.borders.borderE6,\n        marginRight: '10px',\n    },\n}));\n\nconst Col = withStyle(Column, () => ({\n    '@media only screen and (max-width: 767px)': {\n        marginBottom: '20px',\n\n        ':last-child': {\n            marginBottom: 0,\n        },\n    },\n}));\n\nconst Row = withStyle(Rows, () => ({\n    '@media only screen and (min-width: 768px)': {\n        alignItems: 'center',\n    },\n}));\n\nconst prevButtonDisabledStyles = {\n    width: '90px',\n    marginRight: '10px',\n    color: '#6f6f6f',\n    backgroundColor: '#d8d8d8'\n};\nconst nextButtonDisabledStyles = {\n    width: '90px',\n    marginLeft: '10px',\n    color: '#6f6f6f',\n    backgroundColor: '#d8d8d8'\n};\n// const intl = useIntl();\n// const pendingLabel = intl.formatMessage({ id: 'pendingStatusId', defaultMessage: 'Pending' });\nconst statusSelectOptions = [\n    {value: 'Pendiente', label: 'Pendiente'},\n    {value: 'Recibido', label: 'Recibido'},\n    {value: 'Procesando', label: 'Procesando'},\n    {value: 'EnTransito', label: 'EnTransito'},\n    {value: 'Entregado', label: 'Entregado'},\n    {value: 'Cancelado', label: 'Cancelado'},\n    {value: 'Fallado', label: 'Fallado'},\n];\n\nexport default function Orders() {\n    \n    const [useCss, theme] = themedUseStyletron();\n    const sent = useCss({\n        ':before': {\n            content: '\"\"',\n            backgroundColor: theme.colors.primary,\n        },\n    });\n    const failed = useCss({\n        ':before': {\n            content: '\"\"',\n            backgroundColor: theme.colors.red400,\n        },\n    });\n    const processing = useCss({\n        ':before': {\n            content: '\"\"',\n            backgroundColor: theme.colors.textNormal,\n        },\n    });\n    const paid = useCss({\n        ':before': {\n            content: '\"\"',\n            backgroundColor: theme.colors.blue400,\n        },\n    });\n\n    const [status, setStatus] = useState([]);\n    const [search, setSearch] = useState([]);\n    const [offset, setOffset] = useState(0);\n\n    const {data, error, refetch} = useQuery(GET_ORDERS);\n\n    if (error) {\n        return <div>Error! {error.message}</div>;\n    }\n\n    function handleStatus({value}) {\n        setStatus(value);\n        if (value.length) {\n            refetch({\n                status: value[0].value,\n            });\n        } else {\n            refetch({status: null});\n        }\n    }\n\n    function handleSearch(event) {\n        const {value} = event.currentTarget;\n        setSearch(value);\n        refetch({searchText: value});\n    }\n\n    function handlePrevious() {\n        setOffset(offset-12);\n        refetch({\n            offset: offset - 12,\n        });\n    }\n\n    function handlePreviousDisabled(data) {\n        const result = (data ? data.orders.totalCount === 0 : false) || offset === 0;\n        return result;\n    }\n\n    function handleNext() {\n        setOffset(offset+12);\n        refetch({\n            offset: offset + 12,\n        });\n    }\n\n    function handleNextDisabled(data) {\n        const result = data ? !data.orders.hasMore : true;\n        return result;\n    }\n\n    return (\n        <Grid fluid={true}>\n            <Row>\n                <Col md={12}>\n                    <Header\n                        style={{\n                            marginBottom: 30,\n                            boxShadow: '0 0 8px rgba(0, 0 ,0, 0.1)',\n                        }}\n                    >\n                        <Col md={3} xs={12}>\n                            <Heading>Orders</Heading>\n                        </Col>\n\n                        <Col md={9} xs={12}>\n                            <Row>\n                                <Col md={3} xs={12}>\n                                    <Select\n                                        options={statusSelectOptions}\n                                        labelKey=\"label\"\n                                        valueKey=\"value\"\n                                        placeholder=\"Status\"\n                                        value={status}\n                                        searchable={false}\n                                        onChange={handleStatus}\n                                    />\n                                </Col>\n\n                                <Col md={6} xs={12}>\n                                    <Input\n                                        value={search}\n                                        placeholder=\"Ex: Search By Address\"\n                                        onChange={handleSearch}\n                                        clearable\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Header>\n\n                    <Wrapper style={{boxShadow: '0 0 5px rgba(0, 0 , 0, 0.05)'}}>\n                        <TableWrapper>\n                            <StyledTable\n                                // $gridTemplateColumns=\"minmax(100px, auto) minmax(150px, auto) minmax(200px, auto) minmax(200px, auto) minmax(200px, auto) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto)\">\n                                $gridTemplateColumns=\"minmax(100px, auto) minmax(100px, auto) minmax(120px, auto) minmax(130px, auto) minmax(100px, auto) minmax(110px, auto) minmax(100px, auto) minmax(110px, auto) minmax(65px, auto) minmax(300px, auto)\">\n                                <StyledHeadCell>Status</StyledHeadCell>\n                                <StyledHeadCell>Customer</StyledHeadCell>\n                                <StyledHeadCell>Phone Num</StyledHeadCell>\n                                <StyledHeadCell>Deli/Pickup Address</StyledHeadCell>\n                                <StyledHeadCell>Delivery Method</StyledHeadCell>\n                                <StyledHeadCell>Payment Method</StyledHeadCell>\n                                <StyledHeadCell>Payment Status</StyledHeadCell>\n                                <StyledHeadCell>Deli/Pickup Date</StyledHeadCell>\n                                <StyledHeadCell>Total</StyledHeadCell>\n                                <StyledHeadCell>Productos comprados</StyledHeadCell>\n\n                                {data ? (\n                                    data.orders.items.length ? (\n                                        data.orders.items.map((item: any, index: number) => {\n                                            console.log(item)\n                                            return (\n                                                <React.Fragment key={index + 1}>\n                                                    {/* <StyledCell>\n                                                        <ActionWrapper itemsOffset={offset} itemData={item}/>\n                                                    </StyledCell> */}\n                                                    <StyledCell style={{justifyContent: 'center'}}>\n                                                        <Status\n                                                            className={\n                                                                item.status.toLowerCase() === 'delivered'\n                                                                    ? sent\n                                                                    : item.status.toLowerCase() === 'pending'\n                                                                    ? paid\n                                                                    : item.status.toLowerCase() === 'processing'\n                                                                        ? processing\n                                                                        : item.status.toLowerCase() === 'failed'\n                                                                            ? failed\n                                                                            : ''\n                                                            }\n                                                        >\n                                                            {item.status}\n                                                        </Status>\n                                                    </StyledCell>\n                                                    <StyledCell>{item.customer_name}</StyledCell>\n                                                    <StyledCell>{item.contact_number}</StyledCell>\n                                                    <StyledCell>{item.delivery_address}</StyledCell>\n                                                    <StyledCell>\n                                                        {item.delivery_method_name}\n                                                    </StyledCell>\n                                                    <StyledCell>{item.payment_method}</StyledCell>\n                                                    <StyledCell>{item.payment_status}</StyledCell>\n                                                    <StyledCell>{item.delivery_pickup_date}</StyledCell>\n                                                    <StyledCell>${item.total}</StyledCell>\n                                                    <StyledCell>{item.order_products.map((product) => (<div>{product.quantity + product.recicledQuantity} - {product.name} - ${product.price}</div>))}</StyledCell>\n                                                    \n                                                </React.Fragment>\n                                            );\n                                        })\n                                    ) : (\n                                        <NoResult\n                                            hideButton={false}\n                                            style={{\n                                                gridColumnStart: '1',\n                                                gridColumnEnd: 'one',\n                                            }}\n                                        />\n                                    )\n                                ) : null}\n                            </StyledTable>\n                        </TableWrapper>\n                    </Wrapper>\n\n                    <Row>\n                        <Col md={8}>\n                        </Col>\n                        <Col md={4}\n                             style={{ display: 'block', textAlign: 'right', marginTop: '20px' }}\n                        >\n                            <Button\n                                style={ handlePreviousDisabled(data) ? prevButtonDisabledStyles : {marginRight: '10px'}}\n                                disabled={handlePreviousDisabled(data)}\n                                onClick={handlePrevious}>\n                                Previous\n                            </Button>\n                            <Button\n                                style={ handleNextDisabled(data) ? nextButtonDisabledStyles : null}\n                                disabled={handleNextDisabled(data)}\n                                onClick={handleNext}>\n                                Next\n                            </Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { Button as BaseButton, SIZE, SHAPE, KIND } from 'baseui/button';\nimport { getPaddingStyles, getBorderRadiiStyles } from './Button.style';\n\nconst Button = ({ children, overrides, ...props }: any) => {\n  return (\n    <BaseButton\n      {...props}\n      overrides={{\n        BaseButton: {\n          style: ({ $theme, $size, $shape }) => {\n            return {\n              ...getPaddingStyles({ $theme, $size }),\n              ...getBorderRadiiStyles({ $theme, $size, $shape }),\n            };\n          },\n        },\n        ...overrides,\n      }}\n    >\n      {children}\n    </BaseButton>\n  );\n};\n\nexport { SIZE, SHAPE, KIND };\nexport default Button;\n","import { SIZE, SHAPE } from 'baseui/button';\n\nexport const getPaddingStyles = ({ $theme, $size }) => {\n  switch ($size) {\n    case SIZE.compact:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    case SIZE.large:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    default:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n  }\n};\n\nexport const getBorderRadiiStyles = ({ $theme, $size, $shape }) => {\n  let value = $theme.buttonBorderRadius;\n\n  if ($shape === SHAPE.pill) {\n    if ($size === SIZE.compact) {\n      value = '30px';\n    } else if ($size === SIZE.large) {\n      value = '42px';\n    } else {\n      value = '38px';\n    }\n  } else if ($shape === SHAPE.round) {\n    value = '50%';\n  }\n\n  return {\n    borderTopRightRadius: value,\n    borderBottomRightRadius: value,\n    borderTopLeftRadius: value,\n    borderBottomLeftRadius: value,\n  };\n};\n"],"sourceRoot":""}